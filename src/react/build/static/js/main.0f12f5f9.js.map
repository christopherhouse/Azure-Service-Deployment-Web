{"version":3,"file":"static/js/main.0f12f5f9.js","mappings":"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L,IAAK,YACL,IAAK,UACL,IAAK,QACL,IAAK,QACL,IAAK,OACL,IAAK,gBACL,IAAK,cACL,IAAK,YACL,IAAK,aACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,cACL,IAAK,WACL,IAAK,aACL,IAAK,eACL,IAAK,SACL,IAAK,kBACL,IAAK,YACL,IAAK,mBACL,IAAK,iBACL,IAAK,oBACL,IAAK,aACL,IAAK,YACL,IAAK,cACL,IAAK,OACL,IAAK,mBACL,IAAK,QACL,IAAK,aACL,IAAK,WACL,IAAK,SACL,IAAK,cACH,OAAO,EACT,IAAK,OACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,cACL,IAAK,SACL,IAAK,YACL,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,eACH,OAAO,EACT,IAAK,UACH,OAAQvY,MACN,KAAKC,GACH,OAAO,EACT,KAAKC,GACH,OAAO,EACT,KAAKC,GACL,KAAKC,GACH,OAAO,GACT,KAAKC,GACH,OAAO,UACT,QACE,OAAO,GAEb,QACE,OAAO,GAEb,CACA,IAAIynD,IAA4B,EAC9BT,GAAc,KACdE,GAAa,KACbC,GAAc,KACdC,GAAiB,IAAIriD,IACrBsiD,GAAwB,IAAItiD,IAC5B2iD,GAAiC,GACjCH,GACE,sPAAsP9+C,MACpP,KAEN,SAASs+C,GAAuB7uC,EAActK,GAC5C,OAAQsK,GACN,IAAK,UACL,IAAK,WACH8uC,GAAc,KACd,MACF,IAAK,YACL,IAAK,YACHE,GAAa,KACb,MACF,IAAK,YACL,IAAK,WACHC,GAAc,KACd,MACF,IAAK,cACL,IAAK,aACHC,GAAe3qB,OAAO7uB,EAAYmI,WAClC,MACF,IAAK,oBACL,IAAK,qBACHsxC,GAAsB5qB,OAAO7uB,EAAYmI,WAE/C,CACA,SAASkxC,GACPU,EACAf,EACA1uC,EACA0lC,EACAY,EACA5wC,GAEA,OACE,OAAS+5C,GACTA,EAAoB/5C,cAAgBA,GAGjC+5C,EAAsB,CACrBf,UAAWA,EACX1uC,aAAcA,EACd0lC,iBAAkBA,EAClBhwC,YAAaA,EACbg6C,iBAAkB,CAACpJ,IAErB,OAASoI,IAEP,QADEA,EAAYpiD,GAAoBoiD,KACZD,GAA2BC,IACnDe,IAEJA,EAAoB/J,kBAAoBA,EACxCgJ,EAAYe,EAAoBC,iBAChC,OAASpJ,IACN,IAAMoI,EAAU5/C,QAAQw3C,IACzBoI,EAAUh0D,KAAK4rD,GACVmJ,EACT,CA8EA,SAASE,GAA+BC,GACtC,IAAIzjD,EAAaF,GAA2B2jD,EAAaj6C,QACzD,GAAI,OAASxJ,EAAY,CACvB,IAAItK,EAAiBF,EAAuBwK,GAC5C,GAAI,OAAStK,EACX,GAAwC,MAAlCsK,EAAatK,EAAeI,MAChC,GAEE,QADEkK,EAAajK,EAA6BL,IAc5C,OAXA+tD,EAAalB,UAAYviD,OAnlcnC,SAAyB0jD,EAAU5gD,GACjC,IAAIiwB,EAAmB95B,EAAwB4F,EAC/C,IACE,OAAQ5F,EAAwB4F,EAAI6kD,EAAW5gD,GACjD,CAAE,QACA7J,EAAwB4F,EAAIk0B,CAC9B,CACF,CA6kcU4wB,CAAgBF,EAAaC,UAAU,WACrC,GAAI,KAAOhuD,EAAeI,IAAK,CAC7B,IAAI2H,EAAO21B,KACX31B,EAAOgB,GAAgChB,GACvC,IAAIZ,EAAO4e,GAA+B/lB,EAAgB+H,GAC1D,OAASZ,GACPgyB,GAAsBhyB,EAAMnH,EAAgB+H,GAC9C4kD,GAA2B3sD,EAAgB+H,EAC7C,CACF,SAGG,GACL,IAAMuC,GACNtK,EAAe4K,UAAU3G,QAAQ1D,cAAc+qC,aAM/C,YAJAyiB,EAAalB,UACX,IAAM7sD,EAAeI,IACjBJ,EAAe4K,UAAUoX,cACzB,KAGZ,CACA+rC,EAAalB,UAAY,IAC3B,CACA,SAASqB,GAAmCC,GAC1C,GAAI,OAASA,EAAYtB,UAAW,OAAO,EAC3C,IACE,IAAIgB,EAAmBM,EAAYN,iBACnC,EAAIA,EAAiB50D,QAErB,CACA,IAAIm1D,EAAgBtB,GAA0BqB,EAAYt6C,aAC1D,GAAI,OAASu6C,EAUX,OAEE,QADCP,EAAmBpjD,GAAoB2jD,KAEtCxB,GAA2BiB,GAC5BM,EAAYtB,UAAYuB,GACzB,EAbF,IAAIC,EAAmB,IADvBD,EAAgBD,EAAYt6C,aACajE,YACvCw+C,EAAc5rD,KACd4rD,GAEFz6C,GAAwB06C,EACxBD,EAAct6C,OAAOyxB,cAAc8oB,GACnC16C,GAAwB,KAS1Bk6C,EAAiBS,OACnB,CACA,OAAO,CACT,CACA,SAASC,GAAwCJ,EAAa3yC,EAAKqb,GACjEq3B,GAAmCC,IAAgBt3B,EAAI6L,OAAOlnB,EAChE,CACA,SAASgzC,KACPd,IAA4B,EAC5B,OAAST,IACPiB,GAAmCjB,MAClCA,GAAc,MACjB,OAASE,IACPe,GAAmCf,MAClCA,GAAa,MAChB,OAASC,IACPc,GAAmCd,MAClCA,GAAc,MACjBC,GAAez/B,QAAQ2gC,IACvBjB,GAAsB1/B,QAAQ2gC,GAChC,CACA,SAASE,GAA4BN,EAAaO,GAChDP,EAAYtB,YAAc6B,IACtBP,EAAYtB,UAAY,KAC1Ba,KACIA,IAA4B,EAC9BvuD,EAAUX,0BACRW,EAAU3B,wBACVgxD,KAER,CACA,IAAIG,GAA2B,KAC/B,SAASC,GAA4BC,GACnCF,KAA6BE,IACzBF,GAA2BE,EAC7B1vD,EAAUX,0BACRW,EAAU3B,yBACV,WACEmxD,KAA6BE,IAC1BF,GAA2B,MAC9B,IAAK,IAAIhvD,EAAI,EAAGA,EAAIkvD,EAAmB51D,OAAQ0G,GAAK,EAAG,CACrD,IAAI6U,EAAOq6C,EAAmBlvD,GAC5BmvD,EAAoBD,EAAmBlvD,EAAI,GAC3Cm+B,EAAW+wB,EAAmBlvD,EAAI,GACpC,GAAI,oBAAsBmvD,EACxB,IAAI,OAASrB,GAA2BqB,GAAqBt6C,GAC3D,SACG,KAAK,CACZ,IAAI80C,EAAW7+C,GAAoB+J,GACnC,OAAS80C,IACNuF,EAAmB7a,OAAOr0C,EAAG,GAC7BA,GAAK,EACNi+B,GACE0rB,EACA,CACE5lD,SAAS,EACTC,KAAMm6B,EACNl6B,OAAQ4Q,EAAK5Q,OACbC,OAAQirD,GAEVA,EACAhxB,GAEN,CACF,IAEN,CACA,SAAS6U,GAAiB+b,GACxB,SAASK,EAAQZ,GACf,OAAOM,GAA4BN,EAAaO,EAClD,CACA,OAASzB,IAAewB,GAA4BxB,GAAayB,GACjE,OAASvB,IAAcsB,GAA4BtB,GAAYuB,GAC/D,OAAStB,IAAeqB,GAA4BrB,GAAasB,GACjErB,GAAez/B,QAAQmhC,GACvBzB,GAAsB1/B,QAAQmhC,GAC9B,IAAK,IAAIpvD,EAAI,EAAGA,EAAIguD,GAA+B10D,OAAQ0G,IAAK,CAC9D,IAAIouD,EAAeJ,GAA+BhuD,GAClDouD,EAAalB,YAAc6B,IAAcX,EAAalB,UAAY,KACpE,CACA,KAEE,EAAIc,GAA+B10D,QACO,QAAxC0G,EAAIguD,GAA+B,IAAgBd,WAGrDiB,GAA+BnuD,GAC7B,OAASA,EAAEktD,WAAac,GAA+BW,QAE3D,GAAI,OADJ3uD,GAAK+uD,EAAUj9C,eAAiBi9C,GAAWM,mBAEzC,IAAKjB,EAAe,EAAGA,EAAepuD,EAAE1G,OAAQ80D,GAAgB,EAAG,CACjE,IAAIv5C,EAAO7U,EAAEouD,GACXe,EAAoBnvD,EAAEouD,EAAe,GACrCkB,EAAYz6C,EAAK5K,KAAqB,KACxC,GAAI,oBAAsBklD,EACxBG,GAAaL,GAA4BjvD,QACtC,GAAIsvD,EAAW,CAClB,IAAIprD,EAAS,KACb,GAAIirD,GAAqBA,EAAkBljB,aAAa,eACtD,GACIp3B,EAAOs6C,EACRG,EAAYH,EAAkBllD,KAAqB,KAEpD/F,EAASorD,EAAU1I,gBAEnB,GAAI,OAASkH,GAA2Bj5C,GAAO,cAE9C3Q,EAASorD,EAAUprD,OACxB,oBAAsBA,EACjBlE,EAAEouD,EAAe,GAAKlqD,GACtBlE,EAAEq0C,OAAO+Z,EAAc,GAAKA,GAAgB,GACjDa,GAA4BjvD,EAC9B,CACF,CACJ,CACA,SAASuvD,GAAaC,GACpBnwD,KAAKowD,cAAgBD,CACvB,CAoBA,SAASE,GAAsBF,GAC7BnwD,KAAKowD,cAAgBD,CACvB,CArBAE,GAAsB9pD,UAAUzC,OAASosD,GAAa3pD,UAAUzC,OAC9D,SAAUqP,GACR,IAAIhL,EAAOnI,KAAKowD,cAChB,GAAI,OAASjoD,EAAM,MAAMzG,MAAMnB,EAAuB,MAGtDktD,GAFctlD,EAAKlD,QACVy5B,KAC0BvrB,EAAUhL,EAAM,KAAM,KAC3D,EACFkoD,GAAsB9pD,UAAU+pD,QAAUJ,GAAa3pD,UAAU+pD,QAC/D,WACE,IAAInoD,EAAOnI,KAAKowD,cAChB,GAAI,OAASjoD,EAAM,CACjBnI,KAAKowD,cAAgB,KACrB,IAAIjK,EAAYh+C,EAAK6a,cACrByqC,GAAoBtlD,EAAKlD,QAAS,EAAG,KAAMkD,EAAM,KAAM,MACvDyN,KACAuwC,EAAUt7C,IAAgC,IAC5C,CACF,EAIFwlD,GAAsB9pD,UAAUgqD,2BAA6B,SAAUz7C,GACrE,GAAIA,EAAQ,CACV,IAAI5K,EAAiBD,KACrB6K,EAAS,CAAE+4C,UAAW,KAAM/4C,OAAQA,EAAQk6C,SAAU9kD,GACtD,IACE,IAAIvJ,EAAI,EACRA,EAAIguD,GAA+B10D,QACnC,IAAMiQ,GACNA,EAAiBykD,GAA+BhuD,GAAGquD,SACnDruD,KAEFguD,GAA+B3Z,OAAOr0C,EAAG,EAAGmU,GAC5C,IAAMnU,GAAKmuD,GAA+Bh6C,EAC5C,CACF,EACA,IAAI07C,GAAmDnwD,EAAMowD,QAC7D,GACE,WACAD,GAEA,MAAM9uD,MACJnB,EACE,IACAiwD,GACA,WAGNjsD,EAAwBmsD,YAAc,SAAUC,GAC9C,IAAI5vD,EAAQ4vD,EAAmBvrB,gBAC/B,QAAI,IAAWrkC,EAAO,CACpB,GAAI,oBAAsB4vD,EAAmB7sD,OAC3C,MAAMpC,MAAMnB,EAAuB,MAErC,MADAowD,EAAqB5uD,OAAOmgB,KAAKyuC,GAAoBjvB,KAAK,KACpDhgC,MAAMnB,EAAuB,IAAKowD,GAC1C,CAQA,OAPAA,EAx2dF,SAAuC5vD,GACrC,IAAIE,EAAYF,EAAME,UACtB,IAAKA,EAAW,CAEd,GAAI,QADJA,EAAYH,EAAuBC,IACX,MAAMW,MAAMnB,EAAuB,MAC3D,OAAOU,IAAcF,EAAQ,KAAOA,CACtC,CACA,IAAK,IAAI7G,EAAI6G,EAAOhG,EAAIkG,IAAe,CACrC,IAAI2vD,EAAU12D,EAAEgH,OAChB,GAAI,OAAS0vD,EAAS,MACtB,IAAIC,EAAUD,EAAQ3vD,UACtB,GAAI,OAAS4vD,EAAS,CAEpB,GAAI,QADJ91D,EAAI61D,EAAQ1vD,QACI,CACdhH,EAAIa,EACJ,QACF,CACA,KACF,CACA,GAAI61D,EAAQhvD,QAAUivD,EAAQjvD,MAAO,CACnC,IAAKivD,EAAUD,EAAQhvD,MAAOivD,GAAW,CACvC,GAAIA,IAAY32D,EAAG,OAAOuH,EAAgBmvD,GAAU7vD,EACpD,GAAI8vD,IAAY91D,EAAG,OAAO0G,EAAgBmvD,GAAU3vD,EACpD4vD,EAAUA,EAAQhvD,OACpB,CACA,MAAMH,MAAMnB,EAAuB,KACrC,CACA,GAAIrG,EAAEgH,SAAWnG,EAAEmG,OAAShH,EAAI02D,EAAW71D,EAAI81D,MAC1C,CACH,IAAK,IAAIC,GAAe,EAAIC,EAAUH,EAAQhvD,MAAOmvD,GAAW,CAC9D,GAAIA,IAAY72D,EAAG,CACjB42D,GAAe,EACf52D,EAAI02D,EACJ71D,EAAI81D,EACJ,KACF,CACA,GAAIE,IAAYh2D,EAAG,CACjB+1D,GAAe,EACf/1D,EAAI61D,EACJ12D,EAAI22D,EACJ,KACF,CACAE,EAAUA,EAAQlvD,OACpB,CACA,IAAKivD,EAAc,CACjB,IAAKC,EAAUF,EAAQjvD,MAAOmvD,GAAW,CACvC,GAAIA,IAAY72D,EAAG,CACjB42D,GAAe,EACf52D,EAAI22D,EACJ91D,EAAI61D,EACJ,KACF,CACA,GAAIG,IAAYh2D,EAAG,CACjB+1D,GAAe,EACf/1D,EAAI81D,EACJ32D,EAAI02D,EACJ,KACF,CACAG,EAAUA,EAAQlvD,OACpB,CACA,IAAKivD,EAAc,MAAMpvD,MAAMnB,EAAuB,KACxD,CACF,CACA,GAAIrG,EAAE+G,YAAclG,EAAG,MAAM2G,MAAMnB,EAAuB,KAC5D,CACA,GAAI,IAAMrG,EAAEkH,IAAK,MAAMM,MAAMnB,EAAuB,MACpD,OAAOrG,EAAE0R,UAAU3G,UAAY/K,EAAI6G,EAAQE,CAC7C,CAqyduB+vD,CAA8BjwD,GAKnD4vD,EACE,QALFA,EACE,OAASA,EACLhvD,EAAyBgvD,GACzB,MAE0B,KAAOA,EAAmB/kD,SAE5D,EACA,IAAIqlD,GAA+B,CACjCC,WAAY,EACZT,QAAS,SACTU,oBAAqB,YACrBC,qBAAsB/sD,EACtBgtD,kBAAmB,UAErB,GAAI,qBAAuBC,+BAAgC,CACzD,IAAIC,GAA0BD,+BAC9B,IACGC,GAAwBC,YACzBD,GAAwBE,cAExB,IACGpqD,GAAakqD,GAAwBG,OACpCT,IAEC3pD,GAAeiqD,EACpB,CAAE,MAAO7pD,IAAM,CACnB,CACAvM,EAAQw2D,WAAa,SAAUxL,EAAW1mD,GACxC,IAAKmB,EAAiBulD,GAAY,MAAMzkD,MAAMnB,EAAuB,MACrE,IAAI8sD,GAAe,EACjBnsB,EAAmB,GACnB6F,EAAkBL,GAClBU,EAAgBT,GAChBqb,EAAqBpb,GA8BvB,OA5BA,OAASnnC,QACP,IAAWA,KACV,IAAOA,EAAQmyD,sBAAwBvE,GAAe,QACvD,IAAW5tD,EAAQyhC,mBAChBA,EAAmBzhC,EAAQyhC,uBAC9B,IAAWzhC,EAAQsnC,kBAChBA,EAAkBtnC,EAAQsnC,sBAC7B,IAAWtnC,EAAQ2nC,gBAAkBA,EAAgB3nC,EAAQ2nC,oBAC7D,IAAW3nC,EAAQuiD,qBAChBA,EAAqBviD,EAAQuiD,yBAChC,IAAWviD,EAAQoyD,8BACMpyD,EAAQoyD,8BACnCpyD,EAAUytD,GACR/G,EACA,GACA,EACA,KACA,EACAkH,EACAnsB,EACA6F,EACAK,EACA4a,EACAsL,EACA,MAEFnH,EAAUt7C,IAAgCpL,EAAQwF,QAClD2pC,GAA2BuX,GACpB,IAAI+J,GAAazwD,EAC1B,EACAtE,EAAQ22D,YAAc,SAAU3L,EAAWgH,EAAiB1tD,GAC1D,IAAKmB,EAAiBulD,GAAY,MAAMzkD,MAAMnB,EAAuB,MACrE,IAAI8sD,GAAe,EACjBnsB,EAAmB,GACnB6F,EAAkBL,GAClBU,EAAgBT,GAChBqb,EAAqBpb,GAErB5K,EAAY,KAyCd,OAxCA,OAASv8B,QACP,IAAWA,KACV,IAAOA,EAAQmyD,sBAAwBvE,GAAe,QACvD,IAAW5tD,EAAQyhC,mBAChBA,EAAmBzhC,EAAQyhC,uBAC9B,IAAWzhC,EAAQsnC,kBAChBA,EAAkBtnC,EAAQsnC,sBAC7B,IAAWtnC,EAAQ2nC,gBAAkBA,EAAgB3nC,EAAQ2nC,oBAC7D,IAAW3nC,EAAQuiD,qBAChBA,EAAqBviD,EAAQuiD,yBAChC,IAAWviD,EAAQoyD,8BACMpyD,EAAQoyD,kCACjC,IAAWpyD,EAAQu8B,YAAcA,EAAYv8B,EAAQu8B,aACvDmxB,EAAkBD,GAChB/G,EACA,GACA,EACAgH,EACA,EACAE,EACAnsB,EACA6F,EACAK,EACA4a,EACAsL,EACAtxB,IAEc/1B,QAAUsnD,GAAqB,MAC/C9tD,EAAU0tD,EAAgBloD,SAG1Bi8B,EAAmBtO,GADnBy6B,EAAetjD,GADfsjD,EAAe3uB,QAGE7hC,SAAW,KAC5Bi2B,GAAcrzB,EAASyhC,EAAkBmsB,GACzC5tD,EAAU4tD,EACVF,EAAgBloD,QAAQ+C,MAAQvI,EAChC4J,GAAkB8jD,EAAiB1tD,GACnCk7C,GAAsBwS,GACtBhH,EAAUt7C,IAAgCsiD,EAAgBloD,QAC1D2pC,GAA2BuX,GACpB,IAAIkK,GAAsBlD,EACnC,EACAhyD,EAAQs1D,QAAU,wBC7hehBvwD,EAAO/E,QAAU,EAAjB+E,qBCDF,SAAS6xD,IAEP,GAC4C,qBAAnCT,gCAC4C,oBAA5CA,+BAA+BS,SAcxC,IAEET,+BAA+BS,SAASA,EAC1C,CAAE,MAAOrqD,GAGP3I,QAAQC,MAAM0I,EAChB,CACF,CAKEqqD,GACA7xD,EAAO/E,QAAU,EAAjB+E,kBCvBF,IAAIiC,EAAqBF,OAAOC,IAAI,8BAClCE,EAAoBH,OAAOC,IAAI,gBAC/BG,EAAsBJ,OAAOC,IAAI,kBACjCI,EAAyBL,OAAOC,IAAI,qBACpCK,EAAsBN,OAAOC,IAAI,kBACjCO,EAAsBR,OAAOC,IAAI,kBACjCQ,EAAqBT,OAAOC,IAAI,iBAChCS,EAAyBV,OAAOC,IAAI,qBACpCU,EAAsBX,OAAOC,IAAI,kBACjCY,EAAkBb,OAAOC,IAAI,cAC7Ba,EAAkBd,OAAOC,IAAI,cAC7BgB,EAAwBjB,OAAOkB,SAQjC,IAAI6uD,EAAuB,CACvBC,UAAW,WACT,OAAO,CACT,EACA3sB,mBAAoB,WAAa,EACjCD,oBAAqB,WAAa,EAClCF,gBAAiB,WAAa,GAEhCrjC,EAASC,OAAOD,OAChBowD,EAAc,CAAC,EACjB,SAAS9pC,EAAU/S,EAAOpP,EAAS+iC,GACjChpC,KAAKqV,MAAQA,EACbrV,KAAKiG,QAAUA,EACfjG,KAAKipC,KAAOipB,EACZlyD,KAAKgpC,QAAUA,GAAWgpB,CAC5B,CAgBA,SAASG,IAAkB,CAE3B,SAASC,EAAc/8C,EAAOpP,EAAS+iC,GACrChpC,KAAKqV,MAAQA,EACbrV,KAAKiG,QAAUA,EACfjG,KAAKipC,KAAOipB,EACZlyD,KAAKgpC,QAAUA,GAAWgpB,CAC5B,CAtBA5pC,EAAU7hB,UAAU8hB,iBAAmB,CAAC,EACxCD,EAAU7hB,UAAUq0B,SAAW,SAAUy3B,EAAcx1D,GACrD,GACE,kBAAoBw1D,GACpB,oBAAsBA,GACtB,MAAQA,EAER,MAAM3wD,MACJ,0GAEJ1B,KAAKgpC,QAAQ7D,gBAAgBnlC,KAAMqyD,EAAcx1D,EAAU,WAC7D,EACAurB,EAAU7hB,UAAU+rD,YAAc,SAAUz1D,GAC1CmD,KAAKgpC,QAAQ1D,mBAAmBtlC,KAAMnD,EAAU,cAClD,EAEAs1D,EAAe5rD,UAAY6hB,EAAU7hB,UAOrC,IAAIgsD,EAA0BH,EAAc7rD,UAAY,IAAI4rD,EAC5DI,EAAuB3hD,YAAcwhD,EACrCtwD,EAAOywD,EAAwBnqC,EAAU7hB,WACzCgsD,EAAuB3sB,sBAAuB,EAC9C,IAAI1hC,EAAcC,MAAMC,QACtBC,EAAuB,CAAEuxB,EAAG,KAAMmmB,EAAG,KAAM/gB,EAAG,KAAMhL,EAAG,KAAMwiC,EAAG,MAChElsD,EAAiBvE,OAAOwE,UAAUD,eACpC,SAASmsD,EAAajvD,EAAMgZ,EAAKk2C,EAAMzsC,EAAQyC,EAAOrT,GAEpD,OADAq9C,EAAOr9C,EAAMwS,IACN,CACLpkB,SAAUtB,EACVqB,KAAMA,EACNgZ,IAAKA,EACLqL,SAAK,IAAW6qC,EAAOA,EAAO,KAC9Br9C,MAAOA,EAEX,CAWA,SAASs9C,EAAeC,GACtB,MACE,kBAAoBA,GACpB,OAASA,GACTA,EAAOnvD,WAAatB,CAExB,CAUA,IAAI0wD,EAA6B,OACjC,SAASC,EAAc3gD,EAASnY,GAC9B,MAAO,kBAAoBmY,GAAW,OAASA,GAAW,MAAQA,EAAQqK,IAX5E,SAAgBA,GACd,IAAIu2C,EAAgB,CAAE,IAAK,KAAM,IAAK,MACtC,MACE,IACAv2C,EAAI1M,QAAQ,SAAS,SAAUhC,GAC7B,OAAOilD,EAAcjlD,EACvB,GAEJ,CAIMklD,CAAO,GAAK7gD,EAAQqK,KACpBxiB,EAAMyQ,SAAS,GACrB,CACA,SAASuhB,IAAU,CAiCnB,SAASinC,EAAa9/C,EAAU2kB,EAAOo7B,EAAeC,EAAWt2D,GAC/D,IAAI2G,SAAc2P,EACd,cAAgB3P,GAAQ,YAAcA,IAAM2P,EAAW,MAC3D,IApE0BigD,EAAYC,EAoElCC,GAAiB,EACrB,GAAI,OAASngD,EAAUmgD,GAAiB,OAEtC,OAAQ9vD,GACN,IAAK,SACL,IAAK,SACL,IAAK,SACH8vD,GAAiB,EACjB,MACF,IAAK,SACH,OAAQngD,EAAS1P,UACf,KAAKtB,EACL,KAAKC,EACHkxD,GAAiB,EACjB,MACF,KAAKvwD,EACH,OAEEkwD,GADCK,EAAiBngD,EAASnP,OAEVmP,EAASpP,UACxB+zB,EACAo7B,EACAC,EACAt2D,IAKd,GAAIy2D,EACF,OACGz2D,EAAWA,EAASsW,GACpBmgD,EACC,KAAOH,EAAY,IAAML,EAAc3/C,EAAU,GAAKggD,EACxDjvD,EAAYrH,IACNq2D,EAAgB,GAClB,MAAQI,IACLJ,EACCI,EAAexjD,QAAQ+iD,EAA4B,OAAS,KAChEI,EAAap2D,EAAUi7B,EAAOo7B,EAAe,IAAI,SAAUzoB,GACzD,OAAOA,CACT,KACA,MAAQ5tC,IACP81D,EAAe91D,KA9GEu2D,EAgHdv2D,EAhH0Bw2D,EAiH1BH,GACG,MAAQr2D,EAAS2f,KACjBrJ,GAAYA,EAASqJ,MAAQ3f,EAAS2f,IACnC,IACC,GAAK3f,EAAS2f,KAAK1M,QAClB+iD,EACA,OACE,KACRS,EAVHz2D,EA9GJ41D,EACLW,EAAW5vD,KACX6vD,OACA,EACA,EACA,EACAD,EAAW/9C,QAoHLyiB,EAAMj+B,KAAKgD,IACf,EAEJy2D,EAAiB,EACjB,IA9LqBjwD,EA8LjBkwD,EAAiB,KAAOJ,EAAY,IAAMA,EAAY,IAC1D,GAAIjvD,EAAYiP,GACd,IAAK,IAAIxS,EAAI,EAAGA,EAAIwS,EAASlZ,OAAQ0G,IAGhC2yD,GAAkBL,EAFpBE,EAAYhgD,EAASxS,GAIlBm3B,EACAo7B,EAJD1vD,EAAO+vD,EAAiBT,EAAcK,EAAWxyD,GAMhD9D,QAEH,GAAoC,oBAA9B8D,EAzMP,QADiB0C,EA0MQ8P,IAzMC,kBAAoB9P,EAAsB,KAIjE,oBAHPA,EACGH,GAAyBG,EAAcH,IACxCG,EAAc,eAC6BA,EAAgB,MAsM3D,IACE8P,EAAWxS,EAAEwM,KAAKgG,GAAWxS,EAAI,IAC/BwyD,EAAYhgD,EAASuT,QAAQmd,MAK5ByvB,GAAkBL,EAFpBE,EAAYA,EAAUhuD,MAInB2yB,EACAo7B,EAJD1vD,EAAO+vD,EAAiBT,EAAcK,EAAWxyD,KAMhD9D,QAEH,GAAI,WAAa2G,EAAM,CAC1B,GAAI,oBAAsB2P,EAAS8c,KACjC,OAAOgjC,EA3Hb,SAAyB/iC,GACvB,OAAQA,EAASJ,QACf,IAAK,YACH,OAAOI,EAAS/qB,MAClB,IAAK,WACH,MAAM+qB,EAASyB,OACjB,QACE,OACG,kBAAoBzB,EAASJ,OAC1BI,EAASD,KAAKjE,EAAQA,IACpBkE,EAASJ,OAAS,UACpBI,EAASD,MACP,SAAU4B,GACR,YAAc3B,EAASJ,SACnBI,EAASJ,OAAS,YACnBI,EAAS/qB,MAAQ0sB,EACtB,IACA,SAAU7yB,GACR,YAAckxB,EAASJ,SACnBI,EAASJ,OAAS,WAAcI,EAASyB,OAAS3yB,EACxD,KAENkxB,EAASJ,QAET,IAAK,YACH,OAAOI,EAAS/qB,MAClB,IAAK,WACH,MAAM+qB,EAASyB,QAGvB,MAAMzB,CACR,CA6FQsjC,CAAgBrgD,GAChB2kB,EACAo7B,EACAC,EACAt2D,GAGJ,MADAi7B,EAAQrb,OAAOtJ,GACTzR,MACJ,mDACG,oBAAsBo2B,EACnB,qBAAuB/1B,OAAOmgB,KAAK/O,GAAUuuB,KAAK,MAAQ,IAC1D5J,GACJ,4EAEN,CACA,OAAOw7B,CACT,CACA,SAASG,EAAYtgD,EAAUugD,EAAMztD,GACnC,GAAI,MAAQkN,EAAU,OAAOA,EAC7B,IAAIorB,EAAS,GACX+U,EAAQ,EAIV,OAHA2f,EAAa9/C,EAAUorB,EAAQ,GAAI,IAAI,SAAU38B,GAC/C,OAAO8xD,EAAKvmD,KAAKlH,EAASrE,EAAO0xC,IACnC,IACO/U,CACT,CACA,SAASo1B,EAAgB9gC,GACvB,IAAK,IAAMA,EAAQ+gC,QAAS,CAC1B,IAAI7uB,EAAOlS,EAAQghC,SACnB9uB,EAAOA,KACF9U,MACH,SAAU6jC,GACJ,IAAMjhC,EAAQ+gC,UAAY,IAAM/gC,EAAQ+gC,UACzC/gC,EAAQ+gC,QAAU,EAAK/gC,EAAQghC,QAAUC,EAC9C,IACA,SAAU90D,GACJ,IAAM6zB,EAAQ+gC,UAAY,IAAM/gC,EAAQ+gC,UACzC/gC,EAAQ+gC,QAAU,EAAK/gC,EAAQghC,QAAU70D,EAC9C,KAED,IAAM6zB,EAAQ+gC,UAAa/gC,EAAQ+gC,QAAU,EAAK/gC,EAAQghC,QAAU9uB,EACvE,CACA,GAAI,IAAMlS,EAAQ+gC,QAAS,OAAO/gC,EAAQghC,QAAQE,QAClD,MAAMlhC,EAAQghC,OAChB,CACA,IAAIztB,EACF,oBAAsBC,YAClBA,YACA,SAAUrnC,GACR,GACE,kBAAoBoL,QACpB,oBAAsBA,OAAOk8B,WAC7B,CACA,IAAIj8B,EAAQ,IAAID,OAAOk8B,WAAW,QAAS,CACzC5tB,SAAS,EACTC,YAAY,EACZxI,QACE,kBAAoBnR,GACpB,OAASA,GACT,kBAAoBA,EAAMmR,QACtBsM,OAAOzd,EAAMmR,SACbsM,OAAOzd,GACbA,MAAOA,IAET,IAAKoL,OAAOm8B,cAAcl8B,GAAQ,MACpC,MAAO,GACL,kBAAoBm8B,SACpB,oBAAsBA,QAAQC,KAG9B,YADAD,QAAQC,KAAK,oBAAqBznC,GAGpCD,QAAQC,MAAMA,EAChB,EACN,SAASm+C,IAAQ,CACjBhiD,EAAQ64D,SAAW,CACjBn8B,IAAK47B,EACL7kC,QAAS,SAAUzb,EAAU8gD,EAAaC,GACxCT,EACEtgD,GACA,WACE8gD,EAAYl0D,MAAMC,KAAMC,UAC1B,GACAi0D,EAEJ,EACA5gB,MAAO,SAAUngC,GACf,IAAIghD,EAAI,EAIR,OAHAV,EAAYtgD,GAAU,WACpBghD,GACF,IACOA,CACT,EACAC,QAAS,SAAUjhD,GACjB,OACEsgD,EAAYtgD,GAAU,SAAUvR,GAC9B,OAAOA,CACT,KAAM,EAEV,EACAyyD,KAAM,SAAUlhD,GACd,IAAKw/C,EAAex/C,GAClB,MAAMzR,MACJ,yEAEJ,OAAOyR,CACT,GAEFhY,EAAQitB,UAAYA,EACpBjtB,EAAQm5D,SAAWjyD,EACnBlH,EAAQo5D,SAAWhyD,EACnBpH,EAAQi3D,cAAgBA,EACxBj3D,EAAQq5D,WAAalyD,EACrBnH,EAAQs5D,SAAW7xD,EACnBzH,EAAQmJ,gEACND,EACFlJ,EAAQu5D,mBAAqB,CAC3BC,UAAW,KACXlqB,EAAG,SAAU7S,GACX,OAAOvzB,EAAqBuxB,EAAE+B,aAAaC,EAC7C,GAEFz8B,EAAQq0B,MAAQ,SAAUphB,GACxB,OAAO,WACL,OAAOA,EAAGrO,MAAM,KAAME,UACxB,CACF,EACA9E,EAAQy5D,aAAe,SAAUziD,EAAS0iD,EAAQ1hD,GAChD,GAAI,OAAShB,QAAW,IAAWA,EACjC,MAAMzQ,MACJ,wDAA0DyQ,EAAU,KAExE,IAAIkD,EAAQvT,EAAO,CAAC,EAAGqQ,EAAQkD,OAC7BmH,EAAMrK,EAAQqK,IAEhB,GAAI,MAAQq4C,EACV,IAAKr9C,UAAa,IAAWq9C,EAAOhtC,UAAgB,OACpD,IAAWgtC,EAAOr4C,MAAQA,EAAM,GAAKq4C,EAAOr4C,KAC5Cq4C,GACGvuD,EAAe6G,KAAK0nD,EAAQr9C,IAC3B,QAAUA,GACV,WAAaA,GACb,aAAeA,GACd,QAAUA,QAAY,IAAWq9C,EAAOhtC,MACxCxS,EAAMmC,GAAYq9C,EAAOr9C,IAChC,IAAIA,EAAWvX,UAAUhG,OAAS,EAClC,GAAI,IAAMud,EAAUnC,EAAMlC,SAAWA,OAChC,GAAI,EAAIqE,EAAU,CACrB,IAAK,IAAIs9C,EAAa3wD,MAAMqT,GAAW7W,EAAI,EAAGA,EAAI6W,EAAU7W,IAC1Dm0D,EAAWn0D,GAAKV,UAAUU,EAAI,GAChC0U,EAAMlC,SAAW2hD,CACnB,CACA,OAAOrC,EAAatgD,EAAQ3O,KAAMgZ,OAAK,EAAQ,EAAQkM,EAAOrT,EAChE,EACAla,EAAQ45D,cAAgB,SAAU/vD,GAchC,OAbAA,EAAe,CACbvB,SAAUf,EACV2D,cAAerB,EACfkqB,eAAgBlqB,EAChBmqB,aAAc,EACdF,SAAU,KACVD,SAAU,OAECC,SAAWjqB,EACxBA,EAAagqB,SAAW,CACtBvrB,SAAUhB,EACVmB,SAAUoB,GAELA,CACT,EACA7J,EAAQ4a,cAAgB,SAAUvS,EAAMqxD,EAAQ1hD,GAC9C,IAAIqE,EACFnC,EAAQ,CAAC,EACTmH,EAAM,KACR,GAAI,MAAQq4C,EACV,IAAKr9C,UAAa,IAAWq9C,EAAOr4C,MAAQA,EAAM,GAAKq4C,EAAOr4C,KAAMq4C,EAClEvuD,EAAe6G,KAAK0nD,EAAQr9C,IAC1B,QAAUA,GACV,WAAaA,GACb,aAAeA,IACdnC,EAAMmC,GAAYq9C,EAAOr9C,IAChC,IAAIw9C,EAAiB/0D,UAAUhG,OAAS,EACxC,GAAI,IAAM+6D,EAAgB3/C,EAAMlC,SAAWA,OACtC,GAAI,EAAI6hD,EAAgB,CAC3B,IAAK,IAAIF,EAAa3wD,MAAM6wD,GAAiBr0D,EAAI,EAAGA,EAAIq0D,EAAgBr0D,IACtEm0D,EAAWn0D,GAAKV,UAAUU,EAAI,GAChC0U,EAAMlC,SAAW2hD,CACnB,CACA,GAAItxD,GAAQA,EAAK0iC,aACf,IAAK1uB,KAAcw9C,EAAiBxxD,EAAK0iC,kBACvC,IAAW7wB,EAAMmC,KACdnC,EAAMmC,GAAYw9C,EAAex9C,IACxC,OAAOi7C,EAAajvD,EAAMgZ,OAAK,EAAQ,EAAQ,EAAMnH,EACvD,EACAla,EAAQ85D,UAAY,WAClB,MAAO,CAAEhwD,QAAS,KACpB,EACA9J,EAAQ+5D,WAAa,SAAUpxD,GAC7B,MAAO,CAAEL,SAAUd,EAAwBmB,OAAQA,EACrD,EACA3I,EAAQw3D,eAAiBA,EACzBx3D,EAAQg6D,KAAO,SAAUpwB,GACvB,MAAO,CACLthC,SAAUV,EACVgB,SAAU,CAAE6vD,SAAU,EAAGC,QAAS9uB,GAClC/gC,MAAO2vD,EAEX,EACAx4D,EAAQi6D,KAAO,SAAU5xD,EAAMnJ,GAC7B,MAAO,CACLoJ,SAAUX,EACVU,KAAMA,EACNnJ,aAAS,IAAWA,EAAU,KAAOA,EAEzC,EACAc,EAAQ+iC,gBAAkB,SAAUm3B,GAClC,IAAIl6B,EAAiB92B,EAAqB22B,EACxCI,EAAoB,CAAC,EACvB/2B,EAAqB22B,EAAII,EACzB,IACE,IAAItjB,EAAcu9C,IAChBh6B,EAA0Bh3B,EAAqB2rB,EACjD,OAASqL,GACPA,EAAwBD,EAAmBtjB,GAC7C,kBAAoBA,GAClB,OAASA,GACT,oBAAsBA,EAAYmY,MAClCnY,EAAYmY,KAAKktB,EAAM/W,EAC3B,CAAE,MAAOpnC,GACPonC,EAAkBpnC,EACpB,CAAE,QACAqF,EAAqB22B,EAAIG,CAC3B,CACF,EACAhgC,EAAQm6D,yBAA2B,WACjC,OAAOjxD,EAAqBuxB,EAAEmL,iBAChC,EACA5lC,EAAQs8B,IAAM,SAAUC,GACtB,OAAOrzB,EAAqBuxB,EAAE6B,IAAIC,EACpC,EACAv8B,EAAQ0lC,eAAiB,SAAUh8B,EAAQw1B,EAAck7B,GACvD,OAAOlxD,EAAqBuxB,EAAEiL,eAAeh8B,EAAQw1B,EAAck7B,EACrE,EACAp6D,EAAQ2kC,YAAc,SAAUjjC,EAAUggC,GACxC,OAAOx4B,EAAqBuxB,EAAEkK,YAAYjjC,EAAUggC,EACtD,EACA1hC,EAAQ4kC,WAAa,SAAUy1B,GAC7B,OAAOnxD,EAAqBuxB,EAAEmK,WAAWy1B,EAC3C,EACAr6D,EAAQolC,cAAgB,WAAa,EACrCplC,EAAQqlC,iBAAmB,SAAUr7B,EAAO24B,GAC1C,OAAOz5B,EAAqBuxB,EAAE4K,iBAAiBr7B,EAAO24B,EACxD,EACA3iC,EAAQ6kC,UAAY,SAAUrD,EAAQC,EAAYnW,GAChD,IAAIkQ,EAAatyB,EAAqBuxB,EACtC,GAAI,oBAAsBnP,EACxB,MAAM/kB,MACJ,kEAEJ,OAAOi1B,EAAWqJ,UAAUrD,EAAQC,EACtC,EACAzhC,EAAQwlC,MAAQ,WACd,OAAOt8B,EAAqBuxB,EAAE+K,OAChC,EACAxlC,EAAQ8kC,oBAAsB,SAAUpY,EAAK8U,EAAQE,GACnD,OAAOx4B,EAAqBuxB,EAAEqK,oBAAoBpY,EAAK8U,EAAQE,EACjE,EACA1hC,EAAQglC,mBAAqB,SAAUxD,EAAQE,GAC7C,OAAOx4B,EAAqBuxB,EAAEuK,mBAAmBxD,EAAQE,EAC3D,EACA1hC,EAAQ+kC,gBAAkB,SAAUvD,EAAQE,GAC1C,OAAOx4B,EAAqBuxB,EAAEsK,gBAAgBvD,EAAQE,EACxD,EACA1hC,EAAQilC,QAAU,SAAUzD,EAAQE,GAClC,OAAOx4B,EAAqBuxB,EAAEwK,QAAQzD,EAAQE,EAChD,EACA1hC,EAAQ2lC,cAAgB,SAAUtG,EAAatC,GAC7C,OAAO7zB,EAAqBuxB,EAAEkL,cAActG,EAAatC,EAC3D,EACA/8B,EAAQklC,WAAa,SAAUnI,EAAS8I,EAAYC,GAClD,OAAO58B,EAAqBuxB,EAAEyK,WAAWnI,EAAS8I,EAAYC,EAChE,EACA9lC,EAAQmlC,OAAS,SAAUxC,GACzB,OAAOz5B,EAAqBuxB,EAAE0K,OAAOxC,EACvC,EACA3iC,EAAQ07B,SAAW,SAAUwD,GAC3B,OAAOh2B,EAAqBuxB,EAAEiB,SAASwD,EACzC,EACAl/B,EAAQulC,qBAAuB,SAC7BzH,EACAC,EACAC,GAEA,OAAO90B,EAAqBuxB,EAAE8K,qBAC5BzH,EACAC,EACAC,EAEJ,EACAh+B,EAAQslC,cAAgB,WACtB,OAAOp8B,EAAqBuxB,EAAE6K,eAChC,EACAtlC,EAAQs1D,QAAU,wBC9hBhBvwD,EAAO/E,QAAU,EAAjB+E,oBCQF,IAAIG,EAAQD,EAAQ,KACpB,SAASG,EAAuBC,GAC9B,IAAIC,EAAM,4BAA8BD,EACxC,GAAI,EAAIP,UAAUhG,OAAQ,CACxBwG,GAAO,WAAaC,mBAAmBT,UAAU,IACjD,IAAK,IAAIU,EAAI,EAAGA,EAAIV,UAAUhG,OAAQ0G,IACpCF,GAAO,WAAaC,mBAAmBT,UAAUU,GACrD,CACA,MACE,yBACAH,EACA,WACAC,EACA,gHAEJ,CACA,SAAS08C,IAAQ,CACjB,IAAIsY,EAAY,CACZxL,EAAG,CACDC,EAAG/M,EACHkN,EAAG,WACD,MAAM3oD,MAAMnB,EAAuB,KACrC,EACAgqD,EAAGpN,EACHsN,EAAGtN,EACHuN,EAAGvN,EACH+N,EAAG/N,EACHgO,EAAGhO,EACHntB,EAAGmtB,EACHqO,EAAGrO,GAELhzC,EAAG,EACHumD,YAAa,MAEftuD,EAAoBH,OAAOC,IAAI,gBAYjC,IAAImC,EACFhE,EAAMiE,gEACR,SAASoxD,EAAuB/K,EAAIgL,GAClC,MAAI,SAAWhL,EAAW,GACtB,kBAAoBgL,EACf,oBAAsBA,EAAQA,EAAQ,QAD/C,CAEF,CACAx6D,EAAQqJ,6DACNixD,EACFt6D,EAAQy6D,aAAe,SAAUziD,EAAUgzC,GACzC,IAAI3pC,EACF,EAAIvc,UAAUhG,aAAU,IAAWgG,UAAU,GAAKA,UAAU,GAAK,KACnE,IACGkmD,GACA,IAAMA,EAAUtlD,UACf,IAAMslD,EAAUtlD,UAChB,KAAOslD,EAAUtlD,SAEnB,MAAMa,MAAMnB,EAAuB,MACrC,OA9BF,SAAwB4S,EAAU6P,EAAe4G,GAC/C,IAAIpN,EACF,EAAIvc,UAAUhG,aAAU,IAAWgG,UAAU,GAAKA,UAAU,GAAK,KACnE,MAAO,CACLwD,SAAUrB,EACVoa,IAAK,MAAQA,EAAM,KAAO,GAAKA,EAC/BrJ,SAAUA,EACV6P,cAAeA,EACf4G,eAAgBA,EAEpB,CAoBSisC,CAAe1iD,EAAUgzC,EAAW,KAAM3pC,EACnD,EACArhB,EAAQ26D,UAAY,SAAU1nD,GAC5B,IAAI2nD,EAAqB1xD,EAAqB22B,EAC5Cg7B,EAAyBP,EAAUtrD,EACrC,IACE,GAAM9F,EAAqB22B,EAAI,KAAQy6B,EAAUtrD,EAAI,EAAIiE,EAAK,OAAOA,GACvE,CAAE,QACC/J,EAAqB22B,EAAI+6B,EACvBN,EAAUtrD,EAAI6rD,EACfP,EAAUxL,EAAEC,GAChB,CACF,EACA/uD,EAAQ86D,WAAa,SAAU7yC,EAAM3jB,GACnC,kBAAoB2jB,IACjB3jB,EAEIA,EACC,kBAFAA,EAAUA,EAAQqtC,aAGd,oBAAsBrtC,EACpBA,EACA,QACF,EACLA,EAAU,KACfg2D,EAAUxL,EAAEQ,EAAErnC,EAAM3jB,GACxB,EACAtE,EAAQ+6D,YAAc,SAAU9yC,GAC9B,kBAAoBA,GAAQqyC,EAAUxL,EAAEM,EAAEnnC,EAC5C,EACAjoB,EAAQg7D,QAAU,SAAU/yC,EAAM3jB,GAChC,GAAI,kBAAoB2jB,GAAQ3jB,GAAW,kBAAoBA,EAAQkrD,GAAI,CACzE,IAAIA,EAAKlrD,EAAQkrD,GACf7d,EAAc4oB,EAAuB/K,EAAIlrD,EAAQqtC,aACjD+e,EACE,kBAAoBpsD,EAAQosD,UAAYpsD,EAAQosD,eAAY,EAC9DuK,EACE,kBAAoB32D,EAAQ22D,cACxB32D,EAAQ22D,mBACR,EACR,UAAYzL,EACR8K,EAAUxL,EAAEj6B,EACV5M,EACA,kBAAoB3jB,EAAQqpB,WAAarpB,EAAQqpB,gBAAa,EAC9D,CACEgkB,YAAaA,EACb+e,UAAWA,EACXuK,cAAeA,IAGnB,WAAazL,GACb8K,EAAUxL,EAAEkB,EAAE/nC,EAAM,CAClB0pB,YAAaA,EACb+e,UAAWA,EACXuK,cAAeA,EACfC,MAAO,kBAAoB52D,EAAQ42D,MAAQ52D,EAAQ42D,WAAQ,GAEnE,CACF,EACAl7D,EAAQm7D,cAAgB,SAAUlzC,EAAM3jB,GACtC,GAAI,kBAAoB2jB,EACtB,GAAI,kBAAoB3jB,GAAW,OAASA,GAC1C,GAAI,MAAQA,EAAQkrD,IAAM,WAAalrD,EAAQkrD,GAAI,CACjD,IAAI7d,EAAc4oB,EAChBj2D,EAAQkrD,GACRlrD,EAAQqtC,aAEV2oB,EAAUxL,EAAEuB,EAAEpoC,EAAM,CAClB0pB,YAAaA,EACb+e,UACE,kBAAoBpsD,EAAQosD,UAAYpsD,EAAQosD,eAAY,EAC9DwK,MAAO,kBAAoB52D,EAAQ42D,MAAQ52D,EAAQ42D,WAAQ,GAE/D,OACK,MAAQ52D,GAAWg2D,EAAUxL,EAAEuB,EAAEpoC,EAC5C,EACAjoB,EAAQm9C,QAAU,SAAUl1B,EAAM3jB,GAChC,GACE,kBAAoB2jB,GACpB,kBAAoB3jB,GACpB,OAASA,GACT,kBAAoBA,EAAQkrD,GAC5B,CACA,IAAIA,EAAKlrD,EAAQkrD,GACf7d,EAAc4oB,EAAuB/K,EAAIlrD,EAAQqtC,aACnD2oB,EAAUxL,EAAES,EAAEtnC,EAAMunC,EAAI,CACtB7d,YAAaA,EACb+e,UACE,kBAAoBpsD,EAAQosD,UAAYpsD,EAAQosD,eAAY,EAC9DwK,MAAO,kBAAoB52D,EAAQ42D,MAAQ52D,EAAQ42D,WAAQ,EAC3D7yD,KAAM,kBAAoB/D,EAAQ+D,KAAO/D,EAAQ+D,UAAO,EACxD4yD,cACE,kBAAoB32D,EAAQ22D,cACxB32D,EAAQ22D,mBACR,EACNrK,eACE,kBAAoBtsD,EAAQssD,eACxBtsD,EAAQssD,oBACR,EACNjB,YACE,kBAAoBrrD,EAAQqrD,YAAcrrD,EAAQqrD,iBAAc,EAClEC,WACE,kBAAoBtrD,EAAQsrD,WAAatrD,EAAQsrD,gBAAa,EAChEzT,MAAO,kBAAoB73C,EAAQ63C,MAAQ73C,EAAQ63C,WAAQ,GAE/D,CACF,EACAn8C,EAAQo7D,cAAgB,SAAUnzC,EAAM3jB,GACtC,GAAI,kBAAoB2jB,EACtB,GAAI3jB,EAAS,CACX,IAAIqtC,EAAc4oB,EAAuBj2D,EAAQkrD,GAAIlrD,EAAQqtC,aAC7D2oB,EAAUxL,EAAEiB,EAAE9nC,EAAM,CAClBunC,GACE,kBAAoBlrD,EAAQkrD,IAAM,WAAalrD,EAAQkrD,GACnDlrD,EAAQkrD,QACR,EACN7d,YAAaA,EACb+e,UACE,kBAAoBpsD,EAAQosD,UAAYpsD,EAAQosD,eAAY,GAElE,MAAO4J,EAAUxL,EAAEiB,EAAE9nC,EACzB,EACAjoB,EAAQq7D,iBAAmB,SAAUhhD,GACnCigD,EAAUxL,EAAEI,EAAE70C,EAChB,EACAra,EAAQs7D,wBAA0B,SAAUroD,EAAIlU,GAC9C,OAAOkU,EAAGlU,EACZ,EACAiB,EAAQylC,aAAe,SAAU/7B,EAAQw1B,EAAck7B,GACrD,OAAOlxD,EAAqBuxB,EAAEgL,aAAa/7B,EAAQw1B,EAAck7B,EACnE,EACAp6D,EAAQu7D,cAAgB,WACtB,OAAOryD,EAAqBuxB,EAAEuJ,yBAChC,EACAhkC,EAAQs1D,QAAU,sBCtMlB,IAAItuD,EAAqBF,OAAOC,IAAI,8BAClCG,EAAsBJ,OAAOC,IAAI,kBACnC,SAASy0D,EAAQnzD,EAAMqxD,EAAQ+B,GAC7B,IAAIp6C,EAAM,KAGV,QAFA,IAAWo6C,IAAap6C,EAAM,GAAKo6C,QACnC,IAAW/B,EAAOr4C,MAAQA,EAAM,GAAKq4C,EAAOr4C,KACxC,QAASq4C,EAEX,IAAK,IAAIr9C,KADTo/C,EAAW,CAAC,EACS/B,EACnB,QAAUr9C,IAAao/C,EAASp/C,GAAYq9C,EAAOr9C,SAChDo/C,EAAW/B,EAElB,OADAA,EAAS+B,EAAS/uC,IACX,CACLpkB,SAAUtB,EACVqB,KAAMA,EACNgZ,IAAKA,EACLqL,SAAK,IAAWgtC,EAASA,EAAS,KAClCx/C,MAAOuhD,EAEX,CACAz7D,EAAQm5D,SAAWjyD,EACnBlH,EAAQ07D,IAAMF,EACdx7D,EAAQ27D,KAAOH,kBC/Bf,SAAS5E,IAEP,GAC4C,qBAAnCT,gCAC4C,oBAA5CA,+BAA+BS,SAcxC,IAEET,+BAA+BS,SAASA,EAC1C,CAAE,MAAOrqD,GAGP3I,QAAQC,MAAM0I,EAChB,CACF,CAKEqqD,GACA7xD,EAAO/E,QAAU,EAAjB+E,OCjCE62D,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa/7D,QAGrB,IAAI+E,EAAS62D,EAAyBE,GAAY,CAGjD97D,QAAS,CAAC,GAOX,OAHAi8D,EAAoBH,GAAU/2D,EAAQA,EAAO/E,QAAS67D,GAG/C92D,EAAO/E,OACf,CAGA67D,EAAoB9L,EAAIkM,ECxBxBJ,EAAoB/M,EAAI,CAAC9uD,EAASk8D,KACjC,IAAI,IAAI76C,KAAO66C,EACXL,EAAoBM,EAAED,EAAY76C,KAASw6C,EAAoBM,EAAEn8D,EAASqhB,IAC5Eza,OAAO4M,eAAexT,EAASqhB,EAAK,CAAEzL,YAAY,EAAMD,IAAKumD,EAAW76C,MCJ3Ew6C,EAAoB9M,EAAI,CAAC,EAGzB8M,EAAoBnlD,EAAK0lD,GACjBtf,QAAQuf,IAAIz1D,OAAOmgB,KAAK80C,EAAoB9M,GAAGuN,QAAO,CAACC,EAAUl7C,KACvEw6C,EAAoB9M,EAAE1tC,GAAK+6C,EAASG,GAC7BA,IACL,KCNJV,EAAoBW,EAAKJ,GAEjB,aAAeA,EAAf,qBCFRP,EAAoBY,SAAYL,MCDhCP,EAAoBM,EAAI,CAACO,EAAKC,IAAU/1D,OAAOwE,UAAUD,eAAe6G,KAAK0qD,EAAKC,SCAlF,IAAIC,EAAa,CAAC,EACdC,EAAoB,WAExBhB,EAAoBiB,EAAI,CAACx3D,EAAKojC,EAAMrnB,EAAK+6C,KACxC,GAAGQ,EAAWt3D,GAAQs3D,EAAWt3D,GAAK5G,KAAKgqC,OAA3C,CACA,IAAIq0B,EAAQC,EACZ,QAAWhB,IAAR36C,EAEF,IADA,IAAI4uC,EAAU15C,SAASijC,qBAAqB,UACpCh0C,EAAI,EAAGA,EAAIyqD,EAAQnxD,OAAQ0G,IAAK,CACvC,IAAIy3D,EAAIhN,EAAQzqD,GAChB,GAAGy3D,EAAEvrB,aAAa,QAAUpsC,GAAO23D,EAAEvrB,aAAa,iBAAmBmrB,EAAoBx7C,EAAK,CAAE07C,EAASE,EAAG,KAAO,CACpH,CAEGF,IACHC,GAAa,GACbD,EAASxmD,SAASqE,cAAc,WAEzBsiD,QAAU,QACjBH,EAAOv4D,QAAU,IACbq3D,EAAoBsB,IACvBJ,EAAO1qD,aAAa,QAASwpD,EAAoBsB,IAElDJ,EAAO1qD,aAAa,eAAgBwqD,EAAoBx7C,GAExD07C,EAAO/uC,IAAM1oB,GAEds3D,EAAWt3D,GAAO,CAACojC,GACnB,IAAI00B,EAAmB,CAAC3U,EAAMv5C,KAE7B6tD,EAAO9f,QAAU8f,EAAO/f,OAAS,KACjC57C,aAAaoD,GACb,IAAI64D,EAAUT,EAAWt3D,GAIzB,UAHOs3D,EAAWt3D,GAClBy3D,EAAO3sD,YAAc2sD,EAAO3sD,WAAWgjC,YAAY2pB,GACnDM,GAAWA,EAAQ5pC,SAASxgB,GAAQA,EAAG/D,KACpCu5C,EAAM,OAAOA,EAAKv5C,IAElB1K,EAAUtD,WAAWk8D,EAAiB/+B,KAAK,UAAM29B,EAAW,CAAE3zD,KAAM,UAAWsR,OAAQojD,IAAW,MACtGA,EAAO9f,QAAUmgB,EAAiB/+B,KAAK,KAAM0+B,EAAO9f,SACpD8f,EAAO/f,OAASogB,EAAiB/+B,KAAK,KAAM0+B,EAAO/f,QACnDggB,GAAczmD,SAASkjC,KAAKpG,YAAY0pB,EApCkB,OCH3DlB,EAAoB3M,EAAKlvD,IACH,qBAAX8G,QAA0BA,OAAOw2D,aAC1C12D,OAAO4M,eAAexT,EAAS8G,OAAOw2D,YAAa,CAAEtzD,MAAO,WAE7DpD,OAAO4M,eAAexT,EAAS,aAAc,CAAEgK,OAAO,KCLvD6xD,EAAoB7sD,EAAI,UCKxB,IAAIuuD,EAAkB,CACrB,IAAK,GAGN1B,EAAoB9M,EAAEyO,EAAI,CAACpB,EAASG,KAElC,IAAIkB,EAAqB5B,EAAoBM,EAAEoB,EAAiBnB,GAAWmB,EAAgBnB,QAAWJ,EACtG,GAA0B,IAAvByB,EAGF,GAAGA,EACFlB,EAAS79D,KAAK++D,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAI5gB,SAAQ,CAAC5nB,EAAS6nB,IAAY0gB,EAAqBF,EAAgBnB,GAAW,CAAClnC,EAAS6nB,KAC1Gwf,EAAS79D,KAAK++D,EAAmB,GAAKC,GAGtC,IAAIp4D,EAAMu2D,EAAoB7sD,EAAI6sD,EAAoBW,EAAEJ,GAEpDv4D,EAAQ,IAAI0C,MAgBhBs1D,EAAoBiB,EAAEx3D,GAfF4J,IACnB,GAAG2sD,EAAoBM,EAAEoB,EAAiBnB,KAEf,KAD1BqB,EAAqBF,EAAgBnB,MACRmB,EAAgBnB,QAAWJ,GACrDyB,GAAoB,CACtB,IAAIE,EAAYzuD,IAAyB,SAAfA,EAAM7G,KAAkB,UAAY6G,EAAM7G,MAChEu1D,EAAU1uD,GAASA,EAAMyK,QAAUzK,EAAMyK,OAAOqU,IACpDnqB,EAAMmR,QAAU,iBAAmBonD,EAAU,cAAgBuB,EAAY,KAAOC,EAAU,IAC1F/5D,EAAM2E,KAAO,iBACb3E,EAAMwE,KAAOs1D,EACb95D,EAAMg6D,QAAUD,EAChBH,EAAmB,GAAG55D,EACvB,IAGuC,SAAWu4D,EAASA,EAE/D,GAeH,IAAI0B,EAAuB,CAACC,EAA4Bv0D,KACvD,IAKIsyD,EAAUM,EALV4B,EAAWx0D,EAAK,GAChBy0D,EAAcz0D,EAAK,GACnB00D,EAAU10D,EAAK,GAGIhE,EAAI,EAC3B,GAAGw4D,EAASG,MAAMp+D,GAAgC,IAAxBw9D,EAAgBx9D,KAAa,CACtD,IAAI+7D,KAAYmC,EACZpC,EAAoBM,EAAE8B,EAAanC,KACrCD,EAAoB9L,EAAE+L,GAAYmC,EAAYnC,IAGhD,GAAGoC,EAAsBA,EAAQrC,EAClC,CAEA,IADGkC,GAA4BA,EAA2Bv0D,GACrDhE,EAAIw4D,EAASl/D,OAAQ0G,IACzB42D,EAAU4B,EAASx4D,GAChBq2D,EAAoBM,EAAEoB,EAAiBnB,IAAYmB,EAAgBnB,IACrEmB,EAAgBnB,GAAS,KAE1BmB,EAAgBnB,GAAW,GAKzBgC,EAAqB7G,KAA0B,oBAAIA,KAA0B,qBAAK,GACtF6G,EAAmB3qC,QAAQqqC,EAAqBz/B,KAAK,KAAM,IAC3D+/B,EAAmB1/D,KAAOo/D,EAAqBz/B,KAAK,KAAM+/B,EAAmB1/D,KAAK2/B,KAAK+/B,ylFClF1E,MAAAC,EAAY,CACrBC,aAAc,UACdC,IAAK,iBAELC,aAAc,OAEdC,kBAAmB,4CACnBC,uBAAwB,4BACxBC,sBAAuB,SAEvBC,KAAM,OACNC,KAAM,SAENC,6BACI,sGAEJC,cAAe,iBACfC,yBAA0B,mBAE1BC,eAAgB,IAEhBC,WAAY,aAEZC,OAAQ,SAERC,cAAe,uCAEfC,aAAc,SACdC,cAAe,UACfC,qBAAsB,iBACtBC,YAAa,QACbC,gBAAiB,qBACjBC,cAAe,gBACfC,2BAA4B,OAC5BC,sBAAuB,kDACvBC,sBAAuB,wBACvBC,YAAa,cACbC,aAAc,GACdC,eAAgB,MAChBC,cAAe,gBACfC,cAAe,IACfC,cAAe,4DACfC,aAAc,aACdC,aAAc,IACdC,gCAAiC,gBACjCC,kCAAmC,sBACnCC,oBAAqB,CACjB,4BACA,oBACA,sBACA,mBAEJC,mBAAoB,IACpBC,iBAAkB,oBAGTC,EACA,IADAA,EAMiB,IANjBA,EAOI,IAPJA,EAae,IAbfA,EAeiB,IAfjBA,EAkBe,IAKfC,EAAsB,CAC/BvC,EAAUgB,aACVhB,EAAUiB,cACVjB,EAAUkB,sBAGDsB,EAAc,IAAID,EAAqBvC,EAAUmB,aAKjDsB,EACK,eADLA,EAEO,iBAFPA,EAGI,cAHJA,EAIG,kBAJHA,EAOQ,kBAPRA,EAQU,eAOVC,EACe,yBAQfC,EACD,SADCA,EAEM,gBAFNA,EAGE,YAQFC,EACK,eADLA,EAED,SAUCC,EAAc,CACvBC,MAAO,QACPC,eAAgB,iBAChBC,QAAS,UACTC,KAAM,OACNC,OAAQ,SACRC,WAAY,cAMHC,EAA4B,CACrCC,MAAO,QACPC,KAAM,QAMGC,EACH,OADGA,EAGmB,+BASnBC,EACF,QADEA,EAEC,WAQDC,EACF,QASEC,EAEiB,qBAFjBA,EAKY,gBASZC,EACW,QADXA,EAEU,OAFVA,EAIa,UAQbC,EACY,IADZA,EAEc,IAOdC,EAAiB,CAC1BC,SAAU,UACVC,aAAc,cACdC,8BAA+B,8BAC/BC,cAAe,gBAwBNC,EAAe,cAEfC,EAAgB,IAEhBC,EACE,qBADFA,EAEa,MAGbC,EACD,SADCA,EAEF,QAFEA,EAGA,UAHAA,EAIS,mBAKTC,EAAyB,CAClCC,eAAgB,EAChBC,qBAAsB,GACtBC,sBAAuB,IACvBC,kBAAmB,GACnBC,UAAW,mBACXC,mBAAoB,IACpBC,gBAAiB,IACjBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,iBAMNC,EAAuB,CAChCC,OAAQ,SACRC,IAAK,MACLC,IAAK,YAQIC,EAEsB,GAFtBA,EAI0B,KAJ1BA,GAMU,aANVA,GAQkB,oBAGlBC,GACY,gBADZA,GAEc,kBAgBdC,GACc,IADdA,GAGa,IAHbA,GAIH,IAQGC,GAEqB,IAFrBA,GAI4B,IAJ5BA,GAKwB,IAQxBC,GAEO,IAFPA,GAIgB,IAJhBA,GAMe,IANfA,GAQoB,IARpBA,GAUc,IAIdC,GAGJ,MC7WIC,GAAkB,mBAClBC,GAAoB,sBCApBC,GAAoB,CAC7B,CAACF,IAAiC,sCAClC,CAACC,IACG,wIAqBF,MAAOE,WAAkB59D,MAqB3BkP,WAAAA,CAAY2uD,EAAoBC,EAAuBC,GAInDC,MAHoBF,EAAY,GAAAhiC,OACvB+hC,EAAS,MAAA/hC,OAAKgiC,GACjBD,GAENx9D,OAAO49D,eAAe3/D,KAAMs/D,GAAU/4D,WAEtCvG,KAAKu/D,UAAYA,GAAa/F,EAAU0B,aACxCl7D,KAAKw/D,aAAeA,GAAgBhG,EAAU0B,aAC9Cl7D,KAAK4/D,SAAWH,GAAYjG,EAAU0B,aACtCl7D,KAAK2D,KAAO,YAGhBk8D,gBAAAA,CAAiBC,GACb9/D,KAAK8/D,cAAgBA,GAIb,SAAAC,GACZv/D,EACAw/D,GAEA,OAAO,IAAIV,GACP9+D,EACAw/D,EAAiB,GAAAxiC,OACR6hC,GAAkB7+D,GAAK,KAAAg9B,OAAIwiC,GAC9BX,GAAkB7+D,GAEhC,CC7EO,MAAMy/D,GAAsB,wBACtBC,GACT,2CACSC,GAA2B,8BCC3BC,GAAwC,CACjD,CAACH,IACG,wDACJ,CAACC,IACG,iLACJ,CAACC,IACG,yRAgCF,MAAOE,WAAsCf,GAC/C1uD,WAAAA,CAAY2uD,EAAmBC,GAC3BE,MAAMH,EAAWC,GACjBx/D,KAAK2D,KAAO,gCAEZ5B,OAAO49D,eAAe3/D,KAAMqgE,GAA8B95D,YAI5D,SAAU+5D,GACZf,GAEA,OAAO,IAAIc,GACPd,EACAa,GAAsCb,GAE9C,CCqBa,MAAAgB,GAA2D,CACpEC,WAAYA,IACDvoB,QAAQC,OACXooB,GACIJ,KAIZO,kBAAmBA,IACRxoB,QAAQC,OACXooB,GACIJ,KAIZQ,qBAAsBA,IACXzoB,QAAQC,OACXooB,GACIJ,KAIZS,mBAAoBA,IACT1oB,QAAQC,OACXooB,GACIJ,KAIZU,mBAAoBA,IACT3oB,QAAQC,OACXooB,GACIJ,KAIZW,eAAgBA,IACL,GAEXC,WAAYA,IACD,KAEXC,mBAAoBA,IACT,KAEXC,qBAAsBA,IACX,KAEXC,oBAAqBA,IACV,KAEXC,sBAAuBA,IACZjpB,QAAQC,OACXooB,GACIJ,KAIZiB,WAAYA,IACDlpB,QAAQC,OACXooB,GACIJ,KAIZkB,cAAeA,IACJnpB,QAAQC,OACXooB,GACIJ,KAIZmB,OAAQA,IACGppB,QAAQC,OACXooB,GACIJ,KAIZoB,eAAgBA,IACLrpB,QAAQC,OACXooB,GACIJ,KAIZqB,YAAaA,IACFtpB,QAAQC,OACXooB,GACIJ,KAIZsB,UAAWA,IACAvpB,QAAQC,OACXooB,GACIJ,KAIZuB,iBAAkBA,IACP,KAEXC,oBAAqBA,OAGrBC,uBAAwBA,IACb,GAEXC,0BAA2BA,KAChB,EAEXC,2BAA4BA,OAG5BC,4BAA6BA,OAG7BC,cAAeA,KACX,MAAMzB,GACFJ,KAGR8B,UAAWA,KACP,MAAM1B,GACFJ,KAGR+B,UAAWA,OAGXC,iBAAkBA,OAGlBC,iBAAkBA,IACP,KAEXC,yBAA0BA,OAG1BC,oBAAqBA,OAGrBC,iBAAkBA,KACd,MAAMhC,GACFJ,KAGRqC,aAAcA,IACHtqB,QAAQC,OACXooB,GACIJ,KAIZsC,WAAYA,IACDvqB,QAAQC,OACXooB,GACIJ,MCtOHuC,GAQY,gBARZA,GAYI,IAZJA,GAgBK,IAhBLA,GAoBU,OApBVA,GAwBiB,GAxBjBA,GA4BC,kBAGDC,GACG,uCADHA,GAEe,mCAFfA,GAGO,OAHPA,GAIiB,iBAJjBA,GAKK,UALLA,GAMU,yBANVA,GAOc,yBAPdA,GAQoB,+BAGpBC,GACS,YADTA,GAEU,oBAFVA,GAGC,WAHDA,GAIC,WAKDC,GACK,eADLA,GAEO,iBAFPA,GAGM,gBAQNC,GACJ,MADIA,GAEH,OAKGC,GACD,SADCA,GAEA,UAQAC,GACG,iBADHA,GAEC,UAFDA,GAGO,iBAHPA,GAIC,gBAJDA,GAKe,qBALfA,GAMO,iBAKPC,GACK,oBADLA,GAEG,kBAFHA,GAGA,eAQAC,GACI,cADJA,GAEI,kBAWJC,GACa,IADbA,GAEU,IAFVA,GAGE,IAHFA,GAKc,IALdA,GAMW,IANXA,GAOsB,GAPtBA,GAQD,IARCA,GASI,QAOLC,IAAZ,SAAYA,GACRA,EAAA,oBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACH,CALD,CAAYA,KAAAA,GAKX,KAMY,MAAAC,GAIA,UAJAA,GAQF,QAREA,GAYD,SAZCA,GAgBK,eAhBLA,GAoBE,YApBFA,GAwBO,iBAxBPA,GA4BH,OAKGC,GAAkD,CAC3DC,OAAQvH,GASCwH,GACF,oBAMEC,GAAU,UAEVC,GAAgB,GAAHjmC,OAAMgmC,GAAO,SAE1BE,GAMA,EANAA,GAWI,EAXJA,GAiBmB,EAjBnBA,GAuBK,EAvBLA,GA6Be,EA7BfA,GAkCH,EAKGC,GAA6C,CACtDD,GACAA,GACAA,IAQSE,GAA4B,qCC5O7BC,IAAZ,SAAYA,GACRA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,gBACH,CAND,CAAYA,KAAAA,GAMX,WAYYC,GAmBTlzD,WAAAA,CACImzD,EACAC,EACAC,GAjBI,KAAAC,MAAkBL,GAASM,KAmB/B,MAGMC,EACFL,GAAiBD,GAAOO,6BAC5BrkE,KAAKskE,cACDF,EAAiBG,gBANSC,SAO9BxkE,KAAKykE,kBAAoBL,EAAiBK,oBAAqB,EAC/DzkE,KAAKkkE,MACoC,kBAA9BE,EAAiBM,SAClBN,EAAiBM,SACjBb,GAASM,KACnBnkE,KAAK8/D,cACDsE,EAAiBtE,eAAiBtG,EAAU0B,aAChDl7D,KAAKgkE,YAAcA,GAAexK,EAAU0B,aAC5Cl7D,KAAKikE,eAAiBA,GAAkBzK,EAAU0B,aAG9C,iCAAOmJ,GACX,MAAO,CACHE,eAAgBA,OAGhBE,mBAAmB,EACnBC,SAAUb,GAASM,MAOpB7wC,KAAAA,CACH0wC,EACAC,EACAnE,GAEA,OAAO,IAAIgE,GACP,CACIS,eAAgBvkE,KAAKskE,cACrBG,kBAAmBzkE,KAAKykE,kBACxBC,SAAU1kE,KAAKkkE,MACfpE,cAAeA,GAAiB9/D,KAAK8/D,eAEzCkE,EACAC,GAOAU,UAAAA,CACJA,EACAllE,GAEA,GACIA,EAAQilE,SAAW1kE,KAAKkkE,QACtBlkE,KAAKykE,mBAAqBhlE,EAAQmlE,YAEpC,OAEJ,MAAMC,GAAY,IAAIppE,MAAOqpE,cAGvBC,EAAY,IAAHvnC,OAAOqnC,EAAS,SAAArnC,OAC3B/9B,EAAQqgE,eAAiB9/D,KAAK8/D,eAAiB,GACnD,KAEM34D,EAAM,GAAHq2B,OAAMunC,EAAS,OAAAvnC,OAAMx9B,KAAKgkE,YAAW,KAAAxmC,OAC1Cx9B,KAAKikE,eACT,OAAAzmC,OAAMqmC,GAASpkE,EAAQilE,UAAS,OAAAlnC,OAAMmnC,GAEtC3kE,KAAKglE,gBACDvlE,EAAQilE,SACRv9D,EACA1H,EAAQmlE,cAAe,GAO/BI,eAAAA,CACId,EACA/zD,EACAy0D,GAEI5kE,KAAKskE,eACLtkE,KAAKskE,cAAcJ,EAAO/zD,EAASy0D,GAO3C5lE,KAAAA,CAAMmR,EAAiB2vD,GACnB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAASniE,MACnBkjE,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlD+J,QAAAA,CAAS90D,EAAiB2vD,GACtB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAASniE,MACnBkjE,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDgK,OAAAA,CAAQ/0D,EAAiB2vD,GACrB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAASsB,QACnBP,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDkK,UAAAA,CAAWj1D,EAAiB2vD,GACxB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAASsB,QACnBP,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDhrD,IAAAA,CAAKC,EAAiB2vD,GAClB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAASM,KACnBS,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDmK,OAAAA,CAAQl1D,EAAiB2vD,GACrB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAASM,KACnBS,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDoK,OAAAA,CAAQn1D,EAAiB2vD,GACrB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAAS0B,QACnBX,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDsK,UAAAA,CAAWr1D,EAAiB2vD,GACxB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAAS0B,QACnBX,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDuK,KAAAA,CAAMt1D,EAAiB2vD,GACnB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAAS6B,MACnBd,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlDyK,QAAAA,CAASx1D,EAAiB2vD,GACtB9/D,KAAK2kE,WAAWx0D,EAAS,CACrBu0D,SAAUb,GAAS6B,MACnBd,aAAa,EACb9E,cAAeA,GAAiBtG,EAAU0B,eAOlD0K,mBAAAA,GACI,OAAO5lE,KAAKykE,oBAAqB,GCpPzC,MAAMoB,GAAmC,CACrCv6C,SAAUi1C,GACVxI,WAAYqL,GACZ0C,SAAU,GACVC,OAAQ,IAAIjC,GAAO,CAAC,IAGXkC,GACT3lE,EAAAA,cAAkCwlE,IACVG,GAAYh3C,SClCxC,SAASi3C,GAAQ3O,GAGf,OAAO2O,GAAU,mBAAqBhkE,QAAU,iBAAmBA,OAAOkB,SAAW,SAAUm0D,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBr1D,QAAUq1D,EAAE1mD,cAAgB3O,QAAUq1D,IAAMr1D,OAAOsE,UAAY,gBAAkB+wD,CACpH,EAAG2O,GAAQ3O,EACb,CCNA,SAAS4O,GAAcC,GACrB,IAAIxlE,ECFN,SAAqBwlE,EAAG9b,GACtB,GAAI,UAAY4b,GAAQE,KAAOA,EAAG,OAAOA,EACzC,IAAIt0D,EAAIs0D,EAAElkE,OAAOmkE,aACjB,QAAI,IAAWv0D,EAAG,CAChB,IAAIlR,EAAIkR,EAAE1E,KAAKg5D,EAAG9b,GAAK,WACvB,GAAI,UAAY4b,GAAQtlE,GAAI,OAAOA,EACnC,MAAM,IAAI0lE,UAAU,+CACtB,CACA,OAAQ,WAAahc,EAAI5tC,OAAS6pD,QAAQH,EAC5C,CDPUC,CAAYD,EAAG,UACvB,MAAO,UAAYF,GAAQtlE,GAAKA,EAAIA,EAAI,EAC1C,CEJA,SAAS4lE,GAAgB10D,EAAGw4C,EAAG8b,GAC7B,OAAQ9b,EAAI6b,GAAc7b,MAAOx4C,EAAI9P,OAAO4M,eAAekD,EAAGw4C,EAAG,CAC/DllD,MAAOghE,EACPp1D,YAAY,EACZ1B,cAAc,EACdm3D,UAAU,IACP30D,EAAEw4C,GAAK8b,EAAGt0D,CACjB,CCPA,SAAS40D,GAAQ50D,EAAGw4C,GAClB,IAAI8b,EAAIpkE,OAAOmgB,KAAKrQ,GACpB,GAAI9P,OAAO2kE,sBAAuB,CAChC,IAAIpP,EAAIv1D,OAAO2kE,sBAAsB70D,GACrCw4C,IAAMiN,EAAIA,EAAEqP,QAAO,SAAUtc,GAC3B,OAAOtoD,OAAOqN,yBAAyByC,EAAGw4C,GAAGt5C,UAC/C,KAAKo1D,EAAEtsE,KAAKkG,MAAMomE,EAAG7O,EACvB,CACA,OAAO6O,CACT,CACA,SAASS,GAAe/0D,GACtB,IAAK,IAAIw4C,EAAI,EAAGA,EAAIpqD,UAAUhG,OAAQowD,IAAK,CACzC,IAAI8b,EAAI,MAAQlmE,UAAUoqD,GAAKpqD,UAAUoqD,GAAK,CAAC,EAC/CA,EAAI,EAAIoc,GAAQ1kE,OAAOokE,IAAI,GAAIv3C,SAAQ,SAAUy7B,GAC/C,GAAex4C,EAAGw4C,EAAG8b,EAAE9b,GACzB,IAAKtoD,OAAO8kE,0BAA4B9kE,OAAO+kE,iBAAiBj1D,EAAG9P,OAAO8kE,0BAA0BV,IAAMM,GAAQ1kE,OAAOokE,IAAIv3C,SAAQ,SAAUy7B,GAC7ItoD,OAAO4M,eAAekD,EAAGw4C,EAAGtoD,OAAOqN,yBAAyB+2D,EAAG9b,GACjE,GACF,CACA,OAAOx4C,CACT,CChBa,MAAAk1D,GACS,uBADTA,GAEO,qBAFPA,GAGM,oBAHNA,GAIQ,sBAJRA,GAKe,4BALfA,GAMI,kBANJA,GAOM,oBAPNA,GAQM,oBARNA,GASY,yBATZA,GAUc,2BAVdA,GAWc,2BAXdA,GAYoB,oCAZpBA,GAaS,sBAbTA,GAcW,wBAdXA,GAeW,wBAfXA,GAgBoB,+BAhBpBA,GAiBsB,iCAjBtBA,GAkBsB,iCAlBtBA,GAmBc,2BAnBdA,GAoBY,yBApBZA,GAqBK,mBArBLA,GAsBK,mBAtBLA,GAuBO,qBAvBPA,GAwBO,qBAxBPA,GAyBG,iBAzBHA,GA0Ba,gCCyBbC,GAMT,oCAAOC,CACH92D,EACA+2D,GAEA,OAAQ/2D,EAAQ+2C,WACZ,KAAK6f,GACD,OAAO3D,GACX,KAAK2D,GACD,OAAO3D,GACX,KAAK2D,GACD,GACI52D,EAAQg3D,kBAAoBhE,GAAgBiE,UAC5Cj3D,EAAQg3D,kBAAoBhE,GAAgBkE,MAE5C,OAAOjE,GAEX,MACJ,KAAK2D,GACD,OAAO3D,GACX,KAAK2D,GACD,OAAO3D,GACX,KAAK2D,GACL,KAAKA,GACD,GACIG,GACAA,IAAkB9D,GAGlB,MAEJ,OAAOA,GACX,KAAK2D,GACD,GACIG,GACAA,IAAkB9D,GAGlB,MAEJ,OAAOA,GACX,KAAK2D,GACD,GACIG,GACAA,IAAkB9D,GAGlB,MAEJ,OAAOA,GACX,KAAK2D,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACD,GACI52D,EAAQg3D,kBAAoBhE,GAAgBiE,UAC5Cj3D,EAAQg3D,kBAAoBhE,GAAgBkE,MAC9C,CACE,GACIH,GACAA,IAAkB9D,IAClB8D,IAAkB9D,GAGlB,MAEJ,OAAOA,EACV,EAKT,OAAO,MCjGC,SAAAkE,GACZC,EACAC,GAEA,GAAID,EAAOttE,SAAWutE,EAAOvtE,OACzB,OAAO,EAGX,MAAMwtE,EAAkB,IAAID,GAE5B,OAAOD,EAAOG,OAAOC,IACjB,MAAMC,EAAWH,EAAgBnY,QACjC,SAAKqY,IAAaC,KAKdD,EAASE,gBAAkBD,EAASC,eACpCF,EAASG,iBAAmBF,EAASE,gBACrCH,EAASI,WAAaH,EAASG,YAG3C,CC1DO,MACMtX,GAAU,SC+BjBuX,GACkB,qBADlBA,GAEK,QAmBL9vC,GAAUA,CACZ+vC,EACApjE,KAEA,MAAM,KAAErB,EAAI,QAAEqvB,GAAYhuB,EAC1B,IAAIqjE,EAAgBD,EAAclQ,WAElC,OAAQv0D,GACJ,KAAKwkE,GACGC,EAAclQ,aAAeqL,KAC7B8E,EAAgB9E,GAChBvwC,EAAQkzC,OAAO71D,KACX,gFAGR,MACJ,KAAK83D,GACD,MAAM73D,EAAU0iB,EAAQ1iB,QAClB2f,EAASk3C,GAAkBC,8BAC7B92D,EACA83D,EAAclQ,YAEdjoC,IACA+C,EAAQkzC,OAAO71D,KAAK,kBAADstB,OACGrtB,EAAQ+2C,UAAS,wCAAA1pB,OAAuCyqC,EAAclQ,WAAU,QAAAv6B,OAAO1N,IAE7Go4C,EAAgBp4C,GAEpB,MACJ,QACI,MAAM,IAAIpuB,MAAM,wBAAD87B,OAAyBh6B,IAGhD,GAAI0kE,IAAkB9E,GAElB,OAAO6E,EAGX,MAAME,EAAkBt1C,EAAQvH,SAASu1C,iBACzC,OACIqH,IAAkBD,EAAclQ,YAC/BuP,GAAsBa,EAAiBF,EAAcnC,UAQ/CoC,IAAkBD,EAAclQ,WAEvCqQ,GAAAA,GAAA,GACOH,GAAa,IAChBlQ,WAAYmQ,IAGfZ,GAAsBa,EAAiBF,EAAcnC,UAS/CmC,EANPG,GAAAA,GAAA,GACOH,GAAa,IAChBnC,SAAUqC,IAjBdC,GAAAA,GAAA,GACOH,GAAa,IAChBlQ,WAAYmQ,EACZpC,SAAUqC,cAyBNE,GAAYC,GAGR,IAHS,SACzBh9C,EAAQ,SACRnY,GACgBm1D,GAChBtoC,EAAAA,EAAAA,YAAU,KACN1U,EAAS82C,yBAAyBmB,GAAkB9S,MACrD,CAACnlC,IAEJ,MAAMy6C,GAAS3lC,EAAAA,EAAAA,UAAQ,IACZ9U,EAAS02C,YAAY1uC,MDtIhB,oBCsI2Bm9B,KACxC,CAACnlC,KAEG0M,EAAOuwC,IAAeloC,EAAAA,EAAAA,YAAWnI,QAASi/B,GAAW,KAEjD,CACHY,WAAYqL,GACZ0C,SAAU,QAIlB9lC,EAAAA,EAAAA,YAAU,KACN,MAAMwoC,EAAal9C,EAASm2C,kBACvBtxD,IACGo4D,EAAY,CACR11C,QAAS,CACLvH,WACAy6C,SACA51D,WAEJ3M,KAAMwkE,QAoClB,OAhCAjC,EAAOT,QAAQ,qDAAD9nC,OAC2CgrC,IAGzDl9C,EACKk1C,aACAvwC,MAAK,KACF3E,EACK41C,wBACAjyD,OAAM,SAINw5D,SAAQ,KAKLF,EAAY,CACR11C,QAAS,CACLvH,WACAy6C,UAEJviE,KAAMwkE,WAIrB/4D,OAAM,SAKJ,KAECu5D,IACAzC,EAAOT,QAAQ,0CAAD9nC,OACgCgrC,IAE9Cl9C,EAASo2C,oBAAoB8G,OAGtC,CAACl9C,EAAUy6C,IAEd,MAAM2C,EAA6B,CAC/Bp9C,WACAysC,WAAY//B,EAAM+/B,WAClB+N,SAAU9tC,EAAM8tC,SAChBC,UAGJ,OACI4C,EAAAA,cAAC3C,GAAY/2C,SAAQ,CAAC9pB,MAAOujE,GACxBv1D,EAGb,CC3Ma,MAAAy1D,GAAUA,KAAoB7oC,EAAAA,EAAAA,YAAWimC,ICOzC,MCVA6C,GAIJ,MAJIA,GASH,OATGA,GAaJ,MCOIC,GAEH,OCzBGC,GAA0B,6BAC1BC,GAAuB,0BACvBC,GAAoB,sBACpBC,GAAmB,sBACnBC,GAA0B,6BAC1BC,GAAe,gBACfC,GAAoB,sBACpBC,GAAsB,wBACtBC,GAAe,gBACfC,GAAgB,iBAChBC,GAAgB,kBAChBC,GAAgB,iBAChBC,GAAmB,sBACnBC,GAAmB,qBACnBC,GAAyB,2BACzBC,GAA2B,6BAC3BC,GAA8B,gCAC9BC,GAAsB,yBACtBC,GAAyB,4BACzBC,GAAuB,yBACvBC,GAAqB,uBACrBC,GAA6B,gCAC7BC,GAAoB,sBACpBC,GAAyB,4BACzBC,GAA2B,+BAC3BC,GAAqB,uBACrBC,GAA0B,4BAC1BC,GAAiB,mBACjBC,GAAiB,mBACjBC,GAA2B,6BAC3BC,GAAmB,oBACnBC,GAA0B,4BAC1BC,GAAuB,yBACvBC,GAAqB,uBACrBC,GACT,0CACSC,GACT,kDACSC,GAAuB,0BACvBC,GACT,qCACSC,GAAe,iBACfC,GAAwB,0BACxBC,GAAe,gBACfC,GAAuB,0BACvBC,GAAuB,yBACvBC,GAA8B,kCCtC9BC,GAA0B,CACnC,CAAC5C,IACG,wDACJ,CAACC,IAA4C,4BAC7C,CAACC,IAAyC,yBAC1C,CAACC,IAAwC,6BACzC,CAACC,IACG,+BACJ,CAACC,IAAoC,yBACrC,CAACC,IACG,8IACJ,CAACC,IACG,gDACJ,CAACC,IAAoC,oCACrC,CAACC,IAAqC,uBACtC,CAACC,IAAqC,kBACtC,CAACC,IAAqC,uBACtC,CAACC,IACG,+NAGJ,CAACC,IACG,4FACJ,CAACC,IACG,oJAEJ,CAACC,IACG,4HACJ,CAACC,IACG,mIACJ,CAACC,IACG,4EACJ,CAACC,IACG,kDACJ,CAACC,IAA4C,yBAC7C,CAACC,IACG,2CACJ,CAACC,IACG,kHACJ,CAACC,IAAyC,0BAC1C,CAACC,IACG,mDACJ,CAACC,IACG,0FACJ,CAACC,IACG,6CACJ,CAACC,IACG,4DACJ,CAACC,IACG,2CACJ,CAACC,IAAsC,6BACvC,CAACC,IACG,8BACJ,CAACC,IACG,2FACJ,CAACC,IACG,iKACJ,CAACC,IACG,qOACJ,CAACC,IACG,uDACJ,CAACC,IACG,kEACJ,CAACC,IACG,oEACJ,CAACC,IACG,8DACJ,CAACC,IACG,iDACJ,CAACC,IACG,wIACJ,CAACC,IACG,2DACJ,CAACC,IAAoC,2BACrC,CAACC,IACG,oHACJ,CAACC,IACG,uCACJ,CAACC,IACG,0CAqOF,MAAOE,WAAwBtM,GACjC1uD,WAAAA,CAAY2uD,EAAmBS,GAC3BN,MACIH,EACAS,EAAiB,GAAAxiC,OACRmuC,GAAwBpM,GAAU,MAAA/hC,OAAKwiC,GAC1C2L,GAAwBpM,IAElCv/D,KAAK2D,KAAO,kBAEZ5B,OAAO49D,eAAe3/D,KAAM4rE,GAAgBrlE,YAIpC,SAAAslE,GACZtM,EACAS,GAEA,OAAO,IAAI4L,GAAgBrM,EAAWS,EAC1C,CCtPa,MAAA8L,GAAyC,CAClDC,cAAeA,KACX,MAAMF,GAAsBJ,KAEhCO,aAAcA,KACV,MAAMH,GAAsBJ,KAEhCQ,aAAcA,KACV,MAAMJ,GAAsBJ,KAEhCS,gBAAiBA,KACb,MAAML,GAAsBJ,KAEhCU,UAAWA,KACP,MAAMN,GAAsBJ,KAEhC,4BAAMW,GACF,MAAMP,GAAsBJ,KAEhC,2BAAMY,GACF,MAAMR,GAAsBJ,KAEhC,mBAAMa,GACF,MAAMT,GAAsBJ,KAEhC,aAAMc,GACF,MAAMV,GAAsBJ,KAEhC,gBAAMe,GACF,MAAMX,GAAsBJ,MC1HvB9nE,GAAO,qBACP8sD,GAAU,SCcP,SAAAgc,GACZC,EACAV,GAEA,MAAMW,EAiBJ,SAAwBC,GAC1B,IAAKA,EACD,MAAMf,GAAsB3C,IAEhC,MACM1xB,EADkB,uCACQq1B,KAAKD,GACrC,IAAKp1B,GAAWA,EAAQv9C,OAAS,EAC7B,MAAM4xE,GAAsB5C,IAUhC,OAAOzxB,EAAQ,EACnB,CAnCuBs1B,CAAcJ,GAGjC,IAEI,MAAMK,EAAgBf,EAAaW,GACnC,OAAOK,KAAKC,MAAMF,EACrB,CAAC,MAAOrlE,GACL,MAAMmkE,GAAsB5C,GAC/B,CACL,CA8BgB,SAAAiE,GAAYC,EAAkBC,GAO1C,GAAe,IAAXA,GAAgB3xE,KAAKH,MADF,IAC2B6xE,EAAWC,EACzD,MAAMvB,GAAsBjC,GAEpC,UC1DgByD,KAEZ,OAAOpuE,KAAKquE,OAAM,IAAI7xE,MAAO8xE,UAAY,IAC7C,CAMM,SAAUC,GAAkBhuD,GAE9B,OAAOA,EAAK+tD,UAAY,GAC5B,CAMM,SAAUE,GAAkBC,GAC9B,OAAIA,EACO,IAAIjyE,KAAuB,IAAlB6qE,OAAOoH,IAEpB,IAAIjyE,IACf,CAMgB,SAAAkyE,GAAeC,EAAmBrrD,GAE9C,MAAMsrD,EAAgBvH,OAAOsH,IAAc,EAI3C,OAH6BP,KAAe9qD,EAGdsrD,CAClC,CCVM,SAAUC,GACZC,GAUA,MARsB,CAClBC,GAAkBD,GAClBE,GAAqBF,GACrBG,GAAeH,GACfI,GAAmBJ,GACnBK,GAAeL,IAGErsC,KAAK07B,GAAgC7vD,aAC9D,CASM,SAAU8gE,GACZxG,EACAyG,EACAC,EACAC,EACAC,GAWA,MATqC,CACjCC,eAAgBrR,EAAeC,SAC/BuK,cAAeA,EACfyG,YAAaA,EACbE,SAAUA,EACVG,OAAQJ,EACRK,MAAOH,EAIf,CAagB,SAAAI,GACZhH,EACAyG,EACAQ,EACAN,EACAC,EACAnL,EACAsK,EACAmB,EACA/C,EACAgD,EACAC,EACAC,EACAC,EACAC,EACAC,GAA4B,IAAAC,EAAAC,EAE5B,MAAMC,EAA8B,CAChC3H,cAAeA,EACf6G,eAAgBrR,EAAeE,aAC/BoR,OAAQG,EACRW,SAAUpC,KAAuB5iE,WACjCmjE,UAAWA,EAAUnjE,WACrBilE,kBAAmBX,EAAatkE,WAChC6jE,YAAaA,EACbE,SAAUA,EACVI,MAAOH,EACP35D,OAAQwuD,EACR2L,UAAWA,GAAaxQ,EAAqBC,QAoBjD,GAjBIwQ,IACAM,EAASN,kBAAoBA,GAG7BF,IACAQ,EAASR,UAAYA,EAAUvkE,YAG/B2kE,IACAI,EAASJ,gBAAkBA,EAC3BI,EAASH,oBAAsBA,IAQb,QAAlBC,EAAAE,EAASP,iBAAS,IAAAK,OAAA,EAAlBA,EAAoB/hE,iBACpBkxD,EAAqBC,OAAOnxD,cAG5B,OADAiiE,EAASd,eAAiBrR,EAAeG,8BACjCgS,EAASP,WACb,KAAKxQ,EAAqBE,IAEtB,MAAMgR,EAAkClD,GACpCqC,EACA9C,GAEJ,GAAgB,OAAX2D,QAAW,IAAXA,GAAgB,QAALJ,EAAXI,EAAaC,WAAG,IAAAL,IAAhBA,EAAkBM,IACnB,MAAMhE,GACFZ,IAGRuE,EAASL,MAAQQ,EAAYC,IAAIC,IACjC,MACJ,KAAKpR,EAAqBG,IACtB4Q,EAASL,MAAQA,EAI7B,OAAOK,CACX,CASgB,SAAAM,GACZjI,EACAyG,EACAyB,EACAvB,EACAwB,EACAd,EACAtB,GAEA,MAAMqC,EAA+B,CACjCvB,eAAgBrR,EAAeI,cAC/BoK,cAAeA,EACfyG,YAAaA,EACbE,SAAUA,EACVG,OAAQoB,GAeZ,OAZIb,IACAe,EAASf,kBAAoBA,GAG7Bc,IACAC,EAASD,SAAWA,GAGpBpC,IACAqC,EAASrC,UAAYA,EAAUnjE,YAG5BwlE,CACX,CAEM,SAAUC,GAAmBC,GAC/B,OACIA,EAAO7pE,eAAe,kBACtB6pE,EAAO7pE,eAAe,gBACtB6pE,EAAO7pE,eAAe,mBACtB6pE,EAAO7pE,eAAe,aACtB6pE,EAAO7pE,eAAe,SAE9B,CAuDA,SAAS0nE,GAAkBD,GAKvB,MAJiC,CAC7BA,EAAiBlG,cACjBkG,EAAiBO,aAEJ5sC,KAAK07B,GAAgC7vD,aAC1D,CAKA,SAAS0gE,GAAqBF,GAC1B,MAAMqC,EACFrC,EAAiBW,iBAAmBrR,EAAeI,eAC7CsQ,EAAiBiC,UACjBjC,EAAiBS,SAO3B,MANoC,CAChCT,EAAiBW,eACjB0B,EACArC,EAAiBa,OAAS,IAGVltC,KAAK07B,GAAgC7vD,aAC7D,CAKA,SAAS2gE,GAAeH,GACpB,OAAQA,EAAiBj5D,QAAU,IAAIvH,aAC3C,CAKA,SAAS4gE,GAAmBJ,GACxB,OAAQA,EAAiBsB,qBAAuB,IAAI9hE,aACxD,CAKA,SAAS6gE,GAAeL,GAKpB,OAAOA,EAAiBkB,WACpBlB,EAAiBkB,UAAU1hE,gBACvBkxD,EAAqBC,OAAOnxD,cAC9BwgE,EAAiBkB,UAAU1hE,cAC3B,EACV,UAyGgB8iE,KACZ,OACIhD,KACAzP,CAER,UAEgB0S,GACZC,EACAC,EACAC,GAEAF,EAAkBG,uBACdF,EAAcE,uBAClBH,EAAkBI,eAAiBH,EAAcG,eACjDJ,EAAkBK,qBAAuBJ,EAAcI,qBACvDL,EAAkBM,OAASL,EAAcK,OACzCN,EAAkBO,qBAAuBL,EACzCF,EAAkBQ,SAAWP,EAAcO,QAC/C,UAEgBC,GACZT,EACAC,EACAC,GAEAF,EAAkB/7D,QAAUg8D,EAAch8D,QAC1C+7D,EAAkBU,gBAAkBT,EAAcS,gBAClDV,EAAkBW,kBAAoBV,EAAcU,kBACpDX,EAAkBY,mBAAqBV,CAC3C,CAKM,SAAUW,GACZC,GAEA,OAAOA,EAASC,WAAajE,IACjC,CCzcO,MAAMkE,GAAmB,qBACnBC,GAA4B,+BAC5BC,GAAuB,yBACvBC,GAAgB,kBAChBC,GAAgB,kBAChBC,GAAwB,2BACxBC,GAAqB,uBACrBC,GAAgB,iBAChBC,GAAoB,sBACpBC,GAAqB,uBACrBC,GAA6B,gCAC7BC,GAAoB,sBACpBC,GAAgC,mCAChCC,GAA2B,6BAC3BC,GAAqB,sBACrBC,GAAgB,kBAChBC,GAAgB,kBAChBC,GACT,sCACSC,GAA8B,gCAC9BC,GAAuB,yBACvBC,GAA4B,+BAC5BC,GAAoB,qBClBpBC,GAAmC,CAC5C,CAACtB,IACG,mEACJ,CAACC,IACG,mDACJ,CAACC,IACG,4NACJ,CAACC,IACG,qDACJ,CAACC,IAA8C,yBAC/C,CAACC,IACG,iHACJ,CAACC,IACG,uLACJ,CAACC,IACG,4DACJ,CAACC,IACG,kDACJ,CAACC,IACG,4CACJ,CAACC,IACG,gFACJ,CAACC,IACG,sGACJ,CAACC,IACG,sIACJ,CAACC,IACG,0IACJ,CAACC,IACG,6HACJ,CAACC,IACG,8HACJ,CAACC,IACG,wJACJ,CAACC,IACG,iLACJ,CAACC,IACG,yCACJ,CAACC,IACG,8GACJ,CAACC,IACG,kFACJ,CAACC,IACG,oPAiJF,MAAOE,WAAiCxT,GAC1C1uD,WAAAA,CAAY2uD,GACRG,MAAMH,EAAWsT,GAAiCtT,IAClDv/D,KAAK2D,KAAO,2BACZ5B,OAAO49D,eAAe3/D,KAAM8yE,GAAyBvsE,YAIvD,SAAUwsE,GACZxT,GAEA,OAAO,IAAIuT,GAAyBvT,EACxC,OCzMayT,GAKT,iBAAOC,CAAWC,GACd,GAAIA,EACA,IACI,MAAMrb,EAAMmV,KAAKC,MAAMiG,GACvB,OAAmC,IAA5BnxE,OAAOmgB,KAAK21C,GAAK59D,MAC3B,CAAC,MAAO4X,GAAI,CAEjB,OAAO,EAGX,iBAAOshE,CAAWC,EAAarzD,GAC3B,OAA+B,IAAxBqzD,EAAInlE,QAAQ8R,GAGvB,eAAO6oC,CAASwqB,EAAarzD,GACzB,OACIqzD,EAAIn5E,QAAU8lB,EAAO9lB,QACrBm5E,EAAIC,YAAYtzD,KAAYqzD,EAAIn5E,OAAS8lB,EAAO9lB,OASxD,0BAAOq5E,CAAuBC,GAC1B,MAAM1b,EAAU,CAAC,EACX2b,EAASD,EAAM7jE,MAAM,KACrB+jE,EAAUrb,GAAcsb,mBAAmBtb,EAAEtoD,QAAQ,MAAO,MASlE,OARA0jE,EAAO5kD,SAAS+kD,IACZ,GAAIA,EAAK3lE,OAAQ,CACb,MAAOwO,EAAKrX,GAASwuE,EAAKjkE,MAAM,SAAU,GACtC8M,GAAOrX,IACP0yD,EAAI4b,EAAOj3D,IAAQi3D,EAAOtuE,GAEjC,KAEE0yD,EAQX,uBAAO+b,CAAiBC,GACpB,OAAOA,EAAIh8C,KAAKi8C,GAAUA,EAAM9lE,SAOpC,kCAAO+lE,CAA4BF,GAC/B,OAAOA,EAAIlN,QAAQmN,KACNA,IAQjB,sBAAOE,CAAmBZ,GACtB,IACI,OAAOpG,KAAKC,MAAMmG,EACrB,CAAC,MAAOvhE,GACL,OAAO,IACV,EAQL,mBAAOoiE,CAAaC,EAAiBve,GAajC,OAPsB,IAAI7oD,OACtBonE,EACKpkE,QAAQ,MAAO,QACfA,QAAQ,MAAO,SACfA,QAAQ,MAAO,QAGX1C,KAAKuoD,UClFbwe,GAITvjE,WAAAA,CAAYwjE,GAER,MAAMC,EAAWD,EACXpB,GAAYY,iBAAiB,IAAIQ,IACjC,GACAE,EAAgBD,EAChBrB,GAAYe,4BAA4BM,GACxC,GAGN,IAAKC,IAAkBA,EAAcr6E,OACjC,MAAM84E,GACFnB,IAIR5xE,KAAKsjE,OAAS,IAAIl3D,IAClBkoE,EAAc1lD,SAASymC,GAAUr1D,KAAKsjE,OAAO52D,IAAI2oD,KASrD,iBAAOkf,CAAWC,GACd,MACMJ,GADcI,GAAoBhb,EAAU0B,cACHxrD,MAAM,KACrD,OAAO,IAAIykE,GAASC,GAQxB,yBAAOK,CAAmBD,GACtB,MAAME,EAAW,IAAIP,GAASK,GAO9B,OANKE,EAASC,yBAGVD,EAASE,YAAYpb,EAAUkB,sBAF/Bga,EAASG,mBAKNH,EAOXI,aAAAA,CAAczf,GACV,MAAM0f,EAAkB/0E,KAAKg1E,uBAAuBtlE,MAAM,KACpDulE,EAAqB,IAAId,GAASY,GAExC,QAAO1f,GACD4f,EAAmB3R,OAAOrvD,IAAIohD,EAAM9nD,eAQ9C2nE,gBAAAA,CAAiBR,GACb,SAAKA,GAAYA,EAASpR,OAAO1rC,MAAQ,KAKrC53B,KAAKsjE,OAAO1rC,MAAQ88C,EAASpR,OAAO1rC,MACpC88C,EAASS,UAAUzN,OAAOrS,GAAUr1D,KAAK80E,cAAczf,MAO/Dsf,sBAAAA,GACI,IAAIS,EAAoB,EAOxB,OANApZ,EAAYptC,SAASymD,IACbr1E,KAAK80E,cAAcO,KACnBD,GAAqB,MAItBp1E,KAAKsjE,OAAO1rC,OAASw9C,EAOhCE,WAAAA,CAAYC,GACJA,GACAv1E,KAAKsjE,OAAO52D,IAAI6oE,EAASvnE,QAQjCwnE,YAAAA,CAAaC,GACT,IACIA,EAAU7mD,SAAS2mD,GAAav1E,KAAKs1E,YAAYC,IACpD,CAAC,MAAO1jE,GACL,MAAMg6D,GACF3B,GAEP,EAOL0K,WAAAA,CAAYvf,GACR,IAAKA,EACD,MAAMwW,GACF5B,IAGRjqE,KAAKsjE,OAAO5/B,OAAO2xB,EAAMrnD,QAO7B6mE,gBAAAA,GACI7Y,EAAYptC,SAASymD,IACjBr1E,KAAKsjE,OAAO5/B,OAAO2xC,MAQ3BK,cAAAA,CAAeC,GACX,IAAKA,EACD,MAAM9J,GACF1B,IAGR,MAAMyL,EAAc,IAAIxpE,IAKxB,OAJAupE,EAAYrS,OAAO10C,SAASymC,GACxBugB,EAAYlpE,IAAI2oD,EAAM9nD,iBAE1BvN,KAAKsjE,OAAO10C,SAASymC,GAAUugB,EAAYlpE,IAAI2oD,EAAM9nD,iBAC9CqoE,EAOXC,qBAAAA,CAAsBF,GAClB,IAAKA,EACD,MAAM9J,GACF1B,IAKHwL,EAAYhB,0BACbgB,EAAYd,mBAEhB,MAAMe,EAAc51E,KAAK01E,eAAeC,GAClCG,EAAkBH,EAAYI,gBAC9BC,EAAiBh2E,KAAK+1E,gBAE5B,OADwBH,EAAYh+C,KACXo+C,EAAiBF,EAM9CC,aAAAA,GACI,OAAO/1E,KAAKsjE,OAAO1rC,KAMvBu9C,OAAAA,GACI,MAAMr9C,EAAuB,GAE7B,OADA93B,KAAKsjE,OAAO10C,SAASqnD,GAAQn+C,EAAMj+B,KAAKo8E,KACjCn+C,EAMXo+C,WAAAA,GACI,GAAIl2E,KAAKsjE,OAAQ,CAEb,OADiBtjE,KAAKm1E,UACNzzC,KAAK,IACxB,CACD,OAAO83B,EAAU0B,aAMrB8Z,oBAAAA,GACI,OAAOh1E,KAAKk2E,cAAc3oE,eCjNlB,SAAA4oE,GACZC,EACApK,GAEA,IAAKoK,EACD,MAAMvK,GAAsB7C,IAGhC,IACI,MAAMqN,EAA4BrK,EAAaoK,GAC/C,OAAOpJ,KAAKC,MAAMoJ,EACrB,CAAC,MAAOxkE,GACL,MAAMg6D,GACF9C,GAEP,CACL,CAMM,SAAUuN,GACZzO,GAEA,IAAKA,EACD,MAAMgE,GACF9C,IAGR,MAAMwN,EAA4B1O,EAAcn4D,MAC5C0tD,EACA,GAEJ,MAAO,CACHoZ,IAAKD,EAAgB,GACrBE,KACIF,EAAgBt8E,OAAS,EACnBu/D,EAAU0B,aACVqb,EAAgB,GAElC,CChEA,SAASG,GAAyB7kE,EAAGs0D,GACnC,GAAI,MAAQt0D,EAAG,MAAO,CAAC,EACvB,IAAIylD,EACFjN,EACA1pD,ECLJ,SAAuC0pD,EAAGx4C,GACxC,GAAI,MAAQw4C,EAAG,MAAO,CAAC,EACvB,IAAI8b,EAAI,CAAC,EACT,IAAK,IAAIhS,KAAK9J,EAAG,GAAI,CAAC,EAAE/jD,eAAe6G,KAAKk9C,EAAG8J,GAAI,CACjD,IAAK,IAAMtiD,EAAE5D,QAAQkmD,GAAI,SACzBgS,EAAEhS,GAAK9J,EAAE8J,EACX,CACA,OAAOgS,CACT,CDHQ,CAA6Bt0D,EAAGs0D,GACtC,GAAIpkE,OAAO2kE,sBAAuB,CAChC,IAAIvS,EAAIpyD,OAAO2kE,sBAAsB70D,GACrC,IAAKw4C,EAAI,EAAGA,EAAI8J,EAAEl6D,OAAQowD,IAAKiN,EAAInD,EAAE9J,IAAK,IAAM8b,EAAEl4D,QAAQqpD,IAAM,CAAC,EAAEqf,qBAAqBxpE,KAAK0E,EAAGylD,KAAO32D,EAAE22D,GAAKzlD,EAAEylD,GAClH,CACA,OAAO32D,CACT,CEiDA,MAAAi2E,GAAA,iBAAAC,GAAA,iBAMgB,SAAAC,GACZrI,EACA5G,GAEA,QACM4G,KACA5G,GACF4G,IAAa5G,EAAcn4D,MAAM,KAAK,EAE9C,CAUM,SAAUqnE,GACZlP,EACAC,EACA2G,EACAuI,GAEA,GAAIA,EAAe,CACf,MAAM,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,KAAExzE,EAAI,IAAEyzE,EAAG,IAAEC,GAAQL,EAQpCvI,EAAW0I,GAAOC,GAAOC,GAAO,GAEtC,MAAO,CACH5I,SAAUA,EACV3G,eAAgBmP,GAAOC,GAAO,GAC9BvzE,KAAMA,EACN2zE,aAAcR,GAA0BrI,EAAU5G,GAEzD,CACG,MAAO,CACH4G,WACA3G,iBACAwP,aAAcR,GAA0BrI,EAAU5G,GAG9D,CAQM,SAAU0P,GACZC,EACAC,EACAT,EACAU,GAEA,IAAIC,EAAqBH,EAEzB,GAAIC,EAAe,CAEf,MAAM,aAAEH,GAA2CG,EAA1BG,EAAqBlB,GAAKe,EAAab,IAChEe,EAAkBvP,GAAAA,GAAA,GAAQoP,GAAoBI,EACjD,CAGD,GAAIZ,EAAe,CAGf,MAAAa,EACId,GACIS,EAAgB3P,cAChB2P,EAAgB1P,eAChB0P,EAAgB/I,SAChBuI,IALF,aAAEM,GAA6CO,EAA5BC,EAA0BpB,GAAAmB,EAAAhB,IAenD,OAPAc,EAAkBvP,GAAAA,GAAAA,GAAA,GACXuP,GACAG,GAA0B,IAC7Bd,cAAeA,EACfzI,QAASmJ,IAGNC,CACV,CAED,OAAOA,CACX,CCxJa,MAAAI,GACA,EADAA,GAEH,EAFGA,GAGH,EAHGA,GAIH,EC4EJ,SAAUC,GACZhB,GAEA,GAAIA,EAAe,CAGf,OADIA,EAAcG,KAAOH,EAAcI,KAAOJ,EAAcK,KACzC,IACtB,CACD,OAAO,IACX,OChDaY,GAmBTjK,iBAAAA,GAEI,MADiC,CAAChuE,KAAK6nE,cAAe7nE,KAAKsuE,aAC1C5sC,KAAK07B,GAAgC7vD,cAM1D2qE,kBAAAA,GACI,OAAOD,GAAcE,wBAAwB,CACzCtQ,cAAe7nE,KAAK6nE,cACpByG,YAAatuE,KAAKsuE,YAClBG,SAAUzuE,KAAK4uE,MACf7G,SAAU/nE,KAAK+nE,SACfD,eAAgB9nE,KAAK8nE,iBAO7BsQ,cAAAA,GACI,MAAO,CACHvQ,cAAe7nE,KAAK6nE,cACpByG,YAAatuE,KAAKsuE,YAClBG,SAAUzuE,KAAK4uE,MACf7G,SAAU/nE,KAAK+nE,SACfD,eAAgB9nE,KAAK8nE,eACrBnkE,KAAM3D,KAAK2D,KACX00E,gBAAiBr4E,KAAKq4E,gBACtBC,cAAet4E,KAAKs4E,cAEpBC,eAAgB,IAAIvsE,KACfhM,KAAKu4E,gBAAkB,IAAI1gD,KAAK4/C,GACtB,CAACA,EAAchJ,SAAUgJ,OAShDe,cAAAA,GACI,OAAQx4E,KAAKu4E,eAOjB,8BAAOJ,CAAwBM,GAC3B,MAAMC,EAAeD,EAAiB5Q,cAAcn4D,MAAM,KAAK,GAO/D,MANmB,CACf+oE,EAAiB5Q,cACjB4Q,EAAiBnK,aAAe,GAChCoK,GAAgBD,EAAiBhK,UAAY,IAG/B/sC,KAAK07B,GAAgC7vD,cAO3D,oBAAOorE,CACHC,EAUAC,EACA7M,GAAwC,IAAA8M,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAExC,MAAMC,EAAyB,IAAIrB,GAUnC,IAAIsB,EARAV,EAAUP,gBAAkBP,GAC5BuB,EAAQhB,cAAgBnb,EACjB0b,EAAUW,eAAiB3Q,GAClCyQ,EAAQhB,cAAgBnb,EAExBmc,EAAQhB,cAAgBnb,EAKxByb,EAAeW,YAAcvN,IAC7BuN,EAAapD,GACTyC,EAAeW,WACfvN,IAIRsN,EAAQC,WAAaX,EAAeW,WACpCD,EAAQzR,cAAgB+Q,EAAe/Q,cACvCyR,EAAQjB,gBAAkBO,EAAeP,gBAEzC,MAAMoB,EACFb,EAAetK,aACduK,GAAaA,EAAUa,oBAE5B,IAAKD,EACD,MAAM5N,GACFpB,IAIR6O,EAAQhL,YAAcmL,EAEtBH,EAAQ1K,OACM,QAAVkK,EAAAS,SAAU,IAAAT,OAAA,EAAVA,EAAYrC,OACZuB,GAA6BY,EAAe5B,gBAC5C,GAGJsC,EAAQxR,gBACM,QAAViR,EAAAQ,SAAU,IAAAR,OAAA,EAAVA,EAAYvC,OACgB,QADbwC,EACfJ,EAAe5B,qBAAa,IAAAgC,OAAA,EAA5BA,EAA8B/B,OACF,QADKgC,EACjCL,EAAe5B,qBAAa,IAAAiC,OAAA,EAA5BA,EAA8B/B,MAC9B,GAOJ,MAAMyC,GAC0B,QAA5BT,EAAAN,EAAe5B,qBAAa,IAAAkC,OAAA,EAA5BA,EAA8BU,sBACF,QADoBT,EAChDP,EAAe5B,qBAAa,IAAAmC,OAAA,EAA5BA,EAA8BU,KAC5Bn6D,EAAoC,QAA5B05D,EAAAR,EAAe5B,qBAAa,IAAAoC,GAA5BA,EAA8BU,OACtClB,EAAe5B,cAAc8C,OAAO,GACpC,KAQN,GANAR,EAAQvR,SAAW4R,GAAqBj6D,GAAS,GACjD45D,EAAQ31E,MAAmC,QAA5B01E,EAAAT,EAAe5B,qBAAa,IAAAqC,OAAA,EAA5BA,EAA8B11E,OAAQ,GAErD21E,EAAQS,mBAAqBnB,EAAemB,mBAC5CT,EAAQU,YAAcpB,EAAeoB,YAEjCpB,EAAeL,eACfe,EAAQf,eAAiBK,EAAeL,mBACrC,CACH,MAAMd,EAAgBV,GAClB6B,EAAe/Q,cACfyR,EAAQxR,eACRwR,EAAQ1K,MACRgK,EAAe5B,eAEnBsC,EAAQf,eAAiB,CAACd,EAC7B,CAED,OAAO6B,EAUX,4BAAOW,CACHC,EACAH,EACAC,GAAoB,IAAAG,EAEpB,MAAMb,EAAyB,IAAIrB,GAqBnC,OAnBAqB,EAAQhB,cACJ4B,EAAY5B,eAAiBnb,EACjCmc,EAAQzR,cAAgBqS,EAAYrS,cACpCyR,EAAQxR,eAAiBoS,EAAYpS,eACrCwR,EAAQjB,gBAAkB6B,EAAY7B,gBAEtCiB,EAAQ1K,MAAQsL,EAAYzL,SAC5B6K,EAAQhL,YAAc4L,EAAY5L,YAElCgL,EAAQvR,SAAWmS,EAAYnS,SAC/BuR,EAAQ31E,KAAOu2E,EAAYv2E,KAE3B21E,EAAQS,mBAAqBA,EAC7BT,EAAQU,YAAcA,EAEtBV,EAAQf,eAAiBp0E,MAAMi2E,MACD,QAA1BD,EAAAD,EAAY3B,sBAAc,IAAA4B,OAAA,EAA1BA,EAA4BE,WAAY,IAGrCf,EAQX,4BAAOgB,CACHC,EACAC,EACAzU,EACA0U,EACAzD,GAGA,GAEQwD,IAAazC,IACbyC,IAAazC,GAEnB,CAEE,GAAIwC,EACA,IACI,MAAMhB,EAAapD,GACfoE,EACAE,EAAUzO,cAEd,GAAIuN,EAAW/C,KAAO+C,EAAW9C,KAC7B,MAAO,GAAPj5C,OAAU+7C,EAAW/C,IAAG,KAAAh5C,OAAI+7C,EAAW9C,KAE9C,CAAC,MAAO5kE,GAAI,CAEjBk0D,EAAOb,QAAQ,6BAClB,CAGD,OAAoB,OAAb8R,QAAa,IAAbA,OAAa,EAAbA,EAAeE,MAAO,GAOjC,sBAAOwD,CAAgBvK,GACnB,QAAKA,IAKDA,EAAO7pE,eAAe,kBACtB6pE,EAAO7pE,eAAe,gBACtB6pE,EAAO7pE,eAAe,UACtB6pE,EAAO7pE,eAAe,mBACtB6pE,EAAO7pE,eAAe,aACtB6pE,EAAO7pE,eAAe,kBAU9B,yBAAOq0E,CACHC,EACAC,EACAC,GAEA,IAAKF,IAAaC,EACd,OAAO,EAGX,IAAIE,GAAc,EAClB,GAAID,EAAe,CACf,MAAME,EAAkBJ,EAAS5D,eAC7B,CAAC,EACCiE,EAAkBJ,EAAS7D,eAC7B,CAAC,EAGL+D,EACIC,EAAeE,MAAQD,EAAeC,KACtCF,EAAe3kB,QAAU4kB,EAAe5kB,KAC/C,CAED,OACIukB,EAAS/S,gBAAkBgT,EAAShT,eACpC+S,EAAS9S,iBAAmB+S,EAAS/S,gBACrC8S,EAAS7S,WAAa8S,EAAS9S,UAC/B6S,EAASnM,WAAaoM,EAASpM,UAC/BmM,EAAStM,cAAgBuM,EAASvM,aAClCsM,EAASvC,kBAAoBwC,EAASxC,iBACtC0C,GCpVN,SAAUI,GAAwBC,GACpC,OAAIA,EAAejI,WAAW,MACnBiI,EAAeC,UAAU,GAEhCD,EAAejI,WAAW,MAC1BiI,EAAejI,WAAW,KAEnBiI,EAAeC,UAAU,GAG7BD,CACX,CAKM,SAAUE,GACZF,GAGA,IAAKA,GAAkBA,EAAentE,QAAQ,KAAO,EACjD,OAAO,KAEX,IAEI,MAAMstE,EAAqBJ,GAAwBC,GAE7CI,EAAsCz5E,OAAO05E,YAC/C,IAAIC,gBAAgBH,IAIxB,GACIC,EAAiBh7E,MACjBg7E,EAAiBG,SACjBH,EAAiBx8E,OACjBw8E,EAAiBI,mBACjBJ,EAAiBxjD,MAEjB,OAAOwjD,CAEd,CAAC,MAAO3pE,GACL,MAAMg6D,GAAsBvC,GAC/B,CAED,OAAO,IACX,CAKM,SAAUuS,GACZC,GAEiC,IADjCC,IAA6B97E,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,KAAAA,UAAA,GAC7B+7E,EAAiC/7E,UAAAhG,OAAA,EAAAgG,UAAA,QAAAk3D,EAEjC,MAAM8kB,EAAqC,IAAI93E,MAc/C,OAZA23E,EAAWltD,SAAQ,CAACzpB,EAAOqX,MAElBu/D,GACDC,GACAx/D,KAAOw/D,EAEPC,EAAoBpiF,KAAK,GAAD2jC,OAAIhhB,EAAG,KAAAghB,OAAIr4B,IAEnC82E,EAAoBpiF,KAAK,GAAD2jC,OAAIhhB,EAAG,KAAAghB,OAAI98B,mBAAmByE,QAIvD82E,EAAoBv6C,KAAK,IACpC,OCtEaw6C,GAGT,aAAWC,GACP,OAAOn8E,KAAKo8E,WAGhBxrE,WAAAA,CAAYnQ,GAER,GADAT,KAAKo8E,WAAa37E,GACbT,KAAKo8E,WAEN,MAAMrJ,GACFpB,IAIHlxE,EAAImP,SAAS,OACd5P,KAAKo8E,WAAaF,GAAUG,gBAAgB57E,IAQpD,sBAAO47E,CAAgB57E,GACnB,GAAIA,EAAK,CACL,IAAI67E,EAAe77E,EAAI8M,cAYvB,OAVIylE,GAAYpqB,SAAS0zB,EAAc,KACnCA,EAAeA,EAAa5xE,MAAM,GAAI,GAC/BsoE,GAAYpqB,SAAS0zB,EAAc,QAC1CA,EAAeA,EAAa5xE,MAAM,GAAI,IAGrCsoE,GAAYpqB,SAAS0zB,EAAc,OACpCA,GAAgB,KAGbA,CACV,CAED,OAAO77E,EAMX87E,aAAAA,GAEI,IAAIC,EACJ,IACIA,EAAax8E,KAAKy8E,kBACrB,CAAC,MAAO5qE,GACL,MAAMkhE,GACFrB,GAEP,CAGD,IAAK8K,EAAWE,kBAAoBF,EAAWG,aAC3C,MAAM5J,GACFrB,IAKR,IACK8K,EAAWI,UAC0B,WAAtCJ,EAAWI,SAASrvE,cAEpB,MAAMwlE,GACFtB,IAUZ,wBAAOoL,CAAkBp8E,EAAaq8E,GAClC,OAAKA,EAIEr8E,EAAIwN,QAAQ,KAAO,EAAC,GAAAuvB,OAClB/8B,EAAG,KAAA+8B,OAAIs/C,GAAW,GAAAt/C,OAClB/8B,EAAG,KAAA+8B,OAAIs/C,GALLr8E,EAYf,wBAAOs8E,CAAkBt8E,GACrB,OAAOy7E,GAAUG,gBAAgB57E,EAAIiP,MAAM,KAAK,IAQpDstE,iBAAAA,CAAkBvO,GACd,MAAMwO,EAAYj9E,KAAKy8E,mBACjBS,EAAYD,EAAUN,aAS5B,OAPIlO,GACqB,IAArByO,EAAUjjF,QACTijF,EAAU,KAAO/gB,GACd+gB,EAAU,KAAO/gB,IAErB+gB,EAAU,GAAKzO,GAEZyN,GAAUiB,gCAAgCF,GAOrDR,gBAAAA,GAEI,MAAMW,EAAQtwE,OACV,8DAIEgB,EAAQ9N,KAAKm8E,UAAUruE,MAAMsvE,GACnC,IAAKtvE,EACD,MAAMilE,GACFrB,IAKR,MAAM2L,EAAgB,CAClBT,SAAU9uE,EAAM,GAChB4uE,gBAAiB5uE,EAAM,GACvBwvE,aAAcxvE,EAAM,GACpByvE,YAAazvE,EAAM,IAGvB,IAAI0vE,EAAeH,EAAcC,aAAa5tE,MAAM,KAapD,OAZA8tE,EAAeA,EAAa7W,QAAQsP,GAAQA,GAAOA,EAAIh8E,OAAS,IAChEojF,EAAcV,aAAea,EAGzBH,EAAcE,aACdF,EAAcE,YAAY30B,SAAS,OAEnCy0B,EAAcE,YAAcF,EAAcE,YAAYlC,UAClD,EACAgC,EAAcE,YAAYtjF,OAAS,IAGpCojF,EAGX,uBAAOI,CAAiBh9E,GACpB,MAAM28E,EAAQtwE,OAAO,4BAEfgB,EAAQrN,EAAIqN,MAAMsvE,GAExB,IAAKtvE,EACD,MAAMilE,GACFrB,IAIR,OAAO5jE,EAAM,GAGjB,qBAAO4vE,CAAeC,EAAqBC,GACvC,GAAID,EAAY,KAAOnkB,EAAU6B,cAAe,CAC5C,MACMwiB,EADM,IAAI3B,GAAU0B,GACCnB,mBAE3B,OACIoB,EAAejB,SACf,KACAiB,EAAenB,gBACfiB,CAEP,CAED,OAAOA,EAGX,sCAAOR,CAAgCF,GACnC,OAAO,IAAIf,GACPe,EAAUL,SACN,KACAK,EAAUP,gBACV,IACAO,EAAUN,aAAaj7C,KAAK,MAQxC,kCAAOo8C,CAA4BC,GAC/B,QAASzC,GAAiCyC,IC7MrC,MAgFAC,GA/ES,CACd,4BAA6B,CACzBrN,eACI,iEACJI,SACI,mEACJF,OAAQ,oDACRH,uBACI,qEACJE,qBACI,mEAER,yBAA0B,CACtBD,eACI,8DACJI,SACI,gEACJF,OAAQ,2DACRH,uBACI,kEACJE,qBACI,gEAER,2BAA4B,CACxBD,eACI,gEACJI,SACI,kEACJF,OAAQ,mDACRH,uBACI,oEACJE,qBACI,mEAgDHqN,GA7CkB,CACvBC,0BACI,qEACJ7M,SAAU,CACN,CACIH,kBAAmB,4BACnBD,gBAAiB,oBACjBz8D,QAAS,CACL,4BACA,oBACA,sBACA,oBAGR,CACI08D,kBAAmB,mCACnBD,gBAAiB,mCACjBz8D,QAAS,CACL,mCACA,2BAGR,CACI08D,kBAAmB,2BACnBD,gBAAiB,2BACjBz8D,QAAS,CAAC,6BAEd,CACI08D,kBAAmB,2BACnBD,gBAAiB,2BACjBz8D,QAAS,CACL,2BACA,4BAGR,CACI08D,kBAAmB,+BACnBD,gBAAiB,+BACjBz8D,QAAS,CAAC,mCAUb2pE,GAAgD,IAAI/xE,IAkD3D,SAAUgyE,GACZC,EACAC,EACAr4D,EACA8/C,GAGA,GADM,OAANA,QAAM,IAANA,GAAAA,EAAQN,MAAM,8CAADjoC,OAA+CvX,IACxDo4D,GAAiBC,EAAwB,CACzC,MAAMjN,EAAWkN,GACbD,EACAD,GAGJ,GAAIhN,EAIA,OAHM,OAANtL,QAAM,IAANA,GAAAA,EAAQN,MAAM,6DAADjoC,OACoDvX,EAAM,wBAEhEorD,EAAS78D,QAEV,OAANuxD,QAAM,IAANA,GAAAA,EAAQN,MAAM,oEAADjoC,OAC2DvX,GAG/E,CAED,OAAO,IACX,CAoBgB,SAAAs4D,GACZR,EACAM,GAEA,IAAK,IAAI19E,EAAI,EAAGA,EAAIo9E,EAAS9jF,OAAQ0G,IAAK,CACtC,MAAM0wE,EAAW0M,EAASp9E,GAC1B,GAAI0wE,EAAS78D,QAAQ5E,SAASyuE,GAC1B,OAAOhN,CAEd,CAED,OAAO,IACX,CA3GA4M,GAA0B5M,SAASziD,SAC9B4vD,IACGA,EAAchqE,QAAQoa,SAAS6vD,IAC3BN,GAAiCzxE,IAAI+xE,SCrG1C,MAAMC,GAA8B,uBAC9BC,GAAwB,sBCExBC,GAAqB,CAC9B,CAACF,IACG,mCACJ,CAACC,IACG,uDAMF,MAAOE,WAAmBn9E,MAW5BkP,WAAAA,CAAY2uD,EAAmBC,GAC3B,MAAMrvD,EACFqvD,IACCof,GAAmBrf,GACdqf,GAAmBrf,GACnBqf,GAAmBD,KAE7Bjf,MAAM,GAADliC,OAAI+hC,EAAS,MAAA/hC,OAAKrtB,IACvBpO,OAAO49D,eAAe3/D,KAAM6+E,GAAWt4E,WAEvCvG,KAAK2D,KAAO,aACZ3D,KAAKu/D,UAAYA,EACjBv/D,KAAKw/D,aAAervD,SCmBN2uE,GAOlBluE,WAAAA,CACI49D,EACAuQ,EACAhZ,EACAiZ,GAEAh/E,KAAKwuE,SAAWA,EAChBxuE,KAAK++E,WAAaA,EAClB/+E,KAAKi/E,aAAelZ,EAAOzyC,MAAM3vB,GAAM8sD,IACvCzwD,KAAKg/E,uBAAyBA,EAyKlCne,cAAAA,CAAeqe,GACX,OAAOl/E,KAAKm/E,oBACRn/E,KAAKo/E,sBAAsBF,GAAiB,CAAC,GAC7CA,GAORG,wBAAAA,CAAyBH,GACrB,MAAMI,EAAct/E,KAAK6gE,eAAeqe,GACxC,GAAII,EAAYrlF,OAAS,EAAG,CAKxB,OAHuBqlF,EAAYC,MAAMjG,GAC9BA,EAAQtC,eAAiB,EAAI,IAElB,EACzB,CAAM,OAA2B,IAAvBsI,EAAYrlF,OAEZqlF,EAAY,GAEZ,KASfE,kBAAAA,CAAmBN,GACf,MAAMO,EAAkBz/E,KAAKo/E,sBAAsBF,GACnD,OAAIO,EAAgBxlF,OAAS,EAClBwlF,EAAgB,GAAGrH,iBAEnB,KAWP+G,mBAAAA,CACJO,EACAR,GAEA,OAAOQ,EAAeC,SAASC,GACpB5/E,KAAK6/E,mCACRD,EACa,OAAbV,QAAa,IAAbA,OAAa,EAAbA,EAAezQ,SACfyQ,KAKJY,8BAAAA,CACJ5F,EACA6F,EACAtI,EACAuI,GAEA,IACIhJ,EADAiJ,EAA0C,KAG9C,GAAID,IAEKhgF,KAAKkgF,2BACFzI,EACAuI,GAGJ,OAAO,KAIf,MAAMzR,EAAUvuE,KAAKmgF,WACjBjG,EACA6F,EACAtI,EAAchJ,UAGlB,OAAIF,IACAyI,EAAgBvK,GACZ8B,EAAQI,OACR3uE,KAAK++E,WAAW/S,eAIfhsE,KAAKogF,sCACFpJ,EACAgJ,IAIG,MAKfC,EAAsB1I,GAClB2C,EACAzC,EACAT,EACO,OAAPzI,QAAO,IAAPA,OAAO,EAAPA,EAASI,QAGNsR,GAGHJ,kCAAAA,CACJD,EACAS,EACAL,GAEA,MAAM9F,EAAc0F,EAAcxH,iBAClC,IAAIkI,EACApG,EAAY3B,gBAAkB,IAAIvsE,IACtC,MAAM+zE,EAAY//E,KAAKugF,eAGvB,GAAIF,EAAgB,CAChB,MAAM5I,EAAgB6I,EAAqBxvE,IAAIuvE,GAC/C,IAAI5I,EAOA,MAAO,GALP6I,EAAuB,IAAIt0E,IAA2B,CAClD,CAACq0E,EAAgB5I,IAM5B,CAED,MAAM+I,EAAwC,GAa9C,OAZAF,EAAqB1xD,SAAS6oD,IAC1B,MAAMwI,EAAsBjgF,KAAK8/E,+BAC7B5F,EACA6F,EACAtI,EACAuI,GAEAC,GACAO,EAAuB3mF,KAAKomF,MAI7BO,EAGHN,0BAAAA,CACJzI,EACAuI,GAEA,QACMA,EAAoBlY,iBACrB9nE,KAAKygF,qCACFhJ,EACAuI,EAAoBlY,qBAOtBkY,EAAoBr8E,MACpB8zE,EAAc9zE,OAASq8E,EAAoBr8E,aAMRwzD,IAArC6oB,EAAoB1I,cAClBG,EAAcH,eAAiB0I,EAAoB1I,eAQrD8I,qCAAAA,CACJpJ,EACAgJ,GAGA,GAAIA,EAAqB,CACrB,GACMA,EAAoBlY,iBACrB9nE,KAAK0gF,mCACF1J,EACAgJ,EAAoBlY,gBAGxB,OAAO,EAGX,GACMkY,EAAoBW,YACrB3gF,KAAK4gF,8BACF5J,EACAgJ,EAAoBW,WAGxB,OAAO,EAGX,GACMX,EAAoBjY,WACrB/nE,KAAK6gF,cACF7J,EAAc4C,mBACdoG,EAAoBjY,UAGxB,OAAO,EAGX,GACMiY,EAAoBr8E,OACrB3D,KAAK8gF,UAAU9J,EAAegJ,EAAoBr8E,MAEnD,OAAO,EAGX,GACMq8E,EAAoBe,MACrB/gF,KAAKghF,SAAShK,EAAegJ,EAAoBe,KAElD,OAAO,CAEd,CAED,OAAO,EASX,qBAAME,CACFC,EACAphB,EACAqhB,GAEA,IAAKD,EACD,MAAMrV,GACFrB,IAIR,IACU0W,EAAY5H,eACRt5E,KAAKohF,WAAWF,EAAY5H,QAASxZ,GAGzCohB,EAAY3S,UAAqC,KAAd,OAAZ4S,QAAY,IAAZA,OAAY,EAAZA,EAAc5S,gBACjCvuE,KAAKqhF,qBACPH,EAAY3S,QACZzO,GAKFohB,EAAYpS,cACgB,KAAlB,OAAZqS,QAAY,IAAZA,OAAY,EAAZA,EAAcrS,oBAER9uE,KAAKshF,gBACPJ,EAAYpS,YACZhP,GAKFohB,EAAYnR,eACiB,KAAnB,OAAZoR,QAAY,IAAZA,OAAY,EAAZA,EAAcpR,qBAER/vE,KAAKuhF,0BACPL,EAAYnR,aACZjQ,GAIFohB,EAAYM,aACdxhF,KAAKyhF,eAAeP,EAAYM,YAEvC,CAAC,MAAO3vE,GAAY,IAAA6vE,EAuBVC,EArBP,GADiB,QAAjBD,EAAA1hF,KAAKi/E,oBAAY,IAAAyC,GAAjBA,EAAmB1iF,MAAM,wCACrB6S,aAAanQ,MAAO,KAAAkgF,EAUlBC,EAJF,GALiB,QAAjBD,EAAA5hF,KAAKi/E,oBAAY,IAAA2C,GAAjBA,EAAmB3c,SAAS,iCAADznC,OACU3rB,EAAE1B,SACnC2vD,GAIW,uBAAXjuD,EAAElO,MACS,+BAAXkO,EAAElO,MACFkO,EAAE1B,QAAQP,SAAS,sBAMnB,MAJiB,QAAjBiyE,EAAA7hF,KAAKi/E,oBAAY,IAAA4C,GAAjBA,EAAmB7iF,MAAM,uDAErB8gE,GAEE,IAAI+e,GACNH,IAGJ,MAAM,IAAIG,GAAWhtE,EAAElO,KAAMkO,EAAE1B,QAEtC,CAKG,MAJiB,QAAjBwxE,EAAA3hF,KAAKi/E,oBAAY,IAAA0C,GAAjBA,EAAmB1c,SAAS,iCAADznC,OACU3rB,GACjCiuD,GAEE,IAAI+e,GAAWF,GAE5B,EAOG,qBAAM2C,CACVQ,EACAhiB,GAEA,MAAMiiB,EAAsC,CACxCvT,SAAUsT,EAAWtT,SACrBE,eAAgBoT,EAAWpT,eAC3BJ,YAAawT,EAAWxT,YACxBzG,cAAeia,EAAWja,cAC1B+G,MAAOkT,EAAWlT,MAClBK,UAAW6S,EAAW7S,UACtBI,oBAAqByS,EAAWzS,qBAG9B0Q,EAAY//E,KAAKugF,eACjByB,EAAgB7N,GAASI,WAAWuN,EAAWhtE,QAE/CmtE,EAA4C,GAClDlC,EAAUjR,YAAYlgD,SAASpS,IAC3B,IACKxc,KAAKkiF,4BAA4B1lE,EAAKulE,GAAmB,GAE1D,OAGJ,MAAMI,EAAcniF,KAAKoiF,yBAAyB5lE,GAElD,GACI2lE,GACAniF,KAAKqiF,wBAAwBF,EAAaJ,GAC5C,CACwB5N,GAASI,WAAW4N,EAAYrtE,QACpC+gE,sBAAsBmM,IACpCC,EAAoBpoF,KAAKmG,KAAKsiF,kBAAkB9lE,GAEvD,WAECy7B,QAAQuf,IAAIyqB,SACZjiF,KAAKuiF,yBAAyBT,EAAYhiB,GAQpDsf,qBAAAA,CAAsBF,GAClB,MAAMsD,EAAiBxiF,KAAKyiF,iBACtBC,EAAoC,GAsF1C,OArFAF,EAAe5zD,SAAS+zD,IAAY,IAAAC,EAChC,IAAK5iF,KAAK6iF,aAAaF,EAAUzD,EAAcrX,eAE3C,OAGJ,MAAMsI,EAA+BnwE,KAAK8gE,WACtC6hB,EACA3iF,KAAKi/E,cAKT,IAAK9O,EACD,OAGJ,GACM+O,EAAcrX,gBACf7nE,KAAK8iF,mBAAmB3S,EAAQ+O,EAAcrX,eAE/C,OAGJ,GACMqX,EAAcnX,WACf/nE,KAAK6gF,cAAc1Q,EAAOpI,SAAUmX,EAAcnX,UAEnD,OAGJ,GACMmX,EAAc5Q,cACftuE,KAAK+iF,iBAAiB5S,EAAQ+O,EAAc5Q,aAE7C,OAGJ,GACM4Q,EAActQ,QACf5uE,KAAKgjF,WAAW7S,EAAQ+O,EAActQ,OAEvC,OAGJ,GACMsQ,EAAc7G,kBACfr4E,KAAKijF,qBACF9S,EACA+O,EAAc7G,iBAGlB,OAGJ,GACM6G,EAAc5G,gBACft4E,KAAKkjF,mBAAmB/S,EAAQ+O,EAAc5G,eAE/C,OAIJ,MAAM0H,EAA2C,CAC7ClY,eAA6B,OAAboX,QAAa,IAAbA,OAAa,EAAbA,EAAepX,eAC/BnkE,KAAmB,OAAbu7E,QAAa,IAAbA,OAAa,EAAbA,EAAev7E,MAGnB68E,EAA8C,QAAxBoC,EAAGzS,EAAOoI,sBAAc,IAAAqK,OAAA,EAArBA,EAAuBjc,QACjD8Q,GACUz3E,KAAKkgF,2BACRzI,EACAuI,KAKRQ,GAA4D,IAAlCA,EAAuBvmF,QAKrDyoF,EAAiB7oF,KAAKs2E,MAGnBuS,EAUXG,YAAAA,CACIrmE,EACAqrD,EACA4G,GAEA,QAAIjyD,EAAI9M,MAAM0tD,GAAgCnjE,OAAS,OAMnD4tE,IACCrrD,EAAIjP,cAAcqC,SAASi4D,EAAct6D,mBAK1CkhE,IAAajyD,EAAIjP,cAAcqC,SAAS6+D,EAASlhE,iBAazD41E,eAAAA,CAAgB3mE,GACZ,GAAIA,EAAI9M,MAAM0tD,GAAgCnjE,OAAS,EAEnD,OAAO,EAGX,MAAMmpF,EAAe5mE,EAAIjP,cAEzB,IAES,IADL61E,EAAan1E,QAAQovD,EAAeC,SAAS/vD,iBAGxC,IADL61E,EAAan1E,QAAQovD,EAAeE,aAAahwD,iBAI1C,IAFP61E,EAAan1E,QACTovD,EAAeG,8BAA8BjwD,iBAG5C,IADL61E,EAAan1E,QAAQovD,EAAeI,cAAclwD,eAGlD,OAAO,EAGX,GACI61E,EAAan1E,QAAQovD,EAAeI,cAAclwD,gBACjD,EACH,CAEE,MAAM81E,EAAqB,GAAH7lD,OAAM6/B,EAAeI,eAAajgC,OAAG4/B,GAA8B5/B,OAAGx9B,KAAKwuE,UAAQhxC,OAAG4/B,GACxGkmB,EAAqB,GAAH9lD,OAAM6/B,EAAeI,eAAajgC,OAAG4/B,GAA8B5/B,OAAGmgC,GAAangC,OAAG4/B,GAC9G,IACgE,IAA5DgmB,EAAan1E,QAAQo1E,EAAmB91E,iBACoB,IAA5D61E,EAAan1E,QAAQq1E,EAAmB/1E,eAExC,OAAO,CAEd,MAAM,IAA2D,IAAvD61E,EAAan1E,QAAQjO,KAAKwuE,SAASjhE,eAE1C,OAAO,EAGX,OAAO,EASX80E,uBAAAA,CACIlS,EACAxJ,GAEA,GAAMA,EAAO6H,WAAaxuE,KAAKujF,cAAcpT,EAAQxJ,EAAO6H,UACxD,OAAO,EAGX,GACM7H,EAAOuI,oBACRlvE,KAAKwjF,uBAAuBrT,EAAQxJ,EAAOuI,mBAE5C,OAAO,EAOX,GACoC,kBAAzBvI,EAAOkB,gBACb7nE,KAAK8iF,mBAAmB3S,EAAQxJ,EAAOkB,eAExC,OAAO,EAGX,GACMlB,EAAO2H,cACRtuE,KAAK+iF,iBAAiB5S,EAAQxJ,EAAO2H,aAEtC,OAAO,EAGX,GAAM3H,EAAOiI,QAAU5uE,KAAKgjF,WAAW7S,EAAQxJ,EAAOiI,OAClD,OAAO,EAGX,GACMjI,EAAO+H,iBACR1uE,KAAKyjF,oBAAoBtT,EAAQxJ,EAAO+H,gBAEzC,OAAO,EAGX,GAAM/H,EAAOqJ,WAAahwE,KAAK0jF,cAAcvT,EAAQxJ,EAAOqJ,UACxD,OAAO,EAOX,GAAMrJ,EAAO7xD,SAAW9U,KAAK2jF,YAAYxT,EAAQxJ,EAAO7xD,QACpD,OAAO,EAIX,IAAI6xD,EAAO0I,qBAAuBc,EAAOd,sBAEjCc,EAAOd,sBAAwB1I,EAAO0I,oBACtC,OAAO,EAKf,GACIc,EAAOzB,iBACPrR,EAAeG,8BACjB,CACE,GACMmJ,EAAOsI,YACRjvE,KAAK4jF,eAAezT,EAAQxJ,EAAOsI,WAEpC,OAAO,EAIX,GAAItI,EAAOsI,YAAcxQ,EAAqBG,KACtC+H,EAAOwI,QAAUnvE,KAAK6jF,WAAW1T,EAAQxJ,EAAOwI,OAChD,OAAO,CAGlB,CAED,OAAO,EAOX2U,wBAAAA,CAAyBnd,GACrB,MAAMod,EAAe/jF,KAAKgkF,UACpBC,EAAwC,CAAC,EAgC/C,OA9BAF,EAAan1D,SAAS+zD,IAElB,IAAK3iF,KAAKkkF,cAAcvB,GACpB,OAIJ,MAAMxS,EAASnwE,KAAKmkF,eAAexB,GAE9BxS,IAKCxJ,EAAO2H,cACRtuE,KAAK+iF,iBAAiB5S,EAAQxJ,EAAO2H,cAMpC3H,EAAO6H,WACRxuE,KAAKujF,cAAcpT,EAAQxJ,EAAO6H,YAKvCyV,EAAoBtB,GAAYxS,OAG7B8T,EAOXG,2BAAAA,CAA4BC,GACxB,MAAMN,EAAe/jF,KAAKskF,2BAC1B,IAAIC,EAAgB,KAyBpB,OAvBAR,EAAan1D,SAAS+zD,IAElB,IACK3iF,KAAKwkF,oBAAoB7B,KACW,IAArCA,EAAS10E,QAAQjO,KAAKwuE,UAEtB,OAIJ,MAAM2B,EAASnwE,KAAKykF,qBAAqB9B,GAEpCxS,IAIiC,IAAlCA,EAAO37D,QAAQvG,QAAQo2E,KAI3BE,EAAgBpU,MAGboU,EAMX,uBAAMG,GACF,MAAMlC,EAAiBxiF,KAAKyiF,iBACtBkC,EAAwC,GAE9CnC,EAAe5zD,SAAS+zD,IACpBgC,EAAgB9qF,KAAKmG,KAAK4kF,cAAcjC,aAGtC1qC,QAAQuf,IAAImtB,GAOtB,mBAAMC,CAAcC,GAChB,MAAMvL,EAAUt5E,KAAK8gE,WAAW+jB,EAAY7kF,KAAKi/E,cAC5C3F,UAGCt5E,KAAK8kF,qBAAqBxL,GAChCt5E,KAAK+kF,WAAWF,IAOpB,0BAAMC,CAAqBxL,GACvB,MAAM0L,EAAehlF,KAAKugF,eACpB0E,EAAY3L,EAAQtL,oBACpBkX,EAA2C,GAEjDF,EAAazW,QAAQ3/C,SAASpS,IACK,IAA3BA,EAAIvO,QAAQg3E,IACZjlF,KAAKmlF,cAAc3oE,MAI3BwoE,EAAalW,YAAYlgD,SAASpS,IACC,IAA3BA,EAAIvO,QAAQg3E,IACZC,EAAmBrrF,KAAKmG,KAAKsiF,kBAAkB9lE,OAIvDwoE,EAAajV,aAAanhD,SAASpS,IACA,IAA3BA,EAAIvO,QAAQg3E,IACZjlF,KAAKolF,mBAAmB5oE,YAI1By7B,QAAQuf,IAAI0tB,GAOtB,uBAAM5C,CAAkB9lE,GACpB,MAAMslE,EAAa9hF,KAAKoiF,yBAAyB5lE,GACjD,GAAKslE,EAAL,CAKA,GACIA,EAAWpT,eAAenhE,gBAC1B8vD,EAAeG,8BAA8BjwD,eAEzCu0E,EAAW7S,YAAcxQ,EAAqBE,IAAK,CACnD,MAEMkR,EADFiS,EACwC3S,MAE5C,GAAIU,EACA,UACU7vE,KAAK++E,WAAW1S,sBAAsBwD,EAC/C,CAAC,MAAO7wE,GACL,MAAM6sE,GACFV,GAEP,CAER,CAGL,OAAOnrE,KAAK+kF,WAAWvoE,EAxBtB,EA8BL6oE,iBAAAA,GAQI,OAPqBrlF,KAAKgkF,UACbp1D,SAAS+zD,IACd3iF,KAAKkkF,cAAcvB,IACnB3iF,KAAK+kF,WAAWpC,OAIjB,EAOX2C,oBAAAA,CAAqBhM,GACjB,MAAMuL,EACF5M,GAAcE,wBAAwBmB,GAC1C,OAAOt5E,KAAK8gE,WAAW+jB,EAAY7kF,KAAKi/E,cAW5CkB,UAAAA,CACI7G,EACAyG,EACAwF,EACAC,EACA1lB,GAEA9/D,KAAKi/E,aAAaxZ,MAAM,oCACxB,MAAMggB,EAAkC,CACpC5d,cAAeyR,EAAQzR,cACvByG,YAAagL,EAAQhL,YACrBI,eAAgBrR,EAAeC,SAC/BkR,SAAUxuE,KAAKwuE,SACfI,MAAO2W,GAGLG,EAAyC1lF,KAAK2lF,oBAChDF,EACA1F,GAGE6F,EAAcF,EAAW9tD,KAE/B,GAAIguD,EAAc,EAEd,OADA5lF,KAAKi/E,aAAa/uE,KAAK,4CAChB,KACJ,GAAI01E,EAAc,EAAG,CACxB,IAAIC,EAAgDH,EAEpD,IAAKH,EAAa,CACd,MAAMO,EAA6C,IAAI95E,IAIvD05E,EAAW92D,SAAQ,CAAC2/C,EAAS/xD,KACrB+xD,EAAQK,QAAU0K,EAAQ7K,UAC1BqX,EAAel3E,IAAI4N,EAAK+xD,MAGhC,MAAMwX,EAAkBD,EAAeluD,KACvC,GAAImuD,EAAkB,EAIlB,OAHA/lF,KAAKi/E,aAAa/uE,KACd,kIAEGw1E,EAAWrL,SAAS3zD,OAAOvhB,MAC/B,GAAwB,IAApB4gF,EAIP,OAHA/lF,KAAKi/E,aAAa/uE,KACd,qGAEG41E,EAAezL,SAAS3zD,OAAOvhB,MAGtC0gF,EAAoBC,CAE3B,CAcD,OAZA9lF,KAAKi/E,aAAa/uE,KACd,8EAEJ21E,EAAkBj3D,SAAQ,CAAC2/C,EAAS/xD,KAChCxc,KAAKmlF,cAAc3oE,MAEnBgpE,GAAqB1lB,GACrB0lB,EAAkBQ,UACd,CAAEC,eAAgBP,EAAW9tD,MAC7BkoC,GAGD,IACV,CAGD,OADA9/D,KAAKi/E,aAAa/uE,KAAK,gDAChBw1E,EAAWrL,SAAS3zD,OAAOvhB,MAQtCwgF,mBAAAA,CACIhf,EACAoZ,GAEA,MAAMmG,EACDnG,GAAaA,EAAUxR,SAAYvuE,KAAKugF,eAAehS,QAEtD4X,EAAuC,IAAIn6E,IAmBjD,OAfAk6E,EAAYt3D,SAASpS,IACjB,IACKxc,KAAKomF,wBAAwB5pE,EAAG4rD,GAAA,CAC7BoG,SAAUxuE,KAAKwuE,UACZ7H,IAGP,OAEJ,MAAM4H,EAAUvuE,KAAKqmF,qBAAqB7pE,GACtC+xD,GAAWvuE,KAAKqiF,wBAAwB9T,EAAS5H,IACjDwf,EAASv3E,IAAI4N,EAAK+xD,MAInB4X,EASXC,uBAAAA,CACIE,EACA3f,GAEA,MAAMnqD,EAAM8pE,EAAS/4E,cACrB,QACIo5D,EAAO6H,WACyC,IAAhDhyD,EAAIvO,QAAQ04D,EAAO6H,SAASjhE,mBAM5Bo5D,EAAOkB,gBAC8C,IAArDrrD,EAAIvO,QAAQ04D,EAAOkB,cAAct6D,gBAYzC43E,aAAAA,CAAc3oE,GACVxc,KAAK+kF,WAAWvoE,GAOpB4oE,kBAAAA,CAAmB5oE,GACfxc,KAAK+kF,WAAWvoE,GAWpB+pE,cAAAA,CACIjN,EACAtgB,EACA+mB,EACAwF,EACAC,EACA1lB,GAEA9/D,KAAKi/E,aAAaxZ,MAAM,wCACxB,MAAMnC,EAAS6Q,GAASM,mBAAmBzb,EAAQsK,QAC7CkjB,EACFxtB,EAAQytB,sBAAwBhoB,EAAqBC,OAKnDgQ,EACF8X,GACAA,EAAWj5E,gBACPkxD,EAAqBC,OAAOnxD,cAC1B8vD,EAAeG,8BACfH,EAAeE,aAEnBwkB,EAAsC,CACxCla,cAAeyR,EAAQzR,cACvByG,YAAagL,EAAQhL,YACrBI,eAAgBA,EAChBF,SAAUxuE,KAAKwuE,SACfI,MAAO2W,GAAejM,EAAQ7K,SAC9B35D,OAAQwuD,EACR2L,UAAWuX,EACXrX,MAAOnW,EAAQ0tB,OACfrX,oBAAqBrW,EAAQqW,qBAG3BsX,EACD5G,GAAaA,EAAUjR,aACxB9uE,KAAKugF,eAAezR,YAClB8X,EAAoC,GAE1CD,EAAgB/3D,SAASpS,IAErB,GACIxc,KAAKkiF,4BAA4B1lE,EAAKulE,GAAmB,GAC3D,CACE,MAAMjT,EAAc9uE,KAAKoiF,yBAAyB5lE,GAI9CsyD,GACA9uE,KAAKqiF,wBAAwBvT,EAAaiT,IAE1C6E,EAAa/sF,KAAKi1E,EAEzB,KAGL,MAAM+X,EAAkBD,EAAa3sF,OACrC,OAAI4sF,EAAkB,GAClB7mF,KAAKi/E,aAAa/uE,KACd,gDAEG,MACA22E,EAAkB,GACzB7mF,KAAKi/E,aAAa/uE,KACd,6EAEJ02E,EAAah4D,SAASkgD,IACb9uE,KAAKsiF,kBAAkBxU,GAAsBgB,OAElD0W,GAAqB1lB,GACrB0lB,EAAkBQ,UACd,CAAEc,eAAgBF,EAAa3sF,QAC/B6lE,GAGD,OAGX9/D,KAAKi/E,aAAa/uE,KACd,wDAEG02E,EAAa,IAUxB1E,2BAAAA,CACIoE,EACA3f,EACAogB,GAEA,MAAMvqE,EAAM8pE,EAAS/4E,cACrB,GACIo5D,EAAO6H,WACyC,IAAhDhyD,EAAIvO,QAAQ04D,EAAO6H,SAASjhE,eAE5B,OAAO,EAGX,GACIo5D,EAAOkB,gBAC8C,IAArDrrD,EAAIvO,QAAQ04D,EAAOkB,cAAct6D,eAEjC,OAAO,EAGX,GAAIo5D,EAAOiI,QAAsD,IAA7CpyD,EAAIvO,QAAQ04D,EAAOiI,MAAMrhE,eACzC,OAAO,EAGX,GACIo5D,EAAO0I,sBACoD,IAA3D7yD,EAAIvO,QAAQ04D,EAAO0I,oBAAoB9hE,eAEvC,OAAO,EAGX,GAAIo5D,EAAO7xD,OAAQ,CACf,MAAMwuD,EAASqD,EAAO7xD,OAAOqgE,UAC7B,IAAK,IAAIx0E,EAAI,EAAGA,EAAI2iE,EAAOrpE,OAAQ0G,IAAK,CACpC,GACIomF,IACCvqE,EAAI5M,SAAS0zD,EAAO3iE,GAAG4M,eAGxB,OAAO,EACJ,IACFw5E,GACDvqE,EAAI5M,SAAS0zD,EAAO3iE,GAAG4M,eAGvB,OAAO,CAEd,CACJ,CAED,OAAO,EAQXy5E,uBAAAA,CAAwBrgB,GACpB,MAAMoZ,EAAY//E,KAAKugF,eAEjBqG,EAAoC,GAe1C,OAdA7G,EAAUjR,YAAYlgD,SAASpS,IAC3B,IAAKxc,KAAKkiF,4BAA4B1lE,EAAKmqD,GAAQ,GAC/C,OAGJ,MAAMmI,EAAc9uE,KAAKoiF,yBAAyB5lE,GAE9CsyD,GACA9uE,KAAKqiF,wBAAwBvT,EAAanI,IAE1CigB,EAAa/sF,KAAKi1E,MAInB8X,EAWXK,eAAAA,CACI3N,EACA4N,EACAnH,EACAyF,EACA1lB,GAEA9/D,KAAKi/E,aAAaxZ,MAAM,yCACxB,MAAMvqE,EAAKgsF,EAAWvpB,OAAgBxG,EAChCgwB,EAAuC,CACzCtf,cAAeyR,EAAQzR,cACvByG,YAAagL,EAAQhL,YACrBI,eAAgBrR,EAAeI,cAC/B+Q,SAAUxuE,KAAKwuE,SACfwB,SAAU90E,GAGRksF,EACDrH,GAAaA,EAAUhQ,cACxB/vE,KAAKugF,eAAexQ,aAClBsX,EAAsC,GAE5CD,EAAiBx4D,SAASpS,IAEtB,GAAIxc,KAAKsnF,6BAA6B9qE,EAAK2qE,GAAqB,CAC5D,MAAMpX,EAAe/vE,KAAKunF,0BAA0B/qE,GAGhDuzD,GACA/vE,KAAKqiF,wBACDtS,EACAoX,IAGJE,EAAcxtF,KAAKk2E,EAE1B,KAGL,MAAMyX,EAAmBH,EAAcptF,OACvC,OAAIutF,EAAmB,GACnBxnF,KAAKi/E,aAAa/uE,KACd,0DAEG,OAIPs3E,EAAmB,GAAKhC,GAAqB1lB,GAC7C0lB,EAAkBQ,UACd,CAAEyB,eAAgBD,GAClB1nB,GAIR9/D,KAAKi/E,aAAa/uE,KACd,0DAEGm3E,EAAc,IAQzBC,4BAAAA,CACIhB,EACA3f,GAEA,MAAMnqD,EAAM8pE,EAAS/4E,cACrB,QACIo5D,EAAOqJ,WACyC,IAAhDxzD,EAAIvO,QAAQ04D,EAAOqJ,SAASziE,qBAO3Bo5D,EAAOqJ,UACRrJ,EAAO6H,WACyC,IAAhDhyD,EAAIvO,QAAQ04D,EAAO6H,SAASjhE,mBAM5Bo5D,EAAOkB,gBAC8C,IAArDrrD,EAAIvO,QAAQ04D,EAAOkB,cAAct6D,iBAWzCm6E,wBAAAA,CAAyBpZ,GACrB,MAAMqZ,EAAuC,CACzCrZ,cACAE,SAAUxuE,KAAKwuE,UAGbgT,EACFxhF,KAAK8jF,yBAAyB6D,GAC5BC,EAA0C7lF,OAAOmgB,KACnDs/D,GACF3pD,KAAKrb,GAAQglE,EAAYhlE,KAErBqrE,EAAiBD,EAAmB3tF,OAC1C,GAAI4tF,EAAiB,EACjB,OAAO,KACJ,GAAIA,EAAiB,EACxB,MAAMhc,GACF9B,IAIR,OAAO6d,EAAmB,GAQ9BE,iBAAAA,CAAkBxZ,GACd,MAAMkT,EAAcxhF,KAAK0nF,yBAAyBpZ,GAClD,SAAUkT,GAAeA,EAAYxR,WAAarS,GAQ9CmlB,kBAAAA,CACJ3S,EACAtI,GAEA,QACoC,kBAAzBsI,EAAOtI,eACdA,IAAkBsI,EAAOtI,eAUzB6Y,kCAAAA,CACJ/Q,EACA7H,GAGA,OAAOA,KADuB6H,EAAYsH,KAAOtH,EAAYuH,KAIzDuJ,oCAAAA,CACJhJ,EACA3P,GAEA,OAAO2P,EAAc3P,iBAAmBA,EASpCgZ,SAAAA,CAAUiH,EAAqBpkF,GAAY,IAAAqkF,EAC/C,QAAUrkF,EAAK4J,iBAA6B,QAAhBy6E,EAAKD,EAAOpkF,YAAI,IAAAqkF,OAAA,EAAXA,EAAaz6E,gBAS1CszE,aAAAA,CACJoH,EACAC,GAEA,SACID,GAC0B,kBAAnBA,IACO,OAAdC,QAAc,IAAdA,OAAc,EAAdA,EAAgB36E,iBAAkB06E,EAAe16E,eASjDi2E,sBAAAA,CACJrT,EACAjB,GAEA,SACIiB,EAAOjB,mBACPA,IAAsBiB,EAAOjB,mBAS7B6T,gBAAAA,CACJ5S,EACA7B,GAGA,GAAItuE,KAAKg/E,uBAAwB,CAC7B,MAAMmJ,EHx/CF,SACZnJ,EACAjZ,GAEA,IAAIoiB,EACJ,MAAMC,EAAqBpJ,EAAuBoJ,mBAClD,GAAIA,EAAoB,KAAAC,EACpB,MAAMhK,EAAgB,IAAInC,GACtBkM,GACF3L,mBAAmBC,gBACrByL,EACI/J,GACIC,EAC6C,QADhCgK,EACbrJ,EAAuBV,8BAAsB,IAAA+J,OAAA,EAA7CA,EAA+ChX,SAC/CxT,EACAkI,IAEJqY,GACIC,EACAJ,GAA0B5M,SAC1BxT,EACAkI,IAEJiZ,EAAuBsJ,gBAC9B,CAED,OAAOH,GAAiB,EAC5B,CG69CkCI,CAClBvoF,KAAKg/E,uBACLh/E,KAAKi/E,cAET,GACIkJ,EAAcv4E,SAAS0+D,IACvB6Z,EAAcv4E,SAASugE,EAAO7B,aAE9B,OAAO,CAEd,CAGD,MAAMka,EAAgBxoF,KAAKokF,4BAA4B9V,GACvD,SACIka,GACAA,EAAch0E,QAAQvG,QAAQkiE,EAAO7B,cAAgB,GAYrDmV,mBAAAA,CACJtT,EACAzB,GAEA,OACIyB,EAAOzB,gBACPA,EAAenhE,gBAAkB4iE,EAAOzB,eAAenhE,cASvDg2E,aAAAA,CACJpT,EACA3B,GAEA,SAAU2B,EAAO3B,UAAYA,IAAa2B,EAAO3B,UAQ7CkV,aAAAA,CACJvT,EACAH,GAEA,SAAUG,EAAOH,UAAYA,IAAaG,EAAOH,UAQ7CgT,UAAAA,CACJ7S,EACAvB,GAAa,IAAA6Z,EAEb,SAAsB,QAAZA,EAAAtY,EAAOvB,aAAK,IAAA6Z,OAAA,EAAZA,EAAcl7E,iBAAkBqhE,EAAMrhE,eAS5C01E,oBAAAA,CACJ9S,EACAkI,GAEA,SACIlI,EAAOkI,iBAAmBA,IAAoBlI,EAAOkI,iBAarDuI,6BAAAA,CACJjR,EACAgR,GAEA,OAAIhR,EAAY+Y,aAAe/H,IAI3BhR,EAAYiK,qBAAuB+G,GAInChR,EAAYkK,MAAQ8G,GAapBK,QAAAA,CAAShK,EAA4B+J,GACzC,OAAO/J,EAAc+J,MAAQA,EAGzBmC,kBAAAA,CACJ/S,EACAmI,GAEA,SACInI,EAAOmI,eACPA,EAAc/qE,gBAAkB4iE,EAAOmI,cAAc/qE,eASrDo2E,WAAAA,CAAYxT,EAA0Br7D,GAM1C,GAJIq7D,EAAOzB,iBAAmBrR,EAAeE,cACzC4S,EAAOzB,iBACHrR,EAAeG,gCAEY2S,EAAOr7D,OACtC,OAAO,EAKX,OAFiCq/D,GAASI,WAAWpE,EAAOr7D,QAEtCogE,iBAAiBpgE,GAQnC8uE,cAAAA,CACJzT,EACAlB,GAEA,SAAUkB,EAAOlB,WAAakB,EAAOlB,YAAcA,GAQ/C4U,UAAAA,CAAW1T,EAA0BhB,GACzC,SAAUgB,EAAOhB,OAASgB,EAAOhB,QAAUA,GAOvC+U,aAAAA,CAAc1nE,GAClB,OAAsC,IAA/BA,EAAIvO,QAAQyvD,GAOb8mB,mBAAAA,CAAoBhoE,GAC1B,OAAgE,IAAzDA,EAAIvO,QAAQ2vD,GAMvB+qB,iCAAAA,CAAkC9P,GAC9B,MAAO,GAAPr7C,OAAUogC,EAAsC,KAAApgC,OAAIx9B,KAAKwuE,SAAQ,KAAAhxC,OAAIq7C,GAQzE,eAAO+P,CAAY/wB,EAAQgxB,GACvB,IAAK,MAAM9qE,KAAgB8qE,EACvBhxB,EAAI95C,GAAgB8qE,EAAK9qE,GAE7B,OAAO85C,GAKT,MAAOixB,WAA4BhK,GACrC,gBAAMsC,GACF,MAAMvV,GAAsBJ,IAEhC3K,UAAAA,GACI,MAAM+K,GAAsBJ,IAEhC,0BAAM4V,GACF,MAAMxV,GAAsBJ,IAEhC4a,oBAAAA,GACI,MAAMxa,GAAsBJ,IAEhC,8BAAM8W,GACF,MAAM1W,GAAsBJ,IAEhC2W,wBAAAA,GACI,MAAMvW,GAAsBJ,IAEhC,+BAAM8V,GACF,MAAM1V,GAAsBJ,IAEhC8b,yBAAAA,GACI,MAAM1b,GAAsBJ,IAEhCgW,cAAAA,GACI,MAAM5V,GAAsBJ,IAEhC0Y,cAAAA,GACI,MAAMtY,GAAsBJ,IAEhCsd,kBAAAA,GACI,MAAMld,GAAsBJ,IAEhCud,kBAAAA,GACI,MAAMnd,GAAsBJ,IAEhCwd,oBAAAA,GACI,MAAMpd,GAAsBJ,IAEhCgZ,oBAAAA,GACI,MAAM5Y,GAAsBJ,IAEhC6Y,wBAAAA,GACI,MAAMzY,GAAsBJ,IAEhCyd,kBAAAA,GACI,MAAMrd,GAAsBJ,IAEhC0d,kBAAAA,GACI,MAAMtd,GAAsBJ,IAEhCsZ,UAAAA,GACI,MAAMlZ,GAAsBJ,IAEhCuY,OAAAA,GACI,MAAMnY,GAAsBJ,IAEhCgX,cAAAA,GACI,MAAM5W,GAAsBJ,IAEhC8U,YAAAA,GACI,MAAM1U,GAAsBJ,KCptDvB,MAAA2d,GAAkD,CAC3DC,0B/C8M4C,I+C7M5CC,sBAAsB,GAGpBC,GAAyD,CAC3DhlB,eAAgBA,OAGhBE,mBAAmB,EACnBC,SAAUb,GAASM,KACnBrE,cAAetG,EAAU0B,cAGvBsuB,GAAgD,CAClDC,2BAA2B,GAGzBC,GAAiD,CACnD,yBAAMC,GACF,MAAM9d,GAAsBJ,KAEhC,0BAAMme,GACF,MAAM/d,GAAsBJ,MAI9Boe,GAAoC,CACtCC,IAAKtwB,EAAUE,IACfjJ,QAASA,GACTs5B,IAAKvwB,EAAU0B,aACf8uB,GAAIxwB,EAAU0B,cAGZ+uB,GAAgD,CAClDC,aAAc1wB,EAAU0B,aACxBivB,qBAAiBhzB,GAGfizB,GAAiD,CACnDC,mBAAoBvhB,GACpBwhB,OAAQ,GAAF9sD,OAAKg8B,EAAUM,wBAGnBywB,GAAwD,CAC1DC,YAAa,CACTC,QAAS,GACTC,WAAY,KA0Ed,SAAUC,GAAmB91B,GAC/B,OACIA,EAAO+1B,YAAY/R,UAAUp5E,QAAQ+5E,eAAiB3Q,EAE9D,CC3Pa,MAAAgiB,GAAuC,CAChDlB,oBAAqBA,IACV1xC,QAAQC,OACX2zB,GAAsBJ,KAG9Bme,qBAAsBA,IACX3xC,QAAQC,OACX2zB,GAAsBJ,MC7CrBqf,GAKW,qBALXA,GAWmB,6BAXnBA,GAiBW,qBAjBXA,GAuBgB,0BAvBhBA,GA6BU,oBA7BVA,GAoCgB,0BApChBA,GA2Ca,uBA3CbA,GAiDyB,mCAjDzBA,GAuDU,oBAvDVA,GA6DsB,gCA7DtBA,GAmEuB,iCAnEvBA,GAoEc,wBApEdA,GA0EwB,kCA1ExBA,GAgFE,YAhFFA,GAuFL,kDAvFKA,GAmG4B,sCAnG5BA,GA2G0B,oCA3G1BA,GA6GL,+CA7GKA,GA+GL,oDA/GKA,GAiIL,wCAjIKA,GAsIuB,iCAtIvBA,GA4IL,uDA5IKA,GAkJL,+CAlJKA,GAwJL,2CAxJKA,GA8Jc,wBA9JdA,GA+J2B,qCA/J3BA,GAiKL,gDAjKKA,GAuKmB,6BAvKnBA,GA4Kc,wBA5KdA,GAiLgB,0BAjLhBA,GAmLoB,8BAnLpBA,GAqLQ,kBArLRA,GA0LsB,gCA1LtBA,GA+LyB,mCA/LzBA,GAgM0B,oCAhM1BA,GAiMe,yBAjMfA,GAkMmB,6BAlMnBA,GAwML,gDAxMKA,GA0ML,kDA1MKA,GA4ML,0DA5MKA,GAiNO,iBAjNPA,GAkNU,oBAlNVA,GAuNqB,+BAvNrBA,GAwNW,qBAxNXA,GAyNU,oBAzNVA,GA0NqB,+BA1NrBA,GA2NW,qBA3NXA,GA4NqB,+BA5NrBA,GAiOe,yBAjOfA,GAkOsB,gCAlOtBA,GAmOyB,mCAnOzBA,GAwOY,sBAxOZA,GAyOY,sBAzOZA,GA8OkB,4BA9OlBA,GA+OY,sBA/OZA,GAqPL,2CArPKA,GAsPuB,iCAtPvBA,GA0PL,gDA1PKA,GA4PL,wCA5PKA,GA8PL,0CA9PKA,GA+PwB,kCA/PxBA,GAiQL,iDAjQKA,GAsQoB,8BAtQpBA,GAuQyB,mCAvQzBA,GAwQyB,mCAxQzBA,GA0QgB,0BA1QhBA,GAgRyB,wBAhRzBA,GAiR+B,8BAjR/BA,GAwRsB,gCAxRtBA,GA4RW,qBA5RXA,GAiSqB,+BAjSrBA,GAkSoB,8BAlSpBA,GAmSY,sBAnSZA,GAoSI,cApSJA,GAqSY,sBArSZA,GA0SU,oBA1SVA,GA2Sa,uBA3SbA,GA4S0B,oCA5S1BA,GA6SK,eA7SLA,GA8SQ,kBA9SRA,GA+SK,eA/SLA,GAgTQ,kBAhTRA,GAiTK,eAjTLA,GAkTK,eAlTLA,GAmTA,UAnTAA,GAoTA,UApTAA,GAqTO,iBArTPA,GAsTW,qBAoPXC,IA9OT,IAAI/+E,IAAI,CACJ,CAAC8+E,GAAsC,YACvC,CAACA,GAA8C,UAC/C,CAACA,GAAsC,OACvC,CAACA,GAA2C,YAC5C,CAACA,GAAqC,WACtC,CAACA,GAAwC,cACzC,CACIA,GACA,oBAEJ,CAACA,GAAqC,iBACtC,CAACA,GAAiD,oBAClD,CAACA,GAAkD,qBACnD,CAACA,GAAmD,gBACpD,CAACA,GAA6B,UAC9B,CACIA,GACA,2BAEJ,CAnP4B,iCAqPxB,2BAEJ,CACIA,GACA,kBAEJ,CAjPiC,sCAmP7B,4BAEJ,CACIA,GACA,qBAEJ,CACIA,GACA,oBAEJ,CACIA,GACA,0BAEJ,CArPc,kBAqPuB,mBACrC,CAlPgC,qCAoP5B,kBAEJ,CAlPkB,uBAkPuB,cACzC,CACIA,GACA,oBAEJ,CAACA,GAAkD,cACnD,CACIA,GACA,0BAEJ,CACIA,GACA,kBAEJ,CACIA,GACA,0BAEJ,CAACA,GAAyC,eAC1C,CACIA,GACA,yBAEJ,CACIA,GACA,gCAEJ,CAACA,GAA8C,iBAC/C,CAACA,GAAyC,eAC1C,CAACA,GAA2C,cAC5C,CACIA,GACA,yBAEJ,CAACA,GAAmC,aACpC,CAACA,GAAuC,eACxC,CAACA,GAA+B,eAChC,CAACA,GAAuC,uBACxC,CAACA,GAAiD,mBAClD,CACIA,GACA,uBAEJ,CACIA,GACA,kCAEJ,CAACA,GAA0C,qBAC3C,CAACA,GAA8C,yBAE/C,CACIA,GACA,oCAEJ,CACIA,GACA,6BAEJ,CACIA,GACA,2BAGJ,CAACA,GAAkC,kBAEnC,CACIA,GACA,2BAEJ,CAACA,GAAsC,kBACvC,CAACA,GAAqC,iBACtC,CAACA,GAAsC,kBACvC,CACIA,GACA,wBAEJ,CAACA,GAAgD,oBAEjD,CAACA,GAA0C,gBAC3C,CAACA,GAAiD,sBAClD,CACIA,GACA,4BAEJ,CAACA,GAAuC,cACxC,CAACA,GAAuC,cACxC,CAACA,GAA6C,oBAC9C,CAACA,GAAuC,kBACxC,CACIA,GACA,0BAEJ,CACIA,GACA,6BAEJ,CArNA,4CAuNI,iCAEJ,CACIA,GACA,wBAEJ,CACIA,GACA,iBAEJ,CACIA,GACA,wBAEJ,CACIA,GACA,uBAEJ,CACIA,GACA,0BAEJ,CAACA,GAA+C,oBAChD,CACIA,GACA,yBAEJ,CACIA,GACA,wBAEJ,CAACA,GAA2C,iBAC5C,CAnO4B,iCAqOxB,0BAEJ,CArOA,kDAuOI,oBAEJ,CACIA,GACA,yBAEJ,CACIA,GACA,4BAEJ,CA3OA,0CA6OI,gBAEJ,CA7OgC,qCA+O5B,oBAEJ,CACIA,GACA,0BAEJ,CAjPsB,2BAiPuB,iBAC7C,CAACA,GAAsC,sBACvC,CACIA,GACA,2BAEJ,CAACA,GAA+C,qBAChD,CAACA,GAAqC,gBACtC,CAACA,GAAwC,mBACzC,CACIA,GACA,gCAEJ,CAACA,GAAgC,gBACjC,CAACA,GAAmC,mBACpC,CAACA,GAAgC,WACjC,CAACA,GAAmC,cACpC,CAACA,GAAgC,aACjC,CAACA,GAAgC,aACjC,CAACA,GAA2B,WAC5B,CAACA,GAA2B,WAC5B,CAACA,GAAkC,aACnC,CAACA,GAAsC,oBAW/B,GA2V8B,IAAI1+E,IAAI,CAClD,kBACA,aACA,cACA,mBACA,iBACA,mBACA,eACA,cACA,SACA,iBACA,iBACA,iBACA,wBACA,qCCj5BS4+E,GACTC,gBAAAA,IAGAC,cAAAA,IAGAC,gBAAAA,GACI,OAAO,YAIFC,GACTC,UAAAA,GACI,MAAO,cAGXJ,gBAAAA,CACIK,EACAxrB,GAEA,MAAO,CACHvpD,IAAKA,IAAM,KACXg1E,QAASA,OACT7+E,IAAKA,OACL8+E,UAAWA,OACXnhF,MAAO,CACHohF,QAASzrF,KAAKqrF,aACdv7D,OAAQi7D,GACRlS,UAAW,GACX6S,YAAa,GACbC,eAAgB,GAChBnd,SAAU,GACV7qE,KAAM2nF,EACNM,YAAanwF,KAAKH,MAClBwkE,cAAeA,GAAiB,IAEpC+rB,YAAa,IAAIb,IAIzBc,2BAAAA,GACI,OAAO,IAAId,GAEfe,mBAAAA,GACI,OAAO,EAGXC,mBAAAA,IAIAC,eAAAA,IAIAf,cAAAA,GACI,OAAO,KAGXgB,mBAAAA,IAIAtqB,yBAAAA,GACI,OAAO,EAGXD,sBAAAA,GACI,MAAO,GAGXwqB,UAAAA,IAIAnG,SAAAA,IAIAoG,eAAAA,IAIAC,yBAAAA,WC3FSC,GAMTC,gBAAAA,CACI9rF,EACAhB,GAEA,OAAO6sF,GAAiBE,sBAAsB/rF,EAAKhB,GAQvDgtF,gBAAAA,CACIhsF,EACAhB,GAEA,OAAO6sF,GAAiBE,sBAAsB/rF,EAAKhB,GAQ/C,4BAAO+sF,CACX/rF,EACAhB,GAQA,OANIA,EAAQitF,UACRtiF,OAAOuS,SAAS7M,QAAQrP,GAExB2J,OAAOuS,SAAS7a,OAAOrB,GAGpB,IAAIw3C,SAAS5nB,IAChBh0B,YAAW,KACPg0B,GAAQ,KACT5wB,EAAQE,aCzCjB,MAAOgtF,WAAqBrtB,GAK9B1uD,WAAAA,CACI5R,EACA4tF,EACAC,GAEAntB,MAAM1gE,EAAMugE,UAAWvgE,EAAMwgE,aAAcxgE,EAAM4gE,UAEjD79D,OAAO49D,eAAe3/D,KAAM2sF,GAAapmF,WACzCvG,KAAK2D,KAAO,eACZ3D,KAAKhB,MAAQA,EACbgB,KAAK4sF,WAAaA,EAClB5sF,KAAK6sF,gBAAkBA,GAWzB,SAAUC,GACZ9tF,EACA4tF,EACAC,EACAE,GAGA,OADA/tF,EAAMwgE,aAAe,GAAHhiC,OAAMx+B,EAAMwgE,aAAY,sCAAAhiC,OAAoD,OAAfuvD,QAAe,IAAfA,OAAe,EAAfA,EAAiBppF,KAAI,oBAAA65B,OAAkC,OAAfuvD,QAAe,IAAfA,OAAe,EAAfA,EAAiB58E,SACjI,IAAIw8E,GAAa3tF,EAAO4tF,EAAYC,EAC/C,CCxCO,MAAMG,GAAiB,mBACjBC,GAAc,gBACdC,GAAc,gBACdC,GAAoB,qBACpBC,GAAmB,qBACnBC,GAAiB,mBACjBC,GAAgB,mBAChBC,GACT,yCACSC,GAAqB,wBACrBC,GAA+B,kCAC/BC,GAAwB,0BACxBC,GAAmB,qBACnBC,GAAmB,qBACnBC,GAAgB,iBAChBC,GAAsB,wBACtBC,GAAuB,yBACvBC,GAAmB,qBACnBC,GAAoB,sBACpBC,GAAoB,sBACpBC,GAA0B,4BAC1BC,GAA0B,4BAC1BC,GAAiB,mBACjBC,GAAyB,4BACzBC,GAA2B,+BAC3BC,GACT,4CACSC,GAAyB,6BACzBC,GAAmB,qBACnBC,GAAwB,0BACxBC,GAAkB,oBAClBtjB,GAAwB,0BACxBlM,GAAoB,sBACpByvB,GAAmB,qBACnBC,GAAwB,2BACxBC,GAAoB,uBACpBC,GAAoB,uBACpBC,GAAmB,qBACnBC,GACT,wCACSC,GACT,uCACSC,GAAsB,uBACtBC,GACT,+CACSC,GAAyB,2BACzBC,GAA8B,iCAC9BC,GACT,oCACSC,GACT,0CACSC,GAA2B,8BAC3BC,GAAsB,wBACtBC,GAAyB,4BACzBC,GAAuB,0BACvBC,GAAuB,0BACvBC,GAA6B,iCCpDpCC,GAAY,+CAKLC,GAA2B,CACpC,CAACjD,IACG,+DACJ,CAACC,IACG,sDACJ,CAACC,IACG,yEACJ,CAACC,IACG,kDACJ,CAACC,IACG,mEACJ,CAACC,IAAuC,qHAAH7vD,OAAwHwyD,IAC7J,CAAC1C,IACG,oFACJ,CAACC,IAA0D,0GAAH/vD,OAA6GwyD,IACrK,CAACxC,IACG,8EACJ,CAACC,IACG,0EACJ,CAACC,IAA8C,qIAAHlwD,OAAwIwyD,IACpL,CAACrC,IACG,2GACJ,CAACC,IACG,wDACJ,CAACC,IAAsC,2BACvC,CAACC,IAA4C,sDAAHtwD,OAAyDwyD,IACnG,CAACjC,IAA6C,uDAAHvwD,OAA0DwyD,IACrG,CAAChC,IACG,wLACJ,CAACC,IAA0C,2FAAHzwD,OAA8FwyD,IACtI,CAAC9B,IACG,sFACJ,CAACC,IACG,qDACJ,CAACC,IACG,kFACJ,CAACC,IACG,0JACJ,CAACC,IACG,iHACJ,CAACC,IACG,mCACJ,CAACC,IACG,gDACJ,CAACC,IACG,iGACJ,CAACC,IAAyC,qBAC1C,CAACC,IACG,0EACJ,CAACC,IAAwC,wBACzC,CAACtjB,IACG,2DACJ,CAAClM,IACG,4IACJ,CAACyvB,IACG,kFACJ,CAACC,IACG,yDACJ,CAACC,IAA0C,gCAC3C,CAACC,IACG,6DACJ,CAACC,IACG,+FACJ,CAACC,IACG,0EACJ,CAACC,IACG,8DACJ,CAACC,IACG,gMACJ,CAACC,IAA+D,kDAAH7xD,OAAqDwyD,IAClH,CAACV,IACG,0EACJ,CAACC,IACG,kGACJ,CAACC,IAAuD,gIAAHhyD,OAAmIwyD,IACxL,CAACP,IAA6D,kGAAHjyD,OAAqGwyD,IAChK,CAACN,IACG,oHACJ,CAACC,IACG,iCACJ,CAACC,IACG,2GACJ,CAACC,IACG,0CACJ,CAACC,IACG,mCACJ,CAACC,IACG,kCAyPF,MAAOG,WAAyB5wB,GAClC1uD,WAAAA,CAAY2uD,EAAmBK,GAC3BF,MAAMH,EAAW0wB,GAAyB1wB,GAAYK,GAEtD79D,OAAO49D,eAAe3/D,KAAMkwF,GAAiB3pF,WAC7CvG,KAAK2D,KAAO,oBAIJ,SAAAwsF,GACZ5wB,EACAK,GAEA,OAAO,IAAIswB,GAAiB3wB,EAAWK,EAC3C,OCxVawwB,GAOT,yBAAMzG,CACFlpF,EACAhB,GAEA,IAAIs+E,EACA8O,EAA0C,CAAC,EAC3CwD,EAAiB,EACrB,MAAMC,EAAaC,GAAgB9wF,GACnC,IACIs+E,QAAiByS,MAAM/vF,EAAK,CACxBmE,OAAQi+D,GACR4tB,QAASH,GAEhB,CAAC,MAAOz+E,GACL,MAAMi7E,GACFqD,GACI/lF,OAAOsmF,UAAUC,OACX9B,GACAvjB,SAEVnU,OACAA,EACAtlD,EAEP,CAEDg7E,EAAkB+D,GAAc7S,EAAS0S,SACzC,IAEI,OADAJ,EAAiBtS,EAASjuD,OACnB,CACH2gE,QAAS5D,EACTj7E,WAAamsE,EAAS8K,OACtB/4D,OAAQugE,EAEf,CAAC,MAAOx+E,GACL,MAAMi7E,GACFqD,GACIrB,IAEJuB,EACAxD,EACAh7E,EAEP,EASL,0BAAM+3E,CACFnpF,EACAhB,GAEA,MAAMoxF,EAAWpxF,GAAWA,EAAQmS,MAAS,GACvC0+E,EAAaC,GAAgB9wF,GAEnC,IAAIs+E,EACAsS,EAAiB,EACjBxD,EAA0C,CAAC,EAC/C,IACI9O,QAAiByS,MAAM/vF,EAAK,CACxBmE,OAAQi+D,GACR4tB,QAASH,EACT1+E,KAAMi/E,GAEb,CAAC,MAAOh/E,GACL,MAAMi7E,GACFqD,GACI/lF,OAAOsmF,UAAUC,OACXvxB,GACAkM,SAEVnU,OACAA,EACAtlD,EAEP,CAEDg7E,EAAkB+D,GAAc7S,EAAS0S,SACzC,IAEI,OADAJ,EAAiBtS,EAASjuD,OACnB,CACH2gE,QAAS5D,EACTj7E,WAAamsE,EAAS8K,OACtB/4D,OAAQugE,EAEf,CAAC,MAAOx+E,GACL,MAAMi7E,GACFqD,GACIrB,IAEJuB,EACAxD,EACAh7E,EAEP,GAQT,SAAS0+E,GAAgB9wF,GACrB,IACI,MAAMgxF,EAAU,IAAIK,QACpB,IAAMrxF,IAAWA,EAAQgxF,QACrB,OAAOA,EAEX,MAAMM,EAAiBtxF,EAAQgxF,QAI/B,OAHA1uF,OAAOivF,QAAQD,GAAgBniE,SAAQ05C,IAAiB,IAAf9rD,EAAKrX,GAAMmjE,EAChDmoB,EAAQQ,OAAOz0E,EAAKrX,MAEjBsrF,CACV,CAAC,MAAO5+E,GACL,MAAMi7E,GACFqD,GAAuBN,SACvB14B,OACAA,EACAtlD,EAEP,CACL,CAOA,SAAS++E,GAAcH,GACnB,IACI,MAAMS,EAAqC,CAAC,EAI5C,OAHAT,EAAQ7hE,SAAQ,CAACzpB,EAAeqX,KAC5B00E,EAAW10E,GAAOrX,KAEf+rF,CACV,CAAC,MAAOr/E,GACL,MAAMs+E,GACFL,GAEP,CACL,CC7JM,SAAUqB,GAAUx7B,GACtB,OAAOj1D,mBACHurE,GAAatW,GACR7lD,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,KAE5B,CAMM,SAAUshF,GAAaC,GACzB,OAAOC,GAAaD,GACfvhF,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACxB,CAMM,SAAUm8D,GAAatW,GACzB,OAAO27B,IAAa,IAAIC,aAAcC,OAAO77B,GACjD,CAMA,SAAS27B,GAAaG,GAClB,MAAMC,EAAYvtF,MAAMi2E,KAAKqX,GAASxtF,GAAMwY,OAAOk1E,cAAc1tF,KAAIy9B,KACjE,IAEJ,OAAOkwD,KAAKF,EAChB,CChCM,SAAU1lB,GAAarW,GACzB,OAAO,IAAIk8B,aAAcpe,OAAOqe,GAAen8B,GACnD,CAMM,SAAUm8B,GAAeC,GAC3B,IAAIC,EAAgBD,EAAajiF,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClE,OAAQkiF,EAAc/3F,OAAS,GAC3B,KAAK,EACD,MACJ,KAAK,EACD+3F,GAAiB,KACjB,MACJ,KAAK,EACDA,GAAiB,IACjB,MACJ,QACI,MAAM7B,GACFR,IAGZ,MAAM+B,EAAYO,KAAKD,GACvB,OAAOE,WAAW9X,KAAKsX,GAAYxmC,GAAMA,EAAEinC,YAAY,IAAM,GACjE,CCnBA,MACMC,GAAU,UACVC,GAAO,OAEPC,GAAgB,UAIhBC,GAA8B,IAAIL,WAAW,CAAC,EAAM,EAAM,IAE1DM,GAAa,mBAEbC,GAAa,IAAIC,YAAY,GAG7BC,GAAM,MAENC,GAAU,UACVC,GAAU,UAMVC,GAAgD,CAClDnvF,KAzByB,oBA0BzBovF,KAAMT,GACNU,cArBmB,KAsBnBC,eAAgBV,IA+BbrpE,eAAegqE,GAClBC,EACA3N,EACA1lB,GAEiB,OAAjB0lB,QAAiB,IAAjBA,GAAAA,EAAmBwG,oBACflB,GACAhrB,GAEJ,MACMn7D,GADU,IAAI4sF,aACCC,OAAO2B,GAC5B,OAAO/oF,OAAOgpF,OAAOC,OAAOroD,OACxBsnD,GACA3tF,EAER,CAMM,SAAU2uF,GAAgBC,GAC5B,OAAOnpF,OAAOgpF,OAAOE,gBAAgBC,EACzC,CAMA,SAASC,KAEL,OADAppF,OAAOgpF,OAAOE,gBAAgBb,IACvBA,GAAW,EACtB,UAOgB1mB,KACZ,MAAM0nB,EAAmBh4F,KAAKH,MACxBo4F,EAA+B,KAApBF,MAAiD,KAApBA,MAGxCG,EAAQ,IAAIzB,WAAW,IAEvB0B,EAAQ30F,KAAK40F,MAAMH,EAAW,GAAK,IAEnCI,EAAUJ,EAAY,GAAK,GAAK,EAEhCK,EAAUP,KAEhBG,EAAM,GAAKF,EAAmB,GAAK,GACnCE,EAAM,GAAKF,EAAmB,GAAK,GACnCE,EAAM,GAAKF,EAAmB,GAAK,GACnCE,EAAM,GAAKF,EAAmB,MAC9BE,EAAM,GAAKF,EAAmB,IAC9BE,EAAM,GAAKF,EACXE,EAAM,GAAK,IAAQC,IAAU,EAC7BD,EAAM,GAAKC,EACXD,EAAM,GAAK,IAAQG,IAAY,GAC/BH,EAAM,GAAKG,IAAY,GACvBH,EAAM,IAAMG,IAAY,EACxBH,EAAM,IAAMG,EACZH,EAAM,IAAMI,IAAY,GACxBJ,EAAM,IAAMI,IAAY,GACxBJ,EAAM,IAAMI,IAAY,EACxBJ,EAAM,IAAMI,EAEZ,IAAIzgF,EAAO,GACX,IAAK,IAAI3S,EAAI,EAAGA,EAAIgzF,EAAM15F,OAAQ0G,IAC9B2S,GAAQk/E,GAAWwB,OAAOL,EAAMhzF,KAAO,GACvC2S,GAAQk/E,GAAWwB,OAAkB,GAAXL,EAAMhzF,IACtB,IAANA,GAAiB,IAANA,GAAiB,IAANA,GAAiB,IAANA,IACjC2S,GAAQ,KAGhB,OAAOA,CACX,CAsBO4V,eAAe+qE,GAAUz3E,GAC5B,OAAOpS,OAAOgpF,OAAOC,OAAOa,UpDOF,MoDLtB13E,EAER,CAyCO0M,eAAeirE,KAClB,MAAM33E,QAAY43E,KAGZC,EAAM,CACRC,IAAK,MACLC,IAAK,MACLC,EALWpD,GAAa,IAAIc,WAAW11E,KAQ3C,OAAOyvD,GAAae,KAAKynB,UAAUJ,GACvC,CAwBOnrE,eAAewrE,GAClBC,EACAC,GAEA,MAAMC,EAAcD,EAAOllF,MAAM,KACjC,GAA2B,IAAvBmlF,EAAY56F,OACZ,MAAMk2F,GACFJ,GACA,cAIR,MAAMvzE,QA7BH0M,eAA4ByrE,GAC/B,MAAMG,EAAgB9oB,GAAa2oB,GAG7BI,EAAYjD,GAFF9kB,KAAKC,MAAM6nB,GACJN,GAGvB,OAAOpqF,OAAOgpF,OAAOC,OAAO2B,UAAUrC,GAAKoC,EAAW3C,IAAS,EAAO,CAClES,IAER,CAoBsBoC,CAAaN,GAAQ1lF,OAAM,KACzC,MAAMkhF,GACFJ,GACA,iBAIR,IACI,MAAMmF,GAAS,IAAI3D,aAAcC,OAAOqD,EAAY,IAC9CM,EAAKrD,GAAe+C,EAAY,IAChCO,EAAatD,GAAe+C,EAAY,IACxCzzF,EAAM0wF,GAAe+C,EAAY,IACjCQ,EAAiC,EAAjBj0F,EAAIk0F,WAGpBC,EAAgB,IAAIrD,WAAWkD,EAAWn7F,OAASmH,EAAInH,QAC7Ds7F,EAAc3mF,IAAIwmF,GAClBG,EAAc3mF,IAAIxN,EAAKg0F,EAAWn7F,QAElC,MAAMu7F,QAAsBprF,OAAOgpF,OAAOC,OAAOoC,QAC7C,CACI9xF,KAAMyuF,GACN+C,GAAIA,EACJO,UAAWL,EACXM,eAAgBT,GAEpB14E,EACA+4E,GAGJ,OAAO,IAAI1D,aAAcpe,OAAO+hB,EACnC,CAAC,MAAO3jF,GACL,MAAMs+E,GACFJ,GACA,UAEP,CACL,CAKO7mE,eAAekrE,KAClB,MAAM53E,QAAYpS,OAAOgpF,OAAOC,OAAOuC,YACnC,CACIjyF,KAAMyuF,GACNn4F,OAAQ,MAEZ,EACA,CAAC24F,GAASC,KAEd,OAAOzoF,OAAOgpF,OAAOC,OAAOa,UAAUvB,GAAKn2E,EAC/C,CAOO0M,eAAe2sE,GAAaC,GAC/B,OAAO1rF,OAAOgpF,OAAOC,OAAO2B,UAAUrC,GAAKmD,EAASzD,IAAM,EAAO,CArSlD,aAwSnB,CASAnpE,eAAe6sE,GACXD,EACAz/B,EACApwD,GAEA,OAAOmE,OAAOgpF,OAAOC,OAAO0C,UACxB,CACIpyF,KAAM0uF,GACN2D,KAAM3/B,EACN08B,KAAMT,GACNpiF,MAAM,IAAIqhF,aAAcC,OAAOvrF,IAEnC6vF,EACA,CAAEnyF,KAAMyuF,GAASn4F,OAAQ,MACzB,EACA,CAAC24F,GAASC,IAElB,CAOO3pE,eAAe+sE,GAClBH,EACAI,EACAjwF,GAEA,MAAMkwF,GAAc,IAAI5E,aAAcC,OAAO0E,GAEvC7/B,EAAQjsD,OAAOgpF,OAAOE,gBAAgB,IAAIpB,WAAW,KACrDkE,QAAmBL,GAAUD,EAASz/B,EAAOpwD,GAC7CsvF,QAAsBnrF,OAAOgpF,OAAOC,OAAO4C,QAC7C,CACItyF,KAAMyuF,GACN+C,GAAI,IAAIjD,WAAW,KAEvBkE,EACAD,GAGJ,MAAO,CACHxxF,KAAMysF,GAAa,IAAIc,WAAWqD,IAClCl/B,MAAO+6B,GAAa/6B,GAE5B,CASOntC,eAAeusE,GAClBK,EACAz/B,EACApwD,EACAsvF,GAEA,MAAMY,EAAcrE,GAAeyD,GAC7Ba,QAAmBL,GAAUD,EAAShE,GAAez7B,GAAQpwD,GAC7DuvF,QAAsBprF,OAAOgpF,OAAOC,OAAOoC,QAC7C,CACI9xF,KAAMyuF,GACN+C,GAAI,IAAIjD,WAAW,KAEvBkE,EACAD,GAGJ,OAAO,IAAItE,aAAcpe,OAAO+hB,EACpC,CAMOtsE,eAAesjD,GAAW6pB,GAC7B,MAAMC,QAAgCpD,GAAamD,GAEnD,OAAOjF,GADW,IAAIc,WAAWoE,GAErC,CC5ZM,SAAUC,GAAUpzE,GAEtBA,EAAcxG,SAASo2E,KAAO,GACoB,oBAAvC5vE,EAAcqzE,QAAQC,cAE7BtzE,EAAcqzE,QAAQC,aAClB,KACA,GAAE,GAAAj5D,OACCra,EAAcxG,SAAS+5E,QAAMl5D,OAAGra,EAAcxG,SAASg6E,UAAQn5D,OAAGra,EAAcxG,SAASoD,QAGxG,UAcgB62E,KACZ,OAAOxsF,OAAOhQ,SAAWgQ,MAC7B,UAoBgBysF,KACZ,MAAyB,qBAAXzsF,QAA0BA,OAAOuS,SACzCvS,OAAOuS,SAASyG,KAAK1T,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC9C,EACV,UAwCgBonF,KAEZ,GA3DsB,qBAAX1sF,QACLA,OAAO2sF,QACT3sF,OAAO2sF,SAAW3sF,QACK,kBAAhBA,OAAOzG,MACoD,IAAlEyG,OAAOzG,KAAKsK,QAAQ,GAADuvB,OAAIilC,GAAkC,MAwDzD,MAAM0tB,GAAuBjC,GAErC,UAMgB8I,KACZ,GAAsB,qBAAX5sF,OACP,MAAM+lF,GACFxB,GAGZ,CAMM,SAAUsI,GAA8BC,GAC1C,IAAKA,EACD,MAAM/G,GACFV,GAGZ,CAMM,SAAU0H,GAAeD,GAE3BF,gBAzDA,GAJuB9a,GAAU4B,4BAC7B1zE,OAAOuS,SAASo2E,OAGE6D,KAClB,MAAMzG,GAAuBlC,GAErC,CAyDImJ,GAGAN,KAGAG,GAA8BC,EAClC,CAOgB,SAAAG,GACZH,EACAriC,GAKA,GAHAsiC,GAAeD,GApEb,SAAgCI,GAClC,GAAIV,OAAiBU,EAEjB,MAAMnH,GAAuBnC,GAErC,CAgEIuJ,CAAsB1iC,EAAO2iC,OAAOF,uBAGhCziC,EAAOrlC,MAAMioE,gBAAkB70B,KAC9B/N,EAAOrlC,MAAMkoE,uBAEd,MAAMp3B,GACFH,GAGZ,CAOM,SAAUlK,GAAW4iB,GACvB,MAAMvtB,EAAO55C,SAASqE,cAAc,QACpCu1C,EAAKviC,IAAM,aACXuiC,EAAKloC,KAAO,IAAIu0E,IAAI9e,GAAW6d,OAC/BprC,EAAKxe,YAAc,YACnBp7B,SAASkjC,KAAKpG,YAAY8c,GAG1BlhD,OAAO/N,YAAW,KACd,IACIqV,SAASkjC,KAAKrG,YAAY+c,EAC7B,CAAC,MAAAssC,GAAO,IACV,IACP,CCtKO,MACMC,GAA4B,ICnClC,MACMpnC,GAAU,eCuBDqnC,GAMR,qBAAOvzB,CAAeL,EAAiB/zD,GAC7C,OAAQ+zD,GACJ,KAAKL,GAASniE,MAGV,YADA3C,QAAQC,MAAMmR,GAElB,KAAK0zD,GAASM,KAGV,YADAplE,QAAQmR,KAAKC,GAEjB,KAAK0zD,GAAS0B,QAGV,YADAxmE,QAAQg5F,MAAM5nF,GAElB,KAAK0zD,GAASsB,QAGV,YADApmE,QAAQi5F,KAAK7nF,GAEjB,QAGI,YADApR,QAAQoI,IAAIgJ,IAKxBS,WAAAA,CAAYikD,GAAqB,IAAAojC,EAAAC,EAS7B,IAAIC,EAHJn4F,KAAKo4F,mBAAuC,qBAAXhuF,OACjCpK,KAAK60D,OF+MP,SAA4ByT,EAO9B+vB,GAA6B,IALzBC,KAAMC,EACN/oE,MAAOgpE,EACPhB,OAAQiB,EACRC,UAAWC,GACCrwB,EAIhB,MAAMswB,EAA4C,CAC9CpqB,SAAUhV,EAAU0B,aACpB2d,UAAW,GAAFr7C,OAAKg8B,EAAUI,mBACxB0uB,iBAAkB,GAClBhK,uBAAwB9kB,EAAU0B,aAClCqV,kBAAmB/W,EAAU0B,aAC7B29B,YACsB,qBAAXzuF,OAAyBysF,KAA+B,GACnEiC,sBAAuBt/B,EAAU0B,aACjC69B,2BAA2B,EAC3BC,mBAAoB,GACpBxf,aAAc3Q,GACdowB,YAAa,CACTC,mBAAoBl8B,EACpBm8B,cAAe,CACX3/B,EAAUgB,aACVhB,EAAUiB,cACVjB,EAAUkB,uBAGlB0+B,kBAAmB,CACf/O,mBAAoBvhB,GACpBwhB,OAAQ9wB,EAAU0B,cAEtBm+B,4BAA4B,EAC5BC,uBAAuB,EACvBC,eAAe,EACfC,wBAAwB,GAItBhQ,EAAgD,CAClDiO,cAAe70B,GACf62B,uBAAwB72B,GACxB80B,wBAAwB,EACxBgC,eAAe,EAEfC,yBACInB,GACAA,EAAef,gBAAkB70B,IAGrC6mB,2BAA2B,GAIzBmQ,EAAwC,CAE1Cr1B,eAAgBA,OAGhBG,SAAUb,GAASM,KACnBM,mBAAmB,GAIjBo1B,EAA8BzxB,GAAAA,GAAA,GAC7BghB,IAAsB,IACzBrlB,cAAe61B,EACfE,cAAezB,EACT,IAAIjI,GACJvF,GACNkP,iBAAkB,IAAIzN,GACtB0N,iBAAkB,EAElBC,mBACmB,OAAfxB,QAAe,IAAfA,OAAe,EAAfA,EAAiBuB,mBAvTW,IAwThCE,mBACmB,OAAfzB,QAAe,IAAfA,OAAe,EAAfA,EAAiBuB,mBAAoBnC,GACzCsC,kBAAmB,EACnBC,0BAzTmC,IA0TnCC,aAAa,EACb/C,uBAAuB,EACvBgD,qBAAqB,EACrBC,8BACmB,OAAf9B,QAAe,IAAfA,OAAe,EAAfA,EAAiB8B,+BA7T6B,IA+TlDC,yBAA0B/3B,KAGxBg4B,EAAqBryB,GAAAA,GAAAA,GAAA,GACpByxB,GACApB,GAAe,IAClB10B,eAA8B,OAAf00B,QAAe,IAAfA,OAAe,EAAfA,EAAiB10B,gBAAiB61B,IAG/CrP,EAA+D,CACjEC,YAAa,CACTC,QAASjxB,EAAU0B,aACnBwvB,WAAYlxB,EAAU0B,cAE1Bw/B,OAAQ,IAAItP,KAKC,OAAbmN,QAAa,IAAbA,OAAa,EAAbA,EAAe/e,gBAAiB3Q,IACnB,OAAb0vB,QAAa,IAAbA,GAAAA,EAAeU,aAEA,IAAIn1B,GAAO22B,EAAsB12B,eACzCmB,QACH8H,KAAKynB,UACD1hB,GACI4nB,MAOhB,GACiB,OAAbpC,QAAa,IAAbA,GAAAA,EAAe/e,cACf+e,EAAc/e,eAAiB3Q,IACV,OAArB4xB,QAAqB,IAArBA,GAAAA,EAAuBH,oBAEvB,MAAMvnB,GACF4nB,IAkBR,MAd8C,CAC1CrC,KAAIlwB,GAAAA,GAAAA,GAAA,GACGwwB,GACAL,GAAa,IAChBU,YAAW7wB,GAAAA,GAAA,GACJwwB,EAAqBK,aACR,OAAbV,QAAa,IAAbA,OAAa,EAAbA,EAAeU,eAG1BzpE,MAAK44C,GAAAA,GAAA,GAAOohB,GAA0BgP,GACtChB,OAAQiD,EACR/B,UAAStwB,GAAAA,GAAA,GAAOmiB,GAA8BoO,GAItD,CEhWsBiC,CAAmB/lC,EAAQ70D,KAAKo4F,oBAG9C,IACID,EAAiB/tF,OAAOw4D,GAE3B,CAAC,MAAO/wD,GAAI,CAEb,MAAMgpF,EAA4B,QAAjB5C,EAAGE,SAAc,IAAAF,OAAA,EAAdA,EAAgB6C,QxDqLT,0BwDpLrBC,EAA8B,QAAjB7C,EAAGC,SAAc,IAAAD,GACJ,QADIA,EAAdA,EAChB4C,QxDoLmB,+BwDpLO,IAAA5C,OAAA,EADVA,EAEhB3qF,cAEAk3D,EACgB,SAAlBs2B,GAEwB,UAAlBA,QAEA5jC,EACJ4M,EAAaqE,GAAA,GAAQpoE,KAAK60D,OAAO2iC,OAAOzzB,eAExCW,EACFm2B,GAAe94F,OAAOmgB,KAAK2hD,IAAUj0D,SAASirF,GACxCh3B,GAASg3B,QACT1jC,EACNuN,IACAX,EAAcQ,eAAiBuzB,GAAqBvzB,eACpDR,EAAcW,SAAWA,QAEHvN,IAAtBsN,IACAV,EAAcU,kBAAoBA,GAGtCzkE,KAAK+lE,OAAS,IAAIjC,GAAOC,ED/Fb,sBC+FkCtT,IAC9CzwD,KAAKg7F,WAAY,EAsBrBC,SAAAA,GACI,OAAOj7F,KAAK60D,OAOhBmN,SAAAA,GACI,OAAOhiE,KAAK+lE,OAGhBm1B,WAAAA,GACI,OAAOl7F,KAAKg7F,UAGhB3C,oBAAAA,GACI,OAAOr4F,KAAKo4F,oBCjId,MAAO+C,WAAiCrD,GAiB1CsD,aAAAA,GACI,OAAOD,GAAyBE,YAOpCC,KAAAA,GACI,OAAOH,GAAyBI,GAQpC,gBAAM/6B,GAEF,OADAxgE,KAAKg7F,UAA8B,qBAAX5wF,OACjBpK,KAAKg7F,WA/BAG,GAAWE,YAAW,GAKtBF,GAAEI,GAAW,2BCZ1B,MAAMC,GAAkB,oBAClBC,GAAkB,oBCGlBC,GAA0B,CACnC,CAACF,IACG,qJACJ,CAACC,IACG,0JAMF,MAAOE,WAAwBr8B,GACjC1uD,WAAAA,CAAY2uD,EAAmBC,GAC3BE,MAAMH,EAAWC,GACjBx/D,KAAK2D,KAAO,kBAEZ5B,OAAO49D,eAAe3/D,KAAM27F,GAAgBp1F,YAK9C,SAAUq1F,GAAsBp7F,GAClC,OAAO,IAAIm7F,GAAgBn7F,EAAMk7F,GAAwBl7F,GAC7D,OCbaq7F,GAKTjrF,WAAAA,CAAYnR,GACRO,KAAK87F,IAAMr8F,EAAQq8F,IACnB97F,KAAKs0F,IAAM70F,EAAQ60F,IACnBt0F,KAAK6vE,IAAMpwE,EAAQowE,IAWvB,yBAAOksB,CAAmBC,GAEtB,IAAKA,EAAiBnsB,IAClB,MAAM+rB,GAAsBJ,IAIhC,IAAKQ,EAAiB1H,IAClB,MAAMsH,GAAsBH,IAGhC,MAAMQ,EAAY,IAAIJ,GAAW,CAE7BC,IAAKE,EAAiBF,KAAO58B,GAC7B2Q,IAAKmsB,EAAiBnsB,IACtBykB,IAAK0H,EAAiB1H,MAG1B,OAAOtnB,KAAKynB,UAAUwH,UCxBjBC,GAOTtrF,WAAAA,GACI5Q,KAAKm8F,OAAS34B,GACdxjE,KAAKywD,Q7DoKa,E6DnKlBzwD,KAAKo8F,UAAY34B,GACjBzjE,KAAKq8F,QAAS,EAMlB,UAAMC,GACF,OAAO,IAAIrkD,SAAQ,CAAC5nB,EAAS6nB,KACzB,MAAMqkD,EAASnyF,OAAOoyF,UAAUF,KAAKt8F,KAAKm8F,OAAQn8F,KAAKywD,SACvD8rC,EAAOtmF,iBACH,iBACCpE,IACiBA,EACRiD,OAAOypB,OAAOk+D,kBAAkBz8F,KAAKo8F,cAGnDG,EAAOtmF,iBAAiB,WAAYpE,IAChC,MAAMxH,EAAQwH,EACd7R,KAAK08F,GAAKryF,EAAMyK,OAAOypB,OACvBv+B,KAAKq8F,QAAS,EACdhsE,OAEJksE,EAAOtmF,iBAAiB,SAAS,IAC7BiiC,EACIi4C,GACIf,UAWpBuN,eAAAA,GACI,MAAMD,EAAK18F,KAAK08F,GACZA,GAAM18F,KAAKq8F,SACXK,EAAGE,QACH58F,KAAKq8F,QAAS,GAOd,sBAAMQ,GACV,IAAK78F,KAAKq8F,OACN,OAAOr8F,KAAKs8F,OAQpB,aAAMxB,CAAQt+E,GAEV,aADMxc,KAAK68F,mBACJ,IAAI5kD,SAAW,CAAC5nB,EAAS6nB,KAE5B,IAAKl4C,KAAK08F,GACN,OAAOxkD,EACHi4C,GACIvB,KAIZ,MAKMkO,EALc98F,KAAK08F,GAAGK,YACxB,CAAC/8F,KAAKo8F,WACN,YAE4BY,YAAYh9F,KAAKo8F,WACvBtrF,IAAI0L,GAE9BsgF,EAAM7mF,iBAAiB,WAAYpE,IAC/B,MAAMxH,EAAQwH,EACd7R,KAAK28F,kBACLtsE,EAAQhmB,EAAMyK,OAAOypB,WAGzBu+D,EAAM7mF,iBAAiB,SAAUpE,IAC7B7R,KAAK28F,kBACLzkD,EAAOrmC,SAUnB,aAAMorF,CAAQzgF,EAAaqW,GAEvB,aADM7yB,KAAK68F,mBACJ,IAAI5kD,SAAc,CAAC5nB,EAAmB6nB,KAEzC,IAAKl4C,KAAK08F,GACN,OAAOxkD,EACHi4C,GACIvB,KAIZ,MAOMsO,EAPcl9F,KAAK08F,GAAGK,YACxB,CAAC/8F,KAAKo8F,WACN,aAG4BY,YAAYh9F,KAAKo8F,WAEvBe,IAAItqE,EAASrW,GAEvC0gF,EAAMjnF,iBAAiB,WAAW,KAC9BjW,KAAK28F,kBACLtsE,OAGJ6sE,EAAMjnF,iBAAiB,SAAUpE,IAC7B7R,KAAK28F,kBACLzkD,EAAOrmC,SASnB,gBAAMkzE,CAAWvoE,GAEb,aADMxc,KAAK68F,mBACJ,IAAI5kD,SAAc,CAAC5nB,EAAmB6nB,KACzC,IAAKl4C,KAAK08F,GACN,OAAOxkD,EACHi4C,GACIvB,KAKZ,MAKMwO,EALcp9F,KAAK08F,GAAGK,YACxB,CAAC/8F,KAAKo8F,WACN,aAE4BY,YAAYh9F,KAAKo8F,WACpB14D,OAAOlnB,GAEpC4gF,EAASnnF,iBAAiB,WAAW,KACjCjW,KAAK28F,kBACLtsE,OAGJ+sE,EAASnnF,iBAAiB,SAAUpE,IAChC7R,KAAK28F,kBACLzkD,EAAOrmC,SAQnB,aAAMmyE,GAEF,aADMhkF,KAAK68F,mBACJ,IAAI5kD,SAAkB,CAAC5nB,EAAmB6nB,KAC7C,IAAKl4C,KAAK08F,GACN,OAAOxkD,EACHi4C,GACIvB,KAKZ,MAKMyO,EALcr9F,KAAK08F,GAAGK,YACxB,CAAC/8F,KAAKo8F,WACN,YAE4BY,YAAYh9F,KAAKo8F,WACnBkB,aAE9BD,EAAUpnF,iBAAiB,WAAYpE,IACnC,MAAMxH,EAAQwH,EACd7R,KAAK28F,kBACLtsE,EAAQhmB,EAAMyK,OAAOypB,WAGzB8+D,EAAUpnF,iBAAiB,SAAUpE,IACjC7R,KAAK28F,kBACLzkD,EAAOrmC,SASnB,iBAAM0rF,CAAY/gF,GAGd,aAFMxc,KAAK68F,mBAEJ,IAAI5kD,SAAiB,CAAC5nB,EAAmB6nB,KAC5C,IAAKl4C,KAAK08F,GACN,OAAOxkD,EACHi4C,GACIvB,KAKZ,MAKM4O,EALcx9F,KAAK08F,GAAGK,YACxB,CAAC/8F,KAAKo8F,WACN,YAE4BY,YAAYh9F,KAAKo8F,WACf9oD,MAAM92B,GAExCghF,EAAcvnF,iBAAiB,WAAYpE,IACvC,MAAMxH,EAAQwH,EACd7R,KAAK28F,kBACLtsE,EAAgC,IAAxBhmB,EAAMyK,OAAOypB,WAGzBi/D,EAAcvnF,iBAAiB,SAAUpE,IACrC7R,KAAK28F,kBACLzkD,EAAOrmC,SAUnB,oBAAM4rF,GAOF,OAJIz9F,KAAK08F,IAAM18F,KAAKq8F,QAChBr8F,KAAK28F,kBAGF,IAAI1kD,SAAiB,CAAC5nB,EAAmB6nB,KAC5C,MAAMwlD,EAAkBtzF,OAAOoyF,UAAUiB,eAAej6B,IAClDtoE,EAAKmB,YAAW,IAAM67C,GAAO,IAAQ,KAC3CwlD,EAAgBznF,iBAAiB,WAAW,KACxC1Z,aAAarB,GACNm1B,GAAQ,MAEnBqtE,EAAgBznF,iBAAiB,WAAW,KACxC1Z,aAAarB,GACNm1B,GAAQ,MAEnBqtE,EAAgBznF,iBAAiB,SAAS,KACtC1Z,aAAarB,GACNg9C,GAAO,gBCjSjBylD,GAGT/sF,WAAAA,GACI5Q,KAAKwvB,MAAQ,IAAIxjB,IAGrB,gBAAMw0D,IAINs6B,OAAAA,CAAQt+E,GACJ,OAAOxc,KAAKwvB,MAAM1e,IAAI0L,IAAQ,KAGlCohF,WAAAA,CAAYphF,GACR,OAAOxc,KAAK86F,QAAQt+E,GAGxBygF,OAAAA,CAAQzgF,EAAarX,GACjBnF,KAAKwvB,MAAM5gB,IAAI4N,EAAKrX,GAGxB,iBAAM04F,CAAYrhF,EAAarX,GAC3BnF,KAAKi9F,QAAQzgF,EAAKrX,GAGtB4/E,UAAAA,CAAWvoE,GACPxc,KAAKwvB,MAAMkU,OAAOlnB,GAGtBwnE,OAAAA,GACI,MAAM8Z,EAAsB,GAI5B,OAHA99F,KAAKwvB,MAAMZ,SAAQ,CAACzpB,EAAUqX,KAC1BshF,EAAUjkG,KAAK2iB,MAEZshF,EAGXP,WAAAA,CAAY/gF,GACR,OAAOxc,KAAKwvB,MAAMvb,IAAIuI,GAG1BuhF,KAAAA,GACI/9F,KAAKwvB,MAAMuuE,eCjCNC,GAKTptF,WAAAA,CAAYm1D,GACR/lE,KAAKi+F,cAAgB,IAAIN,GACzB39F,KAAKk+F,eAAiB,IAAIhC,GAC1Bl8F,KAAK+lE,OAASA,EAGVo4B,yBAAAA,CAA0Bn/F,GAC9B,KACIA,aAAiBkxF,IACjBlxF,EAAMugE,YAAc6vB,IAMpB,MAAMpwF,EAJNgB,KAAK+lE,OAAO/mE,MACR,+IAWZ,aAAM87F,CAAQt+E,GACV,MAAM4hF,EAAOp+F,KAAKi+F,cAAcnD,QAAQt+E,GACxC,IAAK4hF,EACD,IAII,OAHAp+F,KAAK+lE,OAAOT,QACR,qFAEStlE,KAAKk+F,eAAepD,QAAQt+E,EAC5C,CAAC,MAAO3K,GACL7R,KAAKm+F,0BAA0BtsF,EAClC,CAEL,OAAOusF,EASX,aAAMnB,CAAQzgF,EAAarX,GACvBnF,KAAKi+F,cAAchB,QAAQzgF,EAAKrX,GAChC,UACUnF,KAAKk+F,eAAejB,QAAQzgF,EAAKrX,EAC1C,CAAC,MAAO0M,GACL7R,KAAKm+F,0BAA0BtsF,EAClC,EAOL,gBAAMkzE,CAAWvoE,GACbxc,KAAKi+F,cAAclZ,WAAWvoE,GAC9B,UACUxc,KAAKk+F,eAAenZ,WAAWvoE,EACxC,CAAC,MAAO3K,GACL7R,KAAKm+F,0BAA0BtsF,EAClC,EAOL,aAAMmyE,GACF,MAAM8Z,EAAY99F,KAAKi+F,cAAcja,UACrC,GAAyB,IAArB8Z,EAAU7jG,OACV,IAII,OAHA+F,KAAK+lE,OAAOT,QACR,oEAEStlE,KAAKk+F,eAAela,SACpC,CAAC,MAAOnyE,GACL7R,KAAKm+F,0BAA0BtsF,EAClC,CAEL,OAAOisF,EAOX,iBAAMP,CAAY/gF,GACd,MAAM+gF,EAAcv9F,KAAKi+F,cAAcV,YAAY/gF,GACnD,IAAK+gF,EACD,IAII,OAHAv9F,KAAK+lE,OAAOT,QACR,4EAEStlE,KAAKk+F,eAAeX,YAAY/gF,EAChD,CAAC,MAAO3K,GACL7R,KAAKm+F,0BAA0BtsF,EAClC,CAEL,OAAO0rF,EAMXc,aAAAA,GAEIr+F,KAAK+lE,OAAOT,QAAQ,+BACpBtlE,KAAKi+F,cAAcF,QACnB/9F,KAAK+lE,OAAOT,QAAQ,8BAOxB,qBAAMg5B,GACF,IACIt+F,KAAK+lE,OAAOT,QAAQ,gCACpB,MAAMi5B,QAAkBv+F,KAAKk+F,eAAeT,iBAK5C,OAJIc,GACAv+F,KAAK+lE,OAAOT,QAAQ,+BAGjBi5B,CACV,CAAC,MAAO1sF,GAEL,OADA7R,KAAKm+F,0BAA0BtsF,IACxB,CACV,SClHI2sF,GAaT5tF,WAAAA,CACIm1D,EACAyf,EACAiZ,GAEAz+F,KAAK+lE,OAASA,EZGhB,SACF04B,GAEA,IAAKr0F,OACD,MAAM+lF,GACFxB,IAGR,IAAKvkF,OAAOgpF,OACR,MAAMjD,GAAuBhD,IAEjC,IAAKsR,IAA6Br0F,OAAOgpF,OAAOC,OAC5C,MAAMlD,GACFhD,GAzBY,0BA6BxB,CYlBQuR,CAC4B,OAAxBD,QAAwB,IAAxBA,GAAAA,GAEJz+F,KAAKwvB,MAAQ,IAAIwuE,GAAkCh+F,KAAK+lE,QACxD/lE,KAAKwlF,kBAAoBA,EAO7BzZ,aAAAA,GACI,OAAOA,KAOXE,YAAAA,CAAatW,GACT,OAAOsW,GAAatW,GAOxBqW,YAAAA,CAAarW,GACT,OAAOqW,GAAarW,GAOxBuW,eAAAA,CAAgBvW,GACZ,OAAOw7B,GAAUx7B,GAQrBwW,SAAAA,CAAUwyB,GACN,OAAO3+F,KAAKksE,gBAAgBc,KAAKynB,UAAU,CAAE5kB,IAAK8uB,KAOtD,4BAAMvyB,CACFpT,GAAoC,IAAA4lC,EAEpC,MAAMC,EACoB,QADKD,EAC3B5+F,KAAKwlF,yBAAiB,IAAAoZ,OAAA,EAAtBA,EAAwB3T,iBACpBH,GACA9xB,EAAQ8G,eAIVg/B,QZiDP51E,eACH61E,EACAC,GAEA,OAAO50F,OAAOgpF,OAAOC,OAAOuC,YACxB9C,GACAiM,EACAC,EAER,CY1D6CC,CACjCT,GAAUU,YACVV,GAAUW,gBAIRC,QAAiCnL,GACnC6K,EAAQO,WASNC,EACFC,GAPmC,CACnC1tF,EAAGutF,EAAavtF,EAChB0iF,IAAK6K,EAAa7K,IAClBpgC,EAAGirC,EAAajrC,IAKdqrC,QAAsBx/F,KAAKwsE,WAAW8yB,GAGtCG,QAAkCxL,GACpC6K,EAAQY,YAGNC,QZoDPz2E,eACH1M,EACAuiF,EACAC,GAEA,OAAO50F,OAAOgpF,OAAOC,OAAO2B,UpDVF,MoDYtBx4E,EACAs2E,GACAiM,EACAC,EAER,CY/DkBY,CAAwBH,GAAe,EAAO,CAAC,SAgBzD,aAbMz/F,KAAKwvB,MAAMytE,QAAQuC,EAAe,CACpCE,WAAYC,EACZN,UAAWP,EAAQO,UACnBQ,cAAe7mC,EAAQ8mC,sBACvBC,WAAY/mC,EAAQgnC,qBAGpBnB,GACAA,EAA0BtoF,IAAI,CAC1B0pF,SAAS,IAIVT,EAOX,2BAAMnzB,CAAsBwD,SAClB7vE,KAAKwvB,MAAMu1D,WAAWlV,GAE5B,aADuB7vE,KAAKwvB,MAAM+tE,YAAY1tB,GAOlD,mBAAMvD,GAEFtsE,KAAKwvB,MAAM6uE,gBAMX,IAEI,aADMr+F,KAAKwvB,MAAM8uE,mBACV,CACV,CAAC,MAAOzsF,GAWL,OAVIA,aAAanQ,MACb1B,KAAK+lE,OAAO/mE,MAAM,wCAADw+B,OAC2B3rB,EAAE1B,UAG9CnQ,KAAK+lE,OAAO/mE,MACR,gDAID,CACV,EAQL,aAAMutE,CACF15C,EACAg9C,EACAqwB,EACApgC,GAAsB,IAAAqgC,EAEtB,MAAMC,EAA2C,QAAzBD,EAAGngG,KAAKwlF,yBAAiB,IAAA2a,OAAA,EAAtBA,EAAwBlV,iBAC/CH,GACAhrB,GAEEugC,QAAsBrgG,KAAKwvB,MAAMsrE,QAAQjrB,GAE/C,IAAKwwB,EACD,MAAMlQ,GACFnB,IAKR,MAAMoQ,QAAqBnL,GACvBoM,EAAchB,WAEZiB,EAAqBf,GAAsBH,GAE3CmB,EAAyBpP,GAAUnkB,KAAKynB,UAAU,CAAE5kB,IAAKA,KAQzD2wB,EAAmBrP,GANP0K,GAAWE,mBAAkB3zB,GAAAA,GAAC,CAAC,EAChC,OAAV83B,QAAU,IAAVA,OAAU,EAAVA,EAAYhL,QAAM,IACrBZ,IAAK8K,EAAa9K,IAClBzkB,IAAK0wB,MAMT1tE,EAAQ+8C,IAAM,CACVykB,IAAKrnB,KAAKC,MAAMqzB,IAEpB,MAAMG,EAAiBtP,GAAUnkB,KAAKynB,UAAU5hE,IAG1C6tE,EAAc,GAAHljE,OAAMgjE,EAAgB,KAAAhjE,OAAIijE,GAIrCE,GADU,IAAIpP,aACQC,OAAOkP,GAC7BE,QZvCP13E,eACH1M,EACA7X,GAEA,OAAOyF,OAAOgpF,OAAOC,OAAOwN,KACxB/N,GACAt2E,EACA7X,EAER,CY8BsCk8F,CAC1BR,EAAcX,WACdiB,GAEEG,EAAmB1P,GAAa,IAAIc,WAAW0O,IAE/CG,EAAY,GAAHvjE,OAAMkjE,EAAW,KAAAljE,OAAIsjE,GAQpC,OANIV,GACAA,EAAmB7pF,IAAI,CACnB0pF,SAAS,IAIVc,EAOX,gBAAMv0B,CAAW6pB,GACb,OAAO7pB,GAAyB6pB,IAIxC,SAASkJ,GAAsB1nC,GAC3B,OAAOmV,KAAKynB,UAAU58B,EAAK91D,OAAOmgB,KAAK21C,GAAK0nB,OAChD,CA5OmBif,GAAAW,eAAkC,CAAC,OAAQ,UAC3CX,GAAWU,aAAY,EC7BnC,MAAM8B,GAASA,CAClBnkG,EACAwnB,EACA0hD,EACAk7B,EACAnhC,IAEO,WACHiG,EAAON,MAAM,sBAADjoC,OAAuBnZ,IACnC,MAAM68E,EAAiC,OAAfD,QAAe,IAAfA,OAAe,EAAfA,EAAiBhW,iBACrC5mE,EACAy7C,GAEJ,GAAIA,EAAe,CAEf,MAAMqhC,EAAa98E,EAAY,YAChB,OAAf48E,QAAe,IAAfA,GAAAA,EAAiB7U,gBACb,CAAE,CAAC+U,GAAa,GAChBrhC,EAEP,CACD,IACI,MAAMvhC,EAAS1hC,KAASoD,WAKxB,OAJe,OAAfihG,QAAe,IAAfA,GAAAA,EAAiB3qF,IAAI,CACjB0pF,SAAS,IAEbl6B,EAAON,MAAM,yBAADjoC,OAA0BnZ,IAC/Bka,CACV,CAAC,MAAO1sB,GACLk0D,EAAON,MAAM,qBAADjoC,OAAsBnZ,IAClC,IACI0hD,EAAON,MAAMuH,KAAKynB,UAAU5iF,GAC/B,CAAC,MAAOA,GACLk0D,EAAON,MAAM,iCAChB,CAOD,MANe,OAAfy7B,QAAe,IAAfA,GAAAA,EAAiB3qF,IACb,CACI0pF,SAAS,GAEbpuF,GAEEA,CACT,CACL,EAgBSuvF,GAAcA,CACvBvkG,EACAwnB,EACA0hD,EACAk7B,EACAnhC,IAEO,WACHiG,EAAON,MAAM,sBAADjoC,OAAuBnZ,IACnC,MAAM68E,EAAiC,OAAfD,QAAe,IAAfA,OAAe,EAAfA,EAAiBhW,iBACrC5mE,EACAy7C,GAEJ,GAAIA,EAAe,CAEf,MAAMqhC,EAAa98E,EAAY,YAChB,OAAf48E,QAAe,IAAfA,GAAAA,EAAiB7U,gBACb,CAAE,CAAC+U,GAAa,GAChBrhC,EAEP,CAED,OADe,OAAfmhC,QAAe,IAAfA,GAAAA,EAAiBhV,gBAAgB5nE,EAAWy7C,GACrCjjE,KAASoD,WACXgwB,MAAM8tD,IACHhY,EAAON,MAAM,yBAADjoC,OAA0BnZ,IACvB,OAAf68E,QAAe,IAAfA,GAAAA,EAAiB3qF,IAAI,CACjB0pF,SAAS,IAENliB,KAEV9uE,OAAO4C,IACJk0D,EAAON,MAAM,qBAADjoC,OAAsBnZ,IAClC,IACI0hD,EAAON,MAAMuH,KAAKynB,UAAU5iF,GAC/B,CAAC,MAAOA,GACLk0D,EAAON,MAAM,iCAChB,CAOD,MANe,OAAfy7B,QAAe,IAAfA,GAAAA,EAAiB3qF,IACb,CACI0pF,SAAS,GAEbpuF,GAEEA,IAElB,QCxGSwvF,GAgBTzwF,WAAAA,CACI0wF,EACAv7B,EACAyf,EACA1lB,GAEA9/D,KAAKshG,iBAAmBA,EACxBthG,KAAK+lE,OAASA,EACd/lE,KAAKwlF,kBAAoBA,EACzBxlF,KAAK8/D,cAAgBA,EAQlB,kBAAMyhC,CACTC,EACAC,GAAgD,IAAA7C,EAE1B,QAAtBA,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACA9qF,KAAK8/D,eAIT,IAAI4hC,EAAyBF,EAG7B,GAAKE,EAwDDD,EAAwBE,cACpB5iC,OAzDqB,CACzB,MAAMt/D,EAAU4hG,GAAgBO,aAEhC,IACI,MAAMC,QAAiCT,GACnCphG,KAAK8hG,kBAAkBtoE,KAAKx5B,MAC5B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cAL8BshC,CAMrC5nC,EAAU+B,aAAc97D,GAQ1B,GAPIoiG,EAAyB/xE,SAAWgsC,IACpC4lC,EAAyBG,EAAyBjwF,KAClD6vF,EAAwBE,cACpB5iC,IAKJ8iC,EAAyB/xE,SAAWgsC,EACtC,CACE,MAAMimC,QAA2BX,GAC7BphG,KAAKgiG,kBAAkBxoE,KAAKx5B,MAC5B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALwBshC,CAM/B3hG,GACF,IAAKsiG,EAGD,OAFAN,EAAwBE,cACpB5iC,GACG,KAGX,MAAMkjC,QAAmCb,GACrCphG,KAAK8hG,kBAAkBtoE,KAAKx5B,MAC5B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALgCshC,CAMvCW,EAAoBtiG,GAElBwiG,EAA2BnyE,SAAWgsC,IAEtC4lC,EACIO,EAA2BrwF,KAC/B6vF,EAAwBE,cACpB5iC,GAEX,CACJ,CAAC,MAAOltD,GAGL,OAFA4vF,EAAwBE,cACpB5iC,GACG,IACV,CACJ,CAWD,OALK2iC,IACDD,EAAwBE,cACpB5iC,IAGD2iC,GAA0B,KAS7B,uBAAMI,CACVrxC,EACAhxD,GAAoB,IAAA0gG,EAMpB,OAJsB,QAAtBA,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBnU,oBACpBlB,GACA9qF,KAAK8/D,eAEF9/D,KAAKshG,iBAAiB3X,oBAAmB,GAAAnsD,OACzCg8B,EAAU8B,cAAa,iBAAA99B,OAAgBizB,EAAO,gBACjDhxD,EACA+5D,EAAUgC,cASV,uBAAMwmC,CACVviG,GAAoB,IAAAyiG,EAEE,QAAtBA,EAAAliG,KAAKwlF,yBAAiB,IAAA0c,GAAtBA,EAAwBlW,oBACpBlB,GACA9qF,KAAK8/D,eAET,IACI,MAAMie,QACI/9E,KAAKshG,iBAAiB3X,oBAAmB,GAAAnsD,OACxCg8B,EAAU8B,cAAa,gBAC1B77D,GAIR,OACIs+E,EAASjuD,SAAWgsC,GACpBiiB,EAASnsE,MACTmsE,EAASnsE,KAAK,oBACdmsE,EAASnsE,KAAK,mBAAmB3X,OAAS,EAEnC8jF,EAASnsE,KAAK,mBAAmB,GAGrC,IACV,CAAC,MAAOC,GACL,OAAO,IACV,GA9JYwvF,GAAAO,aAA4B,CACzCnR,QAAS,CACL0R,SAAU,eCkCTC,GAkCTxxF,WAAAA,CACIioE,EACAyoB,EACAe,EACAC,EACAv8B,EACAjG,EACA0lB,EACA+c,GAEAviG,KAAKooF,mBAAqBvP,EAC1B74E,KAAKwiG,oBAAoBjmB,gBACzBv8E,KAAKshG,iBAAmBA,EACxBthG,KAAKqiG,aAAeA,EACpBriG,KAAKsiG,iBAAmBA,EACxBtiG,KAAKyhG,wBAA0B,CAC3BgB,iBAAatrC,EACbwqC,mBAAexqC,EACfurC,oBAAgBvrC,GAEpBn3D,KAAK+lE,OAASA,EACd/lE,KAAKwlF,kBAAoBA,EACzBxlF,KAAK8/D,cAAgBA,EACrB9/D,KAAKuiG,gBAAkBA,IAAmB,EAC1CviG,KAAK2iG,gBAAkB,IAAItB,GACvBC,EACAthG,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,eASL8iC,gBAAAA,CAAiBC,GAErB,GAAIA,EAAanmB,gBAAgB9zB,SAAS4Q,EAAUU,eAChD,OAAO6d,GAGX,MAAMyF,EAAeqlB,EAAalmB,aAClC,GAAIa,EAAavjF,OACb,OAAQujF,EAAa,GAAGjwE,eACpB,KAAKisD,EAAUO,KACX,OAAOge,GACX,KAAKve,EAAUQ,KACX,OAAO+d,GAKnB,OAAOA,GAIX,iBAAWO,GACP,OAAOt4E,KAAK4iG,iBAAiB5iG,KAAK8iG,iCAMtC,gBAAWtpB,GACP,OAAOx5E,KAAKsiG,iBAAiB9oB,aAMjC,WAAW/5E,GACP,OAAOO,KAAKsiG,iBAMhB,sBAAWla,GACP,OAAOpoF,KAAKwiG,oBAAoBrmB,UAMpC,sBAAWiM,CAAmB3nF,GAC1BT,KAAKwiG,oBAAsB,IAAItmB,GAAUz7E,GACzCT,KAAKwiG,oBAAoBjmB,gBACzBv8E,KAAK+iG,iCAAmC,KAM5C,mCAAWD,GAMP,OALK9iG,KAAK+iG,mCACN/iG,KAAK+iG,iCACD/iG,KAAKwiG,oBAAoB/lB,oBAG1Bz8E,KAAK+iG,iCAMhB,mBAAWC,GACP,OAAOhjG,KAAK8iG,gCAAgCpmB,gBAAgBnvE,cAMhE,UAAW+8E,GACP,OAAOtqF,KAAK8iG,gCAAgCnmB,aAAa,GAM7D,yBAAWsmB,GACP,GAAIjjG,KAAKkjG,oBACL,OAAOljG,KAAKmjG,YAAYnjG,KAAKqxE,SAASX,wBAEtC,MAAM7E,GACF1C,IAQZ,iBAAWi6B,GACP,GAAIpjG,KAAKkjG,oBACL,OAAOljG,KAAKmjG,YAAYnjG,KAAKqxE,SAASV,gBAEtC,MAAM9E,GACF1C,IAKZ,sBAAWk6B,GACP,GAAIrjG,KAAKkjG,oBACL,OAAOljG,KAAKmjG,YACRnjG,KAAKqxE,SAASV,eAAe7gE,QAAQ,SAAU,gBAGnD,MAAM+7D,GACF1C,IAQZ,sBAAWm6B,GACP,GAAItjG,KAAKkjG,oBAAqB,CAE1B,IAAKljG,KAAKqxE,SAAST,qBACf,MAAM/E,GACFT,IAGR,OAAOprE,KAAKmjG,YAAYnjG,KAAKqxE,SAAST,qBACzC,CACG,MAAM/E,GACF1C,IAQZ,yBAAWo6B,GACP,GAAIvjG,KAAKkjG,oBACL,OAAOljG,KAAKmjG,YAAYnjG,KAAKqxE,SAASR,QAEtC,MAAMhF,GACF1C,IAQZ,WAAWq6B,GACP,GAAIxjG,KAAKkjG,oBACL,OAAOljG,KAAKmjG,YAAYnjG,KAAKqxE,SAASN,UAEtC,MAAMlF,GACF1C,IAUJs6B,gBAAAA,CAAiBZ,GACrB,OACyC,IAArCA,EAAalmB,aAAa1iF,SACzBmoG,GAAUsB,sBAAsBzvF,IAC7B4uF,EAAalmB,aAAa,KAE9B38E,KAAK4iG,iBAAiBC,KAAkB9qB,IACxC/3E,KAAKw5E,eAAiB3Q,GAQtB86B,aAAAA,CAAcxnB,GAClB,OAAOA,EAAUrsE,QAAQ,uBAAwB9P,KAAKsqF,QAOlD6Y,WAAAA,CAAYhnB,GAChB,IAAIynB,EAAWznB,EACf,MAGM0nB,EAHqB,IAAI3nB,GAC3Bl8E,KAAKqxE,SAASyyB,qBAGKrnB,mBACjBsnB,EAAuBF,EAA6BlnB,aAiC1D,OA/BI38E,KAAK8iG,gCAAgCnmB,aAEnB/tD,SAAQ,CAACo1E,EAAahqG,KACxC,IAAIiqG,EAAaF,EAAqB/pG,GACtC,GACc,IAAVA,GACAgG,KAAKyjG,iBAAiBI,GACxB,CACE,MAAMp1B,EAAW,IAAIyN,GACjBl8E,KAAKqxE,SAASX,wBAChB+L,mBAAmBE,aAAa,GAM9BsnB,IAAex1B,IACfzuE,KAAK+lE,OAAOT,QAAQ,gCAAD9nC,OACiBymE,EAAU,aAAAzmE,OAAYixC,IAE1Dw1B,EAAax1B,EAEpB,CACGu1B,IAAgBC,IAChBL,EAAWA,EAAS9zF,QAAQ,IAAD0tB,OACnBymE,EAAU,SAAAzmE,OACVwmE,EAAW,UAKpBhkG,KAAK2jG,cAAcC,GAM9B,sCAAcM,GACV,MAAMC,EAAyBnkG,KAAKgjG,gBACpC,OACIhjG,KAAKooF,mBAAmBx/B,SAAS,UACjC5oD,KAAKs4E,gBAAkBP,IACtB/3E,KAAKw5E,eAAiB3Q,KAClB7oE,KAAKokG,iCAAiCD,GAEpC,GAAP3mE,OAAUx9B,KAAKooF,mBAAkB,oCAE9B,GAAP5qD,OAAUx9B,KAAKooF,mBAAkB,yCAMrC8a,iBAAAA,GACI,QAASljG,KAAKqxE,SAOX,2BAAMgzB,GAAqB,IAAAzF,EAAAuB,EACR,QAAtBvB,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACA9qF,KAAK8/D,eAGT,MAAMwkC,EAAiBtkG,KAAKukG,2BAEtBC,QAA6BpD,GAC/BphG,KAAKgxE,6BAA6Bx3C,KAAKx5B,MACvC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cAL0BshC,CAMjCkD,GACFtkG,KAAKooF,mBAAqBpoF,KAAKooF,mBAAmBt4E,QAC9C9P,KAAKgjG,gBACLsB,EAAepzB,mBAEnB,MAAMuzB,QAAuBrD,GACzBphG,KAAK0kG,uBAAuBlrE,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALoBshC,CAM3BkD,GACFtkG,KAAK2kG,qBAAqBL,EAAgBE,EAAsB,CAC5Dv+E,OAAQw+E,IAEU,QAAtBtE,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBna,UACpB,CACIwe,qBAAsBA,EACtBI,wBAAyBH,GAE7BzkG,KAAK8/D,eASLykC,wBAAAA,GACJ,IAAID,EACAtkG,KAAKqiG,aAAaje,4BAA4BpkF,KAAKgjG,iBAkBvD,OAhBKsB,IACDA,EAAiB,CACb9vF,QAAS,GACTy8D,gBAAiBjxE,KAAKgjG,gBACtB9xB,kBAAmBlxE,KAAKgjG,gBACxBc,oBAAqB9jG,KAAKooF,mBAC1B1X,uBAAwB,GACxBC,eAAgB,GAChBC,qBAAsB,GACtBC,OAAQ,GACRM,oBAAoB,EACpBL,sBAAsB,EACtBQ,UAAWjB,KACXU,SAAU,KAGXuzB,EAUHK,oBAAAA,CACJL,EACAE,EACAK,GAMIL,IAAyB3mC,IACH,OAAtBgnC,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwB5+E,UAAW43C,IAGnCymC,EAAehzB,UACXjB,KACJi0B,EAAeR,oBAAsB9jG,KAAKooF,oBAG9C,MAAMzF,EAAW3iF,KAAKqiG,aAAa1Z,kCAC/B2b,EAAerzB,iBAEnBjxE,KAAKqiG,aAAapZ,qBAAqBtG,EAAU2hB,GACjDtkG,KAAKqxE,SAAWizB,EAOZ,4BAAMI,CACVJ,GAAuC,IAAApC,EAEjB,QAAtBA,EAAAliG,KAAKwlF,yBAAiB,IAAA0c,GAAtBA,EAAwBlW,oBACpBlB,GACA9qF,KAAK8/D,eAGT,MAAMglC,EACF9kG,KAAK+kG,uCAAuCT,GAGhD,GAAIQ,EAAe,CAIb,IAAAE,EAHF,GACIF,EAAc7+E,SACd43C,EAGA,GACkD,QADlDmnC,EACIhlG,KAAKsiG,iBAAiB2C,gCAAwB,IAAAD,GAA9CA,EAAgDE,aAE5CJ,EAAczzB,SAAU,CAUxBf,GACIg0B,QAV4BlD,GAC5BphG,KAAKmlG,sCAAsC3rE,KACvCx5B,MAEJ8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cAPuBshC,CAQ9B0D,EAAczzB,WAIZ,GAEJizB,EAAeR,oBACX9jG,KAAKooF,kBACZ,CAGT,OAAO0c,EAAc7+E,MACxB,CAGD,IAAIorD,QAAiB+vB,GACjBphG,KAAKolG,+BAA+B5rE,KAAKx5B,MACzC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALYshC,GAOP,IAAAiE,EAAd,GAAIh0B,EAiBA,OAfkD,QAAlDg0B,EAAIrlG,KAAKsiG,iBAAiB2C,gCAAwB,IAAAI,GAA9CA,EAAgDH,cAChD7zB,QAAiB+vB,GACbphG,KAAKmlG,sCAAsC3rE,KAAKx5B,MAChD8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALQshC,CAMf/vB,IAGNf,GACIg0B,EACAjzB,GACA,GAEGxT,EAGP,MAAMgO,GACFxC,GACArpE,KAAKkkG,oCAWTa,sCAAAA,CACJT,GAKAtkG,KAAK+lE,OAAOT,QACR,oEAEJ,MAAMggC,EAAiBtlG,KAAKulG,gCAC5B,GAAID,EASA,OARAtlG,KAAK+lE,OAAOT,QACR,sDAEJgL,GACIg0B,EACAgB,GACA,GAEG,CACHr/E,OAAQ43C,GAShB,GALA79D,KAAK+lE,OAAOT,QACR,kHAIAtlE,KAAKsiG,iBAAiBjJ,2BACtBr5F,KAAK+lE,OAAOT,QACR,+JAED,CACH,MAAMkgC,EACFxlG,KAAKylG,yCACT,GAAID,EAMA,OALAl1B,GACIg0B,EACAkB,GACA,GAEG,CACHv/E,OAAQ43C,EACRwT,SAAUm0B,GAGdxlG,KAAK+lE,OAAOT,QACR,6HAGX,CAGD,MAAMogC,EACFt0B,GAAwCkzB,GAC5C,OACItkG,KAAK2lG,oBAAoBrB,IACzBA,EAAexzB,uBACd40B,GAGD1lG,KAAK+lE,OAAOT,QAAQ,yCACb,CAAEr/C,OAAQ43C,KACV6nC,GACP1lG,KAAK+lE,OAAOT,QAAQ,mCAGjB,MASHqgC,mBAAAA,CACJrB,GAOA,OAL2B,IAAIpoB,GAC3BooB,EAAeR,qBAEoBrnB,mBAAmBE,aAG1C1iF,SACZ+F,KAAK8iG,gCAAgCnmB,aAAa1iF,OAOlDsrG,6BAAAA,GACJ,GAAIvlG,KAAKsiG,iBAAiB/xB,kBACtB,IACI,OAAOvD,KAAKC,MACRjtE,KAAKsiG,iBAAiB/xB,kBAE7B,CAAC,MAAO1+D,GACL,MAAMkhE,GACFX,GAEP,CAGL,OAAO,KAQH,oCAAMgzB,GAA8B,IAAAQ,EAClB,QAAtBA,EAAA5lG,KAAKwlF,yBAAiB,IAAAogB,GAAtBA,EAAwB5Z,oBACpBlB,GACA9qF,KAAK8/D,eAGT,MAAMrgE,EAAuB,CAAC,EAOxBomG,EACF7lG,KAAKkkG,mCACTlkG,KAAK+lE,OAAOT,QAAQ,yFAAD9nC,OAC0EqoE,IAG7F,IACI,MAAM9nB,QACI/9E,KAAKshG,iBAAiB3X,oBACxBkc,EACApmG,GAEFqmG,ECtsBZ,SAAiC/nB,GACnC,OACIA,EAASz3E,eAAe,2BACxBy3E,EAASz3E,eAAe,mBACxBy3E,EAASz3E,eAAe,WACxBy3E,EAASz3E,eAAe,WAEhC,CD+rBoCy/F,CAAuBhoB,EAASnsE,MACxD,OAAIk0F,EACO/nB,EAASnsE,MAEhB5R,KAAK+lE,OAAOT,QAAQ,8FAGb,KAEd,CAAC,MAAOzzD,GAIL,OAHA7R,KAAK+lE,OAAOT,QAAQ,6CAAD9nC,OAC8B3rB,IAE1C,IACV,EAMG4zF,sCAAAA,GACJ,OAAIzlG,KAAKgjG,mBAAmBhlB,GACjBA,GAAiBh+E,KAAKgjG,iBAG1B,KAOH,2CAAMmC,CACV9zB,GAA8B,IAAA20B,EAAAC,EAER,QAAtBD,EAAAhmG,KAAKwlF,yBAAiB,IAAAwgB,GAAtBA,EAAwBha,oBACpBlB,GACA9qF,KAAK8/D,eAGT,MAAMomC,EAC4C,QADnBD,EAC3BjmG,KAAKsiG,iBAAiB2C,gCAAwB,IAAAgB,OAAA,EAA9CA,EAAgDf,YAEpD,GAAIgB,EAA2B,KAAAC,EAC3B,GACID,IACA1sC,EAAUiC,gCAMV,OAJAz7D,KAAKyhG,wBAAwBiB,eACzB1jC,GACJh/D,KAAKyhG,wBAAwBgB,YACzByD,EACG9D,GAAUgE,+BACb/0B,EACA60B,GAIR,MAAMxE,QAA+BN,GACjCphG,KAAK2iG,gBAAgBpB,aAAa/nE,KAAKx5B,KAAK2iG,iBAC5C7X,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cAL4BshC,CAOa,QADjD+E,EACGnmG,KAAKsiG,iBAAiB2C,gCAAwB,IAAAkB,OAAA,EAA9CA,EACM3E,kBACNxhG,KAAKyhG,yBAGT,GAAIC,EAKA,OAJA1hG,KAAKyhG,wBAAwBiB,eACzB1jC,GACJh/D,KAAKyhG,wBAAwBgB,YACzBf,EACGU,GAAUgE,+BACb/0B,EACAqwB,GAIR1hG,KAAKyhG,wBAAwBiB,eACzB1jC,EACP,CAED,OAAOqS,EASH,kCAAML,CACVszB,GAAuC,IAAA+B,EAEjB,QAAtBA,EAAArmG,KAAKwlF,yBAAiB,IAAA6gB,GAAtBA,EAAwBra,oBACpBlB,GACA9qF,KAAK8/D,eAET,MAAMwmC,EACFtmG,KAAKumG,6CAA6CjC,GACtD,GAAIgC,EACA,OAAOA,EAIX,MAAMj1B,QAAiB+vB,GACnBphG,KAAKwmG,qCAAqChtE,KAAKx5B,MAC/C8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALcshC,GAQvB,GAAI/vB,EAMA,OALAL,GACIszB,EACAjzB,GACA,GAEGxT,EAIX,MAAMkV,GACFV,IAIAk0B,4CAAAA,CACJjC,GAEAtkG,KAAK+lE,OAAOT,QACR,4EAEJtlE,KAAK+lE,OAAOP,WAAW,sBAADhoC,OAEdx9B,KAAKsiG,iBAAiBha,kBACtB9uB,EAAU2B,iBAGlBn7D,KAAK+lE,OAAOP,WAAW,uBAADhoC,OAEdx9B,KAAKsiG,iBAAiB/xB,mBACtB/W,EAAU2B,iBAGlBn7D,KAAK+lE,OAAOP,WAAW,wBAADhoC,OAEd8mE,EAAeR,qBAAuBtqC,EAAU2B,iBAGxD,MAAMkW,EAAWrxE,KAAKymG,sCACtB,GAAIp1B,EASA,OARArxE,KAAK+lE,OAAOT,QACR,6DAEJ0L,GACIszB,EACAjzB,GACA,GAEGxT,EAQX,GAJA79D,KAAK+lE,OAAOT,QACR,gIAGAtlE,KAAKP,QAAQ45F,2BACbr5F,KAAK+lE,OAAOT,QACR,sLAED,CACH,MAAMkgC,G9B/sBdnnB,E8BitBgBr+E,KAAKgjG,gB9B/sBJzkB,GACbN,GAA0B5M,SAC1BgN,I8B+sBI,GAAImnB,EASA,OARAxlG,KAAK+lE,OAAOT,QACR,yDAEJ0L,GACIszB,EACAkB,GACA,GAEG3nC,EAGX79D,KAAK+lE,OAAOT,QACR,2IAEP,C9BnuBH,IACF+Y,E8BouBI,MAAMqnB,EACFt0B,GAAwCkzB,GAC5C,OACItkG,KAAK2lG,oBAAoBrB,IACzBA,EAAenzB,qBACdu0B,GAED1lG,KAAK+lE,OAAOT,QAAQ,gDAEbzH,IACA6nC,GACP1lG,KAAK+lE,OAAOT,QAAQ,mCAGjB,MAMHmhC,mCAAAA,GAEJ,GAAIzmG,KAAKs4E,gBAAkBP,GAIvB,OAHA/3E,KAAK+lE,OAAOT,QACR,uGAEG88B,GAAUsE,qCACb1mG,KAAKgjG,iBAKb,GAAIhjG,KAAKsiG,iBAAiBhkB,uBAAwB,CAC9Ct+E,KAAK+lE,OAAOT,QACR,wFAEJ,IACItlE,KAAK+lE,OAAOT,QACR,qDAEJ,MAGM+L,EAAWkN,GAHMvR,KAAKC,MACxBjtE,KAAKsiG,iBAAiBhkB,wBAGPjN,SACfrxE,KAAKgjG,iBAGT,GADAhjG,KAAK+lE,OAAOT,QAAQ,wCAChB+L,EAIA,OAHArxE,KAAK+lE,OAAOT,QACR,iFAEG+L,EAEPrxE,KAAK+lE,OAAOT,QACR,wEAGX,CAAC,MAAOzzD,GAIL,MAHA7R,KAAK+lE,OAAOT,QACR,kGAEEyN,GACFZ,GAEP,CACJ,CAGD,OAAInyE,KAAK2mG,wBACL3mG,KAAK+lE,OAAOT,QACR,kGAEG88B,GAAUsE,qCACb1mG,KAAKgjG,kBAIN,KAQH,0CAAMwD,GAAoC,IAAAI,EACxB,QAAtBA,EAAA5mG,KAAKwlF,yBAAiB,IAAAohB,GAAtBA,EAAwB5a,oBACpBlB,GACA9qF,KAAK8/D,eAET,MAAM+mC,EAA4B,GAAHrpE,OAAMg8B,EAAUS,8BAA4Bz8B,OAAGx9B,KAAKooF,mBAAkB,yBAC/F3oF,EAAuB,CAAC,EAO9B,IAAIqO,EAAQ,KACZ,IACI,MAAMiwE,QAAiB/9E,KAAKshG,iBAAiB3X,oBAG3Ckd,EAA2BpnG,GAC7B,IAAIqnG,EAGAz1B,EACJ,GE1/BN,SAA2C0M,GAC7C,OACIA,EAASz3E,eAAe,8BACxBy3E,EAASz3E,eAAe,WAEhC,CFq/BgBygG,CAAiChpB,EAASnsE,MAC1Ck1F,EACI/oB,EAASnsE,KACby/D,EAAWy1B,EAAkBz1B,SAE7BrxE,KAAK+lE,OAAOP,WAAW,iCAADhoC,OACespE,EAAkB5oB,gCAEpD,KG//Bb,SACFH,GAEA,OACIA,EAASz3E,eAAe,UACxBy3E,EAASz3E,eAAe,oBAEhC,CHw/BuB0gG,CAAsCjpB,EAASnsE,MA6BtD,OAHA5R,KAAK+lE,OAAO/mE,MACR,8FAEG,KAtBP,GANAgB,KAAK+lE,OAAOb,QAAQ,sHAAD1nC,OACuGugD,EAASjuD,SAGnIg3E,EACI/oB,EAASnsE,KACTk1F,EAAkB9nG,QAAUw6D,EAAUqC,iBAItC,OAHA77D,KAAK+lE,OAAO/mE,MACR,sEAEG,KAGXgB,KAAK+lE,OAAOb,QAAQ,oDAAD1nC,OACqCspE,EAAkB9nG,QAE1EgB,KAAK+lE,OAAOb,QAAQ,gEAAD1nC,OACiDspE,EAAkBlrB,oBAGtF57E,KAAK+lE,OAAOb,QACR,6FAEJmM,EAAW,EAMd,CAEDrxE,KAAK+lE,OAAOT,QACR,0IAEJx3D,EAAQywE,GACJlN,EACArxE,KAAKgjG,gBAEZ,CAAC,MAAOhkG,GACL,GAAIA,aAAiBsgE,GACjBt/D,KAAK+lE,OAAO/mE,MAAM,oGAADw+B,OACuFx+B,EAAMugE,UAAS,yBAAA/hC,OAAwBx+B,EAAMwgE,mBAElJ,CACH,MAAMynC,EAAajoG,EACnBgB,KAAK+lE,OAAO/mE,MAAM,wGAADw+B,OAC2FypE,EAAWtjG,KAAI,yBAAA65B,OAAwBypE,EAAW92F,SAEjK,CAED,OAAO,IACV,CAeD,OAZKrC,IACD9N,KAAK+lE,OAAOb,QACR,wHAEJllE,KAAK+lE,OAAOT,QACR,yDAGJx3D,EAAQs0F,GAAUsE,qCACd1mG,KAAKgjG,kBAGNl1F,EAMH64F,oBAAAA,GAUJ,OATgB3mG,KAAKsiG,iBAAiBha,iBAAiB3hB,QAClDkS,GAEOA,GACAqD,GAAUuB,iBAAiB5E,GAAWtrE,gBAClCvN,KAAKgjG,kBAIN/oG,OAAS,EAQ5B,wBAAOitG,CACHC,EACA/N,GAEA,IAAIgO,EAEJ,GACIhO,GACAA,EAAkB/O,qBAAuBvhB,GAC3C,CACE,MAAMwhB,EAAS8O,EAAkB9O,OAC3B8O,EAAkB9O,OAClB9wB,EAAUM,sBAChBstC,EAA8B,GAAH5pE,OAAM47D,EAAkB/O,mBAAkB,KAAA7sD,OAAI8sD,EAAM,IAClF,CAED,OAAO8c,GAEDD,EAOV,2CAAOT,CACHriB,GAEA,MAAO,CACHnT,kBAAmBmT,EACnBpT,gBAAiBoT,EACjB7vE,QAAS,CAAC6vE,IAOlB3K,iBAAAA,GACI,GAAI15E,KAAKuiG,gBACL,OAAO/oC,EAAUK,uBACd,GAAI75D,KAAKkjG,oBACZ,OAAOljG,KAAKqxE,SAASJ,gBAErB,MAAMpF,GACF1C,IASZk+B,OAAAA,CAAQhjB,GACJ,OAAOrkF,KAAKqxE,SAAS78D,QAAQvG,QAAQo2E,IAAS,EAOlD+f,gCAAAA,CAAiC/f,GAC7B,OAAOlG,GAAiClqE,IAAIowE,GAShD,6BAAOijB,CAAuBjjB,GAC1B,OAAO7qB,EAAUmC,oBAAoB1tD,QAAQo2E,IAAS,EAS1D,mCAAOkjB,CACHljB,EACAmjB,EACA1qB,GAGA,MAAM2qB,EAAuB,IAAIvrB,GAAUmI,GAC3CojB,EAAqBlrB,gBAErB,MAAMmrB,EAAoBD,EAAqBhrB,mBAE/C,IAAIkrB,EAAkB,GAAHnqE,OAAMgqE,EAAM,KAAAhqE,OAAIkqE,EAAkBhrB,iBAEjD18E,KAAKsnG,uBAAuBI,EAAkBhrB,mBAC9CirB,EAAkB,GAAHnqE,OAAMgqE,EAAM,KAAAhqE,OAAIg8B,EAAUkC,oCAI7C,MAAMj7D,EAAMy7E,GAAUiB,gCAA+B/U,GAAAA,GAAC,CAAC,EAChDq/B,EAAqBhrB,oBAAkB,IAC1CC,gBAAiBirB,KAClBxrB,UAGH,OAAIW,EAAoB,GAAPt/C,OAAU/8B,EAAG,KAAA+8B,OAAIs/C,GAE3Br8E,EASX,qCAAO2lG,CACH/0B,EACA6zB,GAEA,MAAM0C,EAAgBx/B,GAAA,GAAQiJ,GAqB9B,OApBAu2B,EAAiBl3B,uBACb0xB,GAAUmF,6BACNK,EAAiBl3B,uBACjBw0B,GAGR0C,EAAiBj3B,eACbyxB,GAAUmF,6BACNK,EAAiBj3B,eACjBu0B,GAGJ0C,EAAiBh3B,uBACjBg3B,EAAiBh3B,qBACbwxB,GAAUmF,6BACNK,EAAiBh3B,qBACjBs0B,IAIL0C,EAYX,6BAAOC,CAAuBhvB,GAC1B,IAAIivB,EAAgBjvB,EACpB,MACMkvB,EADe,IAAI7rB,GAAUrD,GACS4D,mBAG5C,GACmD,IAA/CsrB,EAAuBprB,aAAa1iF,QACpC8tG,EAAuBrrB,gBAAgB9zB,SACnC4Q,EAAUU,eAEhB,CACE,MAAM8tC,EACFD,EAAuBrrB,gBAAgBhtE,MAAM,KAAK,GACtDo4F,EAAgB,GAAHtqE,OAAMsqE,GAAatqE,OAAGwqE,GAAgBxqE,OAAGg8B,EAAUW,yBACnE,CAED,OAAO2tC,GAiCT,SAAUG,GAAmBpF,GAC/B,OAAOA,EAAaj6C,SAAS4Q,EAAU6B,eACjCwnC,EAAY,GAAArlE,OACTqlE,GAAYrlE,OAAGg8B,EAAU6B,cACtC,CAhuCmB+mC,GAAqBsB,sBAAgB,IAAIt3F,IAAI,CACxD,WACA,aACA+vD,EACAA,EACAA,II3FD,MAAM+rC,GAAgB,kBAChBC,GAA2B,6BAC3BC,GAAsB,wBAMtBC,GAAW,YCDXC,GAAwC,CDFlB,uBACJ,mBACF,iBCIzBD,IAGSE,GAAyC,CAClD,eACA,oBACA,eACA,wBACA,mBACA,aAGEC,GAAuC,CACzC,CAACN,IACG,uDACJ,CAACC,IACG,sJACJ,CAACC,IACG,6BACJ,CAACC,IACG,iIA+BF,MAAOI,WAAqCnpC,GA2B9C1uD,WAAAA,CACI2uD,EACAC,EACAI,EACAiF,EACA6jC,EACA5oC,EACAioB,EACA4gB,GAEAjpC,MAAMH,EAAWC,EAAcI,GAC/B79D,OAAO49D,eAAe3/D,KAAMyoG,GAA6BliG,WAEzDvG,KAAK6kE,UAAYA,GAAarL,EAAU0B,aACxCl7D,KAAK0oG,QAAUA,GAAWlvC,EAAU0B,aACpCl7D,KAAK8/D,cAAgBA,GAAiBtG,EAAU0B,aAChDl7D,KAAK+nF,OAASA,GAAUvuB,EAAU0B,aAClCl7D,KAAK2D,KAAO,+BACZ3D,KAAK2oG,QAAUA,YAUPC,GACZrpC,EACAspC,EACAjpC,GAEA,MAAMkpC,IACAvpC,GACF+oC,GAAsCr6F,QAAQsxD,IAAc,EAC1DwpC,IACAnpC,GACF2oC,GAAuCt6F,QAAQ2xD,IAAa,EAC1DopC,IACAH,GACFP,GAAsChvC,MAAM2vC,GACjCJ,EAAY56F,QAAQg7F,IAAgB,IAGnD,OACIH,GACAE,GACAD,CAER,CAKM,SAAUG,GACZ3pC,GAEA,OAAO,IAAIkpC,GACPlpC,EACAipC,GAAqCjpC,GAE7C,UClIgB4pC,GACZ36B,EACAxV,EACA6O,GAAsB,IAAAuhC,EAEtB,MAAO,CACH56B,SAAUA,EACVqK,UAAW7f,EAAQ6f,UACnBvV,OAAQtK,EAAQsK,OAChB+lC,sBAAuBxhC,EACvBkgB,OAAQ/uB,EAAQ+uB,OAChBtB,qBAAsBztB,EAAQytB,qBAC9BqZ,sBAAuB9mC,EAAQ8mC,sBAC/BE,mBAAoBhnC,EAAQgnC,mBAC5BsJ,UAAWtwC,EAAQswC,UACnB5iB,OAAQ1tB,EAAQ0tB,OAChB6iB,iBACIvwC,EAAQuwC,mBAA+C,QAA/BH,EAAIpwC,EAAQwwC,2BAAmB,IAAAJ,OAAA,EAA3BA,EAA6B56B,UAErE,CClCA,MAAMi7B,GAAyB,MAElBC,GACJ,MADIA,GAEH,aAKGC,GACTnpC,UAAAA,GACI,OAAOvoB,QAAQ5nB,UAGnByqE,OAAAA,CAAQt+E,GACJ,MAAM7Y,EAAO,GAAH65B,OAAM98B,mBAAmB8b,IAC7BotF,EAAal4F,SAASm4F,OAAOn6F,MAAM,KACzC,IAAK,IAAI/O,EAAI,EAAGA,EAAIipG,EAAW3vG,OAAQ0G,IAAK,CACxC,MAAMkpG,EAASD,EAAWjpG,IACnB6b,KAAQstF,GAAQp2B,mBAAmBm2B,GAAQ77F,OAAO0B,MAAM,KACzDvK,EAAQ2kG,EAAKpoE,KAAK,KAExB,GAAIllB,IAAQ7Y,EACR,OAAOwB,CAEd,CACD,MAAO,GAGXy4F,WAAAA,GACI,MAAM/xB,GAAsBk+B,IAGhC9M,OAAAA,CACIzgF,EACArX,EACA6kG,GAE+C,IAD/CC,IAAAhqG,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,KAAAA,UAAA,GACAiqG,EAA4BjqG,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAAypG,GAExBS,EAAY,GAAH3sE,OAAM98B,mBAAmB8b,GAAI,KAAAghB,OAAI98B,mBAC1CyE,GACH,qBAAAq4B,OAAoB0sE,EAAQ,KAE7B,GAAIF,EAAgB,CAChB,MAAMI,EA2CZ,SAAkCJ,GACpC,MAAMK,EAAQ,IAAI5uG,KACZ6uG,EAAO,IAAI7uG,KACb4uG,EAAM98B,UAAYy8B,EAAiBP,IAEvC,OAAOa,EAAKxlC,aAChB,CAjD+BylC,CAAwBP,GAC3CG,GAAa,WAAJ3sE,OAAe4sE,EAAU,IACrC,EAEGH,GAAUC,IAAaR,MAEvBS,GAAa,WAGjBz4F,SAASm4F,OAASM,EAGtB,iBAAMtM,GACF,OAAO5lD,QAAQC,OACX2zB,GAAsBk+B,KAI9BhlB,UAAAA,CAAWvoE,GAEPxc,KAAKi9F,QAAQzgF,EAAK,IAAK,GAG3BwnE,OAAAA,GACI,MAAM4lB,EAAal4F,SAASm4F,OAAOn6F,MAAM,KACnCwS,EAAsB,GAM5B,OALA0nF,EAAWh7E,SAASi7E,IAChB,MAAMW,EAAc92B,mBAAmBm2B,GAAQ77F,OAAO0B,MAAM,KAC5DwS,EAAKroB,KAAK2wG,EAAY,OAGnBtoF,EAGXq7E,WAAAA,CAAY/gF,GACR,OAAOxc,KAAKgkF,UAAUp0E,SAAS4M,IC9EjC,SAAUimE,GAAegoB,GAC3B,MAAMC,EAAcD,EAAQ3P,QAAQ93B,IACpC,OAAI0nC,EACO19B,KAAKC,MAAMy9B,GAGf,EACX,CAQgB,SAAAnqB,GACZ/R,EACAi8B,GAEA,MAAMrM,EAAOqM,EAAQ3P,QAAQ,GAADt9D,OAAIwlC,GAA0B,KAAAxlC,OAAIgxC,IAC9D,GAAI4vB,EAAM,CACN,MAAMre,EAAY/S,KAAKC,MAAMmxB,GAC7B,GACIre,GACAA,EAAUz5E,eAAe,YACzBy5E,EAAUz5E,eAAe,gBACzBy5E,EAAUz5E,eAAe,gBAEzB,OAAOy5E,CAEd,CAED,MAAO,CACHxR,QAAS,GACTO,YAAa,GACbiB,aAAc,GAEtB,CCdA,MAAM46B,GAAiB,8BAcVC,GASTh6F,WAAAA,CACI49D,EACAzI,EACAyf,GAEA,IAAKp7E,OAAOygG,aACR,MAAMvqC,GACFL,IAGRjgE,KAAK8qG,cAAgB,IAAInN,GACzB39F,KAAKk3F,aAAc,EACnBl3F,KAAKwuE,SAAWA,EAChBxuE,KAAK+lE,OAASA,EACd/lE,KAAKwlF,kBAAoBA,EACzBxlF,KAAK+qG,UAAY,IAAIC,iBArCE,wBAwC3B,gBAAMxqC,CAAWV,GACb,MAAMmrC,EAAU,IAAItB,GACduB,EAAeD,EAAQnQ,QAAQ6P,IACrC,IAAIQ,EAAe,CAAE3uF,IAAK,GAAIthB,GAAI,IAClC,GAAIgwG,EACA,IACIC,EAAen+B,KAAKC,MAAMi+B,EAC7B,CAAC,MAAOr5F,GAAI,CAEjB,GAAIs5F,EAAa3uF,KAAO2uF,EAAajwG,GAAI,CAErC,MAAM46F,EAAUkL,GACZlP,GACAhH,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALYkhC,CAMdmK,EAAa3uF,KACfxc,KAAKorG,iBAAmB,CACpBlwG,GAAIiwG,EAAajwG,GACjBshB,UAAW4kF,GACPvL,GACA/K,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALOshC,CAMTtL,UAEAsL,GACFphG,KAAKqrG,oBAAoB7xE,KAAKx5B,MAC9B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALEshC,CAMJthC,EACL,KAAM,CAEH9/D,KAAK+9F,QACL,MAAM7iG,EAAK6wE,KACL+pB,QAAgBsL,GAClBhN,GACAtJ,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALkBshC,GAOhBkK,EAAStK,GACX5P,GACAtG,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALWkhC,CAMb,IAAI9O,WAAW4D,IACjB91F,KAAKorG,iBAAmB,CACpBlwG,GAAIA,EACJshB,UAAW4kF,GACPvL,GACA/K,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALOshC,CAMTtL,IAGN,MAAMyV,EAAa,CACfrwG,GAAIA,EACJshB,IAAK8uF,GAGTL,EAAQhO,QACJ0N,GACA39B,KAAKynB,UAAU8W,GACf,GACA,EACA7B,GAEP,CAGD1pG,KAAK+qG,UAAU90F,iBAAiB,UAAWjW,KAAKwrG,YAAYhyE,KAAKx5B,OAEjEA,KAAKk3F,aAAc,EAGvB4D,OAAAA,CAAQt+E,GACJ,OAAOpS,OAAOygG,aAAa/P,QAAQt+E,GAGvCohF,WAAAA,CAAYphF,GACR,IAAKxc,KAAKk3F,YACN,MAAM/G,GACFV,IAGR,OAAOzvF,KAAK8qG,cAAchQ,QAAQt+E,GAGtCygF,OAAAA,CAAQzgF,EAAarX,GACjBiF,OAAOygG,aAAa5N,QAAQzgF,EAAKrX,GAGrC,iBAAM04F,CACFrhF,EACArX,EACA26D,GAEA,IAAK9/D,KAAKk3F,cAAgBl3F,KAAKorG,iBAC3B,MAAMjb,GACFV,IAIR,MAAM,KAAE9qF,EAAI,MAAE0xD,SAAgB+qC,GAC1BnL,GACAnL,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EAL0BshC,CAM5BphG,KAAKorG,iBAAiB5uF,IAAKrX,EAAOnF,KAAKyrG,WAAWjvF,IAC9C+4E,EAA+B,CACjCr6F,GAAI8E,KAAKorG,iBAAiBlwG,GAC1Bm7D,MAAOA,EACP1xD,KAAMA,GAGV3E,KAAK8qG,cAAc7N,QAAQzgF,EAAKrX,GAChCnF,KAAKi9F,QAAQzgF,EAAKwwD,KAAKynB,UAAUc,IAGjCv1F,KAAK+qG,UAAU5sG,YAAY,CACvBqe,IAAKA,EACLrX,MAAOA,EACPc,QAASjG,KAAKyrG,WAAWjvF,KAIjCuoE,UAAAA,CAAWvoE,GACHxc,KAAK8qG,cAAcvN,YAAY/gF,KAC/Bxc,KAAK8qG,cAAc/lB,WAAWvoE,GAC9Bxc,KAAK+qG,UAAU5sG,YAAY,CACvBqe,IAAKA,EACLrX,MAAO,KACPc,QAASjG,KAAKyrG,WAAWjvF,MAGjCpS,OAAOygG,aAAa9lB,WAAWvoE,GAGnCwnE,OAAAA,GACI,OAAOjiF,OAAOmgB,KAAK9X,OAAOygG,cAG9BtN,WAAAA,CAAY/gF,GACR,OAAOpS,OAAOygG,aAAavkG,eAAekW,GAM9CuhF,KAAAA,GAEI/9F,KAAK8qG,cAAc/M,QAECtb,GAAeziF,MACvB4uB,SAASpS,GAAQxc,KAAK+kF,WAAWvoE,KAC7C,MAAMujE,EAAYQ,GAAavgF,KAAKwuE,SAAUxuE,MAC9C+/E,EAAUxR,QAAQ3/C,SAASpS,GAAQxc,KAAK+kF,WAAWvoE,KACnDujE,EAAUjR,YAAYlgD,SAASpS,GAAQxc,KAAK+kF,WAAWvoE,KACvDujE,EAAUhQ,aAAanhD,SAASpS,GAAQxc,KAAK+kF,WAAWvoE,KAGxDxc,KAAKgkF,UAAUp1D,SAAS+zD,KAEhBA,EAASxP,WAAW3Z,EAAUG,gBACO,IAArCgpB,EAAS10E,QAAQjO,KAAKwuE,YAEtBxuE,KAAK+kF,WAAWpC,MASpB,yBAAM0oB,CAAoBvrC,GAC9B,IAAK9/D,KAAKorG,iBACN,OAGJ,IAAIV,EAAcjoB,GAAeziF,MACjC0qG,QAAoB1qG,KAAK0rG,YAAYhB,EAAa5qC,GAElD9/D,KAAKi9F,QAAQj6B,GAA8BgK,KAAKynB,UAAUiW,IAE1D,MAAM3qB,EAAuBQ,GAAavgF,KAAKwuE,SAAUxuE,MACzD+/E,EAAUxR,cAAgBvuE,KAAK0rG,YAC3B3rB,EAAUxR,QACVzO,GAEJigB,EAAUjR,kBAAoB9uE,KAAK0rG,YAC/B3rB,EAAUjR,YACVhP,GAEJigB,EAAUhQ,mBAAqB/vE,KAAK0rG,YAChC3rB,EAAUhQ,aACVjQ,GAGJ9/D,KAAKi9F,QAAQ,GAADz/D,OACLwlC,GAA0B,KAAAxlC,OAAIx9B,KAAKwuE,UACtCxB,KAAKynB,UAAU1U,IASf,+BAAM4rB,CACVnvF,EACAsjD,GAEA,IAAK9/D,KAAKorG,iBACN,OAAO,KAGX,MAAMQ,EAAW5rG,KAAK86F,QAAQt+E,GAC9B,IAAKovF,EACD,OAAO,KAGX,IAAIC,EACJ,IACIA,EAAS7+B,KAAKC,MAAM2+B,EACvB,CAAC,MAAO/5F,GAEL,OAAO,IACV,CAED,OAAKg6F,EAAO3wG,IAAO2wG,EAAOx1C,OAAUw1C,EAAOlnG,KASvCknG,EAAO3wG,KAAO8E,KAAKorG,iBAAiBlwG,IAEpC8E,KAAKwlF,kBAAkB4G,gBACnB,CAAE0f,2BAA4B,GAC9BhsC,GAEG,MAGJshC,GACH3L,GACA3K,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALGshC,CAOHphG,KAAKorG,iBAAiB5uF,IACtBqvF,EAAOx1C,MACPr2D,KAAKyrG,WAAWjvF,GAChBqvF,EAAOlnG,OA1BP3E,KAAKwlF,kBAAkB4G,gBACnB,CAAE2f,sBAAuB,GACzBjsC,GAEG,MA+BP,iBAAM4rC,CACV73B,EACA/T,GAEA,MAAMksC,EAA6B,GAC7BC,EAAmC,GAkBzC,OAjBAp4B,EAAIjlD,SAASpS,IACT,MAAMq8C,EAAU74D,KAAK2rG,0BACjBnvF,EACAsjD,GACF7vC,MAAM9qB,IACAA,GACAnF,KAAK8qG,cAAc7N,QAAQzgF,EAAKrX,GAChC6mG,EAAYnyG,KAAK2iB,IAGjBxc,KAAK+kF,WAAWvoE,MAGxByvF,EAAWpyG,KAAKg/D,YAGd5gB,QAAQuf,IAAIy0C,GACXD,EAQHP,UAAAA,CAAWjvF,GACf,IAAIvW,EAAU,GAKd,OAJIuW,EAAI5M,SAAS5P,KAAKwuE,YAClBvoE,EAAUjG,KAAKwuE,UAGZvoE,EAGHulG,WAAAA,CAAYnhG,GAChBrK,KAAK+lE,OAAON,MAAM,gDAClB,MAAMymC,EAAkBlsG,KAAKwlF,kBAAkByF,iBAC3CH,IAEJohB,EAAgBx/F,IAAI,CAAEy/F,cAAc,IAEpC,MAAM,IAAE3vF,EAAG,MAAErX,EAAK,QAAEc,GAAYoE,EAAM1F,KACtC,OAAK6X,EAMDvW,GAAWA,IAAYjG,KAAKwuE,UAC5BxuE,KAAK+lE,OAAON,MAAM,2CAADjoC,OAC8Bv3B,SAE/CimG,EAAgB31F,IAAI,CAChB0pF,SAAS,EACT1gC,UAAW,sBAKdp6D,GAIDnF,KAAK8qG,cAAc7N,QAAQzgF,EAAKrX,GAChCnF,KAAK+lE,OAAOT,QAAQ,oCAJpBtlE,KAAK8qG,cAAc/lB,WAAWvoE,GAC9Bxc,KAAK+lE,OAAOT,QAAQ,0CAKxB4mC,EAAgB31F,IAAI,CAAE0pF,SAAS,MAvB3BjgG,KAAK+lE,OAAO/mE,MAAM,oCAClBktG,EAAgB31F,IAAI,CAAE0pF,SAAS,EAAO1gC,UAAW,kBC3YhD6sC,GACTx7F,WAAAA,GACI,IAAKxG,OAAO+tF,eACR,MAAM73B,GACFL,IAKZ,gBAAMO,IAINs6B,OAAAA,CAAQt+E,GACJ,OAAOpS,OAAO+tF,eAAe2C,QAAQt+E,GAGzCohF,WAAAA,CAAYphF,GACR,OAAOxc,KAAK86F,QAAQt+E,GAGxBygF,OAAAA,CAAQzgF,EAAarX,GACjBiF,OAAO+tF,eAAe8E,QAAQzgF,EAAKrX,GAGvC,iBAAM04F,CAAYrhF,EAAarX,GAC3BnF,KAAKi9F,QAAQzgF,EAAKrX,GAGtB4/E,UAAAA,CAAWvoE,GACPpS,OAAO+tF,eAAepT,WAAWvoE,GAGrCwnE,OAAAA,GACI,OAAOjiF,OAAOmgB,KAAK9X,OAAO+tF,gBAG9BoF,WAAAA,CAAY/gF,GACR,OAAOpS,OAAO+tF,eAAe7xF,eAAekW,IC0B9C,MAAO6vF,WAA4BvtB,GAkBrCluE,WAAAA,CACI49D,EACA89B,EACAvtB,EACAhZ,EACAyf,EACAnmF,EACA2/E,GAEAtf,MAAM8O,EAAUuQ,EAAYhZ,EAAQiZ,GACpCh/E,KAAKssG,YAAcA,EACnBtsG,KAAK+lE,OAASA,EACd/lE,KAAKusG,gBAAkB,IAAI5O,GAC3B39F,KAAKwsG,eAAiBC,GAClBj+B,EACA89B,EAAY7U,cACZ1xB,EACAyf,GAEJxlF,KAAK0sG,sBAAwBD,GACzBj+B,EACA89B,EAAY7S,uBACZ1zB,EACAyf,GAEJxlF,KAAK2sG,cAAgB,IAAIhD,GAEzB3pG,KAAKwlF,kBAAoBA,EACzBxlF,KAAKX,aAAeA,EAGxB,gBAAMmhE,CAAWV,SACP9/D,KAAKwsG,eAAehsC,WAAWV,GACrC9/D,KAAK4sG,oBAAoB9sC,GAMrB8sC,mBAAAA,CAAoB9sC,GACxB,MAAM+sC,EAAkB7sG,KAAKwsG,eAAe1R,QACxC93B,IAEA6pC,IACA7sG,KAAK+lE,OAAO71D,KAAK,4CAADstB,OACgCqvE,IAEhD7sG,KAAKwlF,kBAAkBQ,UACnB,CAAE8mB,uBAAwBD,GAC1B/sC,IAIJ+sC,IAAoBp8C,IACpBzwD,KAAKwsG,eAAevP,QAAQj6B,GAAyBvS,IAQnDs8C,oBAAAA,CAAqBC,GAC3B,IACI,MAAMC,EAAajgC,KAAKC,MAAM+/B,GAO9B,OAAOC,GAAoC,kBAAfA,EACtBA,EACA,IACT,CAAC,MAAOjuG,GACL,OAAO,IACV,EASL8hE,UAAAA,CAAW+jB,GACP7kF,KAAK+lE,OAAON,MAAM,yCAClB,MAAMynC,EAAoBltG,KAAKwsG,eAAe5O,YAAY/Y,GAC1D,IAAKqoB,EAED,OADAltG,KAAKmtG,wBAAwBtoB,GACtB,KAGX,MAAMuoB,EAAgBptG,KAAK+sG,qBAAqBG,GAChD,OAAKE,GAAkBn1B,GAAcyC,gBAAgB0yB,GAK9CtuB,GAAa8J,SAChB,IAAI3Q,GACJm1B,IANAptG,KAAKmtG,wBAAwBtoB,GACtB,MAaf,gBAAMzD,CACF9H,EACAxZ,GAEA9/D,KAAK+lE,OAAON,MAAM,yCAClB,MAAMjpD,EAAM88D,EAAQpB,2BACdkpB,GACFphG,KAAKwsG,eAAe3O,YAAYrkE,KAAKx5B,KAAKwsG,gBAC1C1hB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBAJH4b,CAKJ5kF,EAAKwwD,KAAKynB,UAAUnb,GAAUxZ,GAChC,MAAMutC,EAAWrtG,KAAKstG,mBAAmB9wF,GAMrCxc,KAAKssG,YAAY7U,gBACb70B,IACJyqC,GAEArtG,KAAKX,aAAakuG,UACdxmC,QACA5P,EACAmiB,EAAQlB,kBASpBqK,cAAAA,GACI,OAAOA,GAAeziF,KAAKwsG,gBAO/Bc,kBAAAA,CAAmB9wF,GACfxc,KAAK+lE,OAAON,MAAM,iDAClBzlE,KAAK+lE,OAAOJ,SAAS,2DAADnoC,OAC2ChhB,IAE/D,MAAMkuF,EAAc1qG,KAAKyiF,iBACzB,OAAkC,IAA9BioB,EAAYz8F,QAAQuO,IAEpBkuF,EAAY7wG,KAAK2iB,GACjBxc,KAAKwsG,eAAevP,QAChBj6B,GACAgK,KAAKynB,UAAUiW,IAEnB1qG,KAAK+lE,OAAOT,QACR,6DAEG,IAEPtlE,KAAK+lE,OAAOT,QACR,6EAEG,GAQf6nC,uBAAAA,CAAwB3wF,GACpBxc,KAAK+lE,OAAON,MAAM,sDAClBzlE,KAAK+lE,OAAOJ,SAAS,gEAADnoC,OACgDhhB,IAEpE,MAAMkuF,EAAc1qG,KAAKyiF,iBACnB+qB,EAAe9C,EAAYz8F,QAAQuO,GACrCgxF,GAAgB,GAChB9C,EAAY11D,OAAOw4D,EAAc,GACjCxtG,KAAKwsG,eAAevP,QAChBj6B,GACAgK,KAAKynB,UAAUiW,IAEnB1qG,KAAK+lE,OAAON,MACR,oEAGJzlE,KAAK+lE,OAAON,MACR,6EASZ,mBAAMmf,CAAcpoE,GACXkjD,MAAMklB,cAAcpoE,GACzBxc,KAAKmtG,wBAAwB3wF,GAOjC,0BAAMsoE,CAAqBxL,SACjB5Z,MAAMolB,qBAAqBxL,GAM7Bt5E,KAAKssG,YAAY7U,gBAAkB70B,IAEnC5iE,KAAKX,aAAakuG,UACdxmC,QACA5P,EACAmiB,EAAQlB,kBASpB+M,aAAAA,CAAc3oE,GACVkjD,MAAMylB,cAAc3oE,GACpBxc,KAAKytG,eAAejxF,EAAK6gD,EAAeC,UAO5C,uBAAMglB,CAAkB9lE,GACfkjD,MAAM4iB,kBAAkB9lE,GAC7Bxc,KAAKytG,eAAejxF,EAAK6gD,EAAeE,cAO5C6nB,kBAAAA,CAAmB5oE,GACfkjD,MAAM0lB,mBAAmB5oE,GACzBxc,KAAKytG,eAAejxF,EAAK6gD,EAAeI,eAO5C8iB,YAAAA,GACI,OAAOA,GAAavgF,KAAKwuE,SAAUxuE,KAAKwsG,gBAQ5CkB,WAAAA,CAAYlxF,EAAahZ,GACrBxD,KAAK+lE,OAAON,MAAM,0CAClB,MAAMsa,EAAY//E,KAAKugF,eAEvB,OAAQ/8E,GACJ,KAAK65D,EAAeC,UACwB,IAApCyiB,EAAUxR,QAAQtgE,QAAQuO,KAC1Bxc,KAAK+lE,OAAO71D,KACR,2DAEJ6vE,EAAUxR,QAAQ10E,KAAK2iB,IAE3B,MACJ,KAAK6gD,EAAeE,cAC4B,IAAxCwiB,EAAUjR,YAAY7gE,QAAQuO,KAC9Bxc,KAAK+lE,OAAO71D,KACR,+DAEJ6vE,EAAUjR,YAAYj1E,KAAK2iB,IAE/B,MACJ,KAAK6gD,EAAeI,eAC6B,IAAzCsiB,EAAUhQ,aAAa9hE,QAAQuO,KAC/Bxc,KAAK+lE,OAAO71D,KACR,gEAEJ6vE,EAAUhQ,aAAal2E,KAAK2iB,IAEhC,MACJ,QAII,MAHAxc,KAAK+lE,OAAO/mE,MAAM,sFAADw+B,OACyEh6B,IAEpFqoE,GACFk+B,IAIZ/pG,KAAKwsG,eAAevP,QAAQ,GAADz/D,OACpBwlC,GAA0B,KAAAxlC,OAAIx9B,KAAKwuE,UACtCxB,KAAKynB,UAAU1U,IASvB0tB,cAAAA,CAAejxF,EAAahZ,GACxBxD,KAAK+lE,OAAON,MAAM,6CAClB,MAAMsa,EAAY//E,KAAKugF,eAEvB,OAAQ/8E,GACJ,KAAK65D,EAAeC,SAChBt9D,KAAK+lE,OAAOV,QAAQ,gFAAD7nC,OACiEhhB,EAAG,cAEvF,MAAMmxF,EAAY5tB,EAAUxR,QAAQtgE,QAAQuO,GACxCmxF,GAAa,GACb3tG,KAAK+lE,OAAO71D,KACR,kEAEJ6vE,EAAUxR,QAAQv5B,OAAO24D,EAAW,IAEpC3tG,KAAK+lE,OAAO71D,KACR,gIAGR,MACJ,KAAKmtD,EAAeE,aAChBv9D,KAAK+lE,OAAOV,QAAQ,oFAAD7nC,OACqEhhB,EAAG,cAE3F,MAAMoxF,EAAgB7tB,EAAUjR,YAAY7gE,QAAQuO,GAChDoxF,GAAiB,GACjB5tG,KAAK+lE,OAAO71D,KACR,sEAEJ6vE,EAAUjR,YAAY95B,OAAO44D,EAAe,IAE5C5tG,KAAK+lE,OAAO71D,KACR,oIAGR,MACJ,KAAKmtD,EAAeI,cAChBz9D,KAAK+lE,OAAOV,QAAQ,qFAAD7nC,OACsEhhB,EAAG,cAE5F,MAAMqxF,EAAiB9tB,EAAUhQ,aAAa9hE,QAAQuO,GAClDqxF,GAAkB,GAClB7tG,KAAK+lE,OAAO71D,KACR,uEAEJ6vE,EAAUhQ,aAAa/6B,OAAO64D,EAAgB,IAE9C7tG,KAAK+lE,OAAO71D,KACR,qIAGR,MACJ,QAII,MAHAlQ,KAAK+lE,OAAO/mE,MAAM,yFAADw+B,OAC4Eh6B,IAEvFqoE,GACFk+B,IAIZ/pG,KAAKwsG,eAAevP,QAAQ,GAADz/D,OACpBwlC,GAA0B,KAAAxlC,OAAIx9B,KAAKwuE,UACtCxB,KAAKynB,UAAU1U,IAQvBsG,oBAAAA,CAAqBynB,GACjB,MAAM3oG,EAAQnF,KAAKwsG,eAAe5O,YAAYkQ,GAC9C,IAAK3oG,EAKD,OAJAnF,KAAK+lE,OAAON,MACR,kEAEJzlE,KAAKytG,eAAeK,EAAYzwC,EAAeC,UACxC,KAGX,MAAMywC,EAAgB/tG,KAAK+sG,qBAAqB5nG,GAChD,OAAK4oG,IvDtQmB59B,EuDsQ4B49B,IvDhQpD79B,GAAmBC,IACnBA,EAAO7pE,eAAe,UACtB6pE,EAAuB,iBAAM9S,EAAeC,UuDsQ5Ct9D,KAAK+lE,OAAON,MACR,uDAEGsoC,IAVH/tG,KAAK+lE,OAAON,MACR,kEAEJzlE,KAAKytG,eAAeK,EAAYzwC,EAAeC,UACxC,MvD3Qb,IAA0B6S,EuDwR5B,0BAAMkR,CACF9S,EACAzO,GAEA9/D,KAAK+lE,OAAON,MAAM,mDAClB,MAAMqoC,EAAaE,GAAmCz/B,SAEhD6yB,GACFphG,KAAKwsG,eAAe3O,YAAYrkE,KAAKx5B,KAAKwsG,gBAC1C1hB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBAJH4b,CAKJ0M,EAAY9gC,KAAKynB,UAAUlmB,GAAUzO,GAEvC9/D,KAAK0tG,YAAYI,EAAYzwC,EAAeC,UAOhD8kB,wBAAAA,CAAyB6rB,GACrB,MAAM9oG,EAAQnF,KAAKwsG,eAAe5O,YAAYqQ,GAC9C,IAAK9oG,EAKD,OAJAnF,KAAK+lE,OAAON,MACR,sEAEJzlE,KAAKytG,eAAeQ,EAAgB5wC,EAAeE,cAC5C,KAEX,MAAM2wC,EAAoBluG,KAAK+sG,qBAAqB5nG,GACpD,OACK+oG,IvD3UuB/9B,EuD4UU+9B,IvDtUtCh+B,GAAmBC,IACnBA,EAAO7pE,eAAe,UACtB6pE,EAAO7pE,eAAe,YACrB6pE,EAAuB,iBAAM9S,EAAeE,cACzC4S,EAAuB,iBACnB9S,EAAeG,gCuD0UvBx9D,KAAK+lE,OAAON,MACR,2DAEGyoC,IAVHluG,KAAK+lE,OAAON,MACR,sEAEJzlE,KAAKytG,eAAeQ,EAAgB5wC,EAAeE,cAC5C,MvDlVb,IAA8B4S,EuD+VhC,8BAAMoS,CACFzT,EACAhP,GAEA9/D,KAAK+lE,OAAON,MACR,uDAEJ,MAAMwoC,EAAiBD,GAAmCl/B,SACpDsyB,GACFphG,KAAKwsG,eAAe3O,YAAYrkE,KAAKx5B,KAAKwsG,gBAC1C1hB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBAJH4b,CAKJ6M,EAAgBjhC,KAAKynB,UAAU3lB,GAAchP,GAE/C9/D,KAAK0tG,YAAYO,EAAgB5wC,EAAeE,cAOpDgqB,yBAAAA,CACI4mB,GAEA,MAAMhpG,EAAQnF,KAAKwsG,eAAe5O,YAAYuQ,GAC9C,IAAKhpG,EAKD,OAJAnF,KAAK+lE,OAAON,MACR,uEAEJzlE,KAAKytG,eAAeU,EAAiB9wC,EAAeI,eAC7C,KAEX,MAAM2wC,EAAqBpuG,KAAK+sG,qBAAqB5nG,GACrD,OACKipG,IvD/VwBj+B,EuDgWUi+B,IvD1VvCl+B,GAAmBC,IACnBA,EAAuB,iBAAM9S,EAAeI,euDkW5Cz9D,KAAK+lE,OAAON,MACR,4DAEG2oC,IAVHpuG,KAAK+lE,OAAON,MACR,uEAEJzlE,KAAKytG,eAAeU,EAAiB9wC,EAAeI,eAC7C,MvDtWb,IAA+B0S,EuDmXjC,+BAAMoR,CACFxR,EACAjQ,GAEA9/D,KAAK+lE,OAAON,MACR,wDAEJ,MAAM0oC,EACFH,GAAmCj+B,SACjCqxB,GACFphG,KAAKwsG,eAAe3O,YAAYrkE,KAAKx5B,KAAKwsG,gBAC1C1hB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBAJH4b,CAKJ+M,EAAiBnhC,KAAKynB,UAAU1kB,GAAejQ,GAEjD9/D,KAAK0tG,YAAYS,EAAiB9wC,EAAeI,eAOrD0mB,cAAAA,CAAekqB,GACX,MAAMlpG,EAAQnF,KAAKwsG,eAAe1R,QAAQuT,GAC1C,IAAKlpG,EAID,OAHAnF,KAAK+lE,OAAON,MACR,4DAEG,KAGX,MAAM6oC,EAAiBtuG,KAAK+sG,qBAAqB5nG,GACjD,OACKmpG,IvDrRuB9xF,EuDsRU6xF,GvDtRGl+B,EuDsRam+B,IvDhRxB,IAA9B9xF,EAAIvO,QAAQyvD,IACZyS,EAAO7pE,eAAe,aACtB6pE,EAAO7pE,eAAe,iBuDsRtBtG,KAAK+lE,OAAON,MAAM,iDACX6oC,IAPHtuG,KAAK+lE,OAAON,MACR,4DAEG,MvD3RH,IAAoBjpD,EAAa2zD,EuDsS7CsR,cAAAA,CAAeD,GACXxhF,KAAK+lE,OAAON,MAAM,6CAClB,MAAM4oC,WvD1TwB/lC,GAGlB,IAHmB,YACnCgG,EAAW,SACXE,GACgBlG,EAMhB,MAL2C,CACvC5K,EACA4Q,EACAE,GAGC9sC,KAAK07B,GACL7vD,aACT,CuD8S+BygG,CAAoCxsB,GAC3DxhF,KAAKwsG,eAAevP,QAChBoR,EACArhC,KAAKynB,UAAUjT,IAQvBwH,kBAAAA,CACIulB,GAEA,MAAMppG,EAAQnF,KAAKwsG,eAAe1R,QAAQyT,GAC1C,IAAKppG,EAID,OAHAnF,KAAK+lE,OAAON,MACR,gEAEG,KAEX,MAAM+oC,EAAexuG,KAAK+sG,qBAAqB5nG,GAC/C,OACKqpG,GvDtXG,SAAwBhyF,EAAa2zD,GACjD,MAAMs+B,EACgD,IAAlDjyF,EAAIvO,QAAQ6vD,EAAuBK,WACvC,IAAIuwC,GAA0B,EAS9B,OAPIv+B,IACAu+B,EACIv+B,EAAO7pE,eAAe,mBACtB6pE,EAAO7pE,eAAe,WACtB6pE,EAAO7pE,eAAe,cAGvBmoG,GAAeC,CAC1B,CuD0WaV,CACGO,EACAC,IASRxuG,KAAK+lE,OAAON,MAAM,qDACX+oC,IAPHxuG,KAAK+lE,OAAON,MACR,gEAEG,MAYfsjB,kBAAAA,CACIwlB,EACAI,GAEA3uG,KAAK+lE,OAAON,MAAM,iDAClBzlE,KAAKwsG,eAAevP,QAChBsR,EACAvhC,KAAKynB,UAAUka,IAOvBlqB,oBAAAA,CAAqBjoE,GACjB,MAAMrX,EAAQnF,KAAKusG,gBAAgBzR,QAAQt+E,GAC3C,IAAKrX,EAID,OAHAnF,KAAK+lE,OAAON,MACR,kEAEG,KAEX,MAAM6oC,EAAiBtuG,KAAK+sG,qBAAqB5nG,GACjD,OACImpG,GvD5VI,SACZ9xF,EACA2zD,GAEA,QAAKA,GAKuD,IAAxD3zD,EAAIvO,QAAQ2vD,IACZuS,EAAO7pE,eAAe,YACtB6pE,EAAO7pE,eAAe,oBACtB6pE,EAAO7pE,eAAe,sBACtB6pE,EAAO7pE,eAAe,wBACtB6pE,EAAO7pE,eAAe,2BACtB6pE,EAAO7pE,eAAe,mBACtB6pE,EAAO7pE,eAAe,WACtB6pE,EAAO7pE,eAAe,uBACtB6pE,EAAO7pE,eAAe,yBACtB6pE,EAAO7pE,eAAe,cACtB6pE,EAAO7pE,eAAe,WAE9B,CuDuUY0nG,CAAuCxxF,EAAK8xF,IAE5CtuG,KAAK+lE,OAAON,MACR,uDAEG6oC,GAEJ,KAMXhqB,wBAAAA,GAEI,OADgBtkF,KAAKusG,gBAAgBvoB,UACtBrd,QAAQnqD,GACZxc,KAAKwkF,oBAAoBhoE,KASxCoyF,kBAAAA,CAAmBC,EAAoBC,GACnC9uG,KAAKusG,gBAAgBtP,QAAQh6B,GAA+B4rC,GAC5D7uG,KAAKusG,gBAAgBtP,QACjBh6B,GACA6rC,GAORC,kBAAAA,GAOI,MAAO,CALH/uG,KAAKusG,gBAAgBzR,QAAQ73B,KAC7BzJ,EAAU0B,aAEVl7D,KAAKusG,gBAAgBzR,QAAQ73B,KAC7BzJ,EAAU0B,cAQlB+tB,oBAAAA,CAAqBzsE,EAAa2zD,GAC9BnwE,KAAK+lE,OAAON,MAAM,mDAClBzlE,KAAKusG,gBAAgBtP,QAAQzgF,EAAKwwD,KAAKynB,UAAUtkB,IAMrDhO,gBAAAA,GACI,MAAM6sC,EAA0BhvG,KAAKivG,iBACjC/yC,GAEEgzC,EAA4BlvG,KAAKwsG,eAAe1R,QAClDkU,GAEJ,IAAKE,EAID,OAHAlvG,KAAK+lE,OAAON,MACR,yEAEG,KAEX,MAAM0pC,EAAwBnvG,KAAK+sG,qBAC/BmC,GAEJ,OAAIC,GACAnvG,KAAK+lE,OAAON,MACR,6EAEGzlE,KAAKq/E,yBAAyB,CACjCxX,cAAesnC,EAAsBtnC,cACrCC,eAAgBqnC,EAAsBrnC,eACtC2G,SAAU0gC,EAAsB1gC,aAGxCzuE,KAAK+lE,OAAON,MACR,iEAEG,MAOXvD,gBAAAA,CAAiBoX,GACb,MAAM81B,EAAmBpvG,KAAKivG,iBAC1B/yC,GAEJ,GAAIod,EAAS,CACTt5E,KAAK+lE,OAAOT,QAAQ,wCACpB,MAAM+pC,EAA2C,CAC7CxnC,cAAeyR,EAAQzR,cACvBC,eAAgBwR,EAAQxR,eACxB2G,SAAU6K,EAAQ7K,UAEtBzuE,KAAKwsG,eAAevP,QAChBmS,EACApiC,KAAKynB,UAAU4a,GAEtB,MACGrvG,KAAK+lE,OAAOT,QACR,+DAEJtlE,KAAKwsG,eAAeznB,WAAWqqB,GAEnCpvG,KAAKX,aAAakuG,UAAUxmC,IAOhCoiB,kBAAAA,CAAmBmmB,GACf,MAAMnqG,EAAQnF,KAAKwsG,eAAe1R,QAAQwU,GAC1C,IAAKnqG,EAID,OAHAnF,KAAK+lE,OAAON,MACR,gEAEG,KAGX,MAAM8pC,EAAwBvvG,KAAK+sG,qBAAqB5nG,GACxD,OACKoqG,GvDrhBG,SAAmB/yF,EAAa2zD,GAC5C,IAAIs+B,GAAuB,EACvBjyF,IACAiyF,EAAqE,IAAvDjyF,EAAIvO,QAAQ4wD,KAG9B,IAAI6vC,GAA0B,EAK9B,OAJIv+B,IACAu+B,EAAiBv+B,EAAO7pE,eAAe,iBAGpCmoG,GAAeC,CAC1B,CuD0gBaV,CACGsB,EACAC,IASRvvG,KAAK+lE,OAAON,MAAM,qDACX8pC,IAPHvvG,KAAK+lE,OAAON,MACR,gEAEG,MAYfyjB,kBAAAA,CACIomB,EACAE,GAEAxvG,KAAK+lE,OAAON,MAAM,iDAClBzlE,KAAKwsG,eAAevP,QAChBqS,EACAtiC,KAAKynB,UAAU+a,IASvBC,iBAAAA,CAAkB9sB,EAAkBiT,GAChC,MAAMp5E,EAAMo5E,EAAc51F,KAAKivG,iBAAiBtsB,GAAYA,EAC5D,GAAI3iF,KAAKssG,YAAY5U,uBAAwB,CACzC,MAAMgY,EAAa1vG,KAAK2sG,cAAc7R,QAAQt+E,GAC9C,GAAIkzF,EAIA,OAHA1vG,KAAK+lE,OAAON,MACR,uGAEGiqC,CAEd,CAED,MAAMvqG,EAAQnF,KAAK0sG,sBAAsB5R,QAAQt+E,GACjD,IAAKrX,EAAO,CAER,GACInF,KAAKssG,YAAY7U,gBACjB70B,GACF,CACE,MAAMw7B,EAAOp+F,KAAKwsG,eAAe1R,QAAQt+E,GACzC,GAAI4hF,EAIA,OAHAp+F,KAAK+lE,OAAON,MACR,sFAEG24B,CAEd,CAID,OAHAp+F,KAAK+lE,OAAON,MACR,+EAEG,IACV,CAID,OAHAzlE,KAAK+lE,OAAON,MACR,wEAEGtgE,EAUXwqG,iBAAAA,CACIhtB,EACAx9E,EACAywF,GAEA,MAAMp5E,EAAMo5E,EAAc51F,KAAKivG,iBAAiBtsB,GAAYA,EAE5D3iF,KAAK0sG,sBAAsBzP,QAAQzgF,EAAKrX,GACpCnF,KAAKssG,YAAY5U,yBACjB13F,KAAK+lE,OAAON,MACR,kGAEJzlE,KAAK2sG,cAAc1P,QACfzgF,EACArX,OACAgyD,EACAn3D,KAAKssG,YAAY5S,gBAS7B3U,UAAAA,CAAWvoE,GACPxc,KAAKwsG,eAAeznB,WAAWvoE,GAQnCozF,mBAAAA,CAAoBpzF,GAChBxc,KAAK0sG,sBAAsB3nB,WAAWvoE,GAClCxc,KAAKssG,YAAY5U,yBACjB13F,KAAK+lE,OAAON,MACR,wFAEJzlE,KAAK2sG,cAAc5nB,WAAWvoE,IAOtCwnE,OAAAA,GACI,OAAOhkF,KAAKwsG,eAAexoB,UAM/B,WAAM+Z,SAEI/9F,KAAK0kF,oBACX1kF,KAAKqlF,oBAGLrlF,KAAK0sG,sBAAsB1oB,UAAUp1D,SAAS+zD,KAEQ,IAA9CA,EAAS10E,QAAQurD,EAAUG,gBACU,IAArCgpB,EAAS10E,QAAQjO,KAAKwuE,WAEtBxuE,KAAK4vG,oBAAoBjtB,MAKjC3iF,KAAKwsG,eAAexoB,UAAUp1D,SAAS+zD,KAEe,IAA9CA,EAAS10E,QAAQurD,EAAUG,gBACU,IAArCgpB,EAAS10E,QAAQjO,KAAKwuE,WAEtBxuE,KAAKwsG,eAAeznB,WAAWpC,MAIvC3iF,KAAKusG,gBAAgBxO,QASzB,kCAAM8R,CACFrqB,EACA1lB,GAEA0lB,EAAkBwG,oBACdlB,GACAhrB,GAGJ,MAAMigB,EAAY//E,KAAKugF,eAEjB0B,EAA4C,GAClDlC,EAAUjR,YAAYlgD,SAASpS,IAE3B,MAAMslE,EAAa9hF,KAAKoiF,yBAAyB5lE,GAEnC,OAAVslE,QAAU,IAAVA,GAAAA,EAAYzS,qBACZ7yD,EAAI5M,SAASkyE,EAAWzS,oBAAoB9hE,gBAE5C00E,EAAoBpoF,KAAKmG,KAAKsiF,kBAAkB9lE,aAGlDy7B,QAAQuf,IAAIyqB,GAGdA,EAAoBhoF,OAAS,GAC7B+F,KAAK+lE,OAAOb,QAAQ,GAAD1nC,OACZykD,EAAoBhoF,OAAM,mFAUzCg1G,gBAAAA,CAAiBzyF,GAEb,OADqBxc,KAAK+sG,qBAAqBvwF,GAQxCwwD,KAAKynB,UAAUj4E,GANdw2D,GAAYG,WAAW32D,EAAKg9C,EAAUG,cAC/Bn9C,EAEJ,GAAPghB,OAAUg8B,EAAUG,aAAY,KAAAn8B,OAAIx9B,KAAKwuE,SAAQ,KAAAhxC,OAAIhhB,GAU7DszF,iBAAAA,GACI9vG,KAAK+lE,OAAON,MAAM,gDAElBzlE,KAAK4vG,oBACD5vG,KAAKivG,iBAAiBlsC,KAE1B/iE,KAAK4vG,oBACD5vG,KAAKivG,iBAAiBlsC,KAE1B/iE,KAAK4vG,oBACD5vG,KAAKivG,iBAAiBlsC,KAE1B/iE,KAAK4vG,oBACD5vG,KAAKivG,iBAAiBlsC,KAE1B/iE,KAAK4vG,oBACD5vG,KAAKivG,iBAAiBlsC,KAE1B/iE,KAAK+vG,0BAAyB,GAGlCC,qBAAAA,CACIC,EACAC,GAEAlwG,KAAK+lE,OAAON,MAAM,oDAElB,MAAM0qC,EAAelkC,GAAae,KAAKynB,UAAUwb,IAOjD,GANAjwG,KAAK2vG,kBACD5sC,GACAotC,GACA,GAGAD,EAAc,CACd,MAAME,EAAkBnkC,GAAaikC,GACrClwG,KAAK2vG,kBACD5sC,GACAqtC,GACA,EAEP,EAMLC,gBAAAA,GACIrwG,KAAK+lE,OAAON,MAAM,+CAElB,MAAM6qC,EAAsBtwG,KAAKyvG,kBAC7B1sC,IACA,GAEJ,IAAKutC,EACD,MAAMngB,GACF5B,IAGR,MAAM6hB,EAAkBpwG,KAAKyvG,kBACzB1sC,IACA,GAGJ,IAAIwtC,EACAC,EAAW,GACf,IACID,EAAgBvjC,KAAKC,MAAMjB,GAAaskC,IACpCF,IACAI,EAAWxkC,GAAaokC,GAE/B,CAAC,MAAOv+F,GAKL,MAJA7R,KAAK+lE,OAAOd,SAAS,uBAADznC,OAAwB8yE,IAC5CtwG,KAAK+lE,OAAO/mE,MAAM,kDAADw+B,OACqC3rB,IAEhDs+E,GACF3B,GAEP,CAED,MAAO,CAAC+hB,EAAeC,GAM3BC,sBAAAA,GACIzwG,KAAK+lE,OAAON,MAAM,qDAClB,MAAMirC,EAAgB1wG,KAAKyvG,kBACvB1sC,IACA,GAEJ,IAAK2tC,EAID,OAHA1wG,KAAK+lE,OAAON,MACR,8EAEG,KAGX,MAAM8qC,EAAgBvwG,KAAK+sG,qBACvB2D,GAEJ,OAAKH,IACDvwG,KAAK+lE,OAAO/mE,MACR,8EAEG,MAMf2xG,uBAAAA,CAAwBptB,GAAuB,IAAAqtB,EAC3C,MAAMpiC,EAA0C,QAAlCoiC,EAAG5wG,KAAK6wG,kCAA0B,IAAAD,OAAA,EAA/BA,EAAiCpiC,SAElD,OAAI+U,EACO/U,IAAaxuE,KAAKwuE,WAEhBA,EAIjBqiC,wBAAAA,GAII,MAAMr0F,EAAM,GAAHghB,OAAMg8B,EAAUG,aAAY,KAAAn8B,OAAIulC,IACnC59D,EAAQnF,KAAKyvG,kBAAkBjzF,GAAK,GAC1C,IACI,OAAOrX,EAAQ6nE,KAAKC,MAAM9nE,GAAS,IACtC,CAAC,MAAO0M,GAQL,OANA7R,KAAK+lE,OAAO/mE,MAAM,oIAGlBgB,KAAK4vG,oBAAoBpzF,GACzBxc,KAAK8vG,oBACLvZ,GAAUnsF,QACH,IACV,EAGL2lG,wBAAAA,CACIh4C,GACgD,IAAA+4C,EAAA,IAAhDttG,EAAyBvD,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAA6iE,GAGzB,MAAMtmD,EAAM,GAAHghB,OAAMg8B,EAAUG,aAAY,KAAAn8B,OAAIulC,IACzC,GAAIhL,EAAY,CACZ,GAAI/3D,KAAK6wG,2BACL,MAAM1gB,GACFzC,IAIJ1tF,KAAK2vG,kBACDnzF,EACAwwD,KAAKynB,UAAU,CAAEjmB,SAAUxuE,KAAKwuE,SAAUhrE,UAC1C,EAGX,MACIu0D,IAC8B,QAA/B+4C,EAAA9wG,KAAK6wG,kCAA0B,IAAAC,OAAA,EAA/BA,EAAiCtiC,YAAaxuE,KAAKwuE,UAEnDxuE,KAAK4vG,oBAAoBpzF,GASjC,kBAAM+lD,CACFhkC,EACAy6B,GAIkB,IAAA+3C,EAAAC,EAAAC,EAElB,MAAMC,EAAgBlD,GACJ,QADoC+C,EAClDxyE,EAAO+6C,eAAO,IAAAy3B,OAAA,EAAdA,EAAgBlpC,cACF,QADempC,EAC7BzyE,EAAO+6C,eAAO,IAAA03B,OAAA,EAAdA,EAAgB1iC,YAChB/vC,EAAOgwC,QACPvuE,KAAKwuE,SACLjwC,EAAOkwC,UAGX,IAAI0iC,EACAn4C,EAAQ+uB,SACRopB,QAAmBnxG,KAAK++E,WAAWvS,WAAWxT,EAAQ+uB,SAW1D,MAuBM7G,EAAc,CAChB3S,QAAS2iC,EACTpiC,YAzBsBk/B,GACR,QAD4CiD,EAC1D1yE,EAAO+6C,eAAO,IAAA23B,OAAA,EAAdA,EAAgBppC,cAChBtpC,EAAO+6C,QAAQhL,YACf/vC,EAAOuwC,YACP9uE,KAAKwuE,SACLjwC,EAAOkwC,SACPlwC,EAAO+kC,OAAO5hC,KAAK,KAEnBnD,EAAOqvC,UACDwjC,GAA4B7yE,EAAOqvC,WACnC,EACNrvC,EAAOwwC,aACDqiC,GAA4B7yE,EAAOwwC,cACnC,EACN/C,QACA7U,EACA54B,EAAO0wC,eACP9X,EACA6B,EAAQ0tB,OACR1tB,EAAQ+uB,OACRopB,IAOJ,OAAOnxG,KAAKihF,gBAAgBC,EAAa3iD,EAAOuhC,eASpD,qBAAMmhB,CACFC,EACAphB,EACAqhB,GAEA,UACUzhB,MAAMuhB,gBACRC,EACAphB,EACAqhB,EAEP,CAAC,MAAOtvE,GACL,GACIA,aAAagtE,IACb7+E,KAAKwlF,mBACL1lB,EAEA,IACI,MAAMigB,EAAY//E,KAAKugF,eAEvBvgF,KAAKwlF,kBAAkBQ,UACnB,CACIqrB,aAActxB,EAAUhQ,aAAa91E,OACrCq3G,aAAcvxB,EAAUxR,QAAQt0E,OAChCs3G,aAAcxxB,EAAUjR,YAAY70E,QAExC6lE,EAEP,CAAC,MAAOjuD,GAAI,CAGjB,MAAMA,CACT,GAQT,SAAS46F,GACLj+B,EACAipB,EACA1xB,EACAyf,GAEA,IACI,OAAQiS,GACJ,KAAK70B,GACD,OAAO,IAAIgoC,GAAap8B,EAAUzI,EAAQyf,GAC9C,KAAK5iB,GACD,OAAO,IAAIwpC,GAKtB,CAAC,MAAOv6F,GACLk0D,EAAO/mE,MAAM6S,EAChB,CAED,OAAO,IAAI8rF,EACf,OCx2Ca6T,GAST5gG,WAAAA,CAAYm1D,GACR/lE,KAAKyxG,eAAiB,IAAIzlG,IAC1BhM,KAAK+lE,OAASA,GAAU,IAAIjC,GAAO,CAAC,GACJ,qBAArBknC,mBACPhrG,KAAK0xG,iBAAmB,IAAI1G,iBAfT,yBAmBvBhrG,KAAK2xG,wBAA0B3xG,KAAK2xG,wBAAwBn4E,KAAKx5B,MASrEyhE,gBAAAA,CACI5kE,EACA+0G,EACAppC,GAEA,GAAsB,qBAAXp+D,OAAwB,CAC/B,MAAMlP,EAAKstE,G1B8JZuD,K0B7JC,OAAI/rE,KAAKyxG,eAAex9F,IAAI/Y,IACxB8E,KAAK+lE,OAAO/mE,MAAM,2BAADw+B,OACctiC,EAAE,sGAE1B,OAEX8E,KAAKyxG,eAAe7iG,IAAI1T,EAAI,CAAC2B,EAAU+0G,GAAc,KACrD5xG,KAAK+lE,OAAOT,QAAQ,sCAAD9nC,OAAuCtiC,IAEnDA,EACV,CAED,OAAO,KAOXwmE,mBAAAA,CAAoB8G,GAChBxoE,KAAKyxG,eAAe/tE,OAAO8kC,GAC3BxoE,KAAK+lE,OAAOT,QAAQ,kBAAD9nC,OAAmBgrC,EAAU,cAUpD+kC,SAAAA,CACIrmD,EACAigB,EACAt0C,EACA7zB,GAAkB,IAAA6yG,EAElB,MAAM1hG,EAAwB,CAC1B+2C,UAAWA,EACXigB,gBAAiBA,GAAmB,KACpCt0C,QAASA,GAAW,KACpB7zB,MAAOA,GAAS,KAChB6lE,UAAWppE,KAAKH,OAGpB,OAAQ4rD,GACJ,KAAK6f,GACL,KAAKA,GACL,KAAKA,GAEoB,QAArB8qC,EAAA7xG,KAAK0xG,wBAAgB,IAAAG,GAArBA,EAAuB1zG,YAAYgS,GACnC,MACJ,QAEInQ,KAAK8xG,gBAAgB3hG,IASzB2hG,eAAAA,CAAgB3hG,GACpBnQ,KAAKyxG,eAAe7iF,SAChB,CAAA05C,EAKIE,KACA,IALC3rE,EAAU+0G,GAGVtpC,GAIyB,IAAtBspC,EAAW33G,QACX23G,EAAWhiG,SAASO,EAAQ+2C,cAE5BlnD,KAAK+lE,OAAOT,QAAQ,8BAAD9nC,OACegrC,EAAU,MAAAhrC,OAAKrtB,EAAQ+2C,YAEzDrqD,EAASkD,MAAM,KAAM,CAACoQ,QAU9BwhG,uBAAAA,CAAwBtnG,GAC5B,MAAM8F,EAAU9F,EAAM1F,KACtB3E,KAAK8xG,gBAAgB3hG,GAMzB4hG,iBAAAA,GAAiB,IAAAC,EACQ,QAArBA,EAAAhyG,KAAK0xG,wBAAgB,IAAAM,GAArBA,EAAuB/7F,iBACnB,UACAjW,KAAK2xG,yBAObM,mBAAAA,GAAmB,IAAAC,EACM,QAArBA,EAAAlyG,KAAK0xG,wBAAgB,IAAAQ,GAArBA,EAAuBh8F,oBACnB,UACAlW,KAAK2xG,0BCvJJ,MAAAQ,GACQ,kBADRA,GAEJ,MCPIC,GAAY,YACZC,GAAe,eAsCfC,GAAa,aACbC,GAAU,UAMVC,GAAkB,kBAMlBC,GAAqB,oBACrBC,GAAmB,gBACnBC,GAAsB,mBACtBC,GAAiB,0BC7BdC,GACZ/2B,EACAhc,EACA0lB,GAEA,IAAK1lB,EACD,OAGJ,MAAM0O,EAAWsN,EAAWhrE,IAAIshG,IAC5B5jC,GAAYsN,EAAW7nE,IAAIy+F,MACV,OAAjBltB,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CACIujB,iBAAkB/6B,EAClBskC,oBAAqBh3B,EAAWhrE,IAC5BuhG,KAGRvyC,GAGZ,CAOgB,SAAAizC,GACZj3B,EACAk3B,GAEAl3B,EAAWltE,IDxDc,gBCwDwBokG,EACrD,CA4BM,SAAUC,GACZn3B,EACAxY,GAEkD,IADlD4vC,IAAyBjzG,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,KAAAA,UAAA,GACzBk5F,EAAAl5F,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA+B87D,GAI3Bm3C,GACC/Z,EAAcvpF,SAAS,WACvB0zD,EAAO1zD,SAAS,WAEjBupF,EAAct/F,KAAK,UAEvB,MAAMs5G,EAAgBD,EAChB,IAAK5vC,GAAU,MAAQ61B,GACvB71B,GAAU,GACVoR,EAAW,IAAIP,GAASg/B,GAC9Br3B,EAAWltE,IDnGM,QCmGwB8lE,EAASwB,cACtD,CAMgB,SAAAk9B,GACZt3B,EACAtN,GAEAsN,EAAWltE,IAAIwjG,GAA8B5jC,EACjD,CAMgB,SAAA6kC,GACZv3B,EACA+c,GAEA/c,EAAWltE,IAAIyjG,GAAiCxZ,EACpD,CAuCgB,SAAAya,GACZx3B,EACA6E,GAEA7E,EAAWltE,IDzHW,aCyHwB+xE,EAClD,CAMgB,SAAA4yB,GACZz3B,EACA6E,GAEA7E,EAAWltE,IAAIqtD,EAAwB,OAAFz+B,OAASmjD,GAClD,CAMgB,SAAA6yB,GACZ13B,EACAvC,GAEAuC,EAAWltE,IACPqtD,EAAsB,OAAAz+B,OACf+7C,EAAW/C,IAAG,KAAAh5C,OAAI+7C,EAAW9C,MAE5C,CAMgB,SAAAg9B,GAAO33B,EAAiCiF,GACpDjF,EAAWltE,ID3JI,MC2JwBmyE,EAC3C,UAMgB2yB,GACZ53B,EACAiM,EACAiR,GAEA,MAAM2a,EAoQM,SACZ5rB,EACAiR,GAEA,IAAI2a,EAGJ,GAAK5rB,EAGD,IACI4rB,EAAe3mC,KAAKC,MAAM8a,EAC7B,CAAC,MAAOl2E,GACL,MAAMkhE,GACFjB,GAEP,MARD6hC,EAAe,CAAC,EAWhB3a,GAAsBA,EAAmB/+F,OAAS,IAC7C05G,EAAartG,eAAe81D,KAE7Bu3C,EAAav3C,GAAkC,CAAC,GAIpDu3C,EAAav3C,GAAgCA,GACzC,CACIie,OAAQ2e,IAIpB,OAAOhsB,KAAKynB,UAAUkf,EAC1B,CArSyBC,CACjB7rB,EACAiR,GAEJ,IACIhsB,KAAKC,MAAM0mC,EACd,CAAC,MAAO9hG,GACL,MAAMkhE,GACFjB,GAEP,CACDgK,EAAWltE,ID9NO,SC8NwB+kG,EAC9C,CAMgB,SAAAE,GACZ/3B,EACAhc,GAEAgc,EAAWltE,IDvNkB,oBCuNwBkxD,EACzD,CAMgB,SAAAg0C,GACZh4B,EACAi4B,GAGAj4B,EAAWltE,IDlOa,eCkOwBmlG,EAAYjqB,KAC5DhO,EAAWltE,IDlOa,eCkOwBmlG,EAAYtjD,SACxDsjD,EAAY/pB,IACZlO,EAAWltE,IDnOQ,cCmO4BmlG,EAAY/pB,IAE3D+pB,EAAYhqB,KACZjO,EAAWltE,IDrOS,eCqO4BmlG,EAAYhqB,IAEpE,CAMgB,SAAAiqB,GACZl4B,EACAm4B,GAEgB,OAAZA,QAAY,IAAZA,GAAAA,EAAcxpB,SACd3O,EAAWltE,ID9OO,aC8O4BqlG,EAAaxpB,SAG/C,OAAZwpB,QAAY,IAAZA,GAAAA,EAAcvpB,YACd5O,EAAWltE,IDjPM,YCiP4BqlG,EAAavpB,WAElE,CAiBgB,SAAAwpB,GAASp4B,EAAiC9jD,GAClDA,GACA8jD,EAAWltE,IDxRE,QCwR4BopB,EAEjD,CAkFgB,SAAAm8E,GACZr4B,EACAoO,GAEApO,EAAWltE,ID1Vc,gBC0VwBs7E,EACrD,CAMgB,SAAAkqB,GACZt4B,EACAqO,GAEIA,GACArO,EAAWltE,IDrWa,mBCqW4Bu7E,EAE5D,CAMgB,SAAAkqB,GACZv4B,EACAw4B,GAEIA,GACAx4B,EAAWltE,IDjXkB,wBCmXzB0lG,EAGZ,CA4BgB,SAAAC,GACZz4B,EACA04B,GAEA14B,EAAWltE,IDxbW,aCwbwB4lG,EAClD,CAMM,SAAUC,GAAc34B,GAC1BA,EAAWltE,IxFvMY,cwFuMK,IAChC,CAEM,SAAU8lG,GAAiB54B,GACxBA,EAAW7nE,IAAI2+F,KAChB92B,EAAWltE,IAAIgkG,GAAmC,OAE1D,CAMgB,SAAA+B,GACZ74B,EACA84B,GAEA7yG,OAAOivF,QAAQ4jB,GAAUhmF,SAAQ05C,IAAiB,IAAf9rD,EAAKrX,GAAMmjE,GACrCwT,EAAW7nE,IAAIuI,IAAQrX,GACxB22E,EAAWltE,IAAI4N,EAAKrX,KAGhC,CA+DgB,SAAA0vG,GACZ/4B,EACAg5B,GAEIA,IACAh5B,EAAWltE,IAAI0jG,GAA+B7zC,EAAqBE,KACnEmd,EAAWltE,IAAI2jG,GAA4BuC,GAEnD,CAKgB,SAAAC,GACZj5B,EACAk5B,GAEIA,IACAl5B,EAAWltE,IAAI0jG,GAA+B7zC,EAAqBG,KACnEkd,EAAWltE,IAAI2jG,GAA4ByC,GAEnD,CAMgB,SAAAC,GACZn5B,EACAo5B,GAEAp5B,EAAWltE,ID5hBoB,6BC8hB3BsmG,EAAuBC,qCAE3Br5B,EAAWltE,ID/hBoB,0BCiiB3BsmG,EAAuBE,iCAE/B,CAKM,SAAUC,GAAcv5B,GAC1BA,EAAWltE,IDxiBoB,sBC0iB3BiwD,GAER,UAYgBy2C,GACZx5B,EACAy5B,EACAC,GAEK15B,EAAW7nE,IAAIy+F,KAChB52B,EAAWltE,IAAI8jG,GAAqC6C,GAEnDz5B,EAAW7nE,IAAI0+F,KAChB72B,EAAWltE,IACP+jG,GACA6C,EAGZ,CC5kBOtsF,eAAeusF,GAClB5S,EACA/I,EACAuI,EACAC,EACAv8B,EACAjG,EACA0lB,GAEiB,OAAjBA,QAAiB,IAAjBA,GAAAA,EAAmBwG,oBACflB,GACAhrB,GAEJ,MAAM41C,EAAoBtT,GAAUyF,uBAChCI,GAAmBpF,IAIjB8S,EAAmC,IAAIvT,GACzCsT,EACA5b,EACAuI,EACAC,EACAv8B,EACAjG,EACA0lB,GAGJ,IAUI,aATM4b,GACFuU,EAAsBtR,sBAAsB7qE,KACxCm8E,GAEJ7qB,GACA/kB,EACAyf,EACA1lB,EAPEshC,GASCuU,CACV,CAAC,MAAO9jG,GACL,MAAMg6D,GACF1C,GAEP,CACL,CC/DM,MAAOysC,WAAoBt2C,GAW7B1uD,WAAAA,CACI2uD,EACAC,EACAI,EACA+oC,EACA74E,GAEA4vC,MAAMH,EAAWC,EAAcI,GAC/B5/D,KAAK2D,KAAO,cACZ3D,KAAK2oG,QAAUA,EACf3oG,KAAK8vB,OAASA,EAEd/tB,OAAO49D,eAAe3/D,KAAM41G,GAAYrvG,kBCXnCsvG,GAKT,mCAAOC,CAA6BC,GAChC,MAAO,GAAPv4E,OAAUqhC,GAAqC,KAAArhC,OAAIwvC,KAAKynB,UACpDshB,IASR,iBAAOC,CACH3T,EACA0T,GAEA,MAAMv5F,EAAMq5F,GAAgBC,6BAA6BC,GACnD5wG,EAAQk9F,EAAalZ,mBAAmB3sE,GAE9C,GAAIrX,EAAO,KAAA8wG,EACP,GAAI9wG,EAAM+wG,aAAez6G,KAAKH,MAE1B,YADA+mG,EAAatd,WAAWvoE,GAG5B,MAAM,IAAIo5F,IACU,QAAhBK,EAAA9wG,EAAMgxG,kBAAU,IAAAF,OAAA,EAAhBA,EAAkBv0E,KAAK,OAAQ83B,EAAU0B,aACzC/1D,EAAMq6D,aACNr6D,EAAMy6D,SAEb,EASL,kBAAOw2C,CACH/T,EACA0T,EACAh4B,GAEA,GACI83B,GAAgBQ,oBAAoBt4B,IACpC83B,GAAgBS,2BAA2Bv4B,GAC7C,CACE,MAAMw4B,EAAoC,CACtCL,aAAcL,GAAgBW,sBAC1BC,SAAS14B,EAAS0S,QAAQx0B,KAE9Bj9D,MAAO++E,EAASnsE,KAAK5S,MACrBm3G,WAAYp4B,EAASnsE,KAAK8kG,YAC1Bl3C,aAAcue,EAASnsE,KAAKgqE,kBAC5Bhc,SAAUme,EAASnsE,KAAK6tD,UAE5B4iC,EAAanZ,mBACT2sB,GAAgBC,6BAA6BC,GAC7CQ,EAEP,EAOL,0BAAOF,CACHt4B,GAEA,OACwB,MAApBA,EAASjuD,QACRiuD,EAASjuD,QAAU,KAAOiuD,EAASjuD,OAAS,IAQrD,iCAAOwmF,CACHv4B,GAEA,QAAIA,EAAS0S,UAEL1S,EAAS0S,QAAQnqF,eAAe21D,KAC/B8hB,EAASjuD,OAAS,KAAOiuD,EAASjuD,QAAU,MAUzD,4BAAO0mF,CAAsBN,GACzB,MAAMj2F,EAAOi2F,GAAgB,EAAI,EAAIA,EAE/BS,EAAiBl7G,KAAKH,MAAQ,IACpC,OAAO2D,KAAKC,MAMJ,IALJD,KAAK6hD,IACD61D,GACK12F,GAAQ4+C,GACb83C,EACI93C,IAKhB,qBAAO+3C,CACHvU,EACA7zB,EACAxV,EACAqwC,GAEA,MAAM0M,EAAa5M,GACf36B,EACAxV,EACAqwC,GAEE7sF,EAAMxc,KAAK81G,6BAA6BC,GAC9C1T,EAAatd,WAAWvoE,UCvGVq6F,GAyBlBjmG,WAAAA,CACIkmG,EACAtxB,GAGAxlF,KAAK60D,O7C6JP,SAAkCyT,GAclB,IAblBsiB,YAAamsB,EACbC,cAAeC,EACflzC,cAAemzC,EACfC,aAAcC,EACdC,iBAAkBC,EAClBhW,iBAAkBiW,EAClBC,gBAAiBC,EACjBC,kBAAmBA,EACnB3D,YAAaA,EACbrb,UAAWA,EACXwc,uBAAwBA,EACxByC,kBAAmBA,EACnBC,kBAAmBA,GACDtvC,EAClB,MAAMvE,EAAaqE,GAAAA,GAAA,GACZmhB,IACA2tB,GAGP,MAAO,CACHtsB,aA2BkBA,EA3BYmsB,EA4BlC3uC,GAAA,CACI4wB,mBAAoB,GACpBI,kBAAmBhP,GACnBiP,4BAA4B,EAC5BE,eAAe,EACfC,wBAAwB,GACrB5O,IAjCHosB,cAAa5uC,GAAAA,GAAA,GAAOghB,IAA2B6tB,GAC/ClzC,cAAeA,EACfozC,aAAY/uC,GAAAA,GAAA,GAAOohB,IAA0B4tB,GAC7CC,iBACIC,GACA,IAAIxuB,GACAiuB,EAAgBvoC,SAChB1C,GACA,IAAIhI,GAAOC,IAEnBu9B,iBACIiW,GAAyB7tB,GAC7B8tB,gBAAiBC,GAAwB3rC,GACzC4rC,kBAAmBA,GAAqBztB,GACxC8pB,YAAW3rC,GAAAA,GAAA,GAAOyhB,IAAyBkqB,GAC3Crb,UAAStwB,GAAAA,GAAA,GAAOmiB,IAA8BmO,GAC9Cwc,uBAAwBA,GAA0B,KAClDyC,kBAAmBA,GAAqB,KACxCC,kBAAmBA,GAAqB,MAQhD,IAA0BhtB,CAN1B,C6CvMsBitB,CAAyBf,GAGvC92G,KAAK+lE,OAAS,IAAIjC,GAAO9jE,KAAK60D,OAAOkP,cAAepgE,GAAM8sD,IAG1DzwD,KAAK83G,YAAc93G,KAAK60D,OAAO2iD,gBAG/Bx3G,KAAKqiG,aAAeriG,KAAK60D,OAAOwiD,iBAGhCr3G,KAAK85F,cAAgB95F,KAAK60D,OAAOysC,iBAGjCthG,KAAKk1G,uBAAyBl1G,KAAK60D,OAAOqgD,uBAG1Cl1G,KAAK64E,UAAY74E,KAAK60D,OAAO+1B,YAAY/R,UAGzC74E,KAAKwlF,kBAAoBA,EAMnBuyB,yBAAAA,CACNC,GAEA,MAAMvnB,EAAkC,CAAC,EAEzC,GADAA,EAAQx0B,GAA4BzC,EAAUuB,uBACzC/6D,KAAK60D,OAAOmiD,cAAc1tB,sBAAwB0uB,EACnD,OAAQA,EAAQx0G,MACZ,KAAK2uG,GACD,IACI,MAAM54B,EAAajD,GACf0hC,EAAQl2B,YAEZ2O,EACIx0B,GACA,OAAHz+B,OAAU+7C,EAAW/C,IAAG,KAAAh5C,OAAI+7C,EAAW9C,KAC3C,CAAC,MAAO5kE,GACL7R,KAAK+lE,OAAOT,QACR,mDACIzzD,EAEX,CACD,MACJ,KAAKsgG,GACD1hB,EACIx0B,GACA,QAAHz+B,OAAWw6E,EAAQl2B,YAIhC,OAAO2O,EAUD,gCAAMwnB,CACZ7U,EACAtmB,EACA2T,EACAslB,EACAj2C,EACA3Q,GAEiB,IAAAyvC,EAAbzvC,IACsB,QAAtByvC,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpB78B,EACA2Q,IAIR,MAAMie,QACI/9E,KAAKk4G,gBACPnC,EACA3S,EACA,CAAExxF,KAAMkrE,EAAa2T,QAASA,GAC9B3wB,GAYR,OARI9/D,KAAK60D,OAAOqgD,wBACZn3B,EAASjuD,OAAS,KACE,MAApBiuD,EAASjuD,QAGT9vB,KAAK60D,OAAOqgD,uBAAuBiD,sBAGhCp6B,EAUX,qBAAMm6B,CACFnC,EACA3S,EACA3jG,EACAqgE,GAIA,IAAIie,EAFJ83B,GAAgBG,WAAWh2G,KAAKqiG,aAAc0T,GAG9C,IAAI,IAAA5V,EAAAiY,EACAr6B,QAAiBqjB,GACbphG,KAAK85F,cAAclQ,qBAAqBpwD,KACpCx5B,KAAK85F,eAEThP,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EAPashC,CAQfgC,EAAe3jG,GACjB,MAAMotF,EAAkB9O,EAAS0S,SAAW,CAAC,EACvB,QAAtB0P,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBna,UACpB,CACIqyB,kBAA6C,QAA3BD,EAAAr6B,EAASnsE,KAAK0mG,qBAAa,IAAAF,OAAA,EAA3BA,EAA6Bn+G,SAAU,EACzDs+G,aACI1rB,EAAgB5wB,IAAkC,GACtDu8C,UACI3rB,EAAgB5wB,IAAgC,IAExD6D,EAEP,CAAC,MAAOjuD,GACL,GAAIA,aAAa86E,GAAc,CAC3B,MAAME,EAAkBh7E,EAAEg7E,gBACL,IAAAqV,EAArB,GAAIrV,EACsB,QAAtBqV,EAAAliG,KAAKwlF,yBAAiB,IAAA0c,GAAtBA,EAAwBlc,UACpB,CACIuyB,aACI1rB,EACI5wB,IACC,GACTu8C,UACI3rB,EAAgB5wB,IAChB,GACJw8C,kBACI5rB,EAAgB5wB,SAChB9E,EACJuhD,oBACI7rB,EAAgB5wB,SAChB9E,EACJy1B,WAAY/6E,EAAE+6E,YAElB9sB,GAGR,MAAMjuD,EAAE7S,KACX,CACD,MAAI6S,aAAaytD,GACPztD,EAEAg6D,GAAsBzC,GAEnC,CAID,OAFAysC,GAAgBO,YAAYp2G,KAAKqiG,aAAc0T,EAAYh4B,GAEpDA,EAOX,qBAAM46B,CACFC,EACA94C,GAAqB,IAAA8lC,EAEC,QAAtBA,EAAA5lG,KAAKwlF,yBAAiB,IAAAogB,GAAtBA,EAAwB5Z,oBACpBlB,GACAhrB,GAEJ,MAAM+4C,EAA4B,WAAHr7E,OAAco7E,EAAqB,KAAAp7E,OAAIx9B,KAAK64E,UAAUyR,OAAM,KACrFwuB,QAA+BrD,GACjCoD,EACA74G,KAAK85F,cACL95F,KAAKqiG,aACLriG,KAAK64E,UAAUp5E,QACfO,KAAK+lE,OACLjG,EACA9/D,KAAKwlF,mBAETxlF,KAAK64E,UAAYigC,EAOrBC,0BAAAA,CAA2B//C,GACvB,MAAM8iB,EAAa,IAAI9vE,IA2BvB,OAzBIgtD,EAAQuwC,kBACR+L,GACIx5B,EACA97E,KAAK60D,OAAO+1B,YAAYpc,SACxBxuE,KAAK60D,OAAO+1B,YAAYiO,aAI5B7/B,EAAQggD,sBACRrE,GACI74B,EACA9iB,EAAQggD,sBAIhBnF,GACI/3B,EACA9iB,EAAQ8G,eAGZ+yC,GACI/2B,EACA9iB,EAAQ8G,cACR9/D,KAAKwlF,mBAEF3J,GAA0BC,UCjR5Bm9B,GAMT,sBAAOC,CACHz+B,EACA0+B,EACAC,GAEA,MAAMC,EAAeJ,GAAcK,qBAC/B7+B,EACA2+B,GAEJ,OAAOD,EAAS,GAAA37E,OACP67E,GAAY77E,OAAGg8B,EAAUY,gBAAc58B,OAAG27E,GAC7CE,EAQV,2BAAOC,CACH7+B,EACA2+B,GAEA,IAAK3+B,EACD,MAAM5O,GAAsBlB,IAIhC,MAAM4uC,EAA+B,CACjCr+G,GAAIu/E,EAAU1O,iBAGdqtC,IACAG,EAASH,KAAOA,GAGpB,MAAMI,EAAcxsC,KAAKynB,UAAU8kB,GAEnC,OAAO9+B,EAAUxO,aAAautC,GAQlC,wBAAOC,CACHh/B,EACAziD,GAEA,IAAKyiD,EACD,MAAM5O,GAAsBlB,IAGhC,IAAK3yC,EACD,MAAM6zC,GAAsBtC,IAGhC,IAEI,MAAMmwC,EAAa1hF,EAAMtoB,MAAM8pD,EAAUY,gBACnCi/C,EAAeK,EAAW,GAC1BP,EACFO,EAAWz/G,OAAS,EACdy/G,EAAWhvG,MAAM,GAAGg3B,KAAK83B,EAAUY,gBACnCZ,EAAU0B,aACdy+C,EAAqBl/B,EAAUzO,aAAaqtC,GAC5CO,EAAkB5sC,KAAKC,MACzB0sC,GAEJ,MAAO,CACHE,iBAAkBV,GAAa3/C,EAAU0B,aACzCm+C,aAAcO,EAErB,CAAC,MAAO/nG,GACL,MAAMg6D,GAAsBtC,GAC/B,GCvFT,MAAMuwC,GACE,WAMKC,GAITnpG,WAAAA,CAAYknG,EAAsBtyB,GAC9BxlF,KAAK83G,YAAcA,EACnB93G,KAAKwlF,kBAAoBA,EAS7B,iBAAMw0B,CACFhhD,EACA+M,GAAc,IAAA64B,EAEQ,QAAtBA,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACA9xB,EAAQ8G,eAGZ,MAAMm6C,QAAe7Y,GACjBphG,KAAKk6G,YAAY1gF,KAAKx5B,MACtB8qF,GACA/kB,EACA/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALSshC,CAMnBpoC,GACImhD,EAAuBn6G,KAAK83G,YAAY5rC,gBAC1Cc,KAAKynB,UAAUwlB,IAGnB,MAAO,CACHpqC,IAAKoqC,EAAOpqC,IACZsqC,gBASR,iBAAMD,CAAYlhD,GAAoC,IAAAmnC,EAC5B,QAAtBA,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBnU,oBACpBlB,GACA9xB,EAAQ8G,eAOZ,MAAO,CACH+P,UALwB7vE,KAAK83G,YAAY1rC,uBACzCpT,GAKAohD,QAASN,IAUjB,kBAAMO,CACFvrC,EACAK,EACAnW,GAEA,OAAOh5D,KAAKs6G,YAAYxrC,EAAaK,EAAOnW,GAWhD,iBAAMshD,CACFznF,EACAs8C,EACAnW,EACA+uB,GAGA,MAAM,sBACF+X,EAAqB,mBACrBE,EAAkB,UAClBsJ,EAAS,SACTiR,EAAQ,WACRra,GACAlnC,EAEEwhD,EAAoBxa,EACpB,IAAI9jB,GAAU8jB,QACd7oC,EACAsjD,EAAyC,OAAjBD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB/9B,mBACjD,OAAOz8E,KAAK83G,YAAYvrC,QAAOnE,GAAC,CAExBsyC,GAAI7nF,EACJ8nF,GAAIttC,KACJniB,EAAwB,OAArB40C,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBn7C,cAC1BgT,EAAwB,OAArB8iD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB/9B,gBAC1BrmB,MAAOkkD,GAAYv6G,KAAK83G,YAAY/rC,gBACpC5hE,EAAwB,OAArBswG,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBn9B,aAC1Bs9B,EAAwB,OAArBH,QAAqB,IAArBA,GAAAA,EAAuBl9B,YACpB,CAAC,GAAIk9B,EAAsBl9B,kBAC3BpmB,EACN0jD,cAAevR,QAAanyC,GACzB4wB,GAEP5Y,EACA+wB,EACAlnC,EAAQ8G,sBClJHg7C,GAUblqG,WAAAA,CAAYmqG,EAAqCC,GAC7Ch7G,KAAKwvB,MAAQurF,EACb/6G,KAAKg7G,WAAaA,EAMtB,mBAAIC,GACA,OAAOj7G,KAAKg7G,WAMhB,cAAID,GACA,OAAO/6G,KAAKwvB,aCuBP0rF,GAUTtqG,WAAAA,CACI49D,EACA2sC,EACA1gC,EACA1U,EACA6xC,EACAD,EACAnyB,GAEAxlF,KAAKwuE,SAAWA,EAChBxuE,KAAKm7G,aAAeA,EACpBn7G,KAAKy6E,UAAYA,EACjBz6E,KAAK+lE,OAASA,EACd/lE,KAAK43G,kBAAoBA,EACzB53G,KAAK23G,kBAAoBA,EACzB33G,KAAKwlF,kBAAoBA,EAQ7B41B,qBAAAA,CACIC,EACAC,GAGA,GACID,EAAer8G,OACfq8G,EAAez/B,mBACfy/B,EAAe57C,SACjB,KAAA87C,EACE,MAAMC,EAAY,aAAHh+E,OACX69E,EAAe3E,aAAel9C,EAAU4B,cAC5C,kBAAA59B,OACI69E,EAAex2C,WAAarL,EAAU4B,cAC1C,oBAAA59B,OACI69E,EAAez/B,mBAAqBpiB,EAAU4B,cAClD,uBAAA59B,OACI69E,EAAeI,gBAAkBjiD,EAAU4B,cAC/C,iBAAA59B,OACI69E,EAAeK,UAAYliD,EAAU4B,eAEnCugD,EAA0C,QAA1BJ,EAAAF,EAAe3E,mBAAW,IAAA6E,GAA1BA,EAA4BthH,OAC5CohH,EAAe3E,YAAY,QAC3Bv/C,EACAykD,EAAc,IAAIhG,GACpByF,EAAer8G,MACfw8G,EACAH,EAAe57C,SACfk8C,EACAN,EAAevrF,QAInB,GACIwrF,GACAD,EAAevrF,QACfurF,EAAevrF,QAAUgsC,GACzBu/C,EAAevrF,QAAUgsC,EAOzB,YALA97D,KAAK+lE,OAAOb,QAAQ,6HAAD1nC,OAC8Go+E,IAM9H,GACHN,GACAD,EAAevrF,QACfurF,EAAevrF,QAAUgsC,GACzBu/C,EAAevrF,QAAUgsC,EAOzB,YALA97D,KAAK+lE,OAAOb,QAAQ,sHAAD1nC,OACuGo+E,IAO9H,GACIhT,GACIyS,EAAer8G,MACfq8G,EAAez/B,kBACfy/B,EAAe57C,UAGnB,MAAM,IAAIgpC,GACN4S,EAAer8G,MACfq8G,EAAez/B,kBACfy/B,EAAe57C,SACf47C,EAAex2C,WAAarL,EAAU0B,aACtCmgD,EAAeK,UAAYliD,EAAU0B,aACrCmgD,EAAeI,gBAAkBjiD,EAAU0B,aAC3CmgD,EAAetzB,QAAUvuB,EAAU0B,aACnCygD,GAIR,MAAMC,CACT,EAQL,+BAAMC,CACFC,EACAjjC,EACAkjC,EACA/iD,EACAgjD,EACA9sC,EACA+sC,EACAC,EACAC,GAAwB,IAAAvd,EAQxB,IAAI5nB,EAuCAolC,EAtCJ,GAPsB,QAAtBxd,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACAgxB,EAAoBL,gBAKpBK,EAAoBO,SAAU,CAO9B,GANArlC,EAAgBvK,GACZqvC,EAAoBO,UAAY7iD,EAAU0B,aAC1Cl7D,KAAKy6E,UAAUzO,cAIfgwC,GAAmBA,EAAgB3lD,OAC/B2gB,EAAc3gB,QAAU2lD,EAAgB3lD,MACxC,MAAMwV,GACFnC,IAMZ,GAAI1Q,EAAQoU,QAA6B,IAAnBpU,EAAQoU,OAAc,CACxC,MAAMD,EAAW6J,EAAcslC,UAC/B,IAAKnvC,EACD,MAAMtB,GACFlC,IAIRuD,GAAYC,EAAUnU,EAAQoU,OACjC,CACJ,CAGDptE,KAAKqpG,sBAAwBpxB,GAAcqC,sBACvCwhC,EAAoBS,aAAe/iD,EAAU0B,aAC7C2d,EAAUP,cACVt4E,KAAK+lE,OACL/lE,KAAKy6E,UACLzD,GAKEglC,GAAqBA,EAAgBhkF,QACvCokF,EAAkBnD,GAAcQ,kBAC5Bz5G,KAAKy6E,UACLuhC,EAAgBhkF,QAKxB8jF,EAAoBU,OAChBV,EAAoBU,QAAUxjD,EAAQ0tB,aAAUvvB,EAEpD,MAAM+pB,EAAclhF,KAAKy8G,oBACrBX,EACAjjC,EACAkjC,EACA/iD,EACAge,EACA9H,EACA8sC,GAEJ,IAAIU,EACJ,IAiBI,GAhBI18G,KAAK23G,mBAAqB33G,KAAK43G,oBAC/B53G,KAAK+lE,OAAOT,QACR,kDAEJo3C,EAAe,IAAI5B,GACf96G,KAAK43G,mBACL,SAEE53G,KAAK23G,kBAAkBgF,kBAAkBD,IAS/CT,IACCC,GACDh7B,EAAY5H,QACd,CACE,MAAM98D,EAAM0kE,EAAY5H,QAAQpB,qBAEhC,IADgBl4E,KAAKm7G,aAAar6C,WAAWtkD,GAKzC,OAHAxc,KAAK+lE,OAAOb,QACR,6GAESg2C,GAAgB0B,6BACzB58G,KAAKy6E,UACL5B,EACAqI,GACA,EACAloB,EACAge,EACAolC,OACAjlD,EACAglD,EAGX,OACKn8G,KAAKm7G,aAAal6B,gBACpBC,EACAloB,EAAQ8G,cACR9G,EAAQmoB,aAEf,SAEOnhF,KAAK23G,mBACL33G,KAAK43G,mBACL8E,IAEA18G,KAAK+lE,OAAOT,QACR,uDAEEtlE,KAAK23G,kBAAkBkF,iBAAiBH,GAErD,CAED,OAAOxB,GAAgB0B,6BACnB58G,KAAKy6E,UACL5B,EACAqI,GACA,EACAloB,EACAge,EACAolC,EACAN,EACAK,GAUAM,mBAAAA,CACJX,EACAjjC,EACAkjC,EACA/iD,EACAge,EACA9H,EACA8sC,GAEA,MAAMviC,EAAMZ,EAAUa,oBACtB,IAAKD,EACD,MAAM5N,GACFpB,IAIR,MAAMqyC,EAAiB9kC,GAA6BhB,GAGpD,IAAI+lC,EACAC,EACAlB,EAAoBO,UAAcrlC,IAClC+lC,EAAgB1uC,GACZruE,KAAKqpG,sBACL5vB,EACAqiC,EAAoBO,SACpBr8G,KAAKwuE,SACLsuC,GAAkB,IAGtBE,EAAgBC,GACZj9G,KAAKm7G,aACLtiC,EACA74E,KAAKqpG,sBACLrpG,KAAKy6E,UAAUzO,aACfgL,EACA8kC,EAAoBS,YACpB9iC,EACAqjC,EACAd,OACA7kD,EACAn3D,KAAK+lE,SAKb,IAAIm3C,EAA8C,KAClD,GAAIpB,EAAoBqB,aAAc,CAElC,MAAMC,EAAiBtB,EAAoBzmD,MACrC8e,GAASI,WAAWunC,EAAoBzmD,OACxC,IAAI8e,GAASnb,EAAQsK,QAAU,IAM/B+5C,GACyC,kBAAnCvB,EAAoBwB,WACtB7G,SAASqF,EAAoBwB,WAAY,IACzCxB,EAAoBwB,aAAe,EACvCC,GAC6C,kBAAvCzB,EAAoB0B,eACtB/G,SAASqF,EAAoB0B,eAAgB,IAC7C1B,EAAoB0B,iBAAmB,EAC3CC,GACyC,kBAAnC3B,EAAoB4B,WACtBjH,SAASqF,EAAoB4B,WAAY,IACzC5B,EAAoB4B,kBAAevmD,EACvCwmD,EAAyB5B,EAAesB,EACxCO,EACFD,EAAyBJ,EACvBM,EACFJ,GAAaA,EAAY,EACnB1B,EAAe0B,OACftmD,EAGV+lD,EAAoBruC,GAChB7uE,KAAKqpG,sBACL5vB,EACAqiC,EAAoBqB,aACpBn9G,KAAKwuE,SACLsuC,GAAkBjkC,EAAUyR,QAAU,GACtC8yB,EAAelnC,cACfynC,EACAC,EACA59G,KAAKy6E,UAAUzO,aACf6xC,EACA/B,EAAoBgC,WACpB5uC,EACA4sC,EAAoBU,OACpBxjD,EAAQ+uB,OACR/uB,EAAQqW,oBAEf,CAGD,IAAI0uC,EAAgD,KACpD,GAAIjC,EAAoBxD,cAAe,CACnC,IAAI0F,EACJ,GAAIlC,EAAoBmC,yBAA0B,CAS9CD,EAAcjC,GANV,kBADOD,EAAoBmC,yBAErBxH,SACIqF,EAAoBmC,yBACpB,IAEJnC,EAAoBmC,yBAEjC,CACDF,EAAqBjuC,GACjB9vE,KAAKqpG,sBACL5vB,EACAqiC,EAAoBxD,cACpBt4G,KAAKwuE,SACLstC,EAAoBoC,KACpBhvC,EACA8uC,EAEP,CAGD,IAAIG,EAA8C,KASlD,OARIrC,EAAoBoC,OACpBC,EAAoB,CAChB3vC,SAAUxuE,KAAKwuE,SACfF,YAAamL,EACbzJ,SAAU8rC,EAAoBoC,OAI/B,CACH5kC,QAAS0jC,EACTzuC,QAASwuC,EACTjuC,YAAaouC,EACbntC,aAAcguC,EACdv8B,YAAa28B,GAcrB,yCAAavB,CACTniC,EACA5B,EACAqI,EACAk9B,EACAplD,EACAge,EACAqnC,EACAvC,EACAtD,GAAkB,IAAA8F,EAAAC,EAAAC,EAAAC,EAAAC,EAElB,IAGI3vC,EACAC,EAJAF,EAAsBtV,EAAU0B,aAChCkiD,EAAgC,GAChCxvC,EAAyB,KAGzBoC,EAAmBxW,EAAU0B,aAEjC,GAAIgmB,EAAYpS,YAAa,CAKzB,GACIoS,EAAYpS,YAAYG,YACpBxQ,EAAqBE,KACxB3F,EAAQ2lD,OAkBT7vC,EAAcoS,EAAYpS,YAAYH,WAjBxC,CACE,MAAMiwC,EACF,IAAI7E,GAAkBt/B,IACpB,OAAE9L,EAAM,MAAEQ,GAAU+R,EAAYpS,YAEtC,IAAKK,EACD,MAAMtD,GACFR,IAIRyD,QAAoB8vC,EAAkBvE,aAClC1rC,EACAQ,EACAnW,EAEP,CAGDokD,EAAiBjpC,GAASI,WACtB2M,EAAYpS,YAAYh6D,QAC1BqgE,UAEFvH,EAAYH,GACRyT,EAAYpS,YAAYlB,WAE5BmB,EAAetB,GACXyT,EAAYpS,YAAYY,mBAExBwR,EAAYpS,YAAYE,YACxBA,EAAYvB,GACRyT,EAAYpS,YAAYE,WAGnC,CAEGkS,EAAYM,cACZxR,EACIkR,EAAYM,YAAYxR,WAAarS,EAC/BA,EACA,IAEd,MAAM6Y,GAAmB,OAAbQ,QAAa,IAAbA,OAAa,EAAbA,EAAeC,OAAoB,OAAbD,QAAa,IAAbA,OAAa,EAAbA,EAAeE,MAAO,GAClDC,GAAmB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,MAAO,GAGX,OAAnB2kC,QAAmB,IAAnBA,GAAAA,EAAqB+C,eAAmB39B,EAAY5H,UACpD4H,EAAY5H,QAAQjB,gBACG,OAAnByjC,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB+C,eAG7B,MAAM3kC,EAAkCgH,EAAY5H,QAC9C/B,GACI2J,EAAY5H,QAAQlB,sBACpBjhB,EACA6f,EACmB,QADNsnC,EACbp9B,EAAY3S,eAAO,IAAA+vC,OAAA,EAAnBA,EAAqB3vC,QAEzB,KAEN,MAAO,CACHkK,UAAWA,EAAUuP,mBACrB02B,SAAUtoC,EACV/H,SAAU0I,EACV7T,OAAQ85C,EACR9jC,QAASY,EACT3L,SAAoB,OAAX2S,QAAW,IAAXA,GAAoB,QAATq9B,EAAXr9B,EAAa3S,eAAO,IAAAgwC,OAAA,EAApBA,EAAsB5vC,SAAU,GACzCqI,cAAeA,GAAiB,CAAC,EACjClI,YAAaA,EACbiwC,UAAWX,EACXxwC,UAAWA,EACXmB,aAAcA,EACdC,UAAWA,EACXlP,cAAe9G,EAAQ8G,cACvB04C,UAAWA,GAAah/C,EAAU0B,aAClC8U,SAAUA,EACVf,WAC2B,QAAvBuvC,EAAAt9B,EAAYpS,mBAAW,IAAA0vC,OAAA,EAAvBA,EAAyBvvC,YAAazV,EAAU0B,aACpDljC,MAAOqmF,EACDA,EAAaxE,iBACbrgD,EAAU0B,aAChB6e,oBACuB,QAAnB0kC,EAAAv9B,EAAY5H,eAAO,IAAAmlC,OAAA,EAAnBA,EAAqB1kC,qBACrBvgB,EAAU0B,aACd8e,aACuB,QAAnB0kC,EAAAx9B,EAAY5H,eAAO,IAAAolC,OAAA,EAAnBA,EAAqB1kC,cAAexgB,EAAU0B,aAClD16D,KAAyB,OAAnBs7G,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBkD,SAC3BC,kBAAkB,IAKxB,SAAUhC,GACZ9B,EACAtiC,EACAhR,EACAmE,EACAgL,EACAuC,EACAjL,EACAwuC,EACAd,EACA3jC,EACAtS,GAEM,OAANA,QAAM,IAANA,GAAAA,EAAQT,QAAQ,2BAGhB,MACM45C,EADc/D,EAAa14B,iBACE08B,MAAMt6B,GAC9BA,EAAW1R,WAAWtL,KAGjC,IAAIm1C,EAAsC,KACtCkC,IACAlC,EAAgB7B,EAAar6C,WAAWo+C,IAG5C,MAAME,EACFpC,GACA/kC,GAAcU,cACV,CACI9Q,gBACAmP,gBACAuC,aACAjL,cACAyL,mBAAmC,OAAfiiC,QAAe,IAAfA,OAAe,EAAfA,EAAiBqD,sBACrCrlC,YAA4B,OAAfgiC,QAAe,IAAfA,OAAe,EAAfA,EAAiBsD,aAC9BjnC,gBAAiBA,GAErBQ,EACA7M,GAGFuM,EAAiB6mC,EAAY7mC,gBAAkB,GAC/C9J,EAAWquC,GAAkBsC,EAAYxwC,MAC/C,GACIH,IACC8J,EAAe4mC,MAAM1nC,GACXA,EAAchJ,WAAaA,IAExC,CACE,MAAM8wC,EAAmBxoC,GACrBlP,EACAu3C,EAAYt3C,eACZ2G,EACAuI,GAEJuB,EAAe1+E,KAAK0lH,EACvB,CAGD,OAFAH,EAAY7mC,eAAiBA,EAEtB6mC,CACX,OC9oBaI,GAKT,0BAAOC,CAAoB5mB,GACvB,IAAKA,EACD,MAAM9lB,GACFxB,IASZ,qBAAOmuC,CAAeC,GAClB,MAAMC,EAAe,GAErB,IAAK,MAAMz6G,KAASk3D,EAChBujD,EAAa/lH,KAAKwiE,EAAYl3D,IAGlC,GAAIy6G,EAAa3xG,QAAQ0xG,GAAU,EAC/B,MAAM5sC,GACFlB,IAKZ,qBAAOguC,CAAe93B,GAClB,IACI/a,KAAKC,MAAM8a,EACd,CAAC,MAAOl2E,GACL,MAAMkhE,GACFjB,GAEP,EAQL,kCAAOguC,CACHC,EACAC,GAEA,IAAKD,IAAkBC,EACnB,MAAMjtC,GACFb,IAGJlyE,KAAKigH,4BAA4BD,GAQzC,kCAAOC,CAA4BD,GAC/B,GACI,CACIpjD,EAA0BC,MAC1BD,EAA0BE,MAC5B7uD,QAAQ+xG,GAAuB,EAEjC,MAAMjtC,GACFd,KC3ET/oD,eAAeg3F,GAClB/1B,EACA3b,EACA40B,GAEA,GAA+B,kBAApBjZ,EACP,OAAOA,EAMP,OAAOA,EAJ+B,CAClC3b,SAAUA,EACV40B,cAAeA,GAI3B,CCgCM,MAAO+c,WAAgCtJ,GAKzCjmG,WAAAA,CACIkmG,EACAtxB,GAAsC,IAAA46B,EAEtC1gD,MAAMo3C,EAAetxB,GAPf,KAAkB66B,oBAAY,EAQpCrgH,KAAKsgH,kBACoD,QADnCF,EAClBpgH,KAAK60D,OAAO+1B,YAAY/R,UAAUp5E,QAAQw5F,mBAAW,IAAAmnB,OAAA,EAArDA,EAAuDjnB,cAQ/D,kBAAMonB,CACFvnD,EACAgjD,GAA0C,IAAApd,EAAA4hB,EAO1C,GALsB,QAAtB5hB,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACA9xB,EAAQ8G,gBAGP9G,EAAQx4D,KACT,MAAMqrE,GACF7B,IAIR,MAAM+xC,EAAe1uC,KACf0Q,QAAiBqjB,GACnBphG,KAAKygH,oBAAoBjnF,KAAKx5B,MAC9B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALWshC,CAMrBphG,KAAK64E,UAAW7f,GAGZw/C,EAA4B,QAAnBgI,EAAGziC,EAAS0S,eAAO,IAAA+vB,OAAA,EAAhBA,EAAmBvkD,GAE/BykD,EAAkB,IAAIxF,GACxBl7G,KAAK60D,OAAO+1B,YAAYpc,SACxBxuE,KAAKqiG,aACLriG,KAAK83G,YACL93G,KAAK+lE,OACL/lE,KAAK60D,OAAO+iD,kBACZ53G,KAAK60D,OAAO8iD,kBACZ33G,KAAKwlF,mBAMT,OAFAk7B,EAAgBtF,sBAAsBr9B,EAASnsE,MAExCwvF,GACHsf,EAAgB7E,0BAA0BriF,KAAKknF,GAC/C51B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAOHrjB,EAASnsE,KACT5R,KAAK64E,UACLkjC,EACA/iD,EACAgjD,OACA7kD,OACAA,OACAA,EACAqhD,GASRmI,YAAAA,CAAaC,GAET,IAAKA,EACD,MAAM7tC,GACFf,IAGR,MAAM8K,EAAc98E,KAAK6gH,2BAA2BD,GAGpD,OAAO1kC,GAAUW,kBACb78E,KAAK64E,UAAUyqB,mBACfxmB,GASA,yBAAM2jC,CACV5nC,EACA7f,GAAuC,IAAAmnC,EAEjB,QAAtBA,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBnU,oBACpBlB,GACA9xB,EAAQ8G,eAGZ,MAAMghD,EAAwB9gH,KAAK+4G,2BAA2B//C,GACxD4qC,EAAW1nB,GAAUW,kBACvBhE,EAAUuqB,cACV0d,GAGEC,QAAoB3f,GACtBphG,KAAKghH,uBAAuBxnF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALcshC,CAMxBpoC,GAEF,IAAIioD,EACJ,GAAIjoD,EAAQugB,WACR,IACI,MAAMA,EAAapD,GACfnd,EAAQugB,WACRv5E,KAAK83G,YAAY9rC,cAErBi1C,EAAgB,CACZn/B,WAAY,GAAFtkD,OAAK+7C,EAAW/C,KAAGh5C,OAAG4/B,GAAgC5/B,OAAG+7C,EAAW9C,MAC9EjzE,KAAM2uG,GAEb,CAAC,MAAOtgG,GACL7R,KAAK+lE,OAAOT,QACR,+CAAiDzzD,EAExD,CAEL,MAAM4+E,EAAkCzwF,KAAK+3G,0BACzCkJ,GAAiBjoD,EAAQioD,eAGvBlL,EAAa5M,GACfnpG,KAAK60D,OAAO+1B,YAAYpc,SACxBxV,GAGJ,OAAOooC,GACHphG,KAAKi4G,2BAA2Bz+E,KAAKx5B,MACrC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAOHwC,EACAmd,EACAtwB,EACAslB,EACA/8C,EAAQ8G,cACRgrB,IAQA,4BAAMk2B,CACVhoD,GAAuC,IAAAkpC,EAAAkH,EAEjB,QAAtBlH,EAAAliG,KAAKwlF,yBAAiB,IAAA0c,GAAtBA,EAAwBlW,oBACpBlB,GACA9xB,EAAQ8G,eAGZ,MAAMgc,EAAa,IAAI9vE,IAoEvB,GAlEAonG,GACIt3B,EACA9iB,EAAQuwC,mBACuB,QADPH,EACpBpwC,EAAQwwC,2BAAmB,IAAAJ,OAAA,EAA3BA,EAA8BgJ,MAC9BpyG,KAAK60D,OAAO+1B,YAAYpc,UAO3BxuE,KAAKqgH,mBAKNhN,GACIv3B,EACA9iB,EAAQ6/B,aALZ2mB,GAAiBC,oBAAoBzmD,EAAQ6/B,aAUjDoa,GACIn3B,EACA9iB,EAAQsK,QACR,EACAtjE,KAAKsgH,mBXyED,SACZxkC,EACAt7E,GAEAs7E,EAAWltE,ID/TK,OC+TwBpO,EAC5C,CW1EQ0gH,CAA6CplC,EAAY9iB,EAAQx4D,MAGjEszG,GACIh4B,EACA97E,KAAK60D,OAAOk/C,aAEhBC,GACIl4B,EACA97E,KAAK60D,OAAO6jC,UAAUlO,aAE1B6qB,GAAsCv5B,GAElC97E,KAAKk1G,yBAA2BvqB,GAAmB3qF,KAAK60D,SACxDogD,GACIn5B,EACA97E,KAAKk1G,wBAKTl8C,EAAQk3C,cXiFJ,SACZp0B,EACAo0B,GAEAp0B,EAAWltE,ID7Vc,gBC6VwBshG,EACrD,CWrFYiR,CACIrlC,EACA9iB,EAAQk3C,cAIZlwG,KAAK60D,OAAO6iD,kBAAkBxtB,cAC9BiqB,GACIr4B,EACA97E,KAAK60D,OAAO6iD,kBAAkBxtB,cAIlClqF,KAAK60D,OAAO6iD,kBAAkBvtB,gBAAiB,CAC/C,MAAMA,EACFnqF,KAAK60D,OAAO6iD,kBAAkBvtB,gBAElCiqB,GACIt4B,QACMokC,GACF/1B,EAAgBi3B,UAChBphH,KAAK60D,OAAO+1B,YAAYpc,SACxBxV,EAAQgnC,qBAGhBqU,GACIv4B,EACAqO,EAAgBk3B,cAEvB,CAQD,GANA9M,GACIz4B,EACA5e,GAEJu3C,GAAsC34B,GAElC9iB,EAAQytB,uBAAyBhoB,EAAqBE,IAAK,CAC3D,MAAMigD,EAAoB,IAAI7E,GAC1B/5G,KAAK83G,YACL93G,KAAKwlF,mBAGT,IAAI87B,EACJ,GAAKtoD,EAAQ2lD,OAUT2C,EAAathH,KAAK83G,YAAY3rC,UAAUnT,EAAQ2lD,YAV/B,CAQjB2C,SAPkClgB,GAC9Bwd,EAAkB5E,YAAYxgF,KAAKolF,GACnC9zB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALsBshC,CAMhCpoC,EAASh5D,KAAK+lE,SACiBo0C,YACpC,CAKDtF,GAAoC/4B,EAAYwlC,EACnD,MAAM,GAAItoD,EAAQytB,uBAAyBhoB,EAAqBG,IAAK,CAClE,IAAI5F,EAAQuoD,OAGR,MAAMxuC,GACFT,IAHJyiC,GAAkCj5B,EAAY9iB,EAAQuoD,OAM7D,CAcD,IAAIvJ,EACJ,KAZKhlC,GAAYC,WAAWja,EAAQ+uB,SAC/B/nF,KAAK60D,OAAO+1B,YAAYoO,oBACrBh5F,KAAK60D,OAAO+1B,YAAYoO,mBAAmB/+F,OAAS,IAExDy5G,GACI53B,EACA9iB,EAAQ+uB,OACR/nF,KAAK60D,OAAO+1B,YAAYoO,oBAK5BhgC,EAAQugB,WACR,IACI,MAAMA,EAAapD,GACfnd,EAAQugB,WACRv5E,KAAK83G,YAAY9rC,cAErBgsC,EAAU,CACNl2B,WAAY,GAAFtkD,OAAK+7C,EAAW/C,KAAGh5C,OAAG4/B,GAAgC5/B,OAAG+7C,EAAW9C,MAC9EjzE,KAAM2uG,GAEb,CAAC,MAAOtgG,GACL7R,KAAK+lE,OAAOT,QACR,+CAAiDzzD,EAExD,MAEDmmG,EAAUh/C,EAAQioD,cAItB,GAAIjhH,KAAK60D,OAAOmiD,cAAc1tB,sBAAwB0uB,EAClD,OAAQA,EAAQx0G,MACZ,KAAK2uG,GACD,IAIIqB,GACI13B,EAJexF,GACf0hC,EAAQl2B,YAMf,CAAC,MAAOjwE,GACL7R,KAAK+lE,OAAOT,QACR,mDACIzzD,EAEX,CACD,MACJ,KAAKsgG,GACDoB,GACIz3B,EACAk8B,EAAQl2B,YAuCxB,OAjCI9oB,EAAQuwC,kBACR+L,GACIx5B,EACA97E,KAAK60D,OAAO+1B,YAAYpc,SACxBxuE,KAAK60D,OAAO+1B,YAAYiO,aAI5B7/B,EAAQwwC,qBACRmL,GACI74B,EACA9iB,EAAQwwC,sBAMZxwC,EAAQwoD,4BACNxoD,EAAQwwC,qBACLxwC,EAAQwwC,oBACLgJ,KAGRmC,GAAgD74B,EAAY,CACxD,CAAC02B,IAAqC,MAI9CK,GACI/2B,EACA9iB,EAAQ8G,cACR9/D,KAAKwlF,mBAEF3J,GAA0BC,GAO7B+kC,0BAAAA,CACJ7nD,GAEA,MAAM8iB,EAAa,IAAI9vE,IA6CvB,OA3CIgtD,EAAQ8/B,uBXvUJ,SACZhd,EACA+c,GAEA/c,EAAWltE,IDzGgB,2BCyGwBiqF,EACvD,CWmUY4oB,CACI3lC,EACA9iB,EAAQ8/B,uBAIZ9/B,EAAQ8G,eACR+zC,GACI/3B,EACA9iB,EAAQ8G,eAIZ9G,EAAQ0oD,aX1UJ,SACZ5lC,EACA4lC,GAEA5lC,EAAWltE,IDnHc,gBCmHwB8yG,EACrD,CWsUYC,CACI7lC,EACA9iB,EAAQ0oD,aAIZ1oD,EAAQhhC,OACRk8E,GAAiCp4B,EAAY9iB,EAAQhhC,OAGrDghC,EAAQ4oD,YXyGJ,SACZ9lC,EACA8lC,GAEA9lC,EAAWltE,IDniBY,cCmiBwBgzG,EACnD,CW7GYC,CACI/lC,EACA9iB,EAAQ4oD,YAIZ5oD,EAAQgjB,sBACR24B,GACI74B,EACA9iB,EAAQgjB,sBAIZh8E,KAAK60D,OAAO+1B,YAAY2O,eACxBmb,GAAyC54B,GAGtCD,GACHC,EACA97E,KAAK60D,OAAO+1B,YAAY4O,uBACxBxgC,EAAQgjB,uBClepB,SAAS8lC,GAAmBtuC,GACxB,MAAM,KACFuuC,EAAI,YACJr2B,EAAW,eACXC,EAAc,cACdq2B,EAAa,iBACbC,GACAzuC,EACE0uC,EAA8C,IAAIl2G,IAAI,CACxD,CAAC,EAAG,CAAC0/E,EAAaC,IAClB,CAAC,EAAG,CAACq2B,EAAeC,MAExB,IAAIE,EAAmB,GAEvB,GAAQ,OAAJJ,QAAI,IAAJA,GAAAA,EAAM9nH,QAIN,GAHAkoH,EAASJ,EAAKryG,MA1BI,KA6BdyyG,EAAOloH,OAAS,EAChB,OAAO8nH,OAGXI,EAASh+G,MAAMi2E,KAAK,CAAEngF,OAAQ,IAAK,IAhCjB,MA8CtB,OAXAioH,EAAOtzF,SAAQ,CAACzpB,EAAOqX,KAAO,IAAA4lG,EAAAC,EACL,IAAjBl9G,EAAMlL,QAAwB,QAAZmoH,EAAIj9G,EAAM,UAAE,IAAAi9G,GAARA,EAAUnoH,QAAkB,QAAZooH,EAAIl9G,EAAM,UAAE,IAAAk9G,GAARA,EAAUpoH,QAahE,SAAgBu5E,GAMZ,MAAM,OAAE2uC,EAAM,MAAEnoH,EAAK,QAAEsoH,EAAO,WAAEC,GAAe/uC,EAC/C,GAAIx5E,GAASmoH,EAAOloH,OAChB,OAEJkoH,EAAOnoH,GAAS,CAACsoH,EAASC,GAAY7gF,KA3DhB,IA4D1B,CAvBY8gF,CAAO,CACHL,SACAnoH,MAAOwiB,EACP8lG,QAASn9G,EAAM,GACfo9G,WAAYp9G,EAAM,QAKvBg9G,EAAOzgF,KA/CQ,IAgD1B,OAgBa+gF,GAYT7xG,WAAAA,CACI8xG,EACArgB,GAJI,KAAAsgB,aAA6B1jD,GAMjCj/D,KAAKqiG,aAAeA,EACpBriG,KAAK4iH,MAAQF,EAAiBE,MAC9B5iH,KAAK8/D,cAAgB4iD,EAAiB5iD,cACtC9/D,KAAK6uG,WAAa6T,EAAiB7T,YAAcr1C,EAAU0B,aAC3Dl7D,KAAK6iH,WAAaH,EAAiBG,YAAcrpD,EAAU0B,aAE3Dl7D,KAAK8iH,kBACDhlD,EAAuBK,UACvBf,EACAslD,EAAiBl0C,SAMzB2mC,iCAAAA,GACI,MAAMn8C,EAAU,GAAHx7B,OAAMx9B,KAAK4iH,OAAKplF,OAAGsgC,EAAuBO,iBAAe7gC,OAAGx9B,KAAK2iH,cACxEI,EAAoB,CAAC/iH,KAAK6uG,WAAY7uG,KAAK6iH,YAC3CG,EAAwBhjH,KAAKijH,2BACV,OAArBD,QAAqB,IAArBA,GAAAA,EAAuB/oH,QACvB8oH,EAAkBlpH,KAAK,gBAAD2jC,OAAiBwlF,IAE3C,MAAME,EAAiBH,EAAkBrhF,KACrCo8B,EAAuBO,iBAGrB8kD,EAAmC,CACrCnqD,EAF0Bh5D,KAAKojH,4BAIjC1hF,KAAKo8B,EAAuBO,iBAE9B,MAAO,CACHP,EAAuBC,eACvBolD,EACAD,GACFxhF,KAAKo8B,EAAuBM,oBAMlCg3C,8BAAAA,GACI,MAAMiO,EAAerjH,KAAKsjH,kBAEpBC,EAAYd,GAAuBe,gBAAgBH,GACnDI,EAAiBJ,EAAaI,eAC/B/4G,MAAM,EAAG,EAAI64G,GACb7hF,KAAKo8B,EAAuBO,iBAC3BqlD,EAASL,EAAaK,OACvBh5G,MAAM,EAAG64G,GACT7hF,KAAKo8B,EAAuBO,iBAC3BslD,EAAaN,EAAaK,OAAOzpH,OAOjCipH,EAAiB,CAACS,EAHpBJ,EAAYI,EACN7lD,EAAuBQ,cACvBR,EAAuBS,gBACa78B,KAC1Co8B,EAAuBO,iBAG3B,MAAO,CACHP,EAAuBC,eACvBslD,EAAaO,UACbH,EACAC,EACAR,GACFxhF,KAAKo8B,EAAuBM,oBAOlCylD,kBAAAA,CAAmB7kH,GACf,MAAMqkH,EAAerjH,KAAKsjH,kBAEtBD,EAAaK,OAAOzpH,QACpB6jE,EAAuBI,oBAGvBmlD,EAAaI,eAAen0D,QAC5B+zD,EAAaI,eAAen0D,QAC5B+zD,EAAaK,OAAOp0D,SAGxB+zD,EAAaI,eAAe5pH,KAAKmG,KAAK4iH,MAAO5iH,KAAK8/D,eAE9C9gE,aAAiB0C,OAAW1C,GAASA,EAAMyL,WACvCzL,aAAiBsgE,GACbtgE,EAAM4gE,SACNyjD,EAAaK,OAAO7pH,KAAKmF,EAAM4gE,UACxB5gE,EAAMugE,UACb8jD,EAAaK,OAAO7pH,KAAKmF,EAAMugE,WAE/B8jD,EAAaK,OAAO7pH,KAAKmF,EAAMyL,YAGnC44G,EAAaK,OAAO7pH,KAAKmF,EAAMyL,YAGnC44G,EAAaK,OAAO7pH,KAAKikE,EAAuBU,eAGpDx+D,KAAKqiG,aAAatZ,mBACd/oF,KAAK8iH,kBACLO,GASRS,kBAAAA,GACI,MAAMT,EAAerjH,KAAKsjH,kBAO1B,OANAD,EAAaO,WAAa,EAE1B5jH,KAAKqiG,aAAatZ,mBACd/oF,KAAK8iH,kBACLO,GAEGA,EAAaO,UAMxBN,eAAAA,GAUI,OAJqBtjH,KAAKqiG,aAAarZ,mBACnChpF,KAAK8iH,oBANmC,CACxCW,eAAgB,GAChBC,OAAQ,GACRE,UAAW,GAYnBzL,mBAAAA,GACI,MAAMkL,EAAerjH,KAAKsjH,kBACpBS,EACFtB,GAAuBe,gBAAgBH,GAE3C,GAAIU,IADeV,EAAaK,OAAOzpH,OAGnC+F,KAAKqiG,aAAatd,WAAW/kF,KAAK8iH,uBAC/B,CAEH,MAAMkB,EAA2C,CAC7CP,eAAgBJ,EAAaI,eAAe/4G,MACrB,EAAnBq5G,GAEJL,OAAQL,EAAaK,OAAOh5G,MAAMq5G,GAClCH,UAAW,GAGf5jH,KAAKqiG,aAAatZ,mBACd/oF,KAAK8iH,kBACLkB,EAEP,EAOL,sBAAOR,CACHS,GAEA,IAAItjH,EACA4iH,EAAY,EACZW,EAAW,EACf,MAAMP,EAAaM,EAAsBP,OAAOzpH,OAChD,IAAK0G,EAAI,EAAGA,EAAIgjH,EAAYhjH,IAAK,CAE7B,MAAMiiH,EACFqB,EAAsBR,eAAe,EAAI9iH,IACzC64D,EAAU0B,aACR4E,EACFmkD,EAAsBR,eAAe,EAAI9iH,EAAI,IAC7C64D,EAAU0B,aACRqE,EACF0kD,EAAsBP,OAAO/iH,IAAM64D,EAAU0B,aASjD,GANAgpD,GACItB,EAAMn4G,WAAWxQ,OACjB6lE,EAAcr1D,WAAWxQ,OACzBslE,EAAUtlE,OACV,IAEAiqH,EAAWpmD,EAAuBG,uBAIlC,MAFAslD,GAAa,CAIpB,CAED,OAAOA,EAQXH,wBAAAA,GACI,MAAMe,EAAkC,GAQxC,OANAA,EAAsBtqH,KAAKmG,KAAKokH,YAAc5qD,EAAU0B,cACxDipD,EAAsBtqH,KAAKmG,KAAKqkH,cAAgB7qD,EAAU0B,cAC1DipD,EAAsBtqH,KAClBmG,KAAKskH,eAAiB9qD,EAAU0B,cAG7BipD,EAAsBziF,KAAK,KAStC6iF,6BAAAA,CACI9iB,GAEAzhG,KAAKokH,WAAa3iB,EAAwBgB,YAC1CziG,KAAKqkH,aAAe5iB,EAAwBE,cAC5C3hG,KAAKskH,cAAgB7iB,EAAwBiB,eAMjD8hB,eAAAA,CAAgB7B,GACZ3iH,KAAK2iH,aAAeA,EAGxB8B,wBAAAA,CAAyBllD,GACrB,MAAM8jD,EAAerjH,KAAKsjH,kBAC1BD,EAAaL,sBAAwBzjD,EACrCv/D,KAAKqiG,aAAatZ,mBACd/oF,KAAK8iH,kBACLO,GAIRJ,wBAAAA,GACI,OAAOjjH,KAAKsjH,kBAAkBN,sBAGlC0B,0BAAAA,GACI,MAAMrB,EAAerjH,KAAKsjH,yBACnBD,EAAaL,sBACpBhjH,KAAKqiG,aAAatZ,mBACd/oF,KAAK8iH,kBACLO,GAIR,yBAAOvB,CAAmBtuC,GACtB,OAAOsuC,GAAmBtuC,UC1UZmxC,GAYlB/zG,WAAAA,CACIikD,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAs/B,EACAhlD,GAEA9/D,KAAK60D,OAASA,EACd70D,KAAKwsG,eAAiBoY,EACtB5kH,KAAK6kH,cAAgBA,EACrB7kH,KAAK85F,cAAgB95F,KAAK60D,OAAO2iC,OAAOsC,cACxC95F,KAAKX,aAAeA,EACpBW,KAAK+5F,iBAAmBA,EACxB/5F,KAAK8kH,qBAAuBA,EAC5B9kH,KAAK8/D,cAAgBA,GAAiBiM,KACtC/rE,KAAK+lE,OAASA,EAAOzyC,MACjBmvC,GACAhS,GACAzwD,KAAK8/D,eAET9/D,KAAKwlF,kBAAoBA,EAWnB,wBAAMu/B,CACZzrC,GAEA,GAAIA,EAAS,CAELrB,GAAc0C,mBACVrB,EACAt5E,KAAKwsG,eAAerqC,oBACpB,KAGJniE,KAAK+lE,OAAOT,QAAQ,kCACpBtlE,KAAKwsG,eAAetqC,iBAAiB,OAGzC,UACUliE,KAAKwsG,eAAe5nB,cACtB3M,GAAcE,wBAAwBmB,IAE1Ct5E,KAAK+lE,OAAOT,QACR,+EAEP,CAAC,MAAOtmE,GACLgB,KAAK+lE,OAAO/mE,MACR,2EAEP,CACJ,MACG,IACIgB,KAAK+lE,OAAOT,QACR,mEACAtlE,KAAK8/D,qBAGH9/D,KAAKwsG,eAAezO,cAEpB/9F,KAAK6kH,cAAcv4C,eAC5B,CAAC,MAAOz6D,GACL7R,KAAK+lE,OAAO/mE,MACR,6EAEP,EAWTgmH,cAAAA,CAAeC,GACXjlH,KAAK+lE,OAAOT,QAAQ,yBACpB,MAAMuzB,EAAcosB,GAAsBjlH,KAAK60D,OAAOyjC,KAAKO,YAC3D,OAAO3c,GAAUwB,eACbmb,EACAhC,MAUEquB,gCAAAA,CACNtC,EACAuC,GAEAnlH,KAAK+lE,OAAOT,QAAQ,2CACpB,MAAM8/C,EAA2C,CAC7C52C,SAAUxuE,KAAK60D,OAAOyjC,KAAK9pB,SAC3B1O,cAAe9/D,KAAK8/D,cACpB8iD,MAAOA,EACPuC,aAAcA,IAAgB,EAC9BtW,WAAY7uG,KAAKwsG,eAAeuC,qBAAqB,GACrD8T,WAAY7iH,KAAKwsG,eAAeuC,qBAAqB,IAGzD,OAAO,IAAI0T,GACP2C,EACAplH,KAAKwsG,gBAaH,4BAAM6Y,CAAuB7xC,GAMnC,MAAM,QAAE8F,GAAY9F,EACd8xC,EACF9xC,EAAO+xC,6BACP/xC,EAAO+xC,4BAA4Bj/G,eAAe,kBAC5CktE,EAAO+xC,4BAA4C,oBACnDpuD,EAEVn3D,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9qF,KAAK8/D,eAET,MAAMwiC,EAAqC,CACvC9oB,aAAcx5E,KAAK60D,OAAOyjC,KAAK9e,aAC/Byf,YAAaj5F,KAAK60D,OAAOyjC,KAAKW,YAC9B3Q,iBAAkBtoF,KAAK60D,OAAOyjC,KAAKhQ,iBACnChK,uBAAwBt+E,KAAK60D,OAAOyjC,KAAKha,uBACzC/N,kBAAmBvwE,KAAK60D,OAAOyjC,KAAK/nB,kBACpC8oB,2BACIr5F,KAAK60D,OAAOyjC,KAAKe,4BAInBmsB,EACFhyC,EAAOiyC,kBAAoBzlH,KAAK60D,OAAOyjC,KAAKzf,UAC1C6sC,EAAuC,OAAfJ,QAAe,IAAfA,GAAAA,EAAiBrrH,OACrB,SAApBqrH,EACAtlH,KAAK60D,OAAOyjC,KAAKiB,cAEjBosB,EACFrsC,GAAWosC,EACL1lH,KAAK60D,OAAOyjC,KAAKzf,UAAU/oE,QACvBosE,GAAUuB,iBAAiB+nC,GAC3BlsC,EAAQhL,aAEZk3C,EAGJI,EAAiBxjB,GAAU8E,kBAC7Bye,EACAnyC,EAAOqyC,0BACH7lH,KAAK60D,OAAOyjC,KAAKc,mBAEnB0sB,QAA4B1kB,GAC9B2kB,GACAj7B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALyBshC,CAO9BwkB,EACA5lH,KAAK60D,OAAO2iC,OAAOsC,cACnB95F,KAAKwsG,eACLlK,EACAtiG,KAAK+lE,OACL/lE,KAAK8/D,cACL9/D,KAAKwlF,mBAGT,GAAIlM,IAAYwsC,EAAoBze,QAAQ/tB,EAAQhL,aAChD,MAAMyE,GACF4nB,IAIR,OAAOmrB,GCpOR58F,eAAe88F,GAClBhtD,EACAnE,EACA2wB,EACAzf,GAEAyf,EAAkBwG,oBACdlB,GACA9xB,EAAQ8G,eAEZ,MAAM+Y,EAAY7f,EAAQ6f,WAAahkB,EAAOyjC,KAAKzf,UAE7CvV,EAAS,IAAMtK,GAAWA,EAAQsK,QAAW,IAE7C2iD,EAAgB79C,GAAAA,GAAA,GACfpP,GAAO,IACV8G,cAAe9G,EAAQ8G,cACvB+Y,YACAvV,WAIJ,GAAK2iD,EAAiBx/B,qBAKf,CACH,GACIw/B,EAAiBx/B,uBAAyBhoB,EAAqBG,IACjE,CACE,IAAK5F,EAAQuoD,OACT,MAAMxuC,GACF4nB,IAGR,IAAK3hC,EAAQ0tB,OACT,MAAM3T,GACF4nB,GAGX,CACD50B,EAAOT,QAAQ,iCAAD9nC,OACuByoF,EAAiBx/B,qBAAoB,mCAE7E,MAtBGw/B,EAAiBx/B,qBAAuBhoB,EAAqBC,OAC7DqH,EAAOT,QACH,2FAgCR,OARIzQ,EAAOrlC,MAAMi6D,2BACbzwB,EAAQ+uB,SAEP/U,GAAYC,WAAWja,EAAQ+uB,UAEhCk+B,EAAiB52C,0BAA4B7C,GAAWxT,EAAQ+uB,SAG7Dk+B,CACX,CAEO/8F,eAAeg9F,GAClBltD,EACAsgB,EACAzkB,EACA2wB,EACAzf,GAEAyf,EAAkBwG,oBACdlB,GACA9xB,EAAQ8G,eAGZ,MAAMqmD,QAAoB/kB,GACtB4kB,GACAl7B,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALcshC,CAMxBpoC,EAASnE,EAAQ2wB,EAAmBzf,GACtC,OAAAqC,GAAAA,GAAAA,GAAA,GACOpP,GACAmtD,GAAW,IACd7sC,QAASA,EACT6rC,aAAcnsD,EAAQmsD,eAAgB,GAE9C,CCtEM,MAAgBiB,WAAkCzB,GAK1C0B,uBAAAA,CACNzF,GAEA5gH,KAAK+lE,OAAOT,QACR,iCACa,OAAbs7C,QAAa,IAAbA,OAAa,EAAbA,EAAe9gD,eAGnB,MAAMwmD,EAAkBl+C,GAAA,CACpBtI,cAAe9/D,KAAK8/D,eAAiBiM,MAClC60C,GAOP,GAAIA,EAEA,GAAKA,EAAcgB,WAiBf5hH,KAAK+lE,OAAOT,QACR,yDAjBJ,GAAIs7C,EAActnC,QAAS,CACvB,MAAMsoC,EAAa5hH,KAAKumH,+BACpB3F,EAActnC,SAEdsoC,IACA5hH,KAAK+lE,OAAOT,QACR,kFAEJghD,EAAmB1E,WAAaA,EAEvC,MACG5hH,KAAK+lE,OAAOT,QACR,0GASZtlE,KAAK+lE,OAAOT,QACR,qEAoDR,OA5CKs7C,GAAyD,OAAxCA,EAAc9nB,sBAsChC94F,KAAK+lE,OAAOT,QACR,6EACAghD,EAAmBxmD,eAvCnB8gD,GAAiBA,EAAc9nB,uBAC/B94F,KAAK+lE,OAAOT,QACR,6DACAghD,EAAmBxmD,eAEvBwmD,EAAmBxtB,sBACf5c,GAAUwB,eACNkjC,EAAc9nB,sBACdjC,OAE0C,OAA3C72F,KAAK60D,OAAOyjC,KAAKQ,sBACxB94F,KAAK+lE,OAAOT,QACR,uGACAghD,EAAmBxmD,eAEhB9/D,KAAK60D,OAAOyjC,KAAKQ,uBACxB94F,KAAK+lE,OAAOT,QACR,kDACAghD,EAAmBxmD,eAEvBwmD,EAAmBxtB,sBACf5c,GAAUwB,eACN19E,KAAK60D,OAAOyjC,KAAKQ,sBACjBjC,QAGR72F,KAAK+lE,OAAOT,QACR,gDACAghD,EAAmBxmD,eAEvBwmD,EAAmBxtB,sBACf5c,GAAUwB,eACNmZ,KACAA,OAUTyvB,EAQDC,8BAAAA,CACNjtC,GAEA,MAAMtC,EAA2CsC,EAAQtC,cACzD,GAAIA,EAAe,CACf,GAAIA,EAAc0R,WACd,OAAO1R,EAAc0R,WAErB1oF,KAAK+lE,OAAOT,QACR,qIAGX,MACGtlE,KAAK+lE,OAAOT,QACR,yGAIR,OAAO,KAaD,0BAAMkhD,CAAqBhzC,GAOjCxzE,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9qF,KAAK8/D,eAGT,MAAM2mD,QAAqBrlB,GACvBphG,KAAK0mH,uBAAuBltF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALkBshC,CAMzB5tB,GAEF,OAAO,IAAI2sC,GACPsG,EACAzmH,KAAKwlF,mBAcH,4BAAMkhC,CAAuBlzC,GAOnC,MAAM,uBACF0hC,EAAsB,iBACtBuQ,EAAgB,yBAChBI,EAAwB,4BACxBN,EAA2B,QAC3BjsC,GACA9F,EAEJxzE,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9qF,KAAK8/D,eAET,MAAMgmD,QAA4B1kB,GAC9BphG,KAAKqlH,uBAAuB7rF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALyBshC,CAMhC,CACEqkB,mBACAI,2BACAN,8BACAjsC,YAEEvT,EAAS/lE,KAAK60D,OAAO2iC,OAAOzzB,cAElC,MAAO,CACH6mB,YAAa,CACTpc,SAAUxuE,KAAK60D,OAAOyjC,KAAK9pB,SAC3BqK,UAAWitC,EACX9sB,mBAAoBh5F,KAAK60D,OAAOyjC,KAAKU,mBACrCH,YAAa74F,KAAK60D,OAAOyjC,KAAKO,aAElCme,cAAe,CACX3tB,0BACIrpF,KAAK60D,OAAO2iC,OAAOnO,0BACvBC,sBAAsB,GAE1BvlB,cAAe,CACXQ,eAAgBwB,EAAOxB,eACvBE,kBAAmBsB,EAAOtB,kBAC1BC,SAAUqB,EAAOrB,SACjB5E,cAAe9/D,KAAK8/D,eAExBq3C,aAAc,CACV1tB,0BACIzpF,KAAK60D,OAAOrlC,MAAMi6D,2BAE1B+tB,gBAAiBx3G,KAAK6kH,cACtBvjB,iBAAkBthG,KAAK85F,cACvBud,iBAAkBr3G,KAAKwsG,eACvB0I,uBAAwBA,EACxBnB,YAAa,CACTjqB,IAAKrnB,GACLhS,QAASA,GACTs5B,IAAKvwB,EAAU0B,aACf8uB,GAAIxwB,EAAU0B,cAElBw9B,UAAW14F,KAAK60D,OAAO6jC,WASrB,oCAAMiuB,CACZ3tD,EACAmO,GAEAnnE,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9qF,KAAK8/D,eAGT,MAAM+4B,EAAc74F,KAAKglH,eAAehsD,EAAQ6/B,aAC1C+tB,EAAmC,CACrCz/C,gBAAiBA,GAEfnvC,EAAQihF,GAAcC,gBACxBl5G,KAAK6kH,cACJ7rD,GAAWA,EAAQhhC,OAAUwhC,EAAU0B,aACxC0rD,GAGET,QAAqC/kB,GACvC4kB,GACAl7B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALkCshC,CAM1Ch5B,GAAAA,GAAC,CAAD,EACQpP,GAAO,IAAE8G,cAAe9/D,KAAK8/D,gBAClC9/D,KAAK60D,OACL70D,KAAKwlF,kBACLxlF,KAAK+lE,QAGHkgD,EAAgB79C,GAAAA,GAAA,GACf+9C,GAAW,IACdttB,YAAaA,EACb7gE,MAAOA,EACPq+B,MAAO2C,EAAQ3C,OAAS0V,KACxB86C,aAAc7mH,KAAK60D,OAAOyjC,KAAKW,YAC1BC,qBAIT,GAAIlgC,EAAQ2nB,WAAa3nB,EAAQ+nB,IAC7B,OAAOklC,EAGX,MAAM3sC,EACFtgB,EAAQsgB,SAAWt5E,KAAKwsG,eAAerqC,mBAa3C,OAZImX,IACAt5E,KAAK+lE,OAAOT,QACR,oCACAtlE,KAAK8/D,eAET9/D,KAAK+lE,OAAOP,WAAW,sCAADhoC,OACoB87C,EAAQzR,eAC9C7nE,KAAK8/D,eAETmmD,EAAiB3sC,QAAUA,GAGxB2sC,YC3UCa,GACZ1rC,EACA2rC,EACAhhD,GAGA,MAAMihD,EAAeC,GAAiC7rC,GACtD,IAAK4rC,EACD,MAAKC,GAAiC7rC,IAOlCrV,EAAO/mE,MAAM,KAADw+B,OACHupF,EAAgB,6FAAAvpF,OAA4FupF,EAAgB,gEAErIhhD,EAAOd,SAAS,OAADznC,OACJupF,EAAgB,kBAAAvpF,OAAiB49C,IAEtC+U,GACF5C,MAZJxnB,EAAO/mE,MAAM,qDAADw+B,OAC6CupF,EAAgB,0CAAAvpF,OAAyCupF,EAAgB,+FAE5H52B,GAAuB9C,KAarC,OAAO25B,CACX,UAKgBE,GACZnpC,EACA8mC,EACA19C,GAEA,IAAK4W,EAAS/lD,MACV,MAAMm4D,GAAuB7C,IAGjC,MAAM65B,ECpCM,SACZtC,EACA7sF,GAEA,IAAKA,EACD,OAAO,KAGX,IAGI,OADIihF,GAAcQ,kBAAkBoL,EAAe7sF,GAC5BqhF,aAAaD,IACvC,CAAC,MAAOvnG,GACL,MAAMg6D,GAAsBk+B,GAC/B,CACL,CDqB6Bqd,CACrBvC,EACA9mC,EAAS/lD,OAEb,IAAKmvF,EACD,MAAMh3B,GAAuB3C,IAGjC,GAAI25B,EAAiBhgD,kBAAoBA,EACrC,MAAMgpB,GACF1C,GAGZ,CElCM,SAAU45B,GACZz8B,EACA5xB,EACA+M,EACAyf,GAAsC,IAAA8hC,EAAAC,EAGtC,MAAMznD,EAAgB9G,EAAQ8G,cAExBgc,EAAa,IAAI9vE,IAEvBonG,GACIt3B,EACA9iB,EAAQuwC,mBACwB,QADR+d,EACpBtuD,EAAQgjB,4BAAoB,IAAAsrC,OAAA,EAA5BA,EAA+BlV,MAC/BxnB,EAAYpc,UAsCpB,GA/BAykC,GACIn3B,EALkB,IACd9iB,EAAQsK,QAAU,MAClBtK,EAAQwuD,sBAAwB,KAKpC,EACyC,QADrCD,EACJ38B,EAAY/R,UAAUp5E,QAAQw5F,mBAAW,IAAAsuB,OAAA,EAAzCA,EAA2CpuB,eAG/Cka,GAAuCv3B,EAAY9iB,EAAQ6/B,aAE3Dgb,GAAyC/3B,EAAYhc,GlBCzC,SACZgc,EACA+qC,GAEA/qC,EAAWltE,IDlEc,gBCoErBi4G,GAA8B5pD,EAEtC,CkBNIwqD,CAAwC3rC,EAAY9iB,EAAQ6tD,cAG5DpS,GAAsC34B,GAElC9iB,EAAQ2mD,UlBiNA,SACZ7jC,EACA6jC,GAEA7jC,EAAWltE,ID7QO,SC6QwB+wG,EAC9C,CkBrNQ+H,CAAkC5rC,EAAY9iB,EAAQ2mD,QACrC,OAAjBn6B,QAAiB,IAAjBA,GAAAA,EAAmBQ,UAAU,CAAE25B,OAAQ3mD,EAAQ2mD,QAAU7/C,IAGzD9G,EAAQ2uD,clB+EA,SACZ7rC,EACA6rC,GAEA7rC,EAAWltE,ID7GY,cC6GwB+4G,EACnD,CkBnFQC,CAAsC9rC,EAAY9iB,EAAQ2uD,YACzC,OAAjBniC,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAE6hC,uBAAuB,GACzB/nD,IAKJ9G,EAAQ2mD,SAAWtjD,EAAYE,eAE/B,GAAIvD,EAAQ+nB,KAAO/nB,EAAQ2mD,SAAWtjD,EAAYI,KAE9CsJ,EAAOT,QACH,yEAEJmuC,GAA+B33B,EAAY9iB,EAAQ+nB,KAClC,OAAjByE,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAE8hC,gBAAgB,GAClBhoD,QAED,GAAI9G,EAAQsgB,QAAS,CACxB,MAAMyuC,EAgTlB,SAA2BzuC,GAAoB,IAAA0uC,EAC3C,OAA4B,QAArBA,EAAA1uC,EAAQtC,qBAAa,IAAAgxC,OAAA,EAArBA,EAAuBjnC,MAAO,IACzC,CAlT+BknC,CAAkBjvD,EAAQsgB,SAC7C,IAAI4uC,EAmThB,SAA0B5uC,GAAoB,IAAA6uC,EAC1C,OAA4B,QAArBA,EAAA7uC,EAAQtC,qBAAa,IAAAmxC,OAAA,EAArBA,EAAuBz/B,aAAc,IAChD,CArTwC0/B,CAAiBpvD,EAAQsgB,SAUrD,GARI4uC,GAAyBlvD,EAAQ2uD,aACjC5hD,EAAOb,QAAQ,+JAGfgjD,EAAwB,MAIxBA,EAAuB,CACvBniD,EAAOT,QACH,qEAEJguC,GACIx3B,EACAosC,GAEa,OAAjB1iC,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAEqiC,oBAAoB,GACtBvoD,GAEJ,IAII0zC,GAAkC13B,EAHfxF,GACftd,EAAQsgB,QAAQzR,eAGvB,CAAC,MAAOh2D,GACLk0D,EAAOT,QACH,+EAEP,CACJ,MAAM,GAAIyiD,GAAc/uD,EAAQ2mD,SAAWtjD,EAAYI,KAAM,CAK1DsJ,EAAOT,QACH,yEAEJmuC,GAA+B33B,EAAYisC,GAC1B,OAAjBviC,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAEsiC,cAAc,GAChBxoD,GAEJ,IAII0zC,GAAkC13B,EAHfxF,GACftd,EAAQsgB,QAAQzR,eAGvB,CAAC,MAAOh2D,GACLk0D,EAAOT,QACH,+EAEP,CACJ,MAAM,GAAItM,EAAQ2nB,UACf5a,EAAOT,QACH,gEAEJguC,GACIx3B,EACA9iB,EAAQ2nB,WAEZ4yB,GACIz3B,EACA9iB,EAAQ2nB,WAEK,OAAjB6E,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAEuiC,sBAAsB,GACxBzoD,QAED,GAAI9G,EAAQsgB,QAAQvR,SAAU,CAEjChC,EAAOT,QACH,gEAEJguC,GACIx3B,EACA9iB,EAAQsgB,QAAQvR,UAEH,OAAjByd,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAEwiC,kBAAkB,GACpB1oD,GAEJ,IAII0zC,GAAkC13B,EAHfxF,GACftd,EAAQsgB,QAAQzR,eAGvB,CAAC,MAAOh2D,GACLk0D,EAAOT,QACH,+EAEP,CACJ,CACJ,MAAUtM,EAAQ2nB,YACf5a,EAAOT,QACH,4EAEJguC,GAAqCx3B,EAAY9iB,EAAQ2nB,WACzD4yB,GAAkCz3B,EAAY9iB,EAAQ2nB,WACrC,OAAjB6E,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAEuiC,sBAAsB,GACxBzoD,SAIRiG,EAAOT,QACH,kFA2CR,OAvCItM,EAAQ3C,OlB0FA,SAASylB,EAAiCzlB,GACtDylB,EAAWltE,IDhSM,QCgSwBynD,EAC7C,CkB3FQoyD,CAAiC3sC,EAAY9iB,EAAQ3C,OAGrD2C,EAAQhhC,OACRk8E,GAAiCp4B,EAAY9iB,EAAQhhC,QAIrDghC,EAAQ+uB,QACP6C,EAAYoO,oBACTpO,EAAYoO,mBAAmB/+F,OAAS,IAE5Cy5G,GACI53B,EACA9iB,EAAQ+uB,OACR6C,EAAYoO,oBAIhBhgC,EAAQuwC,kBACR+L,GACIx5B,EACA8O,EAAYpc,SACZoc,EAAYiO,cAMhBjO,EAAY2O,eACVvgC,EAAQgjB,sBACLj6E,OAAOmgB,KAAK82C,EAAQgjB,sBAAsBpsE,SACvCgjG,KAGR8B,GAAyC54B,GAGtCA,CACX,CAQM,SAAU4sC,GACZ7vC,EACA8vC,EACAC,EACA5sC,GAEA,MAAMc,EAAcjB,GAChB8sC,EACAC,EACA5sC,GAEJ,OAAOE,GAAUW,kBACbhE,EAAUoqB,sBACVnmB,EAER,CA8BgB,SAAA+rC,GACZxN,EACAgD,GAEA,IAAKhD,EAAerjF,QAAUqmF,EAC1B,MAAMhD,EAAerjF,MACf6zC,GACIpC,GACA,gBAEJoC,GACIpC,GACA,gBAId,IAAIq/C,EACAC,EAEJ,IACID,EAA6Bp1C,mBAAmB2nC,EAAerjF,MAClE,CAAC,MAAOnmB,GACL,MAAMg6D,GACFtC,GACA8xC,EAAerjF,MAEtB,CAED,IACI+wF,EAAsBr1C,mBAAmB2qC,EAC5C,CAAC,MAAOxsG,GACL,MAAMg6D,GACFtC,GACA8xC,EAAerjF,MAEtB,CAED,GAAI8wF,IAA+BC,EAC/B,MAAMl9C,GAAsBrC,IAIhC,GACI6xC,EAAer8G,OACfq8G,EAAez/B,mBACfy/B,EAAe57C,SACjB,CACE,MAAMk8C,EAkCd,SACIN,GAAiC,IAAAE,EAAAyN,EAEjC,MAAMC,EAAkB,QAClBC,EACsB,QADF3N,EACtBF,EAAe8N,iBAAS,IAAA5N,OAAA,EAAxBA,EAA0BloC,YAAY41C,GAC1C,OAAOC,GAAwBA,GAAwB,EACzB,QAD0BF,EAClD3N,EAAe8N,iBAAS,IAAAH,OAAA,EAAxBA,EAA0B3tC,UACtB6tC,EAAuBD,EAAgBhvH,aAE3Ck9D,CACV,CA7C8BiyD,CAAmB/N,GACzC,GACIzS,GACIyS,EAAer8G,MACfq8G,EAAez/B,kBACfy/B,EAAe57C,UAGnB,MAAM,IAAIgpC,GACN4S,EAAer8G,OAAS,GACxBq8G,EAAez/B,kBACfy/B,EAAe57C,SACf47C,EAAex2C,WAAa,GAC5Bw2C,EAAeK,UAAY,GAC3BL,EAAeI,gBAAkB,GACjCJ,EAAetzB,QAAU,GACzB4zB,GAIR,MAAM,IAAI/F,GACNyF,EAAer8G,OAAS,GACxBq8G,EAAez/B,kBACfy/B,EAAe57C,SACfk8C,EAEP,CACL,OCjWa0N,GAOTz4G,WAAAA,CACI04G,EACA1E,EACA3U,EACAlqC,EACAyf,GAEAxlF,KAAKupH,WAAaD,EAClBtpH,KAAKwsG,eAAiBoY,EACtB5kH,KAAKiwG,gBAAkBA,EACvBjwG,KAAK+lE,OAASA,EACd/lE,KAAKwlF,kBAAoBA,EAO7B,wBAAMgkC,CACFzrC,EACA/kB,GAOA,IAAIywD,EALJzpH,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAIZ,IACI2pD,ED6NI,SACZzC,EACA0C,GAMA,GAHAb,GAA8B7B,EAAc0C,IAGvC1C,EAAaxmH,KACd,MAAMqrE,GACFX,IAIR,OAAO87C,CACX,CC5O+B2C,CACf5rC,EACA/kB,EAAQhhC,MAEf,CAAC,MAAOnmB,GACL,MACIA,aAAa+jG,IACb/jG,EAAE+tD,WAAaiuB,GAGTsC,GACFtC,IAGEh8E,CAEb,CAED,OAAOuvF,GACHphG,KAAK4pH,6BAA6BpwF,KAAKx5B,MACvC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAMLqoB,EAAkBzwD,GAWxB,kCAAM4wD,CACFH,EACAzwD,GAC6B,IAA7B6wD,IAAA5pH,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,KAAAA,UAAA,GAiCA,GA/BAD,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAEZ9/D,KAAK+lE,OAAON,MACR,0DAIJzlE,KAAKiwG,gBAAgBzvG,KAAOipH,EAAiBjpH,KAGzCipH,EAAiBK,gCACX1oB,GACFphG,KAAKupH,WAAW5Q,gBAAgBn/E,KAAKx5B,KAAKupH,YAC1Cz+B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALNshC,CAMJqoB,EAAiBK,yBAA0B9wD,EAAQ8G,eAIrD+pD,IAEAJ,EAAiBpzD,MAAQ2C,EAAQ3C,YAASc,GAG9CsyD,EAAiBzxF,MAAQghC,EAAQhhC,MAG7ByxF,EAAiBlN,YACjBv8G,KAAKiwG,gBAAgB12B,WAAakwC,EAAiBlN,gBAChD,CACH,MAAMvE,EAAUh4G,KAAK+pH,qBAAqB/wD,GACtCg/C,IACAh4G,KAAKiwG,gBAAgBgR,cAAgBjJ,EAE5C,CAUD,aAP6B5W,GACzBphG,KAAKupH,WAAWhJ,aAAa/mF,KAAKx5B,KAAKupH,YACvCz+B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALiBshC,CAM3BphG,KAAKiwG,gBAAiBwZ,GAOlBM,oBAAAA,CACN/wD,GAEA,OAAIA,EAAQsgB,QACD,CACHwI,WAAY9oB,EAAQsgB,QAAQzR,cAC5BrkE,KAAM2uG,IAEHn5C,EAAQ2nB,UACR,CACHmB,WAAY9oB,EAAQ2nB,UACpBn9E,KAAM2uG,IAIP,MC3KR,MACM6X,GAAa,cCwBbC,GAA0B,CACnC,CAACD,IACG,sKAGF,MAAOE,WAAwB5qD,GAGjC1uD,WAAAA,CAAY2uD,EAAmB4qD,EAAsBC,GACjD1qD,MAAMH,EAAW4qD,GAEjBpoH,OAAO49D,eAAe3/D,KAAMkqH,GAAgB3jH,WAC5CvG,KAAK2D,KAAO,kBACZ3D,KAAKoqH,IAAMA,GAOb,SAAUC,GAAuBrrH,GACnC,SACIA,EAAMorH,MACNprH,EAAMorH,IAAIt6F,QC3Cc,qBD4CvB9wB,EAAMorH,IAAIt6F,QC3CK,aD4CZ9wB,EAAMorH,IAAIt6F,aAMd9wB,EAAMorH,MACNprH,EAAMorH,IAAIprH,QAlCW,aAmCrBA,EAAMorH,IAAIprH,QD1DU,iBC+DhBA,EAAMugE,UAMlB,UASgB+qD,GACZ9pH,EACA2pH,EACAC,GAEA,GAAIA,GAAOA,EAAIt6F,OACX,OAAQs6F,EAAIt6F,QACR,IC9EuB,sBD+EnB,OAAOo5E,GACHqhB,IAER,ICxF6B,4BDyFzB,OAAO,IAAI9hB,GAA6BjoG,EAAM2pH,GAClD,ICzFe,cD0FX,OAAOh6B,GACHtC,IAER,IC5Fc,aD6FV,OAAOsC,GACH7kB,IAKhB,OAAO,IAAI4+C,GACP1pH,EACAypH,GAAwBzpH,IAAS2pH,EACjCC,EAER,CEtFM,MAAOI,WAAyB3T,GAClCjmG,WAAAA,CACIkmG,EACAtxB,GAEA9lB,MAAMo3C,EAAetxB,GAOzB,wBAAMilC,CACFzxD,GAAgC,IAAA4lC,EAEV,QAAtBA,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACA9xB,EAAQ8G,eAEZ,IAAI4qD,EAAiCzrD,GAErC,GACIjG,EAAQmsD,eACNnlH,KAAK60D,OAAOsiD,aAAa1tB,4BACtBzW,GAAYC,WAAWja,EAAQ+uB,QAOpC,MAJA/nF,KAAKwkH,gBACDvlD,GACAjG,EAAQ8G,eAEN+L,GACFd,IAKR,IAAK/R,EAAQsgB,QACT,MAAMzN,GACFtB,IAIR,MAAMogD,EACF3xD,EAAQsgB,QAAQ7K,UtCwtCtB,SACFoK,GAAiB,IAAA+xC,EAEjB,MAUMn8C,EAC8C,QADtCm8C,EAVO,IAAI1uC,GAAUrD,GACS4D,mBAUjBE,aAAajyE,OAAO,GAAG,UAAE,IAAAkgH,OAAA,EAAhDA,EAAkDr9G,cAEtD,OAAQkhE,GACJ,KAAKtS,EACL,KAAKA,EACL,KAAKA,EACD,OACJ,QACI,OAAOsS,EAEnB,CsC/uCYo8C,CAA6B7xD,EAAQ6f,WACnCkH,EAAY//E,KAAKqiG,aAAa9hB,eAC9B28B,EAAoBl9G,KAAKqiG,aAAa9b,eACxCvtB,EAAQsgB,QACRtgB,EACA+mB,EACA4qC,EACA3qH,KAAKwlF,kBACLxsB,EAAQ8G,eAGZ,IAAKo9C,EAMD,MAJAl9G,KAAKwkH,gBACDvlD,GACAjG,EAAQ8G,eAEN+L,GACFd,IAED,GnFnCoB0E,EmFoCMytC,EAAkBztC,SnFnCnCnJ,OAAOmJ,GAENpC,MmFkCbM,GACIuvC,EAAkBtvC,UAClB5tE,KAAK60D,OAAOmiD,cAAc3tB,2BAQ9B,MAJArpF,KAAKwkH,gBACDvlD,GACAjG,EAAQ8G,eAEN+L,GACFd,InFhDV,IAA6B0E,EmFmDvBytC,EAAkBluC,WAClBrB,GAAyBuvC,EAAkBluC,UAAW,KAGtD07C,EAAmBzrD,IAKvB,MAAMqP,EACFtV,EAAQ6f,WAAa74E,KAAK64E,UAAUa,oBAClCwH,EAA2B,CAC7B5H,QAASt5E,KAAKqiG,aAAa/c,qBAAqBtsB,EAAQsgB,SACxDxK,YAAaouC,EACb3uC,QAASvuE,KAAKqiG,aAAaliB,WACvBnnB,EAAQsgB,QACRyG,EACA4qC,EACA3qH,KAAKwlF,kBACLxsB,EAAQ8G,eAEZiQ,aAAc,KACdyR,YACIxhF,KAAKqiG,aAAa3a,yBAAyBpZ,IASnD,OANAtuE,KAAKwkH,gBAAgBkG,EAAkB1xD,EAAQ8G,eAE3C9/D,KAAK60D,OAAOqgD,wBACZl1G,KAAK60D,OAAOqgD,uBAAuB4O,qBAGhC,OACG1iB,GACFphG,KAAK8qH,8BAA8BtxF,KAAKx5B,MACxC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALNshC,CAMJlgB,EAAaloB,GACf0xD,GAIAlG,eAAAA,CACJ7B,EACA7iD,GAAqB,IAAAirD,EAAA5qB,EAEM,QAA3B4qB,EAAA/qH,KAAKk1G,8BAAsB,IAAA6V,GAA3BA,EAA6BvG,gBAAgB7B,GACvB,QAAtBxiB,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBna,UACpB,CACI28B,aAAcA,GAElB7iD,GAEA6iD,IAAiB1jD,IACjBj/D,KAAK+lE,OAAO71D,KAAK,mDAADstB,OACuCmlF,IASvD,mCAAMmI,CACV5pC,EACAloB,GAAgC,IAAAkpC,EAMhC,IAAIlrB,EASJ,GAbsB,QAAtBkrB,EAAAliG,KAAKwlF,yBAAiB,IAAA0c,GAAtBA,EAAwBlW,oBACpBlB,GACA9xB,EAAQ8G,eAGRohB,EAAY3S,UACZyI,EAAgBvK,GACZyU,EAAY3S,QAAQI,OACpB3uE,KAAK60D,OAAO2iD,gBAAgBxrC,eAKhChT,EAAQoU,QAA6B,IAAnBpU,EAAQoU,OAAc,KAAA49C,EACxC,MAAM79C,EAAwB,QAAhB69C,EAAGh0C,SAAa,IAAAg0C,OAAA,EAAbA,EAAe1O,UAChC,IAAKnvC,EACD,MAAMtB,GACFlC,IAIRuD,GAAYC,EAAUnU,EAAQoU,OACjC,CAED,OAAO8tC,GAAgB0B,6BACnB58G,KAAK83G,YACL93G,KAAK64E,UACLqI,GACA,EACAloB,EACAge,IC3LN,MAAOi0C,WAA0B7E,GAKnC,kBAAM7F,CACF2K,GAEAlrH,KAAKwlF,kBAAkBwG,oBACnBlB,GACAogC,EAAcprD,eAGlB,MAAMo1C,EAAyBl1G,KAAKklH,iCAChChiD,IAGEujD,QAAqBrlB,GACvBphG,KAAK0mH,uBAAuBltF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALkBshC,CAMzB,CACE8T,yBACAuQ,iBAAkByF,EAAcryC,UAChCgtC,yBAA0BqF,EAAc9xB,kBACxC9f,QAAS4xC,EAAc5xC,UAErB6xC,EAAmB,IAAIX,GACzB/D,EACAzmH,KAAKwlF,mBAETxlF,KAAK+lE,OAAOT,QAAQ,8BAEpB,IACI,MAOM8lD,SAPiBhqB,GACnB+pB,EAAiBV,mBAAmBjxF,KAAK2xF,GACzCrgC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL0lC,EAAcprD,cALKshC,CAMrB8pB,IAC4B,GAQ9B,OANAlrH,KAAKwlF,kBAAkBQ,UACnB,CACI+4B,WAAW,GAEfmM,EAAcprD,eAEXsrD,CACV,CAAC,MAAOpsH,GASL,MAPIA,aAAiBkxF,IACjBlxF,EAAMugE,YAAcyvB,IAEpBhvF,KAAK+lE,OAAOT,QACR,wHAGFtmE,CACT,EAOLqiE,MAAAA,CAAOu/C,GACH5gH,KAAK+lE,OAAOT,QAAQ,yBACpB,MAAMghD,EAAqBtmH,KAAKqmH,wBAAwBzF,GACxD,OAAO5gH,KAAK+kH,mBAAqC,OAAlBuB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBhtC,4CChBrD,MAAO+xC,WAAsC1G,GAQ/C/zG,WAAAA,CACIikD,EACA23C,EACAqY,EACA9+C,EACA1mE,EACA06F,EACA6oB,EACAp9B,EACAjmD,EACA0lD,EACAqmC,EACAxrD,GAEAJ,MACI7K,EACA23C,EACAqY,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAjmD,EACAugC,GAEJ9/D,KAAK4iH,MAAQA,EACb5iH,KAAKilF,UAAYA,EACjBjlF,KAAK8kH,qBAAuBvlF,EAC5Bv/B,KAAKurH,qBAAuBD,EAC5BtrH,KAAKwrH,kBAAoB,IAAIP,GACzBp2D,EACA70D,KAAKurH,qBACL1G,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAjmD,EACAugC,GAGJ,MAAMkiD,EAAgBhiH,KAAK8kH,qBAAqB2G,mBAEhDzrH,KAAK+hH,KAAOU,GAAuBX,mBAAmB,CAClDp2B,YAAajpB,GACbkpB,eAAgBl7B,GAChBuxD,cAAeA,EACfC,iBAAkBjiH,KAAK8kH,qBAAqB4G,wBAS5CC,cAAAA,CAAe3yD,GACnBA,EAAQ4yD,gBAAexjD,GAAAA,GAAA,GAChBpP,EAAQ4yD,iBAAe,IAC1B,CAACC,IAAwC7rH,KAAK+hH,OAQtD,kBAAMxB,CACFvnD,EACA8yD,GAEA9rH,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAEZ9/D,KAAK+lE,OAAON,MAAM,kDAGlB,MAAMsmD,EAAsB/rH,KAAKwlF,kBAAkByF,iBAC/CH,GACA9xB,EAAQ8G,eAENi8C,EAAe3K,KAEf8D,EAAyBl1G,KAAKklH,iCAChCllH,KAAK4iH,OAGT,IAEI,MAAMoJ,QAAsBhsH,KAAKisH,wBAAwBjzD,GAGzD,IACI,MAAMz6B,QAAev+B,KAAKksH,uBACtBlsH,KAAKilF,UACL+mC,GAOJ,OALAD,EAAoBx1G,IAAI,CACpB0pF,SAAS,EACTksB,gBAAgB,EAChBpN,WAAW,IAERxgF,CACV,CAAC,MAAO1sB,GACL,GAAIi6G,IAAsBpoD,GAItB,MAHA1jE,KAAK+lE,OAAO71D,KACR,iFAEE2B,EAGV7R,KAAK+lE,OAAO71D,KACR,6EAEP,CAED,MAAMk8G,QACIpsH,KAAK8kH,qBAAqBuH,YAAYL,GAEhD,aAAahsH,KAAKssH,qBACdF,EACAJ,EACAjQ,GAEC9rF,MAAMsO,IACHwtF,EAAoBx1G,IAAI,CACpB0pF,SAAS,EACTksB,gBAAgB,EAChB3T,UAAWj6E,EAAOi6E,YAEtBtD,EAAuBwP,6BAChBnmF,KAEVtvB,OAAOjQ,IAOJ,MANA+sH,EAAoBx1G,IAAI,CACpB0pF,SAAS,EACT1gC,UAAWvgE,EAAMugE,UACjBgtD,aAAcvtH,EAAM4gE,SACpBusD,gBAAgB,IAEdntH,IAEjB,CAAC,MAAO6S,GAIL,MAHIA,aAAaq4G,IACbhV,EAAuBuP,yBAAyB5yG,EAAE0tD,WAEhD1tD,CACT,EASG26G,wBAAAA,CACJxzD,EACAgkD,GAEA,MAAO,CACHnkC,UAAW7f,EAAQ6f,UACnB/Y,cAAe9/D,KAAK8/D,cACpBwD,OAAQ6Q,GAASI,WAAWvb,EAAQ3D,OAAO8f,UAC3CmE,QAAS0jC,EACTmI,cAAc,GAUZ,4BAAM+G,CACZ7zC,EACArf,GAEA,IAAKqf,EAID,MAHAr4E,KAAK+lE,OAAOb,QACR,gFAEE2G,GAAsBk+B,IAGhC,MAAMzwB,EAAUt5E,KAAKwsG,eAAehtB,mBAAmB,CACnDnH,oBAGJ,IAAKiB,EACD,MAAMzN,GAAsBk+B,IAIhC,IACI,MAAMmhB,EAAgBlrH,KAAKwsH,yBACvBxzD,EACAsgB,GAEE/6C,QAAev+B,KAAKwrH,kBAAkBjL,aACxC2K,GAGEuB,EAAWrkD,GAAAA,GAAA,GACVkR,GAAO,IACVtC,cAAqB,OAANz4C,QAAM,IAANA,OAAM,EAANA,EAAQy4C,cACvBzI,QAAe,OAANhwC,QAAM,IAANA,OAAM,EAANA,EAAQgwC,UAGrB,OAAAnG,GAAAA,GAAA,GACO7pC,GAAM,IACT+6C,QAASmzC,GAEhB,CAAC,MAAO56G,GACL,MAAMA,CACT,EAQL,0BAAM6uD,CACF1H,EACA0zD,GAEA1sH,KAAK+lE,OAAON,MACR,0DAGJ,MAAWknD,EAAmB5qH,OAAAD,OAAA,IC7TtC,SAAmCqkE,GACjC,GAAI,MAAQA,EAAG,MAAM,IAAIE,UAAU,sBAAwBF,EAC7D,CD2TsCymD,CAAK5zD,GAAAA,WAC5B2zD,EAAoBE,mBAE3B,MAAMb,QAAsBhsH,KAAKisH,wBAC7BU,GAGJ,UACU3sH,KAAK8kH,qBAAqBuH,YAAYL,EAC/C,CAAC,MAAOn6G,GAEL,GAAIA,aAAaq4G,GAAiB,CAI9B,GAFIlqH,KAAKklH,iCAAiCllH,KAAK4iH,OACxB6B,yBAAyB5yG,EAAE0tD,WAC9C8qD,GAAuBx4G,GACvB,MAAMA,CAEb,CACJ,CACD7R,KAAKwsG,eAAemD,kBAChB5sC,GACAiK,KAAKynB,UAAUu3B,IACf,GAGJ,MAAMc,EAAuC,CACzClK,MAAO1/C,GACPvjE,QAASK,KAAK60D,OAAO2iC,OAAO4C,0BAC5B1N,WAAW,GAETmM,EAAc74F,KAAK60D,OAAOyjC,KAAKS,0BAC/B3uF,OAAOuS,SAASyG,KAChBpjB,KAAKglH,eAAehsD,EAAQ6/B,aAClC6zB,EAAgBn2G,IAAI,CAAE0pF,SAAS,UACzBjgG,KAAK+5F,iBAAiBtN,iBACxBoM,EACAi0B,GASR,2BAAM5rD,CACFskB,EACA1lB,GAKA,GAHA9/D,KAAK+lE,OAAON,MACR,4DAECzlE,KAAKwsG,eAAemE,yBAAwB,GAI7C,OAHA3wG,KAAK+lE,OAAO71D,KACR,yFAEG,KAIX,MAAMwgG,EAAgB1wG,KAAKwsG,eAAeiE,yBAC1C,IAAKC,EAUD,OATA1wG,KAAK+lE,OAAOT,QACR,0GAEAkgB,GAAqB1lB,IACJ,OAAjB0lB,QAAiB,IAAjBA,GAAAA,EAAmBQ,UACf,CAAEzmB,UAAW,qBACbO,IAGD,KAGX,MAAM,OAAE6/C,GAAuBjP,EAAZ13C,EAAO0d,GAAKg6B,EAAa95B,IACxC+oC,GACA3/G,KAAK+lE,OAAOT,QACR,wMAIRtlE,KAAKwsG,eAAeznB,WAChB/kF,KAAKwsG,eAAeyC,iBAChBlsC,KAIR,MAAMg5C,EAAe3K,KAErB,IACIpxG,KAAK+lE,OAAOT,QACR,qFAEJ,MAAMyY,QACI/9E,KAAK8kH,qBAAqBuH,YAAYrzD,GAC1C+zD,QAAmB/sH,KAAKssH,qBAC1BvuC,EACA/kB,EACA+iD,GAMJ,OAFI/7G,KAAKklH,iCAAiCllH,KAAK4iH,OACxB8B,6BAChBqI,CACV,CAAC,MAAOl7G,GACL,MAAMA,CACT,EAOLwvD,MAAAA,GAEI,OADArhE,KAAK+lE,OAAON,MAAM,4CACXxtB,QAAQC,OAAO,8BAShB,0BAAMo0E,CACZvuC,EACA/kB,EACA+iD,GAAoB,IAAAiR,EAAAC,EAEpBjtH,KAAK+lE,OAAON,MACR,0DAIJ,MAAMuR,EAAgBk2C,GAClBnvC,EAASs+B,SACTrwC,IAGEq9B,EAAwBrpG,KAAKmtH,4BAC/BpvC,EACA/G,GAGEo2C,EAGA,QAHmBJ,EACrBhtH,KAAKwsG,eAAentB,yBAAyB,CACzChH,gBAAiBrf,EAAQisB,mBAC3B,IAAA+nC,OAAA,EAFFA,EAEInlD,cAGR,GAC2B,QAAvBolD,EAAAj0D,EAAQ4yD,uBAAe,IAAAqB,GAAvBA,EAAyBI,iBACzBtvC,EAASzE,QAAQp+E,KAAO89D,EAAQisB,UAEhCjlF,KAAK+lE,OAAO71D,KACR,6FAED,GACHm5F,IAA0B+jB,GAC1BrvC,EAASzE,QAAQp+E,KAAO89D,EAAQisB,UAGhC,MAAMqlC,GAAsBN,IAIhC,MAAMnxC,QAAkB74E,KAAKqlH,uBAAuB,CAChDI,iBAAkBzsD,EAAQ6f,YAGxBumC,EAAcnC,GAChBj9G,KAAKwsG,eACL3zB,EACAwwB,EACAr9B,GACAgL,EACA+G,EAASw+B,iBACTplD,EACA6f,EAAcG,SACdhgB,EACA4mB,EAASzE,QAAQp+E,GACjB8E,KAAK+lE,QAITgY,EAASu/B,WAAah3C,OAAOyX,EAASu/B,YAGtC,MAAM/+E,QAAev+B,KAAK48G,6BACtB7+B,EACA/kB,EACAge,EACAooC,EACAvmC,EAAUuP,mBACV2zB,GAeJ,aAXM/7G,KAAKstH,aAAalO,SAClBp/G,KAAKutH,kBACPxvC,EACA/kB,EACAqwC,EACAryB,EACA+G,EAASo/B,aACT5+E,EAAOkwC,SACPstC,GAGGx9E,EASD4uF,2BAAAA,CACNpvC,EACA/G,GAWA,OAR8BiB,GAAcqC,sBACxCyD,EAASw+B,aAAe/iD,EAAU0B,aAClC6c,GACA/3E,KAAK+lE,OACL/lE,KAAK6kH,cACL7tC,GAYRw2C,cAAAA,CAAera,EAAuBiK,GAClC,OAAOA,EACDjpC,GAASI,WAAW6oC,GACpBjpC,GAASI,WAAW4+B,GAQ9B,4BAAMsa,CACF1vC,EACA/kB,GAEA,GACIA,EAAQiW,YAAcxQ,EAAqBE,KAC3C3F,EAAQqhD,aACV,CAOE,GAAIt8B,EAAS2vC,IAIT,OAHA1tH,KAAK+lE,OAAON,MACR,8DAEGsY,EAAS2vC,IAIpB,MAAM9O,EAAuC,IAAI7E,GAC7C/5G,KAAK6kH,eAEH8I,EAA6C,CAC/C7tB,sBAAuB9mC,EAAQ8mC,sBAC/BE,mBAAoBhnC,EAAQgnC,mBAC5BsJ,UAAWtwC,EAAQswC,UACnBiR,SAAUvhD,EAAQuhD,UAOtB,IAAKvhD,EAAQmW,MACT,MAAMtD,GAAsBk+B,IAEhC,OAAO6U,EAAkBvE,aACrBt8B,EAASo/B,aACTnkD,EAAQmW,MACRw+C,EAEP,CACG,OAAO5vC,EAASo/B,aAcd,kCAAMP,CACZ7+B,EACA/kB,EACAge,EACA4I,EACA/G,EACAkjC,GAGA,MAAM6R,EAAO5tH,KAAK6tH,+BACd9vC,EAAS+vC,WAAWC,MAIlB3Q,EAAiBp9G,KAAKwtH,eACxBx0D,EAAQ3D,MACR0oB,EAAS1oB,OAGP24D,EAAoBjwC,EAASzE,QAAQw0C,YAAc,CAAC,EACpDt3C,EACFw3C,EAAuB,KACvBh3C,EAAcC,KACdD,EAAcE,KACd1d,EAAU0B,aACRic,EACF62C,EAA4B,UAC5Bh3C,EAAcG,KACd3d,EAAU0B,aAERgf,EAAkC3C,GACpCqI,EAAcxH,sBACdjhB,EACA6f,EACA+G,EAASs+B,UAOTniC,EAAY7B,kBAAoB0F,EAASzE,QAAQp+E,KACjDg/E,EAAY7B,gBAAkB0F,EAASzE,QAAQp+E,IAInD,MAAM+yH,QAA4BjuH,KAAKytH,uBACnC1vC,EACA/kB,GAEEiW,EACFjW,EAAQiW,YAAcxQ,EAAqBE,IACrCF,EAAqBE,IACrBF,EAAqBC,OAsB/B,MApBqC,CACjCma,UAAWA,EACXimC,SAAUtoC,EACV/H,SAAU0I,EACV7T,OAAQ85C,EAAejoC,UACvBmE,QAASY,EACT3L,QAASwP,EAASs+B,SAClBrlC,cAAeA,EACflI,YAAam/C,EACblP,YAAW6O,GAAO5tH,KAAKkuH,oBAAoBN,GAE3ChgD,UAAWwjC,GACP2K,EAAeh+B,EAASu/B,YAE5BruC,UAAWA,EACXnP,cAAe9/D,KAAK8/D,cACpB9nC,MAAO+lD,EAAS/lD,MAChBinF,kBAAkB,GAU1B,kBAAMqO,CAAa1tC,SAET5/E,KAAKwsG,eAAeprB,WAAWxB,EAAe5/E,KAAK8/D,eAGzD9/D,KAAKwsG,eAAe1nB,qBAAqBlF,GAAe3wE,OAAO4C,IAC3D7R,KAAK+lE,OAAO/mE,MAAM,uEAADw+B,OAC0D3rB,OAenF07G,iBAAAA,CACIxvC,EACA/kB,EACAqwC,EACAryB,EACAi3C,EACAx/C,EACAstC,GAEA,MAAMgB,EACF/O,GACI3E,EACArwC,EAAQ6f,UACRkF,EAASs+B,UAAY,GACrBrjD,EAAQwV,SACRwI,EAAcG,KAAO,IAUvBwmC,EAAyB5B,GAL3B/iD,EAAQiW,YAAcxQ,EAAqBE,IACrCnF,EAAUoC,oBACsB,kBAAxBmiB,EAASu/B,WACX7G,SAAS14B,EAASu/B,WAAY,IAC9Bv/B,EAASu/B,aAAe,GAElCF,EAAiBp9G,KAAKwtH,eACxBzvC,EAAS1oB,MACT2D,EAAQ3D,OAoBN84D,EAAoB,CACtB5/C,QAASwuC,EACTjuC,YAlBAk/B,GACI3E,EACArwC,EAAQ6f,UACRo1C,EACAj1D,EAAQwV,SACRwI,EAAcG,KAAO1I,EACrB2uC,EAAelnC,cACfynC,EACA,EACA3xC,QACA7U,EACA6B,EAAQiW,eACR9X,EACA6B,EAAQmW,QAQhB,OAAOnvE,KAAKurH,qBAAqBtqC,gBAC7BktC,EACAnuH,KAAK8/D,cACL9G,EAAQmoB,cAIhBitC,iBAAAA,CACIn/C,EACAouC,GAEA,OAAOpuC,IAAcxQ,EAAqBE,IACpCnF,EAAUoC,oBACY,kBAAdyhD,EACF5G,SAAS4G,EAAW,IACpBA,IAAc,EAGpBwQ,8BAAAA,CACNQ,GAEA,MAAMT,EAAO5tH,KAAKsuH,oBAAoBD,GAEtC,OAAKT,GAIL5tH,KAAKwlF,kBAAkBQ,UACnB,CACIuoC,YAAavuH,KAAK8kH,qBAAqB0J,iBACvCvM,iBACIjiH,KAAK8kH,qBAAqB4G,sBAC9B+C,kBAAmBb,EAAKc,eACxBC,uBAAwBf,EAAKgB,sBAC7BC,qBAAsBjB,EAAKkB,oBAC3BC,eAAgBnB,EAAKoB,YACrBC,mBAAoBrB,EAAKsB,gBACzBC,iBAAkBvB,EAAKwB,eACvBC,cAAezB,EAAK0B,WACpBC,eAAgB3B,EAAK4B,YACrBC,oBAAqB7B,EAAK8B,mBAC1BC,kBAAmB/B,EAAKgC,eACxBC,iBAAkBjC,EAAKkC,cACvBC,eAAgBnC,EAAKoC,YACrBC,mBAAoBrC,EAAKsC,kBAE7BlwH,KAAK8/D,eAGF8tD,GAzBI,KAiCPU,mBAAAA,CAAoBD,GACxB,GAAIA,EACA,IACI,OAAOrhD,KAAKC,MAAMohD,EACrB,CAAC,MAAOx8G,GACL7R,KAAK+lE,OAAO/mE,MACR,iFAEP,CAGL,OAAO,KAQDkvH,mBAAAA,CAAoBN,GAC1B,MAA8B,qBAAnBA,EAAKuC,WACZnwH,KAAK+lE,OAAOT,QACR,mIAEG,KAGFsoD,EAAKuC,UAOR,6BAAMlE,CACZjzD,GAEAh5D,KAAK+lE,OAAON,MACR,4DAGJ,MAAM2iB,QAA2BpoF,KAAKowH,sBAAsBp3D,IAGtD,OAAEsK,GAAmCtK,EAAxBq3D,EAAmB35C,GAAK1d,EAAO6d,IAC5CnC,EAAW,IAAIP,GAAS7Q,GAAU,IACxCoR,EAASc,aAAazZ,GAEtB,MAAMkqD,EAAgB79C,GAAAA,GAAA,GACfioD,GAAmB,IACtBprC,UAAWjlF,KAAKilF,UAChBzW,SAAUxuE,KAAK60D,OAAOyjC,KAAK9pB,SAC3BqK,UAAWuP,EAAmBjM,UAC9B9mB,MAAOqf,EAASwB,cAChB2iB,YAAa74F,KAAKglH,eAAehsD,EAAQ6/B,aACzC8mB,OAAQ3/G,KAAKswH,UAAUt3D,EAAQ2mD,QAC/B7/C,cAAe9/D,KAAK8/D,cACpBmP,UAAWjW,EAAQytB,qBACnB8pC,qBAAsB7+G,SAASq7B,MAC/B6+E,gBAAexjD,GAAAA,GAAA,GACRpP,EAAQgjB,sBACRhjB,EAAQggD,sBAEfwX,qBAAqB,EACrBrhD,MAAOnW,EAAQ2lD,SAInB,GAAIsH,EAAiB5L,cAAkBrhD,EAAQ2lD,OAC3C,MAAMxuB,GACFP,IAUR,GANA5vF,KAAKywH,wBAAwBxK,GAC7BA,EAAiB2F,gBACb3F,EAAiB2F,iBAAmB,CAAC,EACzC3F,EAAiB2F,gBAAgBlzB,UAC7Bh2B,GAEA1J,EAAQytB,uBAAyBhoB,EAAqBE,IAAK,CAE3D,MAAMgvD,EAA6C,CAC/C3tB,mBAAoBhnC,EAAQgnC,mBAC5BF,sBAAuB9mC,EAAQ8mC,sBAC/BwJ,UAAWtwC,EAAQswC,UACnBiR,SAAUvhD,EAAQuhD,UAGhBqE,EAAoB,IAAI7E,GAAkB/5G,KAAK6kH,eAGrD,IAAIvD,EACJ,GAAK2E,EAAiB92C,MAYlBmyC,EAAathH,KAAK6kH,cAAc34C,gBAC5Bc,KAAKynB,UAAU,CAAE5kB,IAAKo2C,EAAiB92C,SAE3C82C,EAAiB5L,cAAe,MAfP,CACzB,MAAMqW,QAA4BtvB,GAC9Bwd,EAAkB5E,YAAYxgF,KAAKolF,GACnC9zB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALsBshC,CAMhCusB,EAAe3tH,KAAK+lE,QACtBu7C,EAAaoP,EAAoBvW,aACjC8L,EAAiB92C,MAAQuhD,EAAoB7gD,IAC7Co2C,EAAiB5L,cAAe,CACnC,CAQD4L,EAAiBhM,OAASqH,CAC7B,CAGD,OAFAthH,KAAK2rH,eAAe1F,GAEbA,EAGH,2BAAMmK,CACVp3D,GAEA,MAAMysD,EACFzsD,EAAQ6f,WAAa74E,KAAK60D,OAAOyjC,KAAKzf,UAEtC7f,EAAQsgB,eAEFt5E,KAAKqlH,uBAAuB,CAC9BI,mBACAI,yBAA0B7sD,EAAQogC,kBAClC9f,QAAStgB,EAAQsgB,UAIzB,MAAM8O,EAAqB,IAAIlM,GAAUupC,GAEzC,OADAr9B,EAAmB7L,gBACZ6L,EAGHkoC,SAAAA,CAAU3Q,GAEd,OAAQ3/G,KAAK4iH,OACT,KAAK1/C,GACL,KAAKA,GAID,OAHAljE,KAAK+lE,OAAON,MACR,+DAEGpJ,EAAYI,KAM3B,GAAKkjD,EAQL,OAAQA,GACJ,KAAKtjD,EAAYI,KACjB,KAAKJ,EAAYG,QACjB,KAAKH,EAAYC,MAIb,OAHAt8D,KAAK+lE,OAAON,MACR,kEAEGk6C,EACX,QAII,MAHA3/G,KAAK+lE,OAAON,MAAM,qCAADjoC,OACwBmiF,EAAM,wCAEzCxvB,GACFT,SApBR1vF,KAAK+lE,OAAON,MACR,oDA6BJgrD,uBAAAA,CAAwBz3D,GAA4B,IAAA4lC,EACxD,MAAM+xB,EACF33D,EAAQ4yD,iBACR5yD,EAAQ4yD,gBAAgBtlH,eACpBulH,KAEJ7yD,EAAQ4yD,gBAAgBtlH,eACpBulH,KAEJ7yD,EAAQ4yD,gBAAgBtlH,eACpBulH,IAGR,IAAK7yD,EAAQuwC,mBAAqBonB,EAC9B,OAGJ,IAAItD,EAA0B,GAC9B,MAAMuD,EAAqB53D,EAAQ6/B,YAE/B7/B,EAAQuwC,kBACRvwC,EAAQ6/B,YAAc74F,KAAK60D,OAAOyjC,KAAKO,YACvCw0B,EAAkBr0D,EAAQuwC,kBACnBvwC,EAAQ4yD,kBACf5yD,EAAQ6/B,YACJ7/B,EAAQ4yD,gBAAgBC,IAC5BwB,EACIr0D,EAAQ4yD,gBAAgBC,KAGhC7yD,EAAQ4yD,gBAAkB,CACtByB,kBACAuD,sBAGkB,QAAtBhyB,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5Y,UACpB,CACIujB,iBAAkB8jB,EAClBva,oBAAqB8d,GAEzB53D,EAAQ8G,gBEn/BpB52C,eAAe2nG,GACXh8D,EACAgkB,EACA7f,EACA+M,EACAyf,GAEA,MAAM1J,EAAa6tC,GAAuDvhD,GAAAA,GAAC,CAAD,EACjEvT,EAAOyjC,MAAI,IAAEzf,UAAWA,IAC7B7f,EACA+M,EACAyf,GAeJ,GAbAsrC,GAAuCh1C,EAAY,CAC/CgO,IAAKrnB,GACLhS,QAASA,GACTu5B,GAAI,GACJD,IAAK,KAELl1B,EAAOyjC,KAAK9e,eAAiB3Q,IAC7BioD,GACIh1C,EACAjnB,EAAO6jC,UAAUlO,aAIrBxxB,EAAQ+3D,iB3BCV,SAA0Bj1C,GAC5BA,EAAWltE,IDhCc,eCgCwB,IACrD,C2BDQkiH,CAAwCh1C,GAGpC9iB,EAAQytB,uBAAyBhoB,EAAqBE,KAAK,CAC3D,MAAMqyD,EAAY,IAAIxyB,GAAUz4B,EAAQyf,GAClCo5B,EAAoB,IAAI7E,GAAkBiX,GAGhD,IAAI1P,EACJ,GAAKtoD,EAAQ2lD,OAUT2C,EAAa0P,EAAU7kD,UAAUnT,EAAQ2lD,YAVxB,CAQjB2C,SAPkClgB,GAC9Bwd,EAAkB5E,YAAYxgF,KAAKolF,GACnC9zB,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALsBshC,CAMhCpoC,EAAS+M,IACsBo0C,YACpC,CAGD2W,GAAoCh1C,EAAYwlC,EACnD,CASL,OANAwP,GACIh1C,EACA9iB,EAAQ8G,cACR0lB,GAGG1J,CACX,CAWO5yD,eAAe+nG,GAClBp8D,EACAgkB,EACA7f,EACA+M,EACAyf,GAEA,IAAKxsB,EAAQ+mD,cACT,MAAMhtC,GACF4nB,IAIR,MAAM7e,QAAmBslB,GACrByvB,GACA/lC,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALashC,CAMvBvsC,EAAQgkB,EAAW7f,EAAS+M,EAAQyf,GActC,OAbAsrC,GAAwCh1C,EAAY/e,Y3B2KpD+e,EACAikC,EACAC,GAEA,IAAID,IAAiBC,EAOjB,MAAMjtC,GACFb,IAPJ4J,EAAWltE,ID1SW,iBC0S4BmxG,GAClDjkC,EAAWltE,ID1SkB,wBC4SzBoxG,EAOZ,C2BxLI8Q,CACIh1C,EACA9iB,EAAQ+mD,cACRvmD,EAAUsB,4BAGdg2D,GACIh1C,EACA9iB,EAAQgjB,sBAAwB,CAAC,GAG9B2tC,GACH9wC,EACAiD,EACAjnB,EAAOyjC,KAAKkB,uBACZxgC,EAAQgjB,qBAEhB,CAKO9yD,eAAegoG,GAClBrhH,EACAglD,EACAgkB,EACA7f,EACA+M,EACAyf,GAEA,IAAKxsB,EAAQ27B,OACT,MAAMxE,GAAuBlD,IAGjC,MAAMnR,QAAmB+0C,GACrBh8D,EACAgkB,EACA7f,EACA+M,EACAyf,GAGJsrC,GACIh1C,EACA/e,G3B+aQ,SACZ+e,EACAuY,GAEAvY,EAAWltE,IDvjBQ,UCujBwBlO,mBAAmB2zF,IAI9DvY,EAAWltE,ID1jBe,iBCyjBE,0CAEhC,C2BtbIkiH,CAAyCh1C,EAAY9iB,EAAQ27B,QAE7D,MAAMw8B,EAAc,IAAInlH,IACxB8kH,GACIK,EACAn4D,EAAQgjB,sBAAwB,CAAC,GASrC,OAUJ,SACInsE,EACAuhH,EACAt1C,GAEA,MAAMtmE,EAAO3F,EAAMkG,cAAc,QAcjC,OAbAP,EAAK5Q,OAAS,OACd4Q,EAAK3Q,OAASusH,EAEdt1C,EAAWltD,SAAQ,CAACzpB,EAAeqX,KAC/B,MAAM60G,EAAQxhH,EAAMkG,cAAc,SAClCs7G,EAAMC,QAAS,EACfD,EAAM1tH,KAAO6Y,EACb60G,EAAMlsH,MAAQA,EAEdqQ,EAAKg5B,YAAY6iF,MAGrBxhH,EAAM+B,KAAK48B,YAAYh5B,GAChBA,CACX,CA9BW+7G,CAAW1hH,EAPN85G,GACR9wC,EACAs4C,EACAt8D,EAAOyjC,KAAKkB,uBACZxgC,EAAQgjB,sBAGkBF,EAClC,CA6CO5yD,eAAesoG,GAClBx4D,EACAisB,EACA29B,EACA/tD,EACA23C,EACAilB,EACApyH,EACA0mE,EACAyf,EACAs/B,GAIA,GAFA/+C,EAAOT,QAAQ,4CAEVw/C,EACD,MAAM30B,GACFX,IAGR,MAAMq1B,EAAgB,IAAIrmB,GAAUz4B,EAAQyf,GACtCksC,EAA0B,IAAIrG,GAChCx2D,EACA23C,EACAqY,EACA9+C,EACA1mE,EACAw1D,EAAO2iC,OAAOuC,iBACd6oB,EACAp9B,EACAs/B,EACA7/B,EACAwsC,EACAz4D,EAAQ8G,gBAEN,iBAAE+5C,GAAqBZ,GAAcQ,kBACvCoL,EACA7rD,EAAQhhC,OAEZ,OAAOopE,GACHswB,EAAwBnR,aAAa/mF,KAAKk4F,GAC1C5mC,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALLshC,CAMNh5B,GAAAA,GAAC,CAAC,EACIpP,GAAO,IACVhhC,MAAO6hF,EACP8F,YAAQxoD,IAEhB,CAaOjuC,eAAeyoG,GAClB34D,EACA+kB,EACAmyB,EACA0S,EACA/tD,EACA+8D,EACAplB,EACAilB,EACApyH,EACA0mE,EACAyf,EACAs/B,GAQA,GALAjP,GAAgBe,eACZpK,EACA33C,EAAOyjC,KAAK9pB,SACZxV,GAEA+kB,EAASkH,UACT,OAAOmc,GACHowB,GACA1mC,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALLshC,CAOHpoC,EACA+kB,EAASkH,UACT29B,EACA/tD,EACA23C,EACAilB,EACApyH,EACA0mE,EACAyf,EACAs/B,GAGR,MAAM7U,EAAe7nC,GAAAA,GAAA,GACdpP,GAAO,IACVx4D,KAAMu9E,EAASv9E,MAAQ,GACvB0vG,aAAcA,IAGZ2hB,EAAqB,IAAIxI,GAC3BuI,EACAplB,EACAyD,EACAlqC,EACAyf,GAWJ,aARqB4b,GACjBywB,EAAmBrI,mBAAmBhwF,KAAKq4F,GAC3C/mC,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALSshC,CAMnBrjB,EAAU/kB,EAGhB,CAiBO9vC,eAAe4oG,GAClB94D,EACA+kB,EACA6kC,EACA/tD,EACAgkB,EACA2zB,EACAilB,EACApyH,EACA0mE,EACAyf,EACAs/B,GAYA,GATAjP,GAAgBe,eACZpK,EACA33C,EAAOyjC,KAAK9pB,SACZxV,GAIJ2wD,GAAgD5rC,EAAU/kB,EAAQhhC,QAE7D+lD,EAASpC,QACV,MAAMwU,GAAuBjD,IAGjC,IAAKl0B,EAAQ27B,OACT,MAAMxE,GAAuBlD,IAGjC,MAAMuI,EAAgBxoB,KAAKC,YACjBm0B,GACF1M,GACA5J,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALNshC,CAMJpoC,EAAQ27B,OAAQ5W,EAASpC,UAG/B,GAAI6Z,EAAcvQ,UACd,OAAOmc,GACHowB,GACA1mC,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALLshC,CAOHpoC,EACAw8B,EAAcvQ,UACd29B,EACA/tD,EACA23C,EACAilB,EACApyH,EACA0mE,EACAyf,EACAs/B,GAIR,MAAMpE,EAAkB,IAAIxF,GACxBrmD,EAAOyjC,KAAK9pB,SACZg+B,EACA,IAAIhO,GAAUz4B,EAAQyf,GACtBzf,EACA,KACA,KACAyf,GAIJk7B,EAAgBtF,sBAAsB5lB,GAGtC,MAAMG,EAA2C,CAC7Cn1F,KAAM,GACNw3B,MAAOghC,EAAQhhC,MACfq+B,MAAO2C,EAAQ3C,MACfkmD,YAAa/mB,EAAc+mB,YAC3B8C,sBAAuB7pB,EAAc6pB,sBACrCyK,yBAA0Bt0B,EAAcs0B,yBACxCiI,oBAAqBv8B,EAAcu8B,oBACnCzS,aAAc9pB,EAAc8pB,cAGhC,aAAcle,GACVsf,EAAgB7E,0BAA0BriF,KAAKknF,GAC/C51B,GACA/kB,EACAyf,EACAxsB,EAAQ8G,cALEshC,CAOV5L,EACA3c,EACAu4B,KACAp4C,EACA28B,OACAx+B,OACAA,OACAA,OACAA,EAER,CCvdOjuC,eAAe8oG,GAClBxsC,EACAzf,EACAjG,GAEA0lB,EAAkBwG,oBACdlB,GACAhrB,GAEJ,MAAMowC,EAAelP,GACjBixB,GACAnnC,GACA/kB,EACAyf,EACA1lB,EALiBkhC,CAMnBxb,EAAmBzf,EAAQjG,GAQ7B,MAAO,CACH0wC,SAAUN,EACVgiB,gBATwB9wB,GACxB+wB,GACArnC,GACA/kB,EACAyf,EACA1lB,EALwBshC,CAM1B8O,EAAc1qB,EAAmBzf,EAAQjG,GAK/C,CAMA,SAASmyD,GACLzsC,EACAzf,EACAjG,GAEA,IAEI,MAAMsyD,EAAqB,IAAIlgC,WAjDR,IAkDvB8O,GACI1N,GACAxI,GACA/kB,EACAyf,EACA1lB,EALJkhC,CAMEoxB,GAGF,OADoChhC,GAAaghC,EAEpD,CAAC,MAAOvgH,GACL,MAAMs+E,GAAuBnD,GAChC,CACL,CAMA9jE,eAAeipG,GACXE,EACA7sC,EACAzf,EACAjG,GAEA0lB,EAAkBwG,oBACdlB,GACAhrB,GAEJ,IAEI,MAAMwyD,QAA+BlxB,GACjClO,GACApI,GACA/kB,EACAyf,EACA1lB,EALiCshC,CAMnCixB,EAAkB7sC,EAAmB1lB,GAEvC,OAAOsxB,GAAa,IAAIc,WAAWogC,GACtC,CAAC,MAAOzgH,GACL,MAAMs+E,GAAuBnD,GAChC,CACL,OC3EaulC,GAcT3hH,WAAAA,CACIm1D,EACAysD,EACAhtC,EACA+oC,GAEAvuH,KAAK+lE,OAASA,EACd/lE,KAAKwyH,mBAAqBA,EAC1BxyH,KAAKuuH,YAAcA,EACnBvuH,KAAKyyH,UAAY,IAAIzmH,IACrBhM,KAAK0yH,mBAAqB,IAAI1mH,IAC9BhM,KAAK2yH,eAAiB,IAAI90H,eAC1BmC,KAAK4yH,eAAiB5yH,KAAK6yH,gBAAgBr5F,KAAKx5B,MAChDA,KAAKwlF,kBAAoBA,EACzBxlF,KAAK8yH,eAAiBttC,EAAkByF,iBACpCH,IAEJ9qF,KAAK+yH,iBACDrwD,GAOR,iBAAM2pD,CACFrzD,GAEAh5D,KAAK+lE,OAAON,MAAMzlE,KAAK+yH,iBAAmB,0BAG1C,MAAMC,EAA0C,CAC5CpuH,OAAQ+9D,GACR3J,QAASA,GAGPi6D,EAA8B,CAChCn1H,QAAS4kE,GACT6rD,YAAavuH,KAAKuuH,YAClB2E,WAAYnnD,KACZn6D,KAAMohH,GAGVhzH,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAmB,2CAE5B/yH,KAAK+lE,OAAOJ,SACR3lE,KAAK+yH,iBAAgB,4CAAAv1F,OAC2BwvC,KAAKynB,UAC7Cw+B,KAGZjzH,KAAK2yH,eAAe10H,MAAME,YAAY80H,GAEtC,MAAMl1C,QAAyB,IAAI9lC,SAAQ,CAAC5nB,EAAS6nB,KACjDl4C,KAAKyyH,UAAU7jH,IAAIqkH,EAAIC,WAAY,CAAE7iG,UAAS6nB,cAMlD,OAFIl4C,KAAKmzH,+BAA+Bp1C,GAY5C,2BAAaq1C,CACTrtD,EACAysD,EACAhtC,GAEAzf,EAAON,MAAM,yDAEb,IACI,MAAM4tD,EAAoB,IAAId,GAC1BxsD,EACAysD,EACAhtC,EACA9iB,IAGJ,aADM2wD,EAAkBC,uBACjBD,CACV,CAAC,MAAOxhH,GAEL,MAAM0hH,EAAiB,IAAIhB,GACvBxsD,EACAysD,EACAhtC,GAGJ,aADM+tC,EAAeD,uBACdC,CACV,EAMG,0BAAMD,GACVtzH,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAmB,mCAG5B3oH,OAAO6L,iBAAiB,UAAWjW,KAAK4yH,gBAAgB,GAExD,MAAMK,EAA8B,CAChCn1H,QAAS4kE,GACT6rD,YAAavuH,KAAKuuH,YAClB2E,WAAYnnD,KACZn6D,KAAM,CACFhN,OAAQ+9D,KAchB,OAXA3iE,KAAK8yH,eAAepmH,IAAI,CACpB6hH,YAAavuH,KAAKuuH,YAClBiF,4BAA6BxzH,KAAKwyH,qBAGtCxyH,KAAK2yH,eAAe10H,MAAMC,UAAamM,IACnCrK,KAAKyzH,iBAAiBppH,IAG1BD,OAAOjM,YAAY80H,EAAK7oH,OAAOssF,OAAQ,CAAC12F,KAAK2yH,eAAe30H,QAErD,IAAIi6C,SAAQ,CAAC5nB,EAAS6nB,KACzBl4C,KAAK0yH,mBAAmB9jH,IAAIqkH,EAAIC,WAAY,CAAE7iG,UAAS6nB,WACvDl4C,KAAK0zH,UAAYtpH,OAAO/N,YAAW,KAK/B+N,OAAO8L,oBACH,UACAlW,KAAK4yH,gBACL,GAEJ5yH,KAAK2yH,eAAe10H,MAAM2+F,QAC1B58F,KAAK2yH,eAAe30H,MAAM4+F,QAC1B58F,KAAK8yH,eAAev8G,IAAI,CACpBo9G,4BAA4B,EAC5B1zB,SAAS,IAEb/nD,EACIi4C,GACIb,KAGRtvF,KAAK0yH,mBAAmBhvF,OAAOuvF,EAAIC,cACpClzH,KAAKwyH,uBAQRK,eAAAA,CAAgBxoH,GAGpB,GAFArK,KAAK+lE,OAAON,MAAMzlE,KAAK+yH,iBAAmB,6BAEtC1oH,EAAM4b,SAAW7b,OACjB,OAGJ,MAAM4uD,EAAU3uD,EAAM1F,KAEtB,GACKq0D,EAAQl7D,SACTk7D,EAAQl7D,UAAY4kE,MAKpB1J,EAAQu1D,aAAev1D,EAAQu1D,cAAgBvuH,KAAKuuH,cAIpDv1D,EAAQpnD,KAAKhN,SAAW+9D,GAAwC,CAChE,MAAMixD,EAAoB5zH,KAAK0yH,mBAAmB5hH,IAC9CkoD,EAAQk6D,YAMZ,IAAKU,EAKD,YAJA5zH,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAgB,0DAAAv1F,OACyCw7B,EAAQk6D,aAM9ElzH,KAAK+lE,OAAOT,QACRtM,EAAQu1D,YAAW,sBAAA/wF,OACSw7B,EAAQu1D,YAAW,kBACzC,0BAEVhyH,aAAayD,KAAK0zH,WAClB1zH,KAAK2yH,eAAe10H,MAAM2+F,QAC1B58F,KAAK2yH,eAAe30H,MAAM4+F,QAC1BxyF,OAAO8L,oBAAoB,UAAWlW,KAAK4yH,gBAAgB,GAC3D5yH,KAAK8yH,eAAev8G,IAAI,CACpB0pF,SAAS,EACT4zB,oBAAoB,IAExBD,EAAkB17E,OACdi4C,GACIZ,IAGX,EAOGkkC,gBAAAA,CAAiBppH,GACrBrK,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAmB,+BAE5B,MAAM/5D,EAAU3uD,EAAM1F,KAEhBmvH,EAAW9zH,KAAKyyH,UAAU3hH,IAAIkoD,EAAQk6D,YACtCU,EAAoB5zH,KAAK0yH,mBAAmB5hH,IAC9CkoD,EAAQk6D,YAGZ,IACI,MAAMtuH,EAASo0D,EAAQpnD,KAAKhN,OAE5B,GAAIA,IAAW+9D,GAAgC,CAC3C,IAAKmxD,EACD,OAEJ,MAAM/1C,EAAW/kB,EAAQpnD,KAAKmsE,SAW9B,GAVA/9E,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBACD,+CAER/yH,KAAK+lE,OAAOJ,SACR3lE,KAAK+yH,iBAAgB,gDAAAv1F,OAC+BwvC,KAAKynB,UACjD1W,KAGY,YAApBA,EAASjuD,OACTgkG,EAAS57E,OACLoyE,GACIvsC,EAASv9E,KACTu9E,EAASosC,YACTpsC,EAASqsC,UAGd,KAAIrsC,EAASx/C,OAgBhB,MAAMwhC,GACFg0D,GACA,kCAhBAh2C,EAASx/C,OAAa,MACtBw/C,EAASx/C,OAAoB,YAE7Bu1F,EAAS57E,OACLoyE,GACIvsC,EAASx/C,OAAa,KACtBw/C,EAASx/C,OAAoB,YAC7Bw/C,EAASx/C,OAAY,MAI7Bu1F,EAASzjG,QAAQ0tD,EAASx/C,OAOjC,CACDv+B,KAAKyyH,UAAU/uF,OAAOs1B,EAAQk6D,WACjC,MAAM,GAAItuH,IAAW+9D,GAAyC,CAC3D,IAAKixD,EAKD,YAJA5zH,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAgB,2DAAAv1F,OAC0Cw7B,EAAQk6D,aAI/E32H,aAAayD,KAAK0zH,WAClBtpH,OAAO8L,oBACH,UACAlW,KAAK4yH,gBACL,GAEJ5yH,KAAKuuH,YAAcv1D,EAAQu1D,YAC3BvuH,KAAKiiH,iBAAmBjpD,EAAQpnD,KAAK6+C,QACrCzwD,KAAK+lE,OAAOT,QACRtlE,KAAK+yH,iBAAgB,iDAAAv1F,OACgCx9B,KAAKuuH,cAE9DvuH,KAAK8yH,eAAev8G,IAAI,CACpBs9G,oBAAoB,EACpB5zB,SAAS,IAGb2zB,EAAkBvjG,UAClBrwB,KAAK0yH,mBAAmBhvF,OAAOs1B,EAAQk6D,WAC1C,CAEJ,CAAC,MAAOxrH,GACL1H,KAAK+lE,OAAO/mE,MAAM,6CAClBgB,KAAK+lE,OAAOd,SAAS,8CAADznC,OAC8B91B,IAElD1H,KAAK+lE,OAAOd,SAAS,mBAADznC,OAAoBnzB,IAEpCypH,EACAA,EAAS57E,OAAOxwC,GACTksH,GACPA,EAAkB17E,OAAOxwC,EAEhC,EAOGyrH,8BAAAA,CACJp1C,GAEA,GACIA,EAASz3E,eAAe,iBACxBy3E,EAASz3E,eAAe,aACxBy3E,EAASz3E,eAAe,gBACxBy3E,EAASz3E,eAAe,YACxBy3E,EAASz3E,eAAe,UACxBy3E,EAASz3E,eAAe,cAExB,OAAOy3E,EAEP,MAAMhe,GACFg0D,GACA,yCASZvF,cAAAA,GACI,OAAOxuH,KAAKuuH,YAOhB7C,mBAAAA,GACI,OAAO1rH,KAAKiiH,iBAGhBwJ,gBAAAA,GAAgB,IAAAuI,EACZ,OAAOh0H,KAAKwuH,mBACR9rD,GACE,SACqB,QAArBsxD,EAAAh0H,KAAKwuH,wBAAgB,IAAAwF,GAArBA,EAAuB/5H,OACvB,eACAk9D,yJC/YD88D,GAMTrjH,WAAAA,CACIm1D,EACAyf,EACA1lB,GAEA9/D,KAAK+lE,OAASA,EACd/lE,KAAKwlF,kBAAoBA,EACzBxlF,KAAK8/D,cAAgBA,EACrB9/D,KAAK+yH,iBAAmBrwD,GAG5B,2BAAa0wD,CACTrtD,EACAyf,EACA1lB,GAAqB,IAAAo0D,EAKrB,GAHAnuD,EAAON,MAAM,iDAGO,QAApByuD,EAAI9pH,OAAOsmF,iBAAS,IAAAwjC,GAAhBA,EAAkBC,uBAAwB,CAC1C,MAAMC,QAEIhqH,OAAOsmF,UAAUyjC,uBAAuBE,sBAC1C3xD,IAER,GACsB,OAAlB0xD,QAAkB,IAAlBA,GAAAA,EAAoBxkH,SAChB8yD,IAIJ,OADAqD,EAAON,MAAM,sCACN,IAAIwuD,GACPluD,EACAyf,EACA1lB,EAGX,EAQL0uD,cAAAA,GACI,OAAO9rD,GAGXgpD,mBAAAA,GACI,MAAO,GAGXD,gBAAAA,GACI,OAAO/oD,GAQX,iBAAM2pD,CACFrzD,GAEAh5D,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAmB,yCAG5B,IACI,MAAMuB,EACFt0H,KAAKu0H,6BAA6Bv7D,GAChC+kB,QAEI3zE,OAAOsmF,UAAUyjC,uBAAuBK,gBAC1CF,GAER,OAAOt0H,KAAKmzH,+BAA+Bp1C,EAC9C,CAAC,MAAOlsE,GAIL,MAHA7R,KAAK+lE,OAAO/mE,MACRgB,KAAK+yH,iBAAmB,oCAEtBlhH,CACT,EAGG0iH,4BAAAA,CACJv7D,GAEAh5D,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAmB,wCAG5B,MAAM,UACF9tC,EAAS,SACTzW,EAAQ,UACRqK,EAAS,MACTxjB,EAAK,YACLwjC,EAAW,cACX/4B,EAAa,MACb9nC,EAAK,aACLmpD,EAAY,iBACZooB,EAAgB,gBAChBqiB,GAEA5yD,EADGq3D,EAAmB35C,GACtB1d,EAAO4d,IAEL69C,EACFz0H,KAAK00H,kBAAkBrE,GAiB3B,MAfoD,CAChDprC,UAAWA,EACX0vC,SAAU30H,KAAKwuH,iBACf31C,UAAWA,EACXrK,SAAUA,EACV1O,cAAeA,GAAiB9/D,KAAK8/D,cACrC8rD,gBAAexjD,GAAAA,GAAA,GAAOwjD,GAAoB6I,GAC1CG,wBAAwB,EACxB/7B,YAAaA,EACbxjC,MAAOA,EACPr9B,MAAOA,EACPmpD,aAAcA,EACdooB,iBAAkBA,GAMlB4pB,8BAAAA,CACJp1C,GAEA,GAAIA,EAASz3E,eAAe,aAAc,CACtC,GACIy3E,EAASz3E,eAAe,gBACxBy3E,EAASz3E,eAAe,YACxBy3E,EAASz3E,eAAe,eACxBy3E,EAASz3E,eAAe,YACxBy3E,EAASz3E,eAAe,WACxBy3E,EAASz3E,eAAe,aAMxB,OAJAtG,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBACD,6DAED/yH,KAAK60H,gCACR92C,GAED,GAAIA,EAASz3E,eAAe,SAAU,CACzC,MAAMwuH,EAAgB/2C,EACtB,IACgC,IAA5B+2C,EAAcC,WACdD,EAAc91H,OACd81H,EAAc91H,MAAMwB,KAMpB,MAJAR,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBACD,8CAEFzI,GACFwK,EAAc91H,MAAMwB,KACpBs0H,EAAc91H,MAAMmrH,YACpB,CACInrH,MAAOy3G,SAASqe,EAAc91H,MAAMugE,WACpCy1D,eAAgBF,EAAc91H,MAAMi2H,cACpCnlG,OAAQglG,EAAc91H,MAAM8wB,OAC5Bg+F,WAAYgH,EAAc91H,MAAM8uH,YAI/C,CACJ,CACD,MAAM/tD,GACFg0D,GACA,yCAIAc,+BAAAA,CACJ92C,GAAkC,IAAAm3C,EAElCl1H,KAAK+lE,OAAON,MACRzlE,KAAK+yH,iBAAmB,qCAe5B,MAb6C,CACzC5V,aAAcp/B,EAASjP,YACvButC,SAAUt+B,EAASxP,QACnBguC,YAAax+B,EAASxE,WACtBD,QAASyE,EAASzE,QAClBgkC,WAAYv/B,EAASs/B,UACrBhoD,MAAO0oB,EAASza,OAChBtrC,MAAO+lD,EAAS/lD,OAAS,GACzB81F,WAAY/vC,EAAS+vC,YAAc,CAAC,EACpCqH,sBAAqD,QAAhCD,EAAEn3C,EAASo3C,6BAAqB,IAAAD,GAAAA,EACrDxH,IAAK3vC,EAASq3C,0BAMdV,iBAAAA,CACJ9I,GAcA,OAJsBxjD,GAAA,GARIrmE,OAAOivF,QAAQ46B,GAAiBn0D,QACtD,CAAC49D,EAAM/sD,KAAkB,IAAf9rD,EAAKrX,GAAMmjE,EAEjB,OADA+sD,EAAO74G,GAAOC,OAAOtX,GACdkwH,IAEX,CAAC,KCvLNnsG,eAAeosG,GAClBvvD,EACAyf,EACA1lB,EACAy6B,GAEAx0B,EAAON,MAAM,iCAAkC3F,GAE/C,MAAMy1D,aA4CN,IAAIp9B,EACJ,IAAI,IAAAF,EAGA,OAFAE,EAAiB/tF,OAAOw4D,IAEsC,UAAzC,QAAdq1B,EAAAE,SAAc,IAAAF,OAAA,EAAdA,EAAgB6C,QAAQl3B,IAClC,CAAC,MAAO/xD,GACL,OAAO,CACV,CACL,CApD2C2jH,GAMvC,IAAI1Q,EAJJ/+C,EAAON,MACH,iDACI8vD,GAGR,IACQA,IAEAzQ,QAA6BmP,GAAuBb,eAChDrtD,EACAyf,EACA1lB,IAGHglD,IACD/+C,EAAON,MACH,mEAMJq/C,QACUyN,GAA6Ba,eAC/BrtD,EACAw0B,G3DpDsC,I2DsDtC/U,GAGf,CAAC,MAAO3zE,GACLk0D,EAAON,MAAM,8BAA+B5zD,EAC/C,CACD,OAAOizG,CACX,CAyBM,SAAU2Q,GACZ5gE,EACAkR,EACA++C,EACAr+B,GAGA,GADA1gB,EAAON,MAAM,6BACR5Q,EAAO2iC,OAAO8C,oBAKf,OAJAv0B,EAAON,MACH,2EAGG,EAGX,IAAKq/C,EAKD,OAJA/+C,EAAON,MACH,kFAGG,EAGX,GAAIghB,EACA,OAAQA,GACJ,KAAKhoB,EAAqBC,OAC1B,KAAKD,EAAqBE,IAItB,OAHAoH,EAAON,MACH,yEAEG,EACX,QAII,OAHAM,EAAON,MACH,8EAEG,EAGnB,OAAO,CACX,CCzGM,MAAOiwD,WAAoBtP,GAI7Bx1G,WAAAA,CACIikD,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACA8lC,EACAqK,EACA71D,GAEAJ,MACI7K,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAmwC,EACA71D,GAGJ9/D,KAAK41H,aAAe51H,KAAK41H,aAAap8F,KAAKx5B,MAC3CA,KAAKyxH,cAAgBnG,EACrBtrH,KAAKX,aAAeA,EAQxBkhH,YAAAA,CACIvnD,EACA68D,GAEA,IAAI,IAAAC,EACA,MAIMC,EAA2B,CAC7BC,UALch2H,KAAKi2H,kBACnBj9D,EAAQsK,QAAUvH,EAClB/C,EAAQ6f,WAAa74E,KAAK60D,OAAOyjC,KAAKzf,WAItCq9C,sBAAuBl9D,EAAQk9D,uBAAyB,CAAC,EACzDC,kBAA4C,QAA3BL,EAAE98D,EAAQm9D,yBAAiB,IAAAL,EAAAA,EAAI1rH,QASpD,OANApK,KAAKwlF,kBAAkBQ,UACnB,CAAEowC,aAAcp2H,KAAK60D,OAAO2iC,OAAO6C,aACnCr6F,KAAK8/D,eAIL9/D,KAAK60D,OAAO2iC,OAAO6C,aACnBr6F,KAAK+lE,OAAOT,QAAQ,4CAEbtlE,KAAKq2H,uBACRr9D,EACA+8D,EACAF,KAIJ71H,KAAK+lE,OAAOT,QACR,iEAEJywD,EAAYO,MAAQt2H,KAAKu2H,eACrB,cACAR,GAEG/1H,KAAKq2H,uBACRr9D,EACA+8D,EACAF,GAGX,CAAC,MAAOhkH,GACL,OAAOomC,QAAQC,OAAOrmC,EACzB,EAOLwvD,MAAAA,CAAOu/C,GACH,IAAI,IAAA4V,EACAx2H,KAAK+lE,OAAOT,QAAQ,sBACpB,MAAMghD,EACFtmH,KAAKqmH,wBAAwBzF,GAC3BmV,EAA2B,CAC7BC,UAAWh2H,KAAKy2H,wBAAwBnQ,GACxC4P,uBACiB,OAAbtV,QAAa,IAAbA,OAAa,EAAbA,EAAesV,wBAAyB,CAAC,EAC7CC,kBAAmD,QAAlCK,EAAe,OAAb5V,QAAa,IAAbA,OAAa,EAAbA,EAAeuV,yBAAiB,IAAAK,EAAAA,EAAIpsH,QAErDyuE,EAAY+nC,GAAiBA,EAAc/nC,UAC3C69C,EACF9V,GAAiBA,EAAc8V,sBAGnC,OAAI12H,KAAK60D,OAAO2iC,OAAO6C,aACnBr6F,KAAK+lE,OAAOT,QAAQ,2BAEbtlE,KAAK22H,iBACRrQ,EACAyP,EACAl9C,EACA69C,KAIJ12H,KAAK+lE,OAAOT,QAAQ,0CACpBywD,EAAYO,MAAQt2H,KAAKu2H,eACrB,cACAR,GAEG/1H,KAAK22H,iBACRrQ,EACAyP,EACAl9C,EACA69C,GAGX,CAAC,MAAO7kH,GAEL,OAAOomC,QAAQC,OAAOrmC,EACzB,EAWK,4BAAMwkH,CACZr9D,EACA+8D,EACAF,GAEA71H,KAAK+lE,OAAOT,QAAQ,iCAEpB,MAAMsxD,QAAqBx1B,GACvBphG,KAAK2mH,+BAA+BntF,KAAKx5B,MACzC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALkBshC,CAMzBpoC,EAASmK,GAAgBkE,OAMvB0uD,EAAYO,OACZrgE,GAAwB2gE,EAAa/9C,WAGzC,MAAMg+C,EAAmBpB,GACrBz1H,KAAK60D,OACL70D,KAAK+lE,OACL/lE,KAAK8kH,qBACL9rD,EAAQytB,sBAIZ,OAFAmwC,EAAa7F,eAAiB8F,EAE1B72H,KAAK60D,OAAOyjC,KAAK9e,eAAiB3Q,GAC3B7oE,KAAK82H,eAAeF,EAAcb,GAElC/1H,KAAK+2H,gBAAgBH,EAAcb,EAAaF,GAW/D,qBAAMkB,CACF/9D,EACA+8D,EACAF,GAEA,MAAM/1D,EAAgB9G,EAAQ8G,cACxBo1C,EAAyBl1G,KAAKklH,iCAChChiD,IAGE8zD,EACFnB,SACOz0B,GACH4wB,GACAlnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALGshC,CAMLphG,KAAKwlF,kBAAmBxlF,KAAK+lE,OAAQjG,GAErCm3D,EAAY7uD,GAAAA,GAAA,GACXpP,GAAO,IACV+mD,cAAeiX,EAAK9E,YAGxB,IAEI,MAAMN,QAA4CxwB,GAC9CphG,KAAKwmH,qBAAqBhtF,KAAKx5B,MAC/B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EAL8CshC,CAMhD,CACE8T,yBACAuQ,iBAAkBwR,EAAap+C,UAC/BgtC,yBAA0BoR,EAAa79B,kBACvCmsB,4BAA6B0R,EAAaj7C,qBAC1C1C,QAAS29C,EAAa39C,UAIpB49C,QAAoB91B,GACtB6vB,GACAnmC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALsBshC,CAOtBphG,KAAK60D,OACL+8D,EAAW/4C,UACXo+C,EACAj3H,KAAK+lE,OACL/lE,KAAKwlF,mBAIH2xC,EAAsBn3H,KAAKo3H,oBAC7BF,EACAnB,GAEJ/1H,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB,CAAE8vD,eACF,MAIJ,MAAM/7C,QAAuBp7E,KAAKq3H,oBAC9BF,EACApB,EAAYI,mBAGVnP,EAAehmB,GACjB8lB,GACAh8B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALYkhC,CAOjB5lB,EACAp7E,KAAK60D,OAAOyjC,KAAKW,YAAYC,mBAC7Bl5F,KAAK+lE,QAGT,aAAaq7B,GACTuwB,GACA7mC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALSshC,CAOTpoC,EACAguD,EACAgQ,EAAKxmB,SACLttC,GACAljE,KAAK60D,OACL+8D,EACA5xH,KAAKwsG,eACLxsG,KAAKyxH,cACLzxH,KAAKX,aACLW,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8kH,qBAEZ,CAAC,MAAOjzG,GAAG,IAAAylH,EAQR,MANiB,QAAjBA,EAAAvB,EAAYO,aAAK,IAAAgB,GAAjBA,EAAmB16B,QAEf/qF,aAAaytD,KACZztD,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,IAExCA,CACT,EAOL,oBAAMilH,CACF99D,EACA+8D,GAEA,MAAMj2D,EAAgB9G,EAAQ8G,cAExBgmD,QAA4B1kB,GAC9BphG,KAAKqlH,uBAAuB7rF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EAL8BshC,CAMhC,CACEqkB,iBAAkBzsD,EAAQ6f,UAC1BgtC,yBAA0B7sD,EAAQogC,kBAClCmsB,4BAA6BvsD,EAAQgjB,qBACrC1C,QAAStgB,EAAQsgB,UAGfqb,QAAeyM,GACjBjN,GACArJ,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALiBshC,GAOf61B,EAAY7uD,GAAAA,GAAA,GACXpP,GAAO,IACV27B,OAAQA,IAENwiC,EACFpB,EAAYO,OAASt2H,KAAKu3H,UAAU,cAAexB,UAEpC7E,GACfiG,EAAYzlH,SACZ1R,KAAK60D,OACLixD,EACAmR,EACAj3H,KAAK+lE,OACL/lE,KAAKwlF,oBAEJgyC,SAGL,MAAMp8C,QAAuBgmB,GACzBphG,KAAKq3H,oBAAoB79F,KAAKx5B,MAC9B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALyBshC,CAM3B+1B,EAAapB,EAAYI,mBAErBnP,EAAehmB,GACjB8lB,GACAh8B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALYkhC,CAOjB5lB,EACAp7E,KAAK60D,OAAOyjC,KAAKW,YAAYC,mBAC7Bl5F,KAAK+lE,QAGT,OAAOq7B,GACH0wB,GACAhnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALGshC,CAOH61B,EACAjQ,EACA9jD,GACAljE,KAAK60D,OACLixD,EACA9lH,KAAKwsG,eACLxsG,KAAKyxH,cACLzxH,KAAKX,aACLW,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8kH,sBAaH,sBAAM6R,CACZC,EACAb,EACAtQ,EACAiR,GAEA12H,KAAK+lE,OAAOT,QAAQ,2BACpBtlE,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChBuvD,GAGJ,MAAM1hB,EAAyBl1G,KAAKklH,iCAChChiD,IAGJ,UAEUljE,KAAK+kH,mBAAmB6R,EAAat9C,SAG3C,MAAMs4C,QAAmBxwB,GACrBphG,KAAKwmH,qBAAqBhtF,KAAKx5B,MAC/B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALgBshC,CAMvB,CACE8T,yBACAuQ,iBAAkBA,EAClBnsC,QAASs9C,EAAat9C,cAAWniB,IAGrC,IACIy6D,EAAW/4C,UAAUyqB,kBACxB,CAAC,MAAA1L,GAAM,IAAA6/B,EACJ,GACwB,QAApBA,EAAAb,EAAat9C,eAAO,IAAAm+C,GAApBA,EAAsB5vD,eACtB+uD,EAAa99B,uBACb84B,EAAW/4C,UAAUW,eAAiB3Q,GACxC,KAAA6uD,EAAAC,EAWE,GAVK33H,KAAKwsG,eAAe5nB,cACD,QADc8yC,EAClCd,EAAat9C,eAAO,IAAAo+C,OAAA,EAApBA,EAAsB7vD,eAG1B7nE,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChBuvD,GAGAF,EAAuB,CACvB,MAAM5J,EAAuC,CACzClK,MAAO1/C,GACPvjE,QACIK,KAAK60D,OAAO2iC,OAAO4C,0BACvB1N,WAAW,GAETkrC,EAAc17C,GAAUwB,eAC1Bg5C,EACA7/B,YAEE72F,KAAK+5F,iBAAiBxN,iBACxBqrC,EACA9K,EAEP,CAID,YAFiB,QAAjB6K,EAAA5B,EAAYO,aAAK,IAAAqB,GAAjBA,EAAmB/6B,QAGtB,CACJ,CAGD,MAAMi7B,EAAoBjG,EAAWjR,aAAaiW,GAElD52H,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChBuvD,GAIJ,MAAMO,EAAcn3H,KAAKu3H,UAAUM,EAAW9B,GAe9C,GAdA/1H,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB,CAAE8vD,eACF,YAGEn3H,KAAKq3H,oBACPF,EACApB,EAAYI,mBACdlnH,OAAM,SAIJynH,EAAuB,CACvB,MAAM5J,EAAuC,CACzClK,MAAO1/C,GACPvjE,QAASK,KAAK60D,OAAO2iC,OAAO4C,0BAC5B1N,WAAW,GAETkrC,EAAc17C,GAAUwB,eAC1Bg5C,EACA7/B,MAGJ72F,KAAK+lE,OAAOT,QACR,2DAEJtlE,KAAK+lE,OAAOP,WAAW,+BAADhoC,OACao6F,UAE7B53H,KAAK+5F,iBAAiBxN,iBACxBqrC,EACA9K,EAEP,MACG9sH,KAAK+lE,OAAOT,QAAQ,sCAE3B,CAAC,MAAOzzD,GAAG,IAAAimH,EAkBR,MAhBiB,QAAjBA,EAAA/B,EAAYO,aAAK,IAAAwB,GAAjBA,EAAmBl7B,QAEf/qF,aAAaytD,KACZztD,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,IAE9C7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB,KACAx1D,GAEJ7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,OAEdx1D,CACT,CAED7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,OAQxB+vD,mBAAAA,CAAoBW,EAAoBvkD,GAEpC,GAAIukD,EAGA,OAFA/3H,KAAK+lE,OAAOV,QAAQ,gBAAD7nC,OAAiBu6F,IAE7B/3H,KAAKu3H,UAAUQ,EAAYvkD,GAIlC,MADAxzE,KAAK+lE,OAAO/mE,MAAM,yBACZmxF,GACF/C,IAUZiqC,mBAAAA,CACIF,EACAhB,GAEA,OAAO,IAAIl+E,SAAgB,CAAC5nB,EAAS6nB,KACjCl4C,KAAK+lE,OAAOT,QACR,sDAGJ,MAAM0yD,EAAaC,aAAY,KAE3B,GAAId,EAAYe,OAUZ,OATAl4H,KAAK+lE,OAAO/mE,MACR,oDAEJm5H,cAAcH,QACd9/E,EACIi4C,GACItC,KAMZ,IAAIzqE,EAAO,GACX,IAMIA,EAAO+zG,EAAYx6G,SAASyG,IAC/B,CAAC,MAAOvR,GAAI,CAGb,IAAKuR,GAAiB,gBAATA,EACT,OAEJ+0G,cAAcH,GAEd,IAAI58C,EAAiB,GACrB,MAAM43B,EACFhzG,KAAK60D,OAAOyjC,KAAKW,YAAYC,mBAC7Bi+B,IAEI/7C,EADA43B,IAAiBh2C,EACAm6D,EAAYx6G,SAASoD,OAErBo3G,EAAYx6G,SAASo2E,MAI9C/yF,KAAK+lE,OAAOT,QACR,+EAGJj1C,EAAQ+qD,KACTp7E,KAAK60D,OAAO2iC,OAAOgD,6BACvB/xB,SAAQ,KACPzoE,KAAKo4H,WAAWjB,EAAahB,MAiBrCoB,SAAAA,CAAUc,EAAqBtC,GAC3B,IACI,IAAIoB,EAiBJ,GAfIpB,EAAYO,OACZa,EAAcpB,EAAYO,MAC1Bt2H,KAAK+lE,OAAOP,WAAW,+BAADhoC,OACa66F,IAEnClB,EAAYx6G,SAAS7a,OAAOu2H,IACQ,qBAAtBtC,EAAYO,QAE1Bt2H,KAAK+lE,OAAOP,WAAW,4BAADhoC,OACU66F,IAEhClB,EAAcn3H,KAAKu2H,eAAe8B,EAAatC,KAI9CoB,EACD,MAAMhnC,GACFvC,IAYR,OATIupC,EAAYjnF,OACZinF,EAAYjnF,QAEhBlwC,KAAKs4H,cAAgBnB,EACrBpB,EAAYI,kBAAkBlgH,iBAC1B,eACAjW,KAAK41H,cAGFuB,CACV,CAAC,MAAOtlH,GAIL,MAHA7R,KAAK+lE,OAAO/mE,MACR,uBAA0B6S,EAAgB1B,SAExCggF,GACFxC,GAEP,EAUL4oC,cAAAA,CACI8B,EAAmB/vD,GACiD,IAAAiwD,EAAAC,EAAAC,EAAAC,EAAA,IAApE,UAAE1C,EAAS,sBAAEE,EAAqB,kBAAEC,GAAgC7tD,EAMpE,MAAMqwD,EAAUxC,EAAkByC,WAC5BzC,EAAkByC,WAClBzC,EAAkB/8G,QAClBy/G,EAAS1C,EAAkB2C,UAC3B3C,EAAkB2C,UAClB3C,EAAkB98G,QAKlB0/G,EACF5C,EAAkB6C,YAClBtnH,SAAShM,gBAAgBuzH,aACzBvnH,SAASE,KAAKqnH,YACZC,EACF/C,EAAkBgD,aAClBznH,SAAShM,gBAAgB0zH,cACzB1nH,SAASE,KAAKwnH,aAElB,IAAIn8G,EAAuC,QAAlCs7G,EAAGrC,EAAsBmD,iBAAS,IAAAd,OAAA,EAA/BA,EAAiCt7G,MACzCC,EAAwC,QAAlCs7G,EAAGtC,EAAsBmD,iBAAS,IAAAb,OAAA,EAA/BA,EAAiCt7G,OAC1CykC,EAAyC,QAAtC82E,EAAGvC,EAAsBoD,qBAAa,IAAAb,OAAA,EAAnCA,EAAqC92E,IAC3C/mD,EAA0C,QAAtC89H,EAAGxC,EAAsBoD,qBAAa,IAAAZ,OAAA,EAAnCA,EAAqC99H,KAoChD,QAlCKqiB,GAASA,EAAQ,GAAKA,EAAQ87G,KAC/B/4H,KAAK+lE,OAAOT,QACR,4EAEJroD,EAAQwlD,MAGPvlD,GAAUA,EAAS,GAAKA,EAASg8G,KAClCl5H,KAAK+lE,OAAOT,QACR,8EAEJpoD,EAASulD,MAGR9gB,GAAOA,EAAM,GAAKA,EAAMu3E,KACzBl5H,KAAK+lE,OAAOT,QACR,iFAEJ3jB,EAAM1iD,KAAKs6H,IACP,EACAL,EAAY,EAAIz2D,GAAgC,EAAIo2D,MAIvDj+H,GAAQA,EAAO,GAAKA,EAAOm+H,KAC5B/4H,KAAK+lE,OAAOT,QACR,mFAEJ1qE,EAAOqE,KAAKs6H,IACR,EACAR,EAAW,EAAIt2D,GAA+B,EAAIk2D,IAInDxC,EAAkB75B,KACrB+7B,EACArC,EAAS,SAAAx4F,OACAvgB,EAAK,aAAAugB,OAAYtgB,EAAM,UAAAsgB,OAASmkB,EAAG,WAAAnkB,OAAU5iC,EAAI,qBAOlEg7H,YAAAA,CAAa/jH,GACL7R,KAAKs4H,eACLt4H,KAAKs4H,cAAc17B,QAGvB/qF,EAAEmG,iBAONogH,UAAAA,CAAWjB,EAAqBhB,GAE5BgB,EAAYv6B,QAGZu5B,EAAkBjgH,oBACd,eACAlW,KAAK41H,cASbK,iBAAAA,CAAkB3yD,EAAuBuV,GACrC,MAAO,GAAPr7C,OAAUilC,GAAkC,KAAAjlC,OACxCx9B,KAAK60D,OAAOyjC,KAAK9pB,SACrB,KAAAhxC,OAAI8lC,EAAO5hC,KAAK,KAAI,KAAAlE,OAAIq7C,EAAS,KAAAr7C,OAAIx9B,KAAK8/D,eAQ9C22D,uBAAAA,CAAwBz9D,GACpB,MAAM6O,EAAgB7O,EAAQsgB,SAAWtgB,EAAQsgB,QAAQzR,cACzD,MAAO,GAAPrqC,OAAUilC,GAAkC,KAAAjlC,OAAIx9B,KAAK60D,OAAOyjC,KAAK9pB,SAAQ,KAAAhxC,OAAIqqC,EAAa,KAAArqC,OAAIx9B,KAAK8/D,gBC7yBrG,MAAO05D,WAAuBpT,GAGhCx1G,WAAAA,CACIikD,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACA8lC,EACAqK,EACA71D,GAEAJ,MACI7K,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAmwC,EACA71D,GAEJ9/D,KAAKyxH,cAAgBnG,EAOzB,kBAAM/K,CAAavnD,GACf,MAAM49D,QAAqBx1B,GACvBphG,KAAK2mH,+BAA+BntF,KAAKx5B,MACzC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALkBshC,CAMzBpoC,EAASmK,GAAgBiE,UAE3BwvD,EAAa7F,eAAiB0E,GAC1Bz1H,KAAK60D,OACL70D,KAAK+lE,OACL/lE,KAAK8kH,qBACL9rD,EAAQytB,sBAGZ,MAAMgzC,EAAoBpvH,IAElBA,EAAMqvH,YACN15H,KAAK+lE,OAAOT,QACR,wEAEJtlE,KAAKwsG,eAAesD,oBACpB9vG,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,YAKtBuyD,EAAoB35H,KAAK45H,qBAC3B5gE,EAAQ2gE,mBAEZ35H,KAAK+lE,OAAOP,WAAW,wBAADhoC,OAAyBm8F,IAE/C35H,KAAKwsG,eAAemD,kBAChB5sC,GACA42D,GACA,GAIJvvH,OAAO6L,iBAAiB,WAAYwjH,GAEpC,IACQz5H,KAAK60D,OAAOyjC,KAAK9e,eAAiB3Q,SAC5B7oE,KAAK82H,eAAeF,SAEpB52H,KAAK+2H,gBACPH,EACA59D,EAAQ6zD,mBAGnB,CAAC,MAAOh7G,GAKL,MAJIA,aAAaytD,IACbztD,EAAEguD,iBAAiB7/D,KAAK8/D,eAE5B11D,OAAO8L,oBAAoB,WAAYujH,GACjC5nH,CACT,EAQL,qBAAMklH,CACF/9D,EACA6zD,GAEA,MAAM/sD,EAAgB9G,EAAQ8G,cACxBo1C,EAAyBl1G,KAAKklH,iCAChChiD,IAGE2yD,QAAkBz0B,GACpB4wB,GACAlnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALoBshC,CAMtBphG,KAAKwlF,kBAAmBxlF,KAAK+lE,OAAQjG,GAEjC+5D,EAAezxD,GAAAA,GAAA,GACdpP,GAAO,IACV+mD,cAAe8V,EAAU3D,YAG7BlyH,KAAKwsG,eAAewD,sBAChB6pB,EACAhE,EAAUrlB,UAGd,IAEI,MAAMohB,QAA4CxwB,GAC9CphG,KAAKwmH,qBAAqBhtF,KAAKx5B,MAC/B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALyCshC,CAMhD,CACE8T,yBACAuQ,iBAAkBoU,EAAgBhhD,UAClCgtC,yBAA0BgU,EAAgBzgC,kBAC1CmsB,4BACIsU,EAAgB79C,qBACpB1C,QAASugD,EAAgBvgD,UAIvB49C,QAAoB91B,GACtB6vB,GACAnmC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALcshC,CAOtBphG,KAAK60D,OACL+8D,EAAW/4C,UACXghD,EACA75H,KAAK+lE,OACL/lE,KAAKwlF,mBAGT,aAAaxlF,KAAKo3H,oBACdF,EACArK,EAEP,CAAC,MAAOh7G,GAKL,MAJIA,aAAaytD,KACbztD,EAAEguD,iBAAiB7/D,KAAK8/D,eACxBo1C,EAAuB2O,mBAAmBhyG,IAExCA,CACT,EAOL,oBAAMilH,CACF99D,GAEA,MAAM8G,EAAgB9G,EAAQ8G,cAExBgmD,QAA4B1kB,GAC9BphG,KAAKqlH,uBAAuB7rF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EAL8BshC,CAMhC,CACEqkB,iBAAkBzsD,EAAQ6f,UAC1BgtC,yBAA0B7sD,EAAQogC,kBAClCmsB,4BAA6BvsD,EAAQgjB,qBACrC1C,QAAStgB,EAAQsgB,UAGfqb,QAAeyM,GACjBjN,GACArJ,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALiBshC,GAOfy4B,EAAezxD,GAAAA,GAAA,GACdpP,GAAO,IACV27B,OAAQA,IAEZ30F,KAAKwsG,eAAewD,sBAAsB6pB,UAEvB3I,GACfx/G,SACA1R,KAAK60D,OACLixD,EACA+T,EACA75H,KAAK+lE,OACL/lE,KAAKwlF,oBAEJgyC,SAUT,2BAAMt2D,GAI2C,IAH7C6xB,EAAe9yF,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,MACf+4D,EAAsC/4D,UAAAhG,OAAA,EAAAgG,UAAA,QAAAk3D,EACtC2iE,EAAoB75H,UAAAhG,OAAA,EAAAgG,UAAA,QAAAk3D,EACpB4iE,EAA6C95H,UAAAhG,OAAA,EAAAgG,UAAA,QAAAk3D,EAE7C,MAAM+9C,EAAyBl1G,KAAKklH,iCAChChiD,IAGJ,IACI,MAAO8jD,EAAc5rC,GAAkBp7E,KAAKg6H,oBACxCjnC,GAAQ,IAEZ,IAAKi0B,EAeD,OAbAhnH,KAAK+lE,OAAO71D,KACR,wGAEJlQ,KAAKwsG,eAAesD,oBAGQ,iBAvQ5C,WACI,GACsB,qBAAX1lG,QACuB,qBAAvBA,OAAO/O,aACiC,oBAAxC+O,OAAO/O,YAAY4+H,iBAE1B,OAGJ,MAAMC,EAAoB9vH,OAAO/O,YAAY4+H,iBAAiB,cACxDE,EAAaD,EAAkBjgI,OAC9BigI,EAAkB,QACnB/iE,EACN,OAAiB,OAAVgjE,QAAU,IAAVA,OAAU,EAAVA,EAAY32H,IACvB,CAyPoB42H,GACAL,EAAkB1vH,MAAMk1D,UAAY,qBAEpCv/D,KAAK+lE,OAAOT,QACR,mEAGD,KAIX,MAAM+0D,EACFr6H,KAAKwsG,eAAeiD,kBAChB1sC,IACA,IACCvJ,EAAU0B,aACbo/D,EACFp+C,GAAUa,kBAAkBs9C,GAKhC,GACIC,IALyBp+C,GAAUa,kBACnC3yE,OAAOuS,SAASyG,OAKhBpjB,KAAK60D,OAAOyjC,KAAKS,0BACnB,CAEE/4F,KAAK+lE,OAAOT,QACR,sDAGA+0D,EAAgBpsH,QAAQ,MAAQ,G9DrT9C,SAAsBxN,GACxB,MAAM85H,EAAW95H,EAAIiP,MAAM,KAC3B6qH,EAASjrE,QACTllD,OAAOuS,SAASo2E,KAAOwnC,EAAStgI,OAAS,EAAIsgI,EAAS74F,KAAK,KAAO,EACtE,C8DmToB84F,CAAyBH,GAU7B,aAP+Br6H,KAAKy6H,eAChCzT,EACAhuD,EACA8gE,EACA5kB,EAIP,CAAM,IAAKl1G,KAAK60D,OAAOyjC,KAAKS,0BAIzB,OAHA/4F,KAAK+lE,OAAOT,QACR,mEAEStlE,KAAKy6H,eACdzT,EACAhuD,EACA8gE,EACA5kB,GAED,IACFte,MACD52F,KAAK60D,OAAO2iC,OAAOF,sBACrB,CAKEt3F,KAAKwsG,eAAemD,kBAChB5sC,GACAqY,GACA,GAEJ,MAAM0xC,EAAuC,CACzClK,MAAO1/C,GACPvjE,QAASK,KAAK60D,OAAO2iC,OAAO4C,0BAC5B1N,WAAW,GAOf,IAAIguC,GAAiC,EACrC,GAAKL,GAAuC,SAApBA,EAmBpBr6H,KAAK+lE,OAAOT,QAAQ,kCAAD9nC,OACmB68F,IAEtCK,QACU16H,KAAK+5F,iBAAiBxN,iBACxB8tC,EACAvN,OAzBwC,CAEhD,MAAM6N,a9D7TtB,MACMt9C,EADa,IAAInB,GAAU9xE,OAAOuS,SAASyG,MAChBq5D,mBACjC,MAAO,GAAPj/C,OAAU6/C,EAAcT,SAAQ,MAAAp/C,OAAK6/C,EAAcX,gBAAe,IACtE,C8D0TqCk+C,GAEjB56H,KAAKwsG,eAAemD,kBAChB5sC,GACA43D,GACA,GAEJ36H,KAAK+lE,OAAOb,QACR,8EAEJw1D,QACU16H,KAAK+5F,iBAAiBxN,iBACxBouC,EACA7N,EAEX,CAaD,IAAK4N,EACD,aAAa16H,KAAKy6H,eACdzT,EACAhuD,EACA8gE,EACA5kB,EAGX,CAED,OAAO,IACV,CAAC,MAAOrjG,GAKL,MAJIA,aAAaytD,KACZztD,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,IAExCA,CACT,EAQKmoH,mBAAAA,CACNa,GAEA76H,KAAK+lE,OAAOT,QAAQ,kCAEpB,IAAI8V,EAAiBy/C,EAChBz/C,IAKGA,EAHAp7E,KAAK60D,OAAOyjC,KAAKW,YAAYC,qBAC7Bl8B,EAEiB5yD,OAAOuS,SAASoD,OAEhB3V,OAAOuS,SAASo2E,MAGzC,IAAIhV,EAAWkpC,GAAiC7rC,GAEhD,GAAI2C,EAAU,CACV,IACImpC,GACInpC,EACA/9E,KAAK6kH,cACL1hD,GAAgBiE,SAEvB,CAAC,MAAOv1D,GAML,OALIA,aAAaytD,IACbt/D,KAAK+lE,OAAO/mE,MAAM,6CAADw+B,OACgC3rB,EAAE0tD,UAAS,MAAA/hC,OAAK3rB,EAAE2tD,eAGhE,CAAC,KAAM,GACjB,CAMD,OAJA+2B,GAAuBnsF,QACvBpK,KAAK+lE,OAAOT,QACR,2DAEG,CAACyY,EAAU3C,EACrB,CAED,MAAM0/C,EAAa96H,KAAKwsG,eAAeiD,kBACnC1sC,IACA,GAMJ,OAJA/iE,KAAKwsG,eAAeznB,WAChB/kF,KAAKwsG,eAAeyC,iBAAiBlsC,KAGrC+3D,IACA/8C,EAAWkpC,GAAiC6T,GACxC/8C,IACA/9E,KAAK+lE,OAAOT,QACR,iEAEG,CAACyY,EAAU+8C,IAInB,CAAC,KAAM,IAQR,oBAAML,CACZzT,EACAhuD,EACAk3C,EACAgF,GAGA,IADc8R,EAAahvF,MAEvB,MAAMm4D,GAAuB7C,IAGjC,GAAI05B,EAAarrC,QAAS,CACtB,MAAMmqC,QAA4B1kB,GAC9BphG,KAAKqlH,uBAAuB7rF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALsBshC,CAMhC,CACEqkB,iBAAkBzsD,EAAQ6f,UAC1BgtC,yBAA0B7sD,EAAQogC,kBAClCmsB,4BAA6BvsD,EAAQgjB,qBACrC1C,QAAStgB,EAAQsgB,UAErB,OAAO8nB,GACH0wB,GACAhnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAOHpoC,EACAguD,EACA9jD,GACAljE,KAAK60D,OACLixD,EACA9lH,KAAKwsG,eACLxsG,KAAKyxH,cACLzxH,KAAKX,aACLW,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8kH,qBAEZ,CAED,MAAM8M,QAAmBxwB,GACrBphG,KAAKwmH,qBAAqBhtF,KAAKx5B,MAC/B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALgBshC,CAMvB,CAAE8T,yBAAwBuQ,iBAAkBzsD,EAAQ6f,YACtD,OAAOuoB,GACHuwB,GACA7mC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAOHpoC,EACAguD,EACA9W,EACAhtC,GACAljE,KAAK60D,OACL+8D,EACA5xH,KAAKwsG,eACLxsG,KAAKyxH,cACLzxH,KAAKX,aACLW,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8kH,sBASb,yBAAMsS,CACFW,EACAgD,GAIA,GAFA/6H,KAAK+lE,OAAOT,QAAQ,8CAEhByyD,EAAY,CACZ/3H,KAAK+lE,OAAOV,QAAQ,qDAAD7nC,OACsCu6F,IAEzD,MAAMjL,EAAuC,CACzClK,MAAO1/C,GACPvjE,QAASK,KAAK60D,OAAO2iC,OAAO4C,0BAC5B1N,WAAW,GAGTmgC,EACFkO,GACA/6H,KAAK60D,OAAOyjC,KAAKu0B,mBAGrB,GAAkC,oBAAvBA,EAAmC,CAC1C7sH,KAAK+lE,OAAOT,QACR,6EAKJ,OAAiB,IAHAunD,EAAmBkL,IAIhC/3H,KAAK+lE,OAAOT,QACR,uGAEEtlE,KAAK+5F,iBAAiBtN,iBACxBsrC,EACAjL,SAIJ9sH,KAAK+lE,OAAOT,QACR,8FAIX,CASG,OAPAtlE,KAAK+lE,OAAOT,QACR,qFAEEtlE,KAAK+5F,iBAAiBtN,iBACxBsrC,EACAjL,EAIX,CAKG,MAHA9sH,KAAK+lE,OAAO71D,KACR,8DAEEigF,GACF/C,IAUZ,YAAM/rB,CAAOu/C,GACT5gH,KAAK+lE,OAAOT,QAAQ,yBACpB,MAAMghD,EAAqBtmH,KAAKqmH,wBAAwBzF,GAClD1L,EAAyBl1G,KAAKklH,iCAChChiD,IAGJ,IACIljE,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChBw5C,SAIE5gH,KAAK+kH,mBAAmBuB,EAAmBhtC,SAEjD,MAAMwzC,EAAuC,CACzClK,MAAO1/C,GACPvjE,QAASK,KAAK60D,OAAO2iC,OAAO4C,0BAC5B1N,WAAW,GAGTklC,QAAmBxwB,GACrBphG,KAAKwmH,qBAAqBhtF,KAAKx5B,MAC/B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALgBshC,CAMvB,CACE8T,yBACAuQ,iBAAkB7E,GAAiBA,EAAc/nC,UACjD0sC,4BACiB,OAAb3E,QAAa,IAAbA,OAAa,EAAbA,EAAe5kC,qBACnB1C,QAAUsnC,GAAiBA,EAActnC,cAAYniB,IAGzD,GAAIy6D,EAAW/4C,UAAUW,eAAiB3Q,GACtC,IACI+oD,EAAW/4C,UAAUyqB,kBACxB,CAAC,MAAA1L,GAAM,IAAAojC,EAC2CC,EAA/C,GAA8B,QAA9BD,EAAI1U,EAAmBhtC,eAAO,IAAA0hD,GAA1BA,EAA4BnzD,cAW5B,OAVK7nE,KAAKwsG,eAAe5nB,cACK,QADQq2C,EAClC3U,EAAmBhtC,eAAO,IAAA2hD,OAAA,EAA1BA,EAA4BpzD,oBAGhC7nE,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChBk/C,EAKX,CAIL,MAAMuR,EACFjG,EAAWjR,aAAa2F,GAQ5B,GANAtmH,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChBk/C,IAIA1F,GAC4C,oBAArCA,EAAciM,mBAuCrB,OAVK7sH,KAAKwsG,eAAeqE,4BACrB7wG,KAAKwsG,eAAeuD,0BAChB,EACAjtC,eAGF9iE,KAAK+5F,iBAAiBtN,iBACxBorC,EACA/K,GAjCJ,IAAiB,IAFAlM,EAAciM,mBAAmBgL,GAiB9C,OAdA73H,KAAK+lE,OAAOT,QACR,8DAGCtlE,KAAKwsG,eAAeqE,4BACrB7wG,KAAKwsG,eAAeuD,0BAChB,EACAjtC,eAGF9iE,KAAK+5F,iBAAiBtN,iBACxBorC,EACA/K,GAKJ9sH,KAAKwsG,eAAeuD,0BAAyB,GAC7C/vG,KAAK+lE,OAAOT,QACR,gEAiBf,CAAC,MAAOzzD,GAeL,MAdIA,aAAaytD,KACZztD,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,IAE9C7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB,KACAv1D,GAEJ7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,UAEdv1D,CACT,CAED7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,UAQdwyD,oBAAAA,CAAqBsB,GAC3B,MAAMvB,EAAoBuB,GAAoB9wH,OAAOuS,SAASyG,KAC9D,OAAO84D,GAAUwB,eACbi8C,EACA9iC,OCxwBL3tE,eAAeiyG,GAClBpD,EACAvyC,EACAzf,EACAjG,EACAq6B,GAOA,GALA3U,EAAkBwG,oBACdlB,GACAhrB,IAGCi4D,EAGD,MADAhyD,EAAO71D,KAAK,yBACNigF,GAAuB/C,IAEjC,OAAI+M,EACOiH,GACHg6B,GACAtwC,GACA/kB,EACAyf,EACA1lB,EALGshC,CAML22B,EAAY59B,EAAmB3U,EAAmB1lB,GAEjDkhC,GACHq6B,GACAvwC,GACA/kB,EACAyf,EACA1lB,EALGkhC,CAML+2B,EACN,CAEO7uG,eAAeoyG,GAClBzmE,EACAgkB,EACA7f,EACA+M,EACAyf,GAEA,MAAM31E,EAAQ0rH,KACd,IAAK1rH,EAAM2rH,gBACP,KAAM,sCAWV,aATmBtK,GACfrhH,EAAM2rH,gBACN3mE,EACAgkB,EACA7f,EACA+M,EACAyf,IAECgyC,SACE3nH,CACX,CAOOqZ,eAAeuyG,GAClBC,EACA/7H,EACA66F,EACAhV,EACAzf,EACAjG,EACAkzC,GAOA,OALAxtB,EAAkBwG,oBACdlB,GACAhrB,GAGG,IAAI7nB,SAAgB,CAAC5nB,EAAS6nB,KAC7Bv4C,EAAUk4F,IACV9xB,EAAOb,QAAQ,qEAAD1nC,OAC2D79B,EAAO,0BAAA69B,OAAyBq6D,GAAyB,sCAQtI,MAAM67B,EAAYtpH,OAAO/N,YAAW,KAChC+N,OAAO+tH,cAAcH,GACrB9/E,EACIi4C,GACIpC,OAGTpuF,GAEGq4H,EAAa5tH,OAAO6tH,aAAY,KAClC,IAAI70G,EAAe,GACnB,MAAMD,EAAgBu4G,EAAOv4G,cAC7B,IAMIC,EAAOD,EAAgBA,EAAcxG,SAASyG,KAAO,EACxD,CAAC,MAAOvR,GAAI,CAEb,IAAKuR,GAAiB,gBAATA,EACT,OAGJ,IAAIg4D,EAAiB,GACjBj4D,IAEIi4D,EADA43B,IAAiBh2C,EACA75C,EAAcxG,SAASoD,OAEvBoD,EAAcxG,SAASo2E,MAGhD3oF,OAAO7N,aAAam3H,GACpBtpH,OAAO+tH,cAAcH,GACrB3nG,EAAQ+qD,KACTof,MACJ/xB,SAAQ,KACPu4B,GACI26B,GACA7wC,GACA/kB,EACAyf,EACA1lB,EALJkhC,CAME06B,KAEV,CAQA,SAASN,GACL/C,EACAl+B,EACA3U,EACA1lB,GAYA,OAVA0lB,EAAkBwG,oBACdlB,GACAhrB,GAQG,IAAI7nB,SAAQ,CAAC5nB,EAAS6nB,KACzB,MAAM0jF,EAAcL,KAEpBnxH,OAAO/N,YAAW,KACTu/H,GAKLA,EAAYzyG,IAAMkvG,EAElBhoG,EAAQurG,IANJ1jF,EAAO,2BAOZiiD,KAEX,CAQA,SAASkhC,GAAchD,GACnB,MAAMuD,EAAcL,KAIpB,OAFAK,EAAYzyG,IAAMkvG,EAEXuD,CACX,CAOA,SAASL,KACL,MAAMM,EAAYnqH,SAASqE,cAAc,UAazC,OAXA8lH,EAAUC,UAAY,mBACtBD,EAAUjoH,MAAMmoH,WAAa,SAC7BF,EAAUjoH,MAAMooH,SAAW,WAC3BH,EAAUjoH,MAAMqJ,MAAQ4+G,EAAUjoH,MAAMsJ,OAAS,IACjD2+G,EAAUjoH,MAAMqoH,OAAS,IACzBJ,EAAUruH,aACN,UACA,+CAEJkE,SAASE,KAAK48B,YAAYqtF,GAEnBA,CACX,CAOA,SAASF,GAAmBD,GACpBhqH,SAASE,OAAS8pH,EAAOnwH,YACzBmG,SAASE,KAAK28B,YAAYmtF,EAElC,CC1MM,MAAOQ,WAA2B9V,GAIpCx1G,WAAAA,CACIikD,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACA6oB,EACAp9B,EACA8lC,EACAxG,EACAhlD,GAEAJ,MACI7K,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAs/B,EACAhlD,GAEJ9/D,KAAK4iH,MAAQA,EACb5iH,KAAKyxH,cAAgBnG,EAOzB,kBAAM/K,CACFvnD,GAEAh5D,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAIP9G,EAAQ2nB,WACR3nB,EAAQ+nB,KACP/nB,EAAQsgB,SAAYtgB,EAAQsgB,QAAQvR,UAEtC/nE,KAAK+lE,OAAOb,QACR,uGAKR,MAAMi3D,EAAY/zD,GAAA,GAAQpP,GACtBmjE,EAAaxc,OAETwc,EAAaxc,SAAWtjD,EAAYI,MACpC0/D,EAAaxc,SAAWtjD,EAAYM,aAEpC38D,KAAK+lE,OAAOb,QAAQ,gDAAD1nC,OACiC2+F,EAAaxc,OAAM,UAAAniF,OAAS6+B,EAAYI,OAE5F0/D,EAAaxc,OAAStjD,EAAYI,MAGtC0/D,EAAaxc,OAAStjD,EAAYI,KAItC,MAAMyuD,QAAqD9pB,GACvDphG,KAAK2mH,+BAA+BntF,KAAKx5B,MACzC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cAL+CshC,CAMzD+6B,EAAch5D,GAAgBi5D,QAShC,OARAlR,EAAc6F,eAAiB0E,GAC3Bz1H,KAAK60D,OACL70D,KAAK+lE,OACL/lE,KAAK8kH,qBACLoG,EAAczkC,sBAElBxwB,GAAwBi1D,EAAcryC,WAElC74E,KAAK60D,OAAOyjC,KAAK9e,eAAiB3Q,GAC3B7oE,KAAK82H,eAAe5L,GAEpBlrH,KAAK+2H,gBAAgB7L,GASpC,qBAAM6L,CACF/9D,GAEA,IAAI44D,EACJ,MAAM1c,EAAyBl1G,KAAKklH,iCAChCllH,KAAK4iH,OAGT,IAgBI,OAdAgP,QAAmBxwB,GACfphG,KAAKwmH,qBAAqBhtF,KAAKx5B,MAC/B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALOshC,CAMjB,CACE8T,yBACAuQ,iBAAkBzsD,EAAQ6f,UAC1BgtC,yBAA0B7sD,EAAQogC,kBAClCmsB,4BAA6BvsD,EAAQgjB,qBACrC1C,QAAStgB,EAAQsgB,gBAGR8nB,GACTphG,KAAKq8H,kBAAkB7iG,KAAKx5B,MAC5B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALCshC,CAMXwwB,EAAY54D,EACjB,CAAC,MAAOnnD,GAML,GALIA,aAAaytD,KACZztD,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,KAIzC+/G,KACC//G,aAAaytD,KACfztD,EAAE0tD,YAAckD,GAEhB,MAAM5wD,EAUV,OAPA7R,KAAKwlF,kBAAkBQ,UACnB,CACIs2C,WAAYzqH,EAAE0tD,WAElBv/D,KAAK8/D,qBAGIshC,GACTphG,KAAKq8H,kBAAkB7iG,KAAKx5B,MAC5B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALIshC,CAMXwwB,EAAY54D,EACjB,EAOL,oBAAM89D,CACF99D,GAEA,MAAM8G,EAAgB9G,EAAQ8G,cACxBgmD,QAA4B1kB,GAC9BphG,KAAKqlH,uBAAuB7rF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EAL8BshC,CAMhC,CACEqkB,iBAAkBzsD,EAAQ6f,UAC1BgtC,yBAA0B7sD,EAAQogC,kBAClCmsB,4BAA6BvsD,EAAQgjB,qBACrC1C,QAAStgB,EAAQsgB,UAGfqb,QAAeyM,GACjBjN,GACArJ,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALiBshC,GAOf8pB,EAAa9iD,GAAAA,GAAA,GACZpP,GAAO,IACV27B,OAAQA,IAEN4nC,QAAkBn7B,GACpBk6B,GACAxwC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALoBshC,CAOpBphG,KAAK60D,OACLixD,EACAoF,EACAlrH,KAAK+lE,OACL/lE,KAAKwlF,mBAGHwtB,EAAehzG,KAAK60D,OAAOyjC,KAAKW,YAAYC,mBAE5C9d,QAAuBgmB,GACzBq6B,GACA3wC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALyBshC,CAOzBm7B,EACAv8H,KAAK60D,OAAO2iC,OAAO0C,kBACnBl6F,KAAK60D,OAAO2iC,OAAOgD,yBACnBx6F,KAAKwlF,kBACLxlF,KAAK+lE,OACLjG,EACAkzC,GAGEgU,EAAehmB,GACjB8lB,GACAh8B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALiBkhC,CAMnB5lB,EAAgB43B,EAAchzG,KAAK+lE,QAErC,OAAOq7B,GACH0wB,GACAhnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALGshC,CAOH8pB,EACAlE,EACAhnH,KAAK4iH,MACL5iH,KAAK60D,OACLixD,EACA9lH,KAAKwsG,eACLxsG,KAAKyxH,cACLzxH,KAAKX,aACLW,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8kH,sBAObzjD,MAAAA,GAEI,OAAOppB,QAAQC,OACXi4C,GACI/B,KAWF,uBAAMiuC,CACZzK,EACA54D,GAEA,MAAM8G,EAAgB9G,EAAQ8G,cAC9B9/D,KAAKwlF,kBAAkBwG,oBACnBlB,GACAhrB,GAEJ,MAAM+1D,QAAkBz0B,GACpB4wB,GACAlnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALoBshC,CAMtBphG,KAAKwlF,kBAAmBxlF,KAAK+lE,OAAQjG,GAEjCorD,EAAa9iD,GAAAA,GAAA,GACZpP,GAAO,IACV+mD,cAAe8V,EAAU3D,YAGvBgF,QAAoB91B,GACtB6vB,GACAnmC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALsBshC,CAOtBphG,KAAK60D,OACL+8D,EAAW/4C,UACXqyC,EACAlrH,KAAK+lE,OACL/lE,KAAKwlF,mBAIH+2C,QAAkBn7B,GACpB+5B,GACArwC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALoBshC,CAOpB81B,EACAl3H,KAAKwlF,kBACLxlF,KAAK+lE,OACLjG,EACA9/D,KAAK60D,OAAO2iC,OAAO2C,mBAGjB6Y,EAAehzG,KAAK60D,OAAOyjC,KAAKW,YAAYC,mBAE5C9d,QAAuBgmB,GACzBq6B,GACA3wC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALyBshC,CAOzBm7B,EACAv8H,KAAK60D,OAAO2iC,OAAO0C,kBACnBl6F,KAAK60D,OAAO2iC,OAAOgD,yBACnBx6F,KAAKwlF,kBACLxlF,KAAK+lE,OACLjG,EACAkzC,GAEEgU,EAAehmB,GACjB8lB,GACAh8B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALiBkhC,CAMnB5lB,EAAgB43B,EAAchzG,KAAK+lE,QAErC,OAAOq7B,GACHuwB,GACA7mC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALGshC,CAOHpoC,EACAguD,EACA6O,EAAUrlB,SACVxwG,KAAK4iH,MACL5iH,KAAK60D,OACL+8D,EACA5xH,KAAKwsG,eACLxsG,KAAKyxH,cACLzxH,KAAKX,aACLW,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8kH,uBChWX,MAAO0X,WAA2B3lB,GACpCjmG,WAAAA,CACIkmG,EACAtxB,GAEA9lB,MAAMo3C,EAAetxB,GAElB,kBAAM+6B,CACTvnD,GAAkC,IAAA4lC,EAAA4hB,EAEZ,QAAtB5hB,EAAA5+F,KAAKwlF,yBAAiB,IAAAoZ,GAAtBA,EAAwB5S,oBACpBlB,GACA9xB,EAAQ8G,eAGZ,MAAMi8C,EAAe1uC,KACf0Q,QAAiBqjB,GACnBphG,KAAKygH,oBAAoBjnF,KAAKx5B,MAC9B8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALWshC,CAMrBpoC,EAASh5D,KAAK64E,WAGV2/B,EAA4B,QAAnBgI,EAAGziC,EAAS0S,eAAO,IAAA+vB,OAAA,EAAhBA,EAAmBvkD,GAC/BykD,EAAkB,IAAIxF,GACxBl7G,KAAK60D,OAAO+1B,YAAYpc,SACxBxuE,KAAKqiG,aACLriG,KAAK83G,YACL93G,KAAK+lE,OACL/lE,KAAK60D,OAAO+iD,kBACZ53G,KAAK60D,OAAO8iD,mBAIhB,OAFA+I,EAAgBtF,sBAAsBr9B,EAASnsE,MAExCwvF,GACHsf,EAAgB7E,0BAA0BriF,KAAKknF,GAC/C51B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAOHrjB,EAASnsE,KACT5R,KAAK64E,UACLkjC,EACA/iD,OACA7B,OACAA,GACA,EACA6B,EAAQyjE,WACRjkB,GAQD,gCAAMkkB,CACT1jE,GAAgC,IAAAmnC,EAGhC,IAAKnnC,EACD,MAAM+Z,GACFhB,IAUR,GANsB,QAAtBouB,EAAAngG,KAAKwlF,yBAAiB,IAAA2a,GAAtBA,EAAwBnU,oBACpBlB,GACA9xB,EAAQ8G,gBAIP9G,EAAQsgB,QACT,MAAMzN,GACFtB,IAUR,GALevqE,KAAKqiG,aAAava,kBAC7B9uB,EAAQsgB,QAAQhL,aAKhB,IACI,aAAa8yB,GACTphG,KAAK28H,mCAAmCnjG,KAAKx5B,MAC7C8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALCshC,CAMXpoC,GAAS,EACd,CAAC,MAAOnnD,GACL,MAAM+qH,EACF/qH,aAAa42F,IACb52F,EAAE0tD,YACE2oC,GACF20B,EACFhrH,aAAa+jG,IACb/jG,EAAE0tD,YAAcT,IAChBjtD,EAAE+tD,WAAad,GAGnB,GAAI89D,GAAqBC,EACrB,OAAOz7B,GACHphG,KAAK28H,mCAAmCnjG,KAAKx5B,MAC7C8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAMLpoC,GAAS,GAGX,MAAMnnD,CAEb,CAGL,OAAOuvF,GACHphG,KAAK28H,mCAAmCnjG,KAAKx5B,MAC7C8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAMLpoC,GAAS,GAOP,wCAAM2jE,CACV3jE,EACAklD,GAAa,IAAAhc,EAES,QAAtBA,EAAAliG,KAAKwlF,yBAAiB,IAAA0c,GAAtBA,EAAwBlW,oBACpBlB,GACA9xB,EAAQ8G,eAIZ,MAAMiQ,EAAeixB,GACjBhhG,KAAKqiG,aAAapb,gBAAgBztD,KAAKx5B,KAAKqiG,cAC5CvX,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALSkhC,CAOjBhoC,EAAQsgB,QACR4kC,OACA/mD,EACAn3D,KAAKwlF,kBACLxsB,EAAQ8G,eAGZ,IAAKiQ,EACD,MAAMm5B,GACFhB,IAWN,IAAAtC,EAPF,GACI71B,EAAanC,WACbD,GACIoC,EAAanC,UACb5U,EAAQ8jE,qCA/KgC,KAuL5C,MAJsB,QAAtBl3B,EAAA5lG,KAAKwlF,yBAAiB,IAAAogB,GAAtBA,EAAwB5f,UACpB,CAAE+2C,cAAez2D,OAAOyJ,EAAanC,YACrC5U,EAAQ8G,eAENopC,GACFd,IAKR,MAAM40B,EAAmB50D,GAAAA,GAAA,GAClBpP,GAAO,IACV+W,aAAcA,EAAapB,OAC3B8X,qBACIztB,EAAQytB,sBAAwBhoB,EAAqBC,OACzDuiD,cAAe,CACXn/B,WAAY9oB,EAAQsgB,QAAQzR,cAC5BrkE,KAAM2uG,MAId,IACI,aAAa/Q,GACTphG,KAAKugH,aAAa/mF,KAAKx5B,MACvB8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALCshC,CAMX47B,EACL,CAAC,MAAOnrH,GAC0C,IAAAm0F,EAA/C,GAAIn0F,aAAa42F,GAMb,GALsB,QAAtBzC,EAAAhmG,KAAKwlF,yBAAiB,IAAAwgB,GAAtBA,EAAwBhgB,UACpB,CAAE+2C,cAAez2D,OAAOyJ,EAAanC,YACrC5U,EAAQ8G,eAGRjuD,EAAE+tD,WAAayoC,GAA4C,CAE3DroG,KAAK+lE,OAAOT,QACR,wEAEJ,MAAM23D,EACFnvD,GAAsBiC,GAC1B/vE,KAAKqiG,aAAajd,mBAAmB63C,EACxC,CAGL,MAAMprH,CACT,EAQG,yBAAM4uG,CACVznD,EACA6f,GAAoB,IAAAwtB,EAEE,QAAtBA,EAAArmG,KAAKwlF,yBAAiB,IAAA6gB,GAAtBA,EAAwBra,oBACpBlB,GACA9xB,EAAQ8G,eAGZ,MAAMghD,EAAwB9gH,KAAK+4G,2BAA2B//C,GACxD4qC,EAAW1nB,GAAUW,kBACvBhE,EAAUuqB,cACV0d,GAGEC,QAAoB3f,GACtBphG,KAAKghH,uBAAuBxnF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALcshC,CAMxBpoC,GACIy3B,EAAkCzwF,KAAK+3G,0BACzC/+C,EAAQioD,eAGNlL,EAAa5M,GACfnpG,KAAK60D,OAAO+1B,YAAYpc,SACxBxV,GAGJ,OAAOooC,GACHphG,KAAKi4G,2BAA2Bz+E,KAAKx5B,MACrC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAOHwC,EACAmd,EACAtwB,EACAslB,EACA/8C,EAAQ8G,cACRgrB,IAQA,4BAAMk2B,CACVhoD,GAAkC,IAAA4tC,EAAAwC,EAAAgX,EAEZ,QAAtBxZ,EAAA5mG,KAAKwlF,yBAAiB,IAAAohB,GAAtBA,EAAwB5a,oBACpBlB,GACA9xB,EAAQ8G,eAGZ,MAAMgc,EAAa,IAAI9vE,IA2DvB,GAzDAonG,GACIt3B,EACA9iB,EAAQuwC,mBACuB,QADPH,EACpBpwC,EAAQwwC,2BAAmB,IAAAJ,OAAA,EAA3BA,EAA8BgJ,MAC9BpyG,KAAK60D,OAAO+1B,YAAYpc,UAG5BxV,EAAQ6/B,aACRwa,GACIv3B,EACA9iB,EAAQ6/B,aAIhBoa,GACIn3B,EACA9iB,EAAQsK,QACR,EACqD,QADjD88C,EACJpgH,KAAK60D,OAAO+1B,YAAY/R,UAAUp5E,QAAQw5F,mBAAW,IAAAmnB,OAAA,EAArDA,EAAuDjnB,eAG3Dob,GACIz4B,EACA5e,GAGJu3C,GAAsC34B,GAEtCg4B,GACIh4B,EACA97E,KAAK60D,OAAOk/C,aAEhBC,GACIl4B,EACA97E,KAAK60D,OAAO6jC,UAAUlO,aAE1B6qB,GAAsCv5B,GAElC97E,KAAKk1G,yBAA2BvqB,GAAmB3qF,KAAK60D,SACxDogD,GACIn5B,EACA97E,KAAKk1G,wBpC9BL,SACZp5B,EACA/L,GAEA+L,EAAWltE,ID7Vc,gBC6VwBmhE,EACrD,CoC6BQmtD,CACIphD,EACA9iB,EAAQ+W,cAGR/vE,KAAK60D,OAAO6iD,kBAAkBxtB,cAC9BiqB,GACIr4B,EACA97E,KAAK60D,OAAO6iD,kBAAkBxtB,cAIlClqF,KAAK60D,OAAO6iD,kBAAkBvtB,gBAAiB,CAC/C,MAAMA,EACFnqF,KAAK60D,OAAO6iD,kBAAkBvtB,gBAElCiqB,GACIt4B,QACMokC,GACF/1B,EAAgBi3B,UAChBphH,KAAK60D,OAAO+1B,YAAYpc,SACxBxV,EAAQgnC,qBAGhBqU,GACIv4B,EACAqO,EAAgBk3B,cAEvB,CAED,GAAIroD,EAAQytB,uBAAyBhoB,EAAqBE,IAAK,CAC3D,MAAMigD,EAAoB,IAAI7E,GAC1B/5G,KAAK83G,YACL93G,KAAKwlF,mBAGT,IAAI87B,EACJ,GAAKtoD,EAAQ2lD,OAWT2C,EAAathH,KAAK83G,YAAY3rC,UAAUnT,EAAQ2lD,YAX/B,CASjB2C,SARkClgB,GAC9Bwd,EAAkB5E,YAAYxgF,KAAKolF,GACnC9zB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALsBshC,CAMhCpoC,EAASh5D,KAAK+lE,SAEiBo0C,YACpC,CAKDtF,GAAoC/4B,EAAYwlC,EACnD,MAAM,GAAItoD,EAAQytB,uBAAyBhoB,EAAqBG,IAAK,CAClE,IAAI5F,EAAQuoD,OAGR,MAAMxuC,GACFT,IAHJyiC,GAAkCj5B,EAAY9iB,EAAQuoD,OAM7D,CAcD,KAXKvuC,GAAYC,WAAWja,EAAQ+uB,SAC/B/nF,KAAK60D,OAAO+1B,YAAYoO,oBACrBh5F,KAAK60D,OAAO+1B,YAAYoO,mBAAmB/+F,OAAS,IAExDy5G,GACI53B,EACA9iB,EAAQ+uB,OACR/nF,KAAK60D,OAAO+1B,YAAYoO,oBAK5Bh5F,KAAK60D,OAAOmiD,cAAc1tB,sBAC1BtwB,EAAQioD,cAER,OAAQjoD,EAAQioD,cAAcz9G,MAC1B,KAAK2uG,GACD,IAIIqB,GACI13B,EAJexF,GACftd,EAAQioD,cAAcn/B,YAM7B,CAAC,MAAOjwE,GACL7R,KAAK+lE,OAAOT,QACR,mDACIzzD,EAEX,CACD,MACJ,KAAKsgG,GACDoB,GACIz3B,EACA9iB,EAAQioD,cAAcn/B,YA0BtC,OApBI9oB,EAAQuwC,kBACR+L,GACIx5B,EACA97E,KAAK60D,OAAO+1B,YAAYpc,SACxBxuE,KAAK60D,OAAO+1B,YAAYiO,aAI5B7/B,EAAQwwC,qBACRmL,GACI74B,EACA9iB,EAAQwwC,qBAIhBqJ,GACI/2B,EACA9iB,EAAQ8G,cACR9/D,KAAKwlF,mBAEF3J,GAA0BC,IC/enC,MAAOqhD,WAA4B/W,GAKrC,kBAAM7F,CACFvnD,GAEAh5D,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAGZ,MAAMqmD,QAAoB/kB,GACtB4kB,GACAl7B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALcshC,CAMxBpoC,EAASh5D,KAAK60D,OAAQ70D,KAAKwlF,kBAAmBxlF,KAAK+lE,QAC/CmlD,EAAa9iD,GAAAA,GAAA,GACZpP,GACAmtD,GAGHntD,EAAQ6/B,cAERqyB,EAAcryB,YAAc74F,KAAKglH,eAC7BhsD,EAAQ6/B,cAIhB,MAAMqc,EAAyBl1G,KAAKklH,iCAChChiD,IAGEk6D,QAA2Bp9H,KAAKq9H,yBAAyB,CAC3DnoB,yBACAooB,aAAcpS,EAAcryC,UAC5BugB,kBAAmB8xB,EAAc9xB,kBACjC9f,QAAS4xC,EAAc5xC,UAG3B,OAAO8nB,GACHg8B,EAAmBV,2BAA2BljG,KAC1C4jG,GAEJtyC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cAPLshC,CAQL8pB,GAAej8G,OAAO4C,IAGpB,MAFCA,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,GACpCA,KAOdwvD,MAAAA,GAEI,OAAOppB,QAAQC,OACXi4C,GACI/B,KAeF,8BAAMivC,CAAyB7pD,GAQrC,MAAMizC,QAAqBrlB,GACvBphG,KAAK0mH,uBAAuBltF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAK8/D,cALkBshC,CAMzB,CACE8T,uBAAwB1hC,EAAO0hC,uBAC/BuQ,iBAAkBjyC,EAAO8pD,aACzBzX,yBAA0BryC,EAAO4lB,kBACjCmsB,4BAA6B/xC,EAAOwI,qBACpC1C,QAAS9F,EAAO8F,UAEpB,OAAO,IAAIkjD,GAAmB/V,EAAczmH,KAAKwlF,0BClF5C+3C,GAYT3sH,WAAAA,CACIkmG,EACArM,EACA1kC,EACA0U,GAEAz6E,KAAKq4F,qBAAyC,qBAAXjuF,OACnCpK,KAAK60D,OAASiiD,EACd92G,KAAKyqG,QAAUA,EACfzqG,KAAK+lE,OAASA,EACd/lE,KAAKy6E,UAAYA,EAYrB,wBAAM+iD,CACFxkE,EACA+kB,EACAt+E,GAEA,IAAKO,KAAKq4F,qBACN,MAAMlI,GACFxB,IAIR,MAAM7uB,EACF9G,EAAQ8G,eAAiBiM,KAEvBiL,EAAgB+G,EAASs+B,SACzB6Q,GAA6BnvC,EAASs+B,SAAUrwC,SAChD7U,EAEAmrC,EAAqC,CACvC9oB,aAAcx5E,KAAK60D,OAAOyjC,KAAK9e,aAC/B8O,iBAAkBtoF,KAAK60D,OAAOyjC,KAAKhQ,iBACnChK,uBAAwBt+E,KAAK60D,OAAOyjC,KAAKha,uBACzC/N,kBAAmBvwE,KAAK60D,OAAOyjC,KAAK/nB,kBACpC8oB,2BACIr5F,KAAK60D,OAAOyjC,KAAKe,4BAEnBxgB,EAAY7f,EAAQ6f,UACpB,IAAIupB,GACAA,GAAU8E,kBACNluC,EAAQ6f,UACR7f,EAAQogC,mBAEZp5F,KAAK60D,OAAO2iC,OAAOsC,cACnB95F,KAAKyqG,QACLnI,EACAtiG,KAAK+lE,OACL/M,EAAQ8G,eAAiBiM,WAE7B5U,EAEAsmE,QAA0Cz9H,KAAK09H,YACjD1kE,EACAv5D,EAAQ85E,YAAcwE,EAASw+B,aAAe,GAC9Cz8C,EACAkX,EACA6B,GAGEtK,QAAgBvuE,KAAK29H,YACvB5/C,EACA0/C,EAAmB51D,cACnB41D,EAAmBnvD,YACnBmvD,EAAmB7uD,MACnB9O,GAGEgP,QAAoB9uE,KAAK49H,gBAC3B5kE,EACA+kB,EACA0/C,EAAmB51D,cACnB41D,EAAmBnvD,YACnBmvD,EAAmB7uD,MACnBnvE,EACAqgE,GAGEiQ,QAAqB/vE,KAAK69H,iBAC5B9/C,EACA0/C,EAAmB51D,cACnB41D,EAAmBnvD,YACnBxO,GAGJ,OAAO9/D,KAAK48G,6BACR5jD,EACA,CACIsgB,QAASmkD,EACTlvD,UACAO,cACAiB,gBAEJiH,EACA6B,GAaA,iBAAM6kD,CACV1kE,EACAugB,EACAzZ,EACAkX,EACA6B,GAIA,GAFA74E,KAAK+lE,OAAOT,QAAQ,gCAEhBtM,EAAQsgB,QAAS,CACjB,MAAMsG,EAAgB3H,GAAcgC,sBAChCjhB,EAAQsgB,SAGZ,aADMt5E,KAAKyqG,QAAQrpB,WAAWxB,EAAe9f,GACtC8f,CACV,CAAM,IAAK/G,IAAeU,IAAevC,EAItC,MAHAh3E,KAAK+lE,OAAO/mE,MACR,mIAEEmxF,GACFpB,IAIR,MAAMlnB,EAAgBoQ,GAAcqC,sBAChCf,EACAV,EAAUP,cACVt4E,KAAK+lE,OACL/lE,KAAKy6E,UACLzD,GAGE8lC,EAA8B,OAAb9lC,QAAa,IAAbA,OAAa,EAAbA,EAAeG,IAEhC6lC,EAAgBC,GAClBj9G,KAAKyqG,QACL5xB,EACAhR,EACAmE,GACAgL,EACAuC,EACAV,EAAUmqB,gBACV8Z,OACA3lD,OACAA,EACAn3D,KAAK+lE,QAIT,aADM/lE,KAAKyqG,QAAQrpB,WAAW47B,EAAel9C,GACtCk9C,EAWH,iBAAM2gB,CACV5/C,EACAlW,EACAyG,EACAG,EACA3O,GAEA,IAAKie,EAASs+B,SAEV,OADAr8G,KAAK+lE,OAAOT,QAAQ,8CACb,KAGXtlE,KAAK+lE,OAAOT,QAAQ,iCACpB,MAAM4rC,EAAgBlD,GAClBnmC,EACAyG,EACAyP,EAASs+B,SACTr8G,KAAK60D,OAAOyjC,KAAK9pB,SACjBC,GAIJ,aADMzuE,KAAKyqG,QAAQppB,qBAAqB6vB,EAAepxC,GAChDoxC,EAYH,qBAAM0sB,CACV5kE,EACA+kB,EACAlW,EACAyG,EACAG,EACAhvE,EACAqgE,GAEA,IAAKie,EAASo/B,aAIV,OAHAn9G,KAAK+lE,OAAOT,QACR,kDAEG,KACJ,IAAKyY,EAASu/B,WAIjB,OAHAt9G,KAAK+lE,OAAO/mE,MACR,mFAEG,KACJ,IACF++E,EAAS1oB,SACR2D,EAAQsK,SAAWtK,EAAQsK,OAAOrpE,QAKpC,OAHA+F,KAAK+lE,OAAO/mE,MACR,gGAEG,KAGXgB,KAAK+lE,OAAOT,QAAQ,qCAEpB,MAAMhC,EAASya,EAAS1oB,MAClB8e,GAASI,WAAWwJ,EAAS1oB,OAC7B,IAAI8e,GAASnb,EAAQsK,QACrBsK,EACFnuE,EAAQmuE,WAAamQ,EAASu/B,WAAalM,KAEzC1hC,EACFjwE,EAAQiwE,oBACPqO,EAASy/B,gBAAkBz/B,EAASu/B,YACjClM,KAEF0sB,EAAoB9vB,GACtBnmC,EACAyG,EACAyP,EAASo/B,aACTn9G,KAAK60D,OAAOyjC,KAAK9pB,SACjBC,EACAnL,EAAO4S,cACPtI,EACA8B,EACA1D,IAOJ,aAJMhsE,KAAKyqG,QAAQloB,yBACfu7C,EACAh+D,GAEGg+D,EAWH,sBAAMD,CACV9/C,EACAlW,EACAyG,EACAxO,GAEA,IAAKie,EAASu6B,cAIV,OAHAt4G,KAAK+lE,OAAOT,QACR,mDAEG,KAGXtlE,KAAK+lE,OAAOT,QAAQ,sCACpB,MAAMy4D,EAAqB/vB,GACvBnmC,EACAyG,EACAyP,EAASu6B,cACTt4G,KAAK60D,OAAOyjC,KAAK9pB,SACjBuP,EAASmgC,UACT/mD,EACA4mB,EAASkgC,0BAOb,aAJMj+G,KAAKyqG,QAAQlpB,0BACfw8C,EACAj+D,GAEGi+D,EAWHnhB,4BAAAA,CACJ5jD,EACAkoB,EACAlK,EACA6B,GAAqB,IAAAylC,EAAA0f,EAAAxf,EAErB,IAGIzvC,EAHAD,EAAsB,GACtBsuC,EAAgC,GAChCxvC,EAAyB,KAGd,OAAXsT,QAAW,IAAXA,GAAAA,EAAapS,cACbA,EAAcoS,EAAYpS,YAAYH,OACtCyuC,EAAiBjpC,GAASI,WACtB2M,EAAYpS,YAAYh6D,QAC1BqgE,UAEFvH,EAAYwjC,GACRlwB,EAAYpS,YAAYlB,WAE5BmB,EAAeqiC,GACXlwB,EAAYpS,YAAYY,oBAIhC,MAAMkQ,EAAgBsB,EAAY5H,QAElC,MAAO,CACHT,UAAWA,EAAYA,EAAUuP,mBAAqB,GACtD02B,SAAU59B,EAAY5H,QAAQxR,eAC9B2G,SAAUyS,EAAY5H,QAAQ1K,MAC9BtL,OAAQ85C,EACR9jC,QAASsG,EAAcxH,iBACvB7J,SAA4B,QAAnB+vC,EAAAp9B,EAAY3S,eAAO,IAAA+vC,OAAA,EAAnBA,EAAqB3vC,SAAU,GACxCqI,cAAeA,GAAiB,CAAC,EACjClI,YAAaA,EACbiwC,WAAW,EACXnxC,UAAWA,EACX9N,cAAe9G,EAAQ8G,eAAiB,GACxC04C,UAAW,GACXzpC,aAAcA,EACdiB,UAAkC,QAAxBguD,EAAA98C,EAAYnR,oBAAY,IAAAiuD,OAAA,EAAxBA,EAA0BhuD,WAAY,GAChDf,WAAsB,OAAXiS,QAAW,IAAXA,GAAwB,QAAbs9B,EAAXt9B,EAAapS,mBAAW,IAAA0vC,OAAA,EAAxBA,EAA0BvvC,YAAa,GAClDj3C,MAAOghC,EAAQhhC,OAAS,GACxB+hD,mBAAoB6F,EAAc7F,oBAAsB,GACxDC,YAAa4F,EAAc5F,aAAe,GAC1CilC,kBAAkB,IC3ZxB,MAAOgf,WAAyC9d,GAClDvvG,WAAAA,CAAYikD,GACR6K,MAAM7K,GACN70D,KAAKqgH,oBAAqB,GCkB5B,MAAO6d,WAA6B9X,GAGtCx1G,WAAAA,CACIikD,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACA6oB,EACAp9B,EACAs/B,EACAhlD,GAEAJ,MACI7K,EACA+vD,EACAC,EACA9+C,EACA1mE,EACA06F,EACAvU,EACAs/B,EACAhlD,GAEJ9/D,KAAK4iH,MAAQA,EAOjB,kBAAMrC,CACFvnD,GAGA,IAAKA,EAAQx4D,KACT,MAAM2vF,GACFlB,IAKR,MAAMi8B,QAAqD9pB,GACvDphG,KAAK2mH,+BAA+BntF,KAAKx5B,MACzC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cAL+CshC,CAMzDpoC,EAASmK,GAAgBi5D,QAErBlnB,EAAyBl1G,KAAKklH,iCAChCllH,KAAK4iH,OAGT,IAEI,MAAM3S,EAAe7nC,GAAAA,GAAA,GACd8iD,GAAa,IAChB1qH,KAAMw4D,EAAQx4D,OAIZimH,QAAqBrlB,GACvBphG,KAAK0mH,uBAAuBltF,KAAKx5B,MACjC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALeshC,CAMzB,CACE8T,yBACAuQ,iBAAkByF,EAAcryC,UAChCgtC,yBAA0BqF,EAAc9xB,kBACxCmsB,4BAA6B2F,EAAclvC,qBAC3C1C,QAAS4xC,EAAc5xC,UAErBs4C,EACF,IAAIqM,GAAiCxX,GACzCzmH,KAAK+lE,OAAOT,QAAQ,4BAGpB,MAAMusD,EAAqB,IAAIxI,GAC3BuI,EACA5xH,KAAKwsG,eACLyD,EACAjwG,KAAK+lE,OACL/lE,KAAKwlF,mBAIT,aAAa4b,GACTywB,EAAmBjI,6BAA6BpwF,KAC5Cq4F,GAEJ/mC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cAPCshC,CAST,CACI5gG,KAAMw4D,EAAQx4D,KACd8+G,aAActmD,EAAQghB,YACtBqlC,sBAAuBrmD,EAAQ+gB,mBAC/B+vC,yBAA0B9wD,EAAQmlE,uBAEtCjT,GACA,EAEP,CAAC,MAAOr5G,GAKL,MAJIA,aAAaytD,KACZztD,EAAgBguD,iBAAiB7/D,KAAK8/D,eACvCo1C,EAAuB2O,mBAAmBhyG,IAExCA,CACT,EAMLwvD,MAAAA,GAEI,OAAOppB,QAAQC,OACXi4C,GACI/B,MC7DhB,SAASgwC,GACL9kD,GAEA,MAAMtC,EAAuB,OAAPsC,QAAO,IAAPA,OAAO,EAAPA,EAAStC,cAC/B,OAAiB,OAAbA,QAAa,IAAbA,GAAAA,EAAeI,KAAoB,OAAbJ,QAAa,IAAbA,GAAAA,EAAeK,IAC9B,MAGO,OAAbL,QAAa,IAAbA,GAAAA,EAAeG,IAEc,0CAAV,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,KACf,MAEJ,WALP,CAMJ,CAEA,SAASggB,GACLD,EACAmnC,GAEA,IACIC,GAA4BpnC,EAC/B,CAAC,MAAOrlF,GAEL,MADAwsH,EAAiB9nH,IAAI,CAAE0pF,SAAS,GAASpuF,GACnCA,CACT,CACL,OAEa0sH,GAsFT3tH,WAAAA,CAAY4tH,GACRx+H,KAAKw+H,iBAAmBA,EACxBx+H,KAAKq4F,qBACDr4F,KAAKw+H,iBAAiBnmC,uBAE1Br4F,KAAK60D,OAAS2pE,EAAiBvjC,YAC/Bj7F,KAAKk3F,aAAc,EAGnBl3F,KAAK+lE,OAAS/lE,KAAKw+H,iBAAiBx8D,YAGpChiE,KAAK85F,cAAgB95F,KAAK60D,OAAO2iC,OAAOsC,cAGxC95F,KAAK+5F,iBAAmB/5F,KAAK60D,OAAO2iC,OAAOuC,iBAG3C/5F,KAAKy+H,iBAAmB,IAAIzyH,IAG5BhM,KAAK0+H,wBAA0B,IAAI1yH,IAGnChM,KAAKwlF,kBAAoBxlF,KAAK60D,OAAO6jC,UAAUgC,OAG/C16F,KAAK6kH,cAAgB7kH,KAAKq4F,qBACpB,IAAImG,GAAUx+F,KAAK+lE,OAAQ/lE,KAAKwlF,mBAChC1Z,GAEN9rE,KAAKX,aAAe,IAAImyG,GAAaxxG,KAAK+lE,QAG1C/lE,KAAKwsG,eAAiBxsG,KAAKq4F,qBACrB,IAAIgU,GACArsG,KAAK60D,OAAOyjC,KAAK9pB,SACjBxuE,KAAK60D,OAAOrlC,MACZxvB,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAKX,axDokCjB,SACFurF,GAEA,MAAM+zC,EAA4B/zC,EAAYtM,uBAC9C,IAAIA,EAEJ,GAAIqgD,EACA,IACIrgD,EAAyBtR,KAAKC,MAAM0xD,EACvC,CAAC,MAAO9sH,GACL,MAAMkhE,GACFZ,GAEP,CAEL,MAAO,CACHiW,mBAAoBwC,EAAY/R,UAC1BovB,GAAmBrd,EAAY/R,gBAC/B1hB,EACNmxB,iBAAkBsC,EAAYtC,iBAC9BhK,uBAAwBA,EAEhC,CwDzlCkBsgD,CAA4B5+H,KAAK60D,OAAOyjC,O7CioCbumC,EACzCrwD,EACAzI,EACAyf,EACAnmF,IAUO,IAAIgtG,GACP79B,EATyC,CACzCipB,cAAe70B,GACf62B,uBAAwB72B,GACxB80B,wBAAwB,EACxBgC,eAAe,EACfC,uBAAuB,EACvBlQ,2BAA2B,GAK3B3d,GACA/F,EACAyf,EACAnmF,G6CnpCMw/H,CACI7+H,KAAK60D,OAAOyjC,KAAK9pB,SACjBxuE,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAKX,cAIf,MAAMy/H,EAA6C,CAC/CrnC,cAAe70B,GACf62B,uBAAwB72B,GACxB80B,wBAAwB,EACxBgC,eAAe,EACfC,uBAAuB,EACvBlQ,2BAA2B,GAE/BzpF,KAAK++H,sBAAwB,IAAI1yB,GAC7BrsG,KAAK60D,OAAOyjC,KAAK9pB,SACjBswD,EACA9+H,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKwlF,kBACLxlF,KAAKX,cAITW,KAAK+6G,WAAa,IAAIwiB,GAClBv9H,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK+lE,OACL/lE,KAAK6kH,eAGT7kH,KAAKg/H,0BAA4B,IAAIhzH,IAGrChM,KAAKi/H,oBAAsBj/H,KAAKi/H,oBAAoBzlG,KAAKx5B,MAGzDA,KAAKk/H,mCACDl/H,KAAKk/H,mCAAmC1lG,KAAKx5B,MAGrD,6BAAam/H,CACTX,EACAxlE,GAEA,MAAM3pC,EAAa,IAAIkvG,GAAmBC,GAE1C,aADMnvG,EAAWmxC,WAAWxH,GACrB3pC,EAGH4vG,mBAAAA,CAAoBn/D,GACnBA,IAGL9/D,KAAK+lE,OAAO71D,KAAK,oCACjBlQ,KAAKwlF,kBAAkB4G,gBACnB,CAAEgzC,sBAAuB,GACzBt/D,IAQR,gBAAMU,CACFxH,EACAqmE,GAGA,GADAr/H,KAAK+lE,OAAON,MAAM,qBACdzlE,KAAKk3F,YAIL,YAHAl3F,KAAK+lE,OAAO71D,KACR,sDAKR,IAAKlQ,KAAKq4F,qBAIN,OAHAr4F,KAAK+lE,OAAO71D,KAAK,8CACjBlQ,KAAKk3F,aAAc,OACnBl3F,KAAKX,aAAakuG,UAAUxmC,IAIhC,MAAMu4D,GACK,OAAPtmE,QAAO,IAAPA,OAAO,EAAPA,EAAS8G,gBAAiB9/D,KAAKu/H,0BAC7BjlC,EAAsBt6F,KAAK60D,OAAO2iC,OAAO8C,oBACzCklC,EAAkBx/H,KAAKwlF,kBAAkByF,iBAC3CH,GACAw0C,GAKJ,GAHAt/H,KAAKX,aAAakuG,UAAUxmC,KAGvBs4D,EACD,IACIr/H,KAAKy/H,qBAAqBD,EAC7B,CAAC,MAAA5nC,GAAO,CAWb,SARMwJ,GACFphG,KAAKwsG,eAAehsC,WAAWhnC,KAAKx5B,KAAKwsG,gBACzC1hB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL85C,EALEl+B,CAMJk+B,GAEEhlC,EACA,IAEIt6F,KAAK8kH,2BAA6BwQ,GAC9Bt1H,KAAK+lE,OACL/lE,KAAKwlF,kBACL85C,EACAt/H,KAAK60D,OAAO2iC,OAAO+C,6BAE1B,CAAC,MAAO1oF,GACL7R,KAAK+lE,OAAOT,QAAQzzD,EACvB,CAGA7R,KAAK60D,OAAOrlC,MAAMi6D,4BACnBzpF,KAAK+lE,OAAOT,QACR,mFAGE87B,GACFphG,KAAKwsG,eAAeqD,6BAA6Br2E,KAC7Cx5B,KAAKwsG,gBAET1hB,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL85C,EAPEl+B,CAQJphG,KAAKwlF,kBAAmB85C,IAG9Bt/H,KAAK60D,OAAO2iC,OAAO6C,mBACRr6F,KAAK0/H,qBAAqBJ,GACrCt/H,KAAKk3F,aAAc,EACnBl3F,KAAKX,aAAakuG,UAAUxmC,IAC5By4D,EAAgBjpH,IAAI,CAChB+jF,oBAAqBA,EACrB2F,SAAS,IAajB,2BAAM/+B,CACF6xB,GAMA,GAJA/yF,KAAK+lE,OAAOT,QAAQ,gCAEpB2xB,GAA2Cj3F,KAAKk3F,aAE5Cl3F,KAAKq4F,qBAAsB,CAM3B,MAAMsnC,EAAsB5sC,GAAQ,GACpC,IAAIhV,EAAW/9E,KAAKy+H,iBAAiB3tH,IAAI6uH,GAazC,MAZwB,qBAAb5hD,GACPA,EAAW/9E,KAAK4/H,8BAA8B7sC,GAC9C/yF,KAAKy+H,iBAAiB7vH,IAAI+wH,EAAqB5hD,GAC/C/9E,KAAK+lE,OAAOT,QACR,kFAGJtlE,KAAK+lE,OAAOT,QACR,8FAIDyY,CACV,CAID,OAHA/9E,KAAK+lE,OAAOT,QACR,+DAEG,KAQH,mCAAMs6D,CACV7sC,GAAa,IAAAi6B,EAEb,IAAKhtH,KAAKwsG,eAAemE,yBAAwB,GAI7C,OAHA3wG,KAAK+lE,OAAO71D,KACR,yFAEG,KAKX,IADkD,QAD7B88G,EACjBhtH,KAAKwsG,eAAeqE,kCAA0B,IAAAmc,OAAA,EAA9CA,EAAgDxpH,QAC5Bs/D,GAKpB,OAJA9iE,KAAK+lE,OAAOT,QACR,iGAEJtlE,KAAKwsG,eAAeuD,0BAAyB,GACtC93D,QAAQ5nB,QAAQ,MAG3B,MAAMwvG,EAAmB7/H,KAAK6gE,iBACxBi/D,EACF9/H,KAAKwsG,eAAeiE,yBAClBsvB,EACFD,GAAyB9/H,KAAK8kH,uBAAyB/xB,EAE3D,IAAI25B,EAOA+R,EALJz+H,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,UAIpB,IACI,GAAI24D,GAAa//H,KAAK8kH,qBAAsB,CACxC4H,EAAkB1sH,KAAKwlF,kBAAkByF,iBACrCH,IACqB,OAArBg1C,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBhgE,gBAAiB,IAE5C9/D,KAAK+lE,OAAON,MACR,gEAEJ,MAAMu6D,EAAe,IAAI3U,GACrBrrH,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL72B,GACAljE,KAAKwlF,kBACLxlF,KAAK8kH,qBACLgb,EAAsB76C,UACtBjlF,KAAK++H,sBACLe,EAAsBhgE,eAG1B2+D,EAAmBr9B,GACf4+B,EAAa9+D,sBAAsB1nC,KAAKwmG,GACxCl1C,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLknC,EAAgBriH,MAAMy1D,cALPshC,CAMjBphG,KAAKwlF,kBAAmBknC,EAAgBriH,MAAMy1D,cACnD,KAAM,CACH,MAAOmgE,EAAiB/vB,GACpBlwG,KAAKwsG,eAAe6D,mBAClBvwC,EAAgBmgE,EAAgBngE,cAEtC4sD,EAAkB1sH,KAAKwlF,kBAAkByF,iBACrCH,GACAhrB,GAEJ9/D,KAAK+lE,OAAON,MACR,yDAEJ,MAAMy6D,EAAiBlgI,KAAKmgI,qBAAqBrgE,GACjD2+D,EAAmBr9B,GACf8+B,EAAeh/D,sBAAsB1nC,KAAK0mG,GAC1Cp1C,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLknC,EAAgBriH,MAAMy1D,cALPshC,CAMjBrO,EAAMktC,EAAiB/vB,EAAcwc,EAC1C,CACJ,CAAC,MAAO76G,GAEL,MADA7R,KAAKwsG,eAAesD,oBACdj+F,CACT,CAED,OAAO4sH,EACFxuG,MAAMsO,IACH,GAAIA,EAAQ,CACRv+B,KAAKwsG,eAAesD,oBAGhB+vB,EAAiB5lI,OAAS+F,KAAK6gE,iBAAiB5mE,QAEhD+F,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB7oC,GAEJv+B,KAAK+lE,OAAOT,QACR,2DAGJtlE,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB7oC,GAEJv+B,KAAK+lE,OAAOT,QACR,kEAGRonD,EAAgBn2G,IAAI,CAChB0pF,SAAS,EACTmgC,YAAahC,GAAe7/F,EAAO+6C,UAE1C,MAKOozC,EAAgBriH,MAAMk1D,UACtBmtD,EAAgBn2G,IAAI,CAAE0pF,SAAS,IAE/BysB,EAAgBnhC,UASxB,OALAvrF,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,UAGb7oC,KAEVtvB,OAAO4C,IACJ7R,KAAKwsG,eAAesD,oBACpB,MAAMuwB,EAAaxuH,EA6BnB,MA3BIguH,EAAiB5lI,OAAS,EAC1B+F,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB,KACAi5D,GAGJrgI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB,KACAi5D,GAGRrgI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,UAGpBslD,EAAgBn2G,IACZ,CACI0pF,SAAS,GAEbogC,GAGExuH,KAalB,0BAAM6uD,CAAqB1H,GAEvB,MAAM8G,EAAgB9/D,KAAKu/H,wBAAwBvmE,GACnDh5D,KAAK+lE,OAAOT,QAAQ,8BAA+BxF,GAEnD,MAAMwgE,EAAiBtgI,KAAKwlF,kBAAkByF,iBAC1CH,GACAhrB,GAEJwgE,EAAe5zH,IAAI,CACf0zH,YAAahC,GAAeplE,EAAQsgB,SACpCinD,WAAYvnE,EAAQunE,aAIxB,MAAMC,EAAuBxnE,EAAQ6zD,mBACrC,GAAI2T,EACAxnE,EAAQ6zD,mBAAsBpsH,IAC1B,MAAMggI,EAC8B,oBAAzBD,EACDA,EAAqB//H,QACrB02D,EAMV,OALiB,IAAbspE,EACAH,EAAe/pH,IAAI,CAAE0pF,SAAS,IAE9BqgC,EAAe/0C,UAEZk1C,OAER,CACH,MAAMC,EACF1gI,KAAK60D,OAAOyjC,KAAKu0B,mBACrB7sH,KAAK60D,OAAOyjC,KAAKu0B,mBAAsBpsH,IACnC,MAAMggI,EACoC,oBAA/BC,EACDA,EAA2BjgI,QAC3B02D,EAMV,OALiB,IAAbspE,EACAH,EAAe/pH,IAAI,CAAE0pF,SAAS,IAE9BqgC,EAAe/0C,UAEZk1C,EAEd,CAGD,MAAME,EAAa3gI,KAAK6gE,iBAAiB5mE,OAAS,EAClD,IAqBI,IAAIskC,EAEJ,GAtBA84D,GAAoCr3F,KAAKk3F,YAAal3F,KAAK60D,QAC3D70D,KAAKwsG,eAAeuD,0BAChB,EACAjtC,IAGA69D,EACA3gI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChBpO,GAGJh5D,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChBpO,GAOJh5D,KAAK8kH,sBACL9kH,KAAK4gI,qBAAqB5nE,GAC5B,CAeEz6B,EAdqB,IAAI8sF,GACrBrrH,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL72B,GACAljE,KAAKwlF,kBACLxlF,KAAK8kH,qBACL9kH,KAAK6gI,mBAAmB7nE,GACxBh5D,KAAK++H,sBACLj/D,GAGCY,qBAAqB1H,EAASsnE,GAC9BrxH,OAAO4C,IACJ,GACIA,aAAaq4G,IACbG,GAAuBx4G,GACzB,CACE7R,KAAK8kH,0BAAuB3tD,EAG5B,OADIn3D,KAAKmgI,qBAAqBrgE,GACRygD,aAAavnD,EACtC,CAAM,GAAInnD,aAAa42F,GAA8B,CAClDzoG,KAAK+lE,OAAOT,QACR,mHAIJ,OADItlE,KAAKmgI,qBAAqBrgE,GACRygD,aAAavnD,EACtC,CACD,MAAMnnD,IAEjB,KAAM,CAEH0sB,EADuBv+B,KAAKmgI,qBAAqBrgE,GACzBygD,aAAavnD,EACxC,CAED,aAAaz6B,CAChB,CAAC,MAAO1sB,GAkBL,MAjBA7R,KAAKwsG,eAAesD,oBACpBwwB,EAAe/pH,IAAI,CAAE0pF,SAAS,GAASpuF,GACnC8uH,EACA3gI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB,KACAv1D,GAGJ7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBiE,SAChB,KACAv1D,GAGFA,CACT,EAcL4uD,iBAAAA,CAAkBzH,GACd,MAAM8G,EAAgB9/D,KAAKu/H,wBAAwBvmE,GAC7C8nE,EAAqB9gI,KAAKwlF,kBAAkByF,iBAC9CH,GACAhrB,GAGJghE,EAAmBp0H,IAAI,CACnB6zH,WAAYvnE,EAAQunE,WACpBH,YAAahC,GAAeplE,EAAQsgB,WAGxC,IACIt5E,KAAK+lE,OAAOT,QAAQ,2BAA4BxF,GAChDq3B,GAAen3F,KAAKk3F,YAAa4pC,GACjC9gI,KAAKwsG,eAAeuD,0BAChB,EACAjtC,GAEP,CAAC,MAAOjxD,GAEL,OAAOomC,QAAQC,OAAOrmC,EACzB,CAGD,MAAMguH,EAAmB7/H,KAAK6gE,iBAe9B,IAAItiC,EAdAshG,EAAiB5lI,OAAS,EAC1B+F,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChBrO,GAGJh5D,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChBrO,GAKR,MAAMg+D,EAAOh3H,KAAK+gI,yBAAyBjhE,GAE3C,GAAI9/D,KAAK4gI,qBAAqB5nE,GAC1Bz6B,EAASv+B,KAAKghI,mBAAkB54D,GAAAA,GAAC,CAAD,EAErBpP,GAAO,IACV8G,kBAEJoD,IAECjzC,MAAM8tD,IACH+iD,EAAmBvqH,IAAI,CACnB0pF,SAAS,EACTksB,gBAAgB,EAChBiU,YAAahC,GAAergD,EAASzE,WAElCyE,KAEV9uE,OAAO4C,IACJ,GACIA,aAAaq4G,IACbG,GAAuBx4G,GACzB,CACE7R,KAAK8kH,0BAAuB3tD,EAG5B,OADIn3D,KAAKihI,kBAAkBnhE,GACRygD,aAAavnD,EAASg+D,EAC5C,CAAM,GAAInlH,aAAa42F,GAA8B,CAClDzoG,KAAK+lE,OAAOT,QACR,gHAIJ,OADItlE,KAAKihI,kBAAkBnhE,GACRygD,aAAavnD,EAASg+D,EAC5C,CACD,MAAMnlH,SAEX,CAEH0sB,EADoBv+B,KAAKihI,kBAAkBnhE,GACtBygD,aAAavnD,EAASg+D,EAC9C,CAED,OAAOz4F,EACFtO,MAAMsO,IAKCshG,EAAiB5lI,OAAS+F,KAAK6gE,iBAAiB5mE,OAEhD+F,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB9oC,GAGJv+B,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB9oC,GAIRuiG,EAAmBvqH,IAAI,CACnB0pF,SAAS,EACTihC,gBAAiB3iG,EAAOuwC,YAAY70E,OACpCknI,YAAa5iG,EAAOgwC,QAAQt0E,OAC5BmmI,YAAahC,GAAe7/F,EAAO+6C,WAEhC/6C,KAEVtvB,OAAO4C,IACAguH,EAAiB5lI,OAAS,EAC1B+F,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB,KACAx1D,GAGJ7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBkE,MAChB,KACAx1D,GAIRivH,EAAmBvqH,IACf,CACI0pF,SAAS,GAEbpuF,GAIGomC,QAAQC,OAAOrmC,MAEzB42D,SAAQv/C,UACLlpB,KAAKwsG,eAAeuD,0BAAyB,GACzC/vG,KAAK60D,OAAO2iC,OAAO6C,mBACbr6F,KAAK0/H,qBAAqB5/D,MAKxCo/D,kCAAAA,GACJ,MAAMrzC,EACF7rF,KAAKohI,sBACLphI,KAAKqhI,mCACJx1C,IAIL7rF,KAAK+lE,OAAO71D,KACR,uCACA27E,EAAYxhF,MAAM1G,MAEtBkoF,EAAYL,UAAU,CAClB4zC,sBAAuB,KAsB/B,eAAM59D,CAAUxI,GAAyB,IAAAsoE,EAAAC,EACrC,MAAMzhE,EAAgB9/D,KAAKu/H,wBAAwBvmE,GAC7C49D,EAAYxuD,GAAAA,GAAA,GACXpP,GAAO,IAEV2mD,OAAQ3mD,EAAQ2mD,OAChB7/C,cAAeA,IA0BnB,IAAIvhC,EAEJ,GA1BAv+B,KAAKohI,qBAAuBphI,KAAKwlF,kBAAkByF,iBAC/CH,GACAhrB,GAEqB,QAAzBwhE,EAAAthI,KAAKohI,4BAAoB,IAAAE,GAAzBA,EAA2B50H,IAAI,CAC3B6zH,WAAYvnE,EAAQunE,WACpBH,YAAahC,GAAeplE,EAAQsgB,WAExC6d,GAAen3F,KAAKk3F,YAAal3F,KAAKohI,sBACb,QAAzBG,EAAAvhI,KAAKohI,4BAAoB,IAAAG,GAAzBA,EAA2B/1C,UAAU,CACjC4zC,sBAAuB,IAG3B1tH,SAASuE,iBACL,mBACAjW,KAAKk/H,oCAETl/H,KAAK+lE,OAAOT,QAAQ,mBAAoBxF,GACxC9/D,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChBxF,GAKA52H,KAAK4gI,qBAAqBhK,GAC1Br4F,EAASv+B,KAAKghI,mBACVpK,EACA1zD,IACFj0D,OAAO4C,IAEL,GAAIA,aAAaq4G,IAAmBG,GAAuBx4G,GAAI,CAC3D7R,KAAK8kH,0BAAuB3tD,EAI5B,OAH2Bn3D,KAAKwhI,yBAC5B5K,EAAa92D,eAESygD,aAAaqW,EAC1C,CACD,MAAM/kH,SAEP,CAIH0sB,EAH2Bv+B,KAAKwhI,yBAC5B5K,EAAa92D,eAEWygD,aAAaqW,EAC5C,CAED,OAAOr4F,EACFtO,MAAM8tD,IAAY,IAAA0jD,EAaf,OAZAzhI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChBr+C,GAEqB,QAAzB0jD,EAAAzhI,KAAKohI,4BAAoB,IAAAK,GAAzBA,EAA2BlrH,IAAI,CAC3B0pF,SAAS,EACTksB,eAAgBpuC,EAASkhC,iBACzBiiB,gBAAiBnjD,EAASjP,YAAY70E,OACtCknI,YAAapjD,EAASxP,QAAQt0E,OAC9BmmI,YAAahC,GAAergD,EAASzE,WAElCyE,KAEV9uE,OAAO4C,IAAY,IAAA6vH,EAahB,MAZA1hI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChB,KACAvqH,GAEqB,QAAzB6vH,EAAA1hI,KAAKohI,4BAAoB,IAAAM,GAAzBA,EAA2BnrH,IACvB,CACI0pF,SAAS,GAEbpuF,GAEEA,KAET42D,SAAQ,KACL/2D,SAASwE,oBACL,mBACAlW,KAAKk/H,uCAerB,wBAAMt+D,CACF5H,GAEA,MAAM8G,EAAgB9/D,KAAKu/H,wBAAwBvmE,GACnDh5D,KAAK+lE,OAAON,MAAM,4BAA6B3F,GAC/C,MAAM6hE,EAAkB3hI,KAAKwlF,kBAAkByF,iBAC3CH,GACAhrB,GAEJq3B,GAAen3F,KAAKk3F,YAAayqC,GACjC3hI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChBpjE,GAEJ2oE,EAAgBj1H,IAAI,CAAE6zH,WAAYvnE,EAAQunE,aAE1C,IACI,GAAIvnE,EAAQx4D,MAAQw4D,EAAQqf,gBAExB,MAAM8X,GACFhB,IAED,GAAIn2B,EAAQx4D,KAAM,CACrB,MAAMohI,EAAiB5oE,EAAQx4D,KAC/B,IAAIu9E,EAAW/9E,KAAK0+H,wBAAwB5tH,IAAI8wH,GAkDhD,OAjDK7jD,GA2CD/9E,KAAK+lE,OAAOT,QACR,4CACAxF,GAEJ6hE,EAAgBp2C,YA9ChBvrF,KAAK+lE,OAAOT,QACR,4CACAxF,GAEJie,EAAW/9E,KAAK6hI,wBAAuBz5D,GAAAA,GAAC,CAAC,EAClCpP,GAAO,IACV8G,mBAEC7vC,MAAMsO,IACHv+B,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChB79F,GAEJv+B,KAAK0+H,wBAAwBh7F,OAAOk+F,GACpCD,EAAgBprH,IAAI,CAChB0pF,SAAS,EACTksB,eAAgB5tF,EAAO0gF,iBACvBiiB,gBAAiB3iG,EAAOuwC,YAAY70E,OACpCknI,YAAa5iG,EAAOgwC,QAAQt0E,OAC5BmmI,YAAahC,GAAe7/F,EAAO+6C,WAEhC/6C,KAEVtvB,OAAOjQ,IAcJ,MAbAgB,KAAK0+H,wBAAwBh7F,OAAOk+F,GACpC5hI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChB,KACAp9H,GAEJ2iI,EAAgBprH,IACZ,CACI0pF,SAAS,GAEbjhG,GAEEA,KAEdgB,KAAK0+H,wBAAwB9vH,IAAIgzH,EAAgB7jD,UAQxCA,CAChB,CAAM,GAAI/kB,EAAQqf,gBAAiB,CAChC,GACIr4E,KAAK4gI,qBAAqB5nE,EAASA,EAAQqf,iBAC7C,CACE,MAAM95C,QAAev+B,KAAKghI,mBAAkB54D,GAAAA,GAAC,CAAD,EAEjCpP,GAAO,IACV8G,kBAEJoD,GACAlK,EAAQqf,iBACVppE,OAAO4C,IAQL,MALIA,aAAaq4G,IACbG,GAAuBx4G,KAEvB7R,KAAK8kH,0BAAuB3tD,GAE1BtlD,KAMV,OAJA8vH,EAAgBprH,IAAI,CAChB6pH,YAAahC,GAAe7/F,EAAO+6C,SACnC2mB,SAAS,IAEN1hE,CACV,CACG,MAAM4xD,GACFd,GAGX,CACG,MAAMc,GACFjB,GAGX,CAAC,MAAOr9E,GAaL,MAZA7R,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChB,KACAvqH,GAEJ8vH,EAAgBprH,IACZ,CACI0pF,SAAS,GAEbpuF,GAEEA,CACT,EAQG,6BAAMgwH,CACV7oE,GAAiC,IAAA8oE,EAEjC9hI,KAAK+lE,OAAON,MACR,iCACAzM,EAAQ8G,eAEZ9/D,KAAKqhI,mCACDrhI,KAAKwlF,kBAAkByF,iBACnBH,GACA9xB,EAAQ8G,eAEuB,QAAvCgiE,EAAA9hI,KAAKqhI,0CAAkC,IAAAS,GAAvCA,EAAyCt2C,UAAU,CAC/C4zC,sBAAuB,IAE3B1tH,SAASuE,iBACL,mBACAjW,KAAKk/H,oCAET,MAAM6C,EAAuB/hI,KAAKgiI,2BAC9BhpE,EAAQ8G,eA2BZ,aAzBgCiiE,EAC3BxhB,aAAavnD,GACb/oC,MAAM8tD,IAAY,IAAAkkD,EAMf,OALuC,QAAvCA,EAAAjiI,KAAKqhI,0CAAkC,IAAAY,GAAvCA,EAAyC1rH,IAAI,CACzC0pF,SAAS,EACT8e,UAAWhhC,EAASghC,UACpBoN,eAAgBpuC,EAASkhC,mBAEtBlhC,KAEV9uE,OAAOizH,IAA4B,IAAAC,EAOhC,MANuC,QAAvCA,EAAAniI,KAAKqhI,0CAAkC,IAAAc,GAAvCA,EAAyC5rH,IACrC,CACI0pF,SAAS,GAEbiiC,GAEEA,KAETz5D,SAAQ,KACL/2D,SAASwE,oBACL,mBACAlW,KAAKk/H,uCAaX,2BAAMkD,CACZC,EACAvW,GAMA,OAJA9rH,KAAKwlF,kBAAkBwG,oBACnBlB,GACAu3C,EAAcviE,eAEVgsD,GACJ,KAAKpoD,GACL,KAAKA,GACL,KAAKA,GACD,MAAM8nD,EAAoBxrH,KAAKsiI,wBAC3BD,EAAcviE,eAElB,OAAOshC,GACHoqB,EAAkBjL,aAAa/mF,KAAKgyF,GACpC1gC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL68C,EAAcviE,cALXshC,CAMLihC,GACN,QACI,MAAMx2D,GACFk+B,KAWT,gCAAM2yB,CACT2F,EACAvW,GAMA,OAJA9rH,KAAKwlF,kBAAkBwG,oBACnBlB,GACAu3C,EAAcviE,eAEVgsD,GACJ,KAAKpoD,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACD,MAAM6+D,EAAsBviI,KAAKwiI,0BAC7BH,EAAcviE,eAGlB,OAAOshC,GACHmhC,EAAoBhiB,aAAa/mF,KAAK+oG,GACtCz3C,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL68C,EAAcviE,cALXshC,CAMLihC,GACN,QACI,MAAMx2D,GACFk+B,KAUN,gCAAM04B,CACZzpE,GAEAh5D,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAGZ,MAAM4iE,EAAqB1iI,KAAKwhI,yBAC5BxoE,EAAQ8G,eAGZ,OAAOshC,GACHshC,EAAmBniB,aAAa/mF,KAAKkpG,GACrC53C,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALLshC,CAMLpoC,GAYN,YAAMqI,CAAOu/C,GACT,MAAM9gD,EAAgB9/D,KAAKu/H,wBAAwB3e,GAKnD,OAJA5gH,KAAK+lE,OAAOb,QACR,mGACApF,GAEG9/D,KAAKshE,eAAc8G,GAAC,CACvBtI,iBACG8gD,IASX,oBAAMt/C,CAAes/C,GACjB,MAAM9gD,EAAgB9/D,KAAKu/H,wBAAwB3e,GACnDvpB,GAAoCr3F,KAAKk3F,YAAal3F,KAAK60D,QAC3D70D,KAAKwsG,eAAeuD,0BAChB,EACAjtC,IAIJ,OADuB9iE,KAAKmgI,qBAAqBrgE,GAC3BuB,OAAOu/C,GAOjCr/C,WAAAA,CAAYq/C,GACR,IACI,MAAM9gD,EAAgB9/D,KAAKu/H,wBAAwB3e,GACnD0d,GAA4Bt+H,KAAKk3F,aACjCl3F,KAAKwsG,eAAeuD,0BAChB,EACAjtC,IAIJ,OADoB9iE,KAAKihI,kBAAkBnhE,GACxBuB,OAAOu/C,GAAen4C,SAAQ,KAC7CzoE,KAAKwsG,eAAeuD,0BAAyB,KAEpD,CAAC,MAAOl+F,GAEL,OAAOomC,QAAQC,OAAOrmC,EACzB,EAOL,gBAAM2wD,CAAWo+C,GACb,IAAK5gH,KAAKq4F,qBAEN,YADAr4F,KAAK+lE,OAAO71D,KAAK,gDAGrB,MAAM4vD,EAAgB9/D,KAAKu/H,wBAAwB3e,GAEnD,OADoB5gH,KAAKsiI,wBAAwBxiE,GAC9BuB,OAAOu/C,GAY9B//C,cAAAA,CAAeqe,GACX,OCn5CF,SACFnZ,EACAymC,EACAm2B,EACAzjD,GAGA,OADAnZ,EAAOT,QAAQ,yBACRq9D,EAAcn2B,EAAe3rC,eAAeqe,GAAiB,EACxE,CD24Cere,CACH7gE,KAAK+lE,OACL/lE,KAAKwsG,eACLxsG,KAAKq4F,qBACLnZ,GASRpe,UAAAA,CAAWoe,GACP,gBCj5CJA,EACAnZ,EACAymC,GAGA,GADAzmC,EAAON,MAAM,qBAC6B,IAAtC1jE,OAAOmgB,KAAKg9D,GAAejlF,OAE3B,OADA8rE,EAAOb,QAAQ,yCACR,KAGX,MAAMoU,EACFkzB,EAAentB,yBAAyBH,GAE5C,OAAI5F,GACAvT,EAAOT,QACH,iEAEGgU,IAEPvT,EAAOT,QAAQ,yDACR,KAEf,CD23CexE,CACHoe,EACAl/E,KAAK+lE,OACL/lE,KAAKwsG,gBAYbxrC,oBAAAA,CAAqB+G,GACjB,gBCh4CJA,EACAhC,EACAymC,GAGA,GADAzmC,EAAON,MAAM,gCACRsC,EAED,OADAhC,EAAOb,QAAQ,8CACR,KAGX,MAAMoU,EAAUkzB,EAAentB,yBAAyB,CACpDtX,aAEJ,OAAIuR,GACAvT,EAAOT,QACH,oEAEJS,EAAOP,WAAW,yEAADhoC,OAC4DuqC,IAEtEuR,IAEPvT,EAAOT,QACH,mEAEG,KAEf,CDq2CetE,CACH+G,EACA/nE,KAAK+lE,OACL/lE,KAAKwsG,gBAWbzrC,kBAAAA,CAAmB8G,GACf,gBC12CJA,EACA9B,EACAymC,GAGA,GADAzmC,EAAON,MAAM,8BACRoC,EAED,OADA9B,EAAOb,QAAQ,iDACR,KAGX,MAAMoU,EAAUkzB,EAAentB,yBAAyB,CACpDxX,kBAEJ,OAAIyR,GACAvT,EAAOT,QACH,uEAEJS,EAAOP,WAAW,4EAADhoC,OAC+DqqC,IAEzEyR,IAEPvT,EAAOT,QACH,iEAEG,KAEf,CD+0CevE,CACH8G,EACA7nE,KAAK+lE,OACL/lE,KAAKwsG,gBAWbvrC,mBAAAA,CAAoB6G,GAChB,gBCp1CJA,EACA/B,EACAymC,GAGA,GADAzmC,EAAON,MAAM,+BACRqC,EAED,OADA/B,EAAOb,QAAQ,mDACR,KAGX,MAAMoU,EAAUkzB,EAAentB,yBAAyB,CACpDvX,mBAEJ,OAAIwR,GACAvT,EAAOT,QACH,yEAEJS,EAAOP,WAAW,8EAADhoC,OACiEsqC,IAE3EwR,IAEPvT,EAAOT,QACH,kEAEG,KAEf,CDyzCerE,CACH6G,EACA9nE,KAAK+lE,OACL/lE,KAAKwsG,gBAQbtqC,gBAAAA,CAAiBoX,IC9zCL,SACZA,EACAkzB,GAEAA,EAAetqC,iBAAiBoX,EACpC,CD0zCQpX,CAAgCoX,EAASt5E,KAAKwsG,gBAMlDrqC,gBAAAA,GACI,OAAuCniE,KAAKwsG,eCzzC1BrqC,mBDo0CtB,kBAAMI,CACFhkC,EACAy6B,GAMAh5D,KAAK+lE,OAAOT,QAAQ,uBAGpB,MAAMsa,EAAgB3H,GAAcgC,sBAChC17C,EAAO+6C,QACP/6C,EAAOw7C,mBACPx7C,EAAOy7C,aAOX,aALMh6E,KAAKwsG,eAAeprB,WACtBxB,EACArhD,EAAOuhC,eAGPvhC,EAAO0gF,kBACPj/G,KAAK+lE,OAAOT,QACR,sDAGGtlE,KAAK++H,sBAAsBx8D,aAAahkC,EAAQy6B,IAEhDh5D,KAAKwsG,eAAejqC,aAAahkC,EAAQy6B,GAUjD,wBAAMgoE,CACThoE,EACA4pD,EACA39B,EACA6mC,GAGA,GADA9rH,KAAK+lE,OAAON,MAAM,8BACbzlE,KAAK8kH,qBACN,MAAM30B,GACFX,IAmBR,OAfqB,IAAI67B,GACrBrrH,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL6oB,EACA5iH,KAAKwlF,kBACLxlF,KAAK8kH,qBACL7/B,GAAajlF,KAAK6gI,mBAAmB7nE,GACrCh5D,KAAK++H,sBACL/lE,EAAQ8G,eAGQygD,aAAavnD,EAAS8yD,GAOvC8U,oBAAAA,CACH5nE,EACAisB,GAGA,GADAjlF,KAAK+lE,OAAON,MAAM,gCACbzlE,KAAK8kH,qBAIN,OAHA9kH,KAAK+lE,OAAON,MACR,sEAEG,EAGX,IACKgwD,GACGz1H,KAAK60D,OACL70D,KAAK+lE,OACL/lE,KAAK8kH,qBACL9rD,EAAQytB,sBAMZ,OAHAzmF,KAAK+lE,OAAON,MACR,4EAEG,EAGX,GAAIzM,EAAQ2mD,OACR,OAAQ3mD,EAAQ2mD,QACZ,KAAKtjD,EAAYI,KACjB,KAAKJ,EAAYG,QACjB,KAAKH,EAAYC,MACbt8D,KAAK+lE,OAAON,MACR,wEAEJ,MACJ,QAII,OAHAzlE,KAAK+lE,OAAON,MAAM,kCAADjoC,OACqBw7B,EAAQ2mD,OAAM,mEAE7C,EAInB,SAAK16B,IAAcjlF,KAAK6gI,mBAAmB7nE,MACvCh5D,KAAK+lE,OAAON,MACR,4EAEG,GAWRo7D,kBAAAA,CACH7nE,GAEA,MAAMsgB,EACFtgB,EAAQsgB,SACRt5E,KAAK8gE,WAAW,CACZ6f,UAAW3nB,EAAQ2nB,UACnBI,IAAK/nB,EAAQ+nB,OAEjB/gF,KAAKmiE,mBAET,OAAQmX,GAAWA,EAAQjB,iBAAoB,GAO5C4oD,iBAAAA,CAAkBnhE,GACrB,OAAO,IAAI41D,GACP11H,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL/5F,KAAKwlF,kBACLxlF,KAAK++H,sBACL/+H,KAAK8kH,qBACLhlD,GAQEqgE,oBAAAA,CAAqBrgE,GAC3B,OAAO,IAAI05D,GACPx5H,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL/5F,KAAKwlF,kBACLxlF,KAAK++H,sBACL/+H,KAAK8kH,qBACLhlD,GAQD0hE,wBAAAA,CACH1hE,GAEA,OAAO,IAAIo8D,GACPl8H,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL72B,GACAljE,KAAKwlF,kBACLxlF,KAAK++H,sBACL/+H,KAAK8kH,qBACLhlD,GAOEwiE,uBAAAA,CACNxiE,GAEA,OAAO,IAAImrD,GACPjrH,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL/5F,KAAKwlF,kBACLxlF,KAAK8kH,qBACLhlD,GAOE0iE,yBAAAA,CACN1iE,GAEA,OAAO,IAAIq9D,GACPn9H,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL/5F,KAAKwlF,kBACLxlF,KAAK8kH,qBACLhlD,GAOEkiE,0BAAAA,CACNliE,GAEA,OAAO,IAAIo+D,GACPl+H,KAAK60D,OACL70D,KAAKwsG,eACLxsG,KAAK6kH,cACL7kH,KAAK+lE,OACL/lE,KAAKX,aACLW,KAAK+5F,iBACL72B,GACAljE,KAAKwlF,kBACLxlF,KAAK8kH,qBACLhlD,GAQR2B,gBAAAA,CACI5kE,EACA+0G,GAEA,OAAO5xG,KAAKX,aAAaoiE,iBAAiB5kE,EAAU+0G,GAOxDlwC,mBAAAA,CAAoB8G,GAChBxoE,KAAKX,aAAaqiE,oBAAoB8G,GAS1C7G,sBAAAA,CAAuB9kE,GAEnB,OADAm6F,KACOh3F,KAAKwlF,kBAAkB7jB,uBAAuB9kE,GASzD+kE,yBAAAA,CAA0B4G,GACtB,OAAOxoE,KAAKwlF,kBAAkB5jB,0BAA0B4G,GAO5D3G,0BAAAA,GAEQ7hE,KAAK60D,OAAOrlC,MAAMioE,gBAClB70B,GAQJ5iE,KAAKX,aAAa0yG,oBANd/xG,KAAK+lE,OAAO71D,KACR,uFAYZ4xD,2BAAAA,GAEQ9hE,KAAK60D,OAAOrlC,MAAMioE,gBAClB70B,GAQJ5iE,KAAKX,aAAa4yG,sBANdjyG,KAAK+lE,OAAO71D,KACR,uFAWZ6xD,aAAAA,GACI,OAAO/hE,KAAK+6G,WAMT/4C,SAAAA,GACH,OAAOhiE,KAAK+lE,OAOhB9D,SAAAA,CAAU8D,GACN/lE,KAAK+lE,OAASA,EAQlB3D,wBAAAA,CAAyB0nB,EAAiBr5B,GAEtCzwD,KAAKwsG,eAAeoC,mBAAmB9kB,EAAKr5B,GAOhD4R,mBAAAA,CAAoB03B,GAChB/5F,KAAK+5F,iBAAmBA,EAMrBz3B,gBAAAA,GACH,OAAOtiE,KAAK60D,OAMT+tE,oBAAAA,GACH,OAAO5iI,KAAKwlF,kBAMTq9C,YAAAA,GACH,OAAO7iI,KAAKq4F,qBAUNknC,uBAAAA,CACNvmE,GAEA,OAAW,OAAPA,QAAO,IAAPA,GAAAA,EAAS8G,cACF9G,EAAQ8G,cAGf9/D,KAAKq4F,qBACEtsB,KAOJvS,EAAU0B,aAcrB,mBAAMkG,CAAcpI,GAChB,MAAM8G,EAAwB9/D,KAAKu/H,wBAAwBvmE,GAE3D,OADAh5D,KAAK+lE,OAAOT,QAAQ,uBAAwBxF,GACrC9/D,KAAK0gE,qBAAoB0H,GAAC,CAC7BtI,iBACI9G,GAAWqK,KAWvBlC,UAAAA,CAAWnI,GACP,MAAM8G,EAAwB9/D,KAAKu/H,wBAAwBvmE,GAE3D,OADAh5D,KAAK+lE,OAAOT,QAAQ,oBAAqBxF,GAClC9/D,KAAKygE,kBAAiB2H,GAAC,CAC1BtI,iBACI9G,GAAWqK,KAUvB,wBAAM1C,CACF3H,GAEA,MAAM8G,EAAgB9/D,KAAKu/H,wBAAwBvmE,GAC7C8pE,EAAiB9iI,KAAKwlF,kBAAkByF,iBAC1CH,GACAhrB,GAEJgjE,EAAep2H,IAAI,CACfo/G,kBAAmB9yD,EAAQ8yD,kBAC3ByU,WAAYvnE,EAAQunE,aAGxBppC,GAAen3F,KAAKk3F,YAAa4rC,GACjC9iI,KAAK+lE,OAAOT,QAAQ,4BAA6BxF,GAEjD,MAAMwZ,EAAUtgB,EAAQsgB,SAAWt5E,KAAKmiE,mBACxC,IAAKmX,EACD,MAAM6W,GAAuB9B,IAIjC,OAFAy0C,EAAep2H,IAAI,CAAE0zH,YAAahC,GAAe9kD,KAE1Ct5E,KAAK+iI,0BAA0B/pE,EAASsgB,EAASxZ,GACnD7vC,MAAMsO,IACHukG,EAAevsH,IAAI,CACf0pF,SAAS,EACT8e,UAAWxgF,EAAOwgF,UAClBoN,eAAgB5tF,EAAO0gF,iBACvBiiB,gBAAiB3iG,EAAOuwC,YAAY70E,OACpCknI,YAAa5iG,EAAOgwC,QAAQt0E,SAEhCmuE,GAAAA,GAAA,GACO7pC,GAAM,IACTvG,MAAOghC,EAAQhhC,MACf8nC,cAAeA,OAGtB7wD,OAAOjQ,IAYJ,MAXIA,aAAiBsgE,IAEjBtgE,EAAM6gE,iBAAiBC,GAG3BgjE,EAAevsH,IACX,CACI0pF,SAAS,GAEbjhG,GAEEA,KAWV,+BAAM+jI,CACV/pE,EACAsgB,EACAxZ,GAEA,MAAMi2C,EAAa5M,GACfnpG,KAAK60D,OAAOyjC,KAAK9pB,SAAQpG,GAAAA,GAAA,GAElBpP,GAAO,IACV6f,UAAW7f,EAAQ6f,WAAa74E,KAAK60D,OAAOyjC,KAAKzf,UACjD/Y,cAAeA,IAEnBwZ,EAAQzR,eAENm7D,EAAmBh2D,KAAKynB,UAAUshB,GAElCktB,EACFjjI,KAAKg/H,0BAA0BluH,IAAIkyH,GAEvC,GAAiC,qBAAtBC,EAAmC,CAC1CjjI,KAAK+lE,OAAOT,QACR,uEACAxF,GAEJ9/D,KAAKwlF,kBAAkBQ,UAAU,CAAEk9C,SAAS,GAASpjE,GAErD,MAAMqjE,EAAgB/hC,GAClBphG,KAAKojI,wBAAwB5pG,KAAKx5B,MAClC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALkBshC,CAMrBh5B,GAAAA,GAAC,CAAD,EAEUpP,GAAO,IACV8G,kBAEJwZ,GAIJ,OAFAt5E,KAAKg/H,0BAA0BpwH,IAAIo0H,EAAkBG,GAE9CA,EAAc16D,SAAQ,KACzBzoE,KAAKg/H,0BAA0Bt7F,OAAOs/F,KAE7C,CAMG,OALAhjI,KAAK+lE,OAAOT,QACR,0FACAxF,GAEJ9/D,KAAKwlF,kBAAkBQ,UAAU,CAAEk9C,SAAS,GAAQpjE,GAC7CmjE,EAUL,6BAAMG,CACZpqE,EACAsgB,GAEA,MAAM2lD,EAAsBA,IACxBj/H,KAAKi/H,oBAAoBjmE,EAAQ8G,eACrC9/D,KAAKwlF,kBAAkBwG,oBACnBlB,GACA9xB,EAAQ8G,eAGZ9/D,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChBpjE,GAGAA,EAAQ8G,eACR9/D,KAAKwlF,kBAAkB4G,gBACnB,CAAEgzC,sBAAuB,GACzBpmE,EAAQ8G,eAIhBpuD,SAASuE,iBAAiB,mBAAoBgpH,GAE9C,MAAM/T,QAAsB9pB,GACxB8kB,GACAp7B,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACLxsB,EAAQ8G,cALgBshC,CAM1BpoC,EAASsgB,EAASt5E,KAAK60D,OAAQ70D,KAAKwlF,kBAAmBxlF,KAAK+lE,QACxD+lD,EACF9yD,EAAQ8yD,mBAAqBpoD,GAqGjC,OAnGe1jE,KAAKqjI,2BAChBnY,EACAY,GACF78G,OAAMia,UACJ,MAAMo6G,EAyRlB,SACIC,EACAzX,GAEA,MAAM0X,IACFD,aAA6B96B,IAE7B86B,EAAkB3jE,WACd2qD,IAIFkZ,EACFF,EAAkBhkE,YAAckD,IAChC8gE,EAAkBhkE,YACdwqC,GAGF25B,EACDF,GAAyBC,GAC1BF,EAAkBhkE,YACdgrD,IACJgZ,EAAkBhkE,YACdgrD,GAGFoZ,EAAmBhgE,GAAsB/zD,SAASk8G,GAExD,OAAO4X,GAAwBC,CACnC,CArTgBC,CACIL,EACAzX,GAGR,GAAIwX,EAA4B,CAC5B,GAAKtjI,KAAK6jI,oBA+BH,IAAI/X,IAAsBpoD,GAAwB,CACrD,MAAOogE,EAAeC,GAClB/jI,KAAK6jI,oBACT7jI,KAAK+lE,OAAOT,QAAQ,8FAAD9nC,OAC+EumG,GAC9F7Y,EAAcprD,eAElB,MAAMkkE,EACFhkI,KAAKwlF,kBAAkByF,iBACnBH,GACAogC,EAAcprD,eAEtBkkE,EAA6Bt3H,IAAI,CAC7Bu3H,yBAA0BF,IAG9B,MAAMG,QAA4BJ,EAIlC,GAHAE,EAA6BztH,IAAI,CAC7B0pF,QAASikC,IAETA,EAMA,OALAlkI,KAAK+lE,OAAOT,QAAQ,+CAAD9nC,OACgCumG,EAAmB,mDAClE7Y,EAAcprD,eAGX9/D,KAAKqjI,2BACRnY,EACAY,GAOJ,MAJA9rH,KAAK+lE,OAAO71D,KAAK,sCAADstB,OAC0BumG,EAAmB,sCAGvDR,CAEb,CAMG,OAJAvjI,KAAK+lE,OAAOb,QACR,wQACAgmD,EAAcprD,eAEXshC,GACHphG,KAAKyiI,2BAA2BjpG,KAAKx5B,MACrC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL0lC,EAAcprD,cALXshC,CAML8pB,EACL,CAjF8B,CAC3B,IAAIiZ,EAYJ,OAVAnkI,KAAK6jI,oBAAsB,CACvB,IAAI5rF,SAAS5nB,IACT8zG,EAAW9zG,KAEf66F,EAAcprD,eAElB9/D,KAAK+lE,OAAOT,QACR,yGACA4lD,EAAcprD,eAEXshC,GACHphG,KAAKyiI,2BAA2BjpG,KAAKx5B,MACrC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL0lC,EAAcprD,cALXshC,CAML8pB,GACGj7F,MAAMm0G,IACHD,GAAS,GACFC,KAEVn1H,OAAO4C,IAEJ,MADAsyH,GAAS,GACHtyH,KAET42D,SAAQ,KACLzoE,KAAK6jI,yBAAsB1sE,IAEtC,CAmDJ,CAEG,MAAMosE,KAKTtzG,MAAM8tD,IACH/9E,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChBr+C,GAEA/kB,EAAQ8G,eACR9/D,KAAKwlF,kBAAkBQ,UACnB,CACI+4B,UAAWhhC,EAASghC,UACpBoN,eAAgBpuC,EAASkhC,kBAE7BjmD,EAAQ8G,eAITie,KAEV9uE,OAAOizH,IAOJ,MANAliI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChB,KACA8F,GAEEA,KAETz5D,SAAQ,KACL/2D,SAASwE,oBACL,mBACA+oH,MAWR,gCAAMoE,CACVnY,EACAY,GAGA,OACI2J,GACIz1H,KAAK60D,OACL70D,KAAK+lE,OACL/lE,KAAK8kH,qBACLoG,EAAczkC,uBAElBykC,EAAc5xC,QAAQjB,iBAEtBr4E,KAAK+lE,OAAOT,QACR,yEAEGtlE,KAAKghI,mBACR9V,EACAhoD,GACAgoD,EAAc5xC,QAAQjB,gBACtByzC,GACF78G,OAAMia,UAEJ,GAAIrX,aAAaq4G,IAAmBG,GAAuBx4G,GAMvD,MALA7R,KAAK+lE,OAAOT,QACR,8EAEJtlE,KAAK8kH,0BAAuB3tD,EAEtB0U,GACFk+B,IAGR,MAAMl4F,OAGV7R,KAAK+lE,OAAOT,QACR,kEAGAwmD,IAAsBpoD,IACtB1jE,KAAK+lE,OAAOT,QACR,6GAGD87B,GACHphG,KAAKoiI,sBAAsB5oG,KAAKx5B,MAChC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL0lC,EAAcprD,cALXshC,CAML8pB,EAAeY,GAAmB78G,OAC/Bo1H,IACG,GAAIvY,IAAsBpoD,GACtB,MAAM2gE,EASV,OANArkI,KAAKX,aAAakuG,UACdxmC,GACA5D,GAAgBi5D,OAChBlR,GAGG9pB,GACHphG,KAAK08H,2BAA2BljG,KAAKx5B,MACrC8qF,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL0lC,EAAcprD,cALXshC,CAML8pB,EAAeY,OAUzB,0BAAM4T,CAAqB5/D,GAS/B,OARA9/D,KAAK+lE,OAAOT,QAAQ,6BACpBtlE,KAAKskI,eAAiBljC,GAClB4wB,GACAlnC,GACA9qF,KAAK+lE,OACL/lE,KAAKwlF,kBACL1lB,EALkBshC,CAMpBphG,KAAKwlF,kBAAmBxlF,KAAK+lE,OAAQjG,GAChC7nB,QAAQ5nB,UAOX0wG,wBAAAA,CACJjhE,GAEA9/D,KAAK+lE,OAAOT,QAAQ,kDACpB,MAAMi/D,EAAMvkI,KAAKskI,SAAQl8D,GAAA,GAAQpoE,KAAKskI,eAAantE,EASnD,OARAn3D,KAAKskI,cAAWntE,EAChBn3D,KAAK+lE,OAAOT,QAAQ,GAAD9nC,OACZ+mG,EAAM,QAAU,eAAc,8BAErCvkI,KAAKwlF,kBAAkBQ,UACnB,CAAEw+C,sBAAuBD,GACzBzkE,GAEGykE,EAGH9E,oBAAAA,CACJpB,GAEA,MAAM7vD,EAAWxuE,KAAK60D,OAAOyjC,KAAK9pB,SAElC,IAAKpkE,OAAQ,OAEbA,OAAOq6H,KAAOr6H,OAAOq6H,MAAQ,CAAC,EAE9Br6H,OAAOq6H,KAAKC,UAAYt6H,OAAOq6H,KAAKC,WAAa,GAGrBt6H,OAAOq6H,KAAKC,UAE1BzqI,OAAS,GACnB+F,KAAK+lE,OAAOT,QACR,0DAIRl7D,OAAOq6H,KAAKC,UAAU7qI,KAAK20E,YEl3E/Bm2D,EACAtG,EACAt4D,GAAc,IAAA6+D,EAEd,MAAMC,GAES,QAAXD,EAAAx6H,OAAOq6H,YAAI,IAAAG,OAAA,EAAXA,EAAaF,YAAa,GAExBI,EAAoBD,EAAe5qI,OAEnC8qI,EAA4BF,EAAel+D,QAC5ChmE,GAAMA,IAAMgkI,IACf1qI,OAEE8qI,EAA4B,GAC5Bh/D,EAAOb,QACH,kFAGRm5D,EAAiB3xH,IAAI,CACjBo4H,kBAAmBA,EACnBC,0BAA2BA,GAEnC,CF41EQC,CAAqBx2D,EAAU6vD,EAAkBr+H,KAAK+lE,eGj1EjDk/D,GASF,0CAAaC,CAChBpuB,GAEA,MAAMznF,QCzCPnG,eACH2rC,EACAmE,GAEA,MAAMmsE,EAAW,IAAIhqC,GAAyBtmC,GAG9C,aADMswE,EAAS3kE,aACR+9D,GAAmBY,iBAAiBgG,EAAUnsE,EACzD,CDiCiCosE,CACrBtuB,GAIJ,OAFY,IAAImuB,GAAwBnuB,EAAeznF,GA2B3Dze,WAAAA,CAAmBkmG,EAA8BznF,GAxCvC,KAAQgwG,UAAY,EAyC1Br/H,KAAKqvB,WACDA,GACA,IAAIkvG,GAAmB,IAAIpjC,GAAyB2b,IAO5D,gBAAMt2C,CAAWxH,GACb,OAAOh5D,KAAKqvB,WAAWmxC,WAAWxH,EAASh5D,KAAKq/H,UAUpD,uBAAM5+D,CACFzH,GAEA,OAAOh5D,KAAKqvB,WAAWoxC,kBAAkBzH,GAY7C0H,oBAAAA,CAAqB1H,GACjB,OAAOh5D,KAAKqvB,WAAWqxC,qBAAqB1H,GAShD2H,kBAAAA,CACIuqD,GAEA,OAAOlrH,KAAKqvB,WAAWsxC,mBAAmBuqD,GAa9CtqD,kBAAAA,CACI5H,GAEA,OAAOh5D,KAAKqvB,WAAWuxC,mBAAmB5H,GAQ9CyI,gBAAAA,CACI5kE,EACA+0G,GAEA,OAAO5xG,KAAKqvB,WAAWoyC,iBAAiB5kE,EAAU+0G,GAOtDlwC,mBAAAA,CAAoB8G,GAChB,OAAOxoE,KAAKqvB,WAAWqyC,oBAAoB8G,GAS/C7G,sBAAAA,CAAuB9kE,GACnB,OAAOmD,KAAKqvB,WAAWsyC,uBAAuB9kE,GASlD+kE,yBAAAA,CAA0B4G,GACtB,OAAOxoE,KAAKqvB,WAAWuyC,0BAA0B4G,GAMrD3G,0BAAAA,GACI7hE,KAAKqvB,WAAWwyC,6BAMpBC,2BAAAA,GACI9hE,KAAKqvB,WAAWyyC,8BAQpBhB,UAAAA,CAAWoe,GACP,OAAOl/E,KAAKqvB,WAAWyxC,WAAWoe,GAWtCne,kBAAAA,CAAmB8G,GACf,OAAO7nE,KAAKqvB,WAAW0xC,mBAAmB8G,GAW9C5G,mBAAAA,CAAoBokE,GAChB,OAAOrlI,KAAKqvB,WAAW4xC,oBAAoBokE,GAY/CrkE,oBAAAA,CAAqBskE,GACjB,OAAOtlI,KAAKqvB,WAAW2xC,qBAAqBskE,GAQhDzkE,cAAAA,CAAeqe,GACX,OAAOl/E,KAAKqvB,WAAWwxC,eAAeqe,GAU1Che,qBAAAA,CACI6xB,GAEA,OAAO/yF,KAAKqvB,WAAW6xC,sBAAsB6xB,GAUjD5xB,UAAAA,CACInI,GAEA,OAAOh5D,KAAKqvB,WAAW8xC,WAAWnI,GAYtCoI,aAAAA,CAAcpI,GACV,OAAOh5D,KAAKqvB,WAAW+xC,cAAcpI,GAQzCqI,MAAAA,CAAOu/C,GACH,OAAO5gH,KAAKqvB,WAAWgyC,OAAOu/C,GAQlCt/C,cAAAA,CAAes/C,GACX,OAAO5gH,KAAKqvB,WAAWiyC,eAAes/C,GAO1Cr/C,WAAAA,CAAYq/C,GACR,OAAO5gH,KAAKqvB,WAAWkyC,YAAYq/C,GAkBvCp/C,SAAAA,CAAUxI,GACN,OAAOh5D,KAAKqvB,WAAWmyC,UAAUxI,GAMrC+I,aAAAA,GACI,OAAO/hE,KAAKqvB,WAAW0yC,gBAM3BC,SAAAA,GACI,OAAOhiE,KAAKqvB,WAAW2yC,YAO3BC,SAAAA,CAAU8D,GACN/lE,KAAKqvB,WAAW4yC,UAAU8D,GAO9B7D,gBAAAA,CAAiBoX,GACbt5E,KAAKqvB,WAAW6yC,iBAAiBoX,GAMrCnX,gBAAAA,GACI,OAAOniE,KAAKqvB,WAAW8yC,mBAQ3BC,wBAAAA,CAAyB0nB,EAAiBr5B,GACtC,OAAOzwD,KAAKqvB,WAAW+yC,yBAAyB0nB,EAAKr5B,GAOzD4R,mBAAAA,CAAoB03B,GAChB/5F,KAAKqvB,WAAWgzC,oBAAoB03B,GAOxCz3B,gBAAAA,GACI,OAAOtiE,KAAKqvB,WAAWizC,mBAS3B,kBAAMC,CACFhkC,EACAy6B,GAMA,OAAOh5D,KAAKqvB,WAAWkzC,aAAahkC,EAAQy6B,GAOhDwJ,UAAAA,CAAWo+C,GACP,OAAO5gH,KAAKqvB,WAAWmzC,WAAWo+C,IE1anC,MAAM2kB,GAA4B,CACvCjtC,KAAM,CACJ9pB,SAAUhoC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYg/F,2BAA6B,GACnD3sD,UAAU,qCAADr7C,OAAuCgJ,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYi/F,2BAA6B,UACzF5sC,YAAaryD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYk/F,8BAAgCt7H,OAAOuS,SAAS+5E,QAE3ElnE,MAAO,CACLioE,cAAe,iBACfC,wBAAwB,IAKfiuC,GAA6B,CACxCriE,OAAQ,CACN,kDACA,4BCTG,MAAMsiE,GAAwCt9D,IAK9C,IAL+C,qBACpDu9D,EAAoB,uBACpBC,EAAsB,aACtBC,EAAY,eACZC,GACD19D,EAWC,OACE29D,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,wBAAuB3oH,SAAA,EACpC+yH,EAAAA,GAAAA,KAAA,MAAA/yH,SAAI,4CAEJ8yH,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,mBAAkB3oH,SAAA,EAC/B+yH,EAAAA,GAAAA,KAAA,SAAOC,QAAQ,gBAAgBrK,UAAU,aAAY3oH,SAAC,uCAGtD+yH,EAAAA,GAAAA,KAAA,SACEhrI,GAAG,gBACHsI,KAAK,OACL4iI,OAAO,QACPC,SAtB0Bh8H,IAAgD,IAADi8H,EAC/E,MAAMC,GAAyB,QAAlBD,EAAAj8H,EAAMyK,OAAO0xH,aAAK,IAAAF,OAAA,EAAlBA,EAAqB,KAAM,KACxCT,EAAqBU,IAqBfzK,UAAU,eAEXiK,IACCE,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,gBAAe3oH,SAAA,CAAC,UAC1B4yH,EAAapiI,YAKtBsiI,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,mBAAkB3oH,SAAA,EAC/B+yH,EAAAA,GAAAA,KAAA,SAAOC,QAAQ,kBAAkBrK,UAAU,aAAY3oH,SAAC,0CAGxD+yH,EAAAA,GAAAA,KAAA,SACEhrI,GAAG,kBACHsI,KAAK,OACL4iI,OAAO,QACPC,SAnC4Bh8H,IAAgD,IAADo8H,EACjF,MAAMF,GAAyB,QAAlBE,EAAAp8H,EAAMyK,OAAO0xH,aAAK,IAAAC,OAAA,EAAlBA,EAAqB,KAAM,KACxCX,EAAuBS,IAkCjBzK,UAAU,eAEXkK,IACCC,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,gBAAe3oH,SAAA,CAAC,UAC1B6yH,EAAeriI,eCjDjB+iI,GAAoDp+D,IAK1D,IAL2D,MAChEtwC,EAAK,QACL7nB,EAAO,eACPw2H,EAAc,cACdC,GACDt+D,EAuDC,MAtDqBu+D,MACnB,OAAQ7uG,GACN,IAAK,OA+CL,QACE,OAAO,KA7CT,IAAK,UACH,OACEiuG,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,kCAAiC3oH,SAAA,EAC9C+yH,EAAAA,GAAAA,KAAA,OAAKpK,UAAU,aACfmK,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,iBAAgB3oH,SAAA,EAC7B+yH,EAAAA,GAAAA,KAAA,MAAA/yH,SAAI,yCACJ8yH,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,CAAG,iCAA6B+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAASyzH,QACzCX,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,CAAG,qBAAiB+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAASwzH,QAC7BT,EAAAA,GAAAA,KAAA,KAAA/yH,SAAG,wDAKX,IAAK,UACH,OACE+yH,EAAAA,GAAAA,KAAA,OAAKpK,UAAU,kCAAiC3oH,UAC9C8yH,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,iBAAgB3oH,SAAA,EAC7B+yH,EAAAA,GAAAA,KAAA,MAAA/yH,SAAI,gDACJ+yH,EAAAA,GAAAA,KAAA,KAAA/yH,SAAG,qFACH8yH,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,CAAG,oBAAgB+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAASyzH,QAC5BX,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,CAAG,gBAAY+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAASwzH,OACvBx2H,IAAW+1H,EAAAA,GAAAA,KAAA,KAAGpK,UAAU,kBAAiB3oH,SAAEhD,SAKpD,IAAK,QACH,OACE+1H,EAAAA,GAAAA,KAAA,OAAKpK,UAAU,gCAA+B3oH,UAC5C8yH,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,iBAAgB3oH,SAAA,EAC7B+yH,EAAAA,GAAAA,KAAA,MAAA/yH,SAAI,oCACJ+yH,EAAAA,GAAAA,KAAA,KAAA/yH,SAAG,yDACH8yH,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,CAAG,oBAAgB+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAASyzH,QAC5BX,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,CAAG,gBAAY+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAASwzH,OACvBx2H,IACC81H,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,gBAAe3oH,SAAA,EAC5B+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAAQ,oBACR+yH,EAAAA,GAAAA,KAAA,OAAA/yH,SAAMhD,cAYf02H,ICnEIC,GAAwBA,KACnC,MAAM,SAAEx7G,EAAQ,SAAEw6C,GAAa8C,KAQzBm+D,EAAeA,KACnBz7G,EAASi2C,cAActyD,OAAM4C,IAC3B9S,QAAQC,MAAM6S,OAIlB,OAAIi0D,EAAS7rE,OAAS,GAElBgsI,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,iBAAgB3oH,SAAA,EAC7B+yH,EAAAA,GAAAA,KAAA,OAAKpK,UAAU,YAAW3oH,UACxB8yH,EAAAA,GAAAA,MAAA,QAAA9yH,SAAA,CAAM,uBAAW2yD,EAAS,GAAGniE,MAAQmiE,EAAS,GAAGiC,eAEnDm+D,EAAAA,GAAAA,KAAA,UAAQp6G,QAASi7G,EAAcjL,UAAU,4BAA2B3oH,SAAC,8BAQzE+yH,EAAAA,GAAAA,KAAA,OAAKpK,UAAU,iBAAgB3oH,UAC7B+yH,EAAAA,GAAAA,KAAA,UAAQp6G,QA3BQk7G,KAClB17G,EAAS61C,WAAWwkE,IAAc12H,OAAM4C,IACtC9S,QAAQC,MAAM6S,OAyBgBiqH,UAAU,2BAA0B3oH,SAAC,2CCvBnE8zH,GAAU,IAAIlhH,QAgBd,SAAUmhH,GACdC,EACAC,SAEA,GAAoB,kBAATD,GAA8B,OAATA,IAAkBC,EAChD,OAEF,MAAMC,EAA4B,QAAjBC,EAAAL,GAAQn2H,IAAIq2H,UAAK,IAAAG,EAAAA,EAAI,CAAC,EACvCD,EAASD,kBAAoBA,EAC7BH,GAAQr4H,IAAIu4H,EAAME,EACpB,CCwxCO,IAAKE,GAiCAC,GAqBAC,GAqBAC,GAgDAC,GAoCAC,GAkBAC,GAwBAC,GAqBAC,GAeAC,GAkBAC,GCtiDN,SAAUC,GAAgB/iI,GAC9B,IAAIiuE,EAAM,GACV,IAAK,IAAIzyE,EAAI,EAAGA,EAAIwE,EAAMlL,OAAQ0G,IAChCyyE,GAAO32D,OAAOC,aAAavX,EAAMxE,IAEnC,OAAOixF,KAAKxe,EACd,CAOM,SAAU+0D,GAAahjI,GAC3B,MAAMijI,EAAan2C,KAAK9sF,GAClB0uE,EAAM,IAAIqe,WAAWk2C,EAAWnuI,QACtC,IAAK,IAAI0G,EAAI,EAAGA,EAAIynI,EAAWnuI,OAAQ0G,IACrCkzE,EAAIlzE,GAAKynI,EAAWn2H,WAAWtR,GAEjC,OAAOkzE,CACT,EDmxCA,SAAY0zD,GAEVA,EAAA,gBAEAA,EAAA,UAEAA,EAAA,YAEAA,EAAA,cAEAA,EAAA,gBAEAA,EAAA,4BAEAA,EAAA,2BACD,CAfD,CAAYA,KAAAA,GAAgC,KAiC5C,SAAYC,GAEVA,EAAA,4BAEAA,EAAA,cAEAA,EAAA,aACD,CAPD,CAAYA,KAAAA,GAAyC,KAqBrD,SAAYC,GAEVA,EAAA,oBAEAA,EAAA,oBAEAA,EAAA,+BACD,CAPD,CAAYA,KAAAA,GAAoB,KAqBhC,SAAYC,GAEVA,EAAA,4BAEAA,EAAA,oBAEAA,EAAA,kBAEAA,EAAA,cAEAA,EAAA,oBAEAA,EAAA,kBAEAA,EAAA,oBAEAA,EAAA,kBAEAA,EAAA,oBAEAA,EAAA,gBAEAA,EAAA,sBAEAA,EAAA,mBACD,CAzBD,CAAYA,KAAAA,GAAsB,KAgDlC,SAAYC,GAEVA,EAAA,4BAEAA,EAAA,UAEAA,EAAA,gBAEAA,EAAA,gBAEAA,EAAA,cAEAA,EAAA,kBAEAA,EAAA,gBAEAA,EAAA,iBACD,CAjBD,CAAYA,KAAAA,GAAuB,KAoCnC,SAAYC,GAEVA,EAAA,YAEAA,EAAA,uBACD,CALD,CAAYA,KAAAA,GAAwB,KAkBpC,SAAYC,GAEVA,EAAA,4BAEAA,EAAA,oBAEAA,EAAA,0BAEAA,EAAA,qBACD,CATD,CAAYA,KAAAA,GAAsC,KAwBlD,SAAYC,GAEVA,EAAA,kBAEAA,EAAA,YAEAA,EAAA,aACD,CAPD,CAAYA,KAAAA,GAAU,KAqBtB,SAAYC,GAEVA,EAAA,mBACD,CAHD,CAAYA,KAAAA,GAAyB,KAerC,SAAYC,GAEVA,EAAA,YAEAA,EAAA,aACD,CALD,CAAYA,KAAAA,GAA+B,KAkB3C,SAAYC,GAEVA,EAAA,kBAEAA,EAAA,cAEAA,EAAA,eACD,CAPD,CAAYA,KAAAA,GAAuB,KE3iD5B,MAAMI,GAAc,IAIdC,GAAc,ICS3B,MAAMC,GACJ,sKAWF,MAAMC,GACJ,iFA4EI,SAAUC,GACdC,EACAC,WAEA,MAAMC,EAAgBF,EAAaE,cAInC,GAAoC,SAAhCF,EAAa1vE,QAAQp0D,OACvB,OAAA7C,OAAAD,OAAAC,OAAAD,OAAA,GACK8mI,GAAa,CAChBh3H,KAAM82H,EAAaG,aAGvB,MAAMC,EAAaH,GAAgBA,EAAaG,WAC1CC,EAAaC,QAAkB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYG,UACjCC,EAAiC,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYtlI,KAAKG,KAG9C,GAA6B,WAAzBulI,EACF,OAAAnnI,OAAAD,OAAAC,OAAAD,OAAA,GACK8mI,GAAa,CAChBO,SAAUT,EAAaS,SACvBC,mBAAoBV,EAAaU,qBAIrC,MAAMC,EACsB,cAAzBH,GACEJ,EAA+BtlI,KAAK6lI,iBACvC,CAAC,EACGC,EAAqBvnI,OAAOmgB,KAAKmnH,GAAiB/vE,MACrDk7B,GAA4C,KAAtC60C,EAAgB70C,GAAG+0C,iBAE5B,GAA6B,aAAzBL,GAAuCI,EAAoB,CAC7D,MAAME,EACmB,QAAvBlC,EAAAoB,EAAaG,kBAAU,IAAAvB,EAAAA,EAAK,GAE9B,IAAK,MAAM9qH,KAAOza,OAAOmgB,KAAKmnH,GACxBA,EAAgB7sH,GAAK+sH,iBACvBC,EAAchtH,GAA8B,QAAvBitH,EAAAf,EAAaG,kBAAU,IAAAY,OAAA,EAAAA,EAAGjtH,IAInD,GAAIosH,EACF,IAAK,MAAMpsH,KAAOza,OAAOmgB,KAAK0mH,GAC5BY,EAAchtH,GAAOosH,EAAcpsH,GAGvC,OAAOusH,GACJL,EAAaG,YACbD,GACsD,IAAvD7mI,OAAO2nI,oBAAoBL,GAAiBpvI,OAE1CuvI,EADA,IAEN,CAEA,OAvFF,SACEG,GAEA,MAAMC,EAAsB7nI,OAAAD,OAAAC,OAAAD,OAAA,GACvB6nI,EAAel5C,SACfk5C,EAAe/3H,MAEpB,OACE+3H,EAAeE,iBAC+C,IAA9D9nI,OAAO2nI,oBAAoBE,GAAwB3vI,OAE5C0vI,EAAeG,eAAiB,CAAEl4H,KAAM,MAAS,KAEjD+3H,EAAeG,eACnB/nI,OAAAD,OAAAC,OAAAD,OAAA,GACM6nI,EAAel5C,SAAO,CACzB7+E,KAAM+3H,EAAe/3H,OAEvBg4H,CAER,CAmESG,CAAuC,CAC5Cn4H,KAAM82H,EAAaG,WACnBp4C,QAASm4C,EACTiB,gBAAiBd,EACjBe,gBApK4B3kI,EAoKIujI,EAAaG,WApKDmB,EAoKad,EAlKtC,cAAnBc,GACmB,eAAnBA,IACkB,kBAAV7kI,GACW,kBAAVA,GACU,mBAAVA,GAEL,QADY,OAAd6kI,QAAc,IAAdA,OAAc,EAAdA,EAAgBl8H,MAAM,0EAEZqpD,IAAVhyD,GACU,OAAVA,MAVA,IAA0BA,EAAgB6kI,CAsKhD,CCnKA,MAAMC,GACJr5H,WAAAA,GAEwC,IADtBs5H,EAAAjqI,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAuC,CAAC,EACxCkqI,EAAAlqI,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,IAAAA,UAAA,GADA,KAAAiqI,aAAAA,EACA,KAAAC,MAAAA,CACf,CAKHC,mBAAAA,CAAoBC,EAAgBllI,EAAYmlI,GAC9C,MAAMC,EAAiBA,CACrBC,EACAC,KAEA,MAAM,IAAI/oI,MAAM,IAAD87B,OACT8sG,EAAU,kBAAA9sG,OAAiBr4B,EAAK,qCAAAq4B,OAAoCgtG,EAAc,OAAAhtG,OAAMitG,EAAe,OAG/G,GAAIJ,EAAOK,kBAAyBvzE,IAAVhyD,GAAiC,OAAVA,EAAgB,CAC/D,MAAM,iBACJwlI,EAAgB,iBAChBC,EAAgB,iBAChBC,EAAgB,iBAChBC,EAAgB,SAChBC,EAAQ,UACRC,EAAS,SACTC,EAAQ,UACRC,EAAS,WACTC,EAAU,QACVC,EAAO,YACPC,GACEhB,EAAOK,YA4BX,QA3ByBvzE,IAArBwzE,GAAkCxlI,GAASwlI,GAC7CJ,EAAe,mBAAoBI,QAEZxzE,IAArByzE,GAAkCzlI,GAASylI,GAC7CL,EAAe,mBAAoBK,QAEZzzE,IAArB0zE,GAAkC1lI,EAAQ0lI,GAC5CN,EAAe,mBAAoBM,QAEZ1zE,IAArB2zE,GAAkC3lI,EAAQ2lI,GAC5CP,EAAe,mBAAoBO,QAEpB3zE,IAAb4zE,GAA0B5lI,EAAMlL,OAAS8wI,GAC3CR,EAAe,WAAYQ,QAEX5zE,IAAd6zE,GAA2B7lI,EAAMlL,OAAS+wI,GAC5CT,EAAe,YAAaS,QAEb7zE,IAAb8zE,GAA0B9lI,EAAMlL,OAASgxI,GAC3CV,EAAe,WAAYU,QAEX9zE,IAAd+zE,GAA2B/lI,EAAMlL,OAASixI,GAC5CX,EAAe,YAAaW,QAEX/zE,IAAfg0E,GAA4BhmI,EAAQgmI,IAAe,GACrDZ,EAAe,aAAcY,GAE3BC,EAAS,CACX,MAAMl3D,EAAqC,kBAAZk3D,EAAuB,IAAIt+H,OAAOs+H,GAAWA,EACvD,kBAAVjmI,GAA+C,OAAzBA,EAAM2I,MAAMomE,IAC3Cq2D,EAAe,UAAWa,EAE9B,CAEEC,GACAlmI,EAAMm0D,MAAK,CAAC8kC,EAAWz9F,EAAW2qI,IAAmBA,EAAGr9H,QAAQmwF,KAAUz9F,KAE1E4pI,EAAe,cAAec,EAElC,CACF,CAeAE,SAAAA,CACElB,EACAz3E,EACA03E,GACwC,IAAxC7qI,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA6B,CAAEurI,IAAK,CAAC,aAErC,MAAMC,EAA4C,CAChDD,IAAK,CACHE,SAA8B,QAApBpE,EAAA7nI,EAAQ+rI,IAAIE,gBAAQ,IAAApE,EAAAA,EAAI,GAClCqE,YAAoC,QAAvBlC,EAAAhqI,EAAQ+rI,IAAIG,mBAAW,IAAAlC,GAAAA,EACpCmC,WAAkC,QAAtBC,EAAApsI,EAAQ+rI,IAAII,kBAAU,IAAAC,EAAAA,EAAIvD,KAG1C,IAAIz1G,EAAe,CAAC,EACpB,MAAMi5G,EAAazB,EAAO7mI,KAAKG,KAC1B2mI,IACHA,EAAaD,EAAOd,gBAEkB,OAApCuC,EAAWh+H,MAAM,iBACnB+kB,EAAU,IAGRw3G,EAAO0B,aACTn5E,EAASy3E,EAAOrlI,cAalB,MAAM,SAAEgnI,EAAQ,SAAE/C,GAAaoB,EAE/B,GAAI2B,GAAY/C,QAAuB9xE,IAAXvE,EAC1B,MAAM,IAAIlxD,MAAM,GAAD87B,OAAI8sG,EAAU,0BAE/B,GAAI0B,IAAa/C,SAAwB9xE,IAAXvE,GAAmC,OAAXA,GACpD,MAAM,IAAIlxD,MAAM,GAAD87B,OAAI8sG,EAAU,kCAE/B,IAAK0B,IAAyB,IAAb/C,GAAiC,OAAXr2E,EACrC,MAAM,IAAIlxD,MAAM,GAAD87B,OAAI8sG,EAAU,qBAG/B,QAAenzE,IAAXvE,GAAmC,OAAXA,EAC1B//B,EAAU+/B,OAEV,GAAmC,OAA/Bk5E,EAAWh+H,MAAM,UACnB+kB,EAAU+/B,OACL,GAA0E,OAAtEk5E,EAAWh+H,MAAM,iDAC1B+kB,EAsPR,SAA6Bo5G,EAAkB3B,EAAoBnlI,GACjE,GAAc,OAAVA,QAA4BgyD,IAAVhyD,EACpB,GAAoC,OAAhC8mI,EAASn+H,MAAM,cACjB,GAAqB,kBAAV3I,EACT,MAAM,IAAIzD,MAAM,GAAD87B,OAAI8sG,EAAU,gBAAA9sG,OAAer4B,EAAK,kCAE9C,GAAoC,OAAhC8mI,EAASn+H,MAAM,cACxB,GAA+B,kBAApB3I,EAAM+mI,UACf,MAAM,IAAIxqI,MAAM,GAAD87B,OAAI8sG,EAAU,iBAAA9sG,OAAgBr4B,EAAK,mCAE/C,GAAkC,OAA9B8mI,EAASn+H,MAAM,YACxB,GAAiC,kBAApB3I,EAAM+mI,YD7WGC,EC6WmChnI,GD5WtDqjI,GAAep7H,KAAK++H,IC6WrB,MAAM,IAAIzqI,MAAM,GAAD87B,OACV8sG,EAAU,iBAAA9sG,OAAgBr4B,EAAK,oDAGjC,GAAqC,OAAjC8mI,EAASn+H,MAAM,eACxB,GAAqB,mBAAV3I,EACT,MAAM,IAAIzD,MAAM,GAAD87B,OAAI8sG,EAAU,gBAAA9sG,OAAer4B,EAAK,mCAE9C,GAAoC,OAAhC8mI,EAASn+H,MAAM,aAAuB,CAC/C,MAAMs+H,SAAoBjnI,EAC1B,GACiB,WAAfinI,GACsB,oBAAfjnI,EAAMknI,MACQ,oBAAdlnI,EAAMmnI,OACXnnI,aAAiBonI,eAClBA,YAAYC,OAAOrnI,KAED,oBAATsnI,MAAuC,kBAATA,QAAsBtnI,aAAiBsnI,QAChE,aAAfL,EAEA,MAAM,IAAI1qI,MAAM,GAAD87B,OACV8sG,EAAU,mGAGnB,CDtYE,IAAsB6B,ECwY1B,OAAOhnI,CACT,CA7RkBunI,CAAoBZ,EAAYxB,EAAY13E,QACjD,GAAoC,OAAhCk5E,EAAWh+H,MAAM,WAAqB,CAE/C+kB,EA4RR,SAA2By3G,EAAoBqC,EAA2BxnI,GACxE,IAAKwnI,EACH,MAAM,IAAIjrI,MAAM,qDAAD87B,OACwC8sG,EAAU,sBASnE,IANkBqC,EAAcrzE,MAAM8kC,GACN,kBAAnBA,EAAK8tC,UACP9tC,EAAK7wF,gBAAkBpI,EAAMoI,cAE/B6wF,IAASj5F,IAGhB,MAAM,IAAIzD,MAAM,GAAD87B,OACVr4B,EAAK,8BAAAq4B,OAA6B8sG,EAAU,4BAAA9sG,OAA2BwvC,KAAKynB,UAC7Ek4C,GACD,MAGL,OAAOxnI,CACT,CAhTkBynI,CAAkBtC,EADTD,EACgC7mI,KAAKmpI,cAAe/5E,EACzE,MAC+E,OAA7Ek5E,EAAWh+H,MAAM,wDAEjB+kB,EAkUR,SAA4Bo5G,EAAkB9mI,EAAYmlI,GACxD,QAAcnzE,IAAVhyD,GAAiC,OAAVA,EACzB,GAAkC,OAA9B8mI,EAASn+H,MAAM,WAAqB,CACtC,KAEI3I,aAAiB1J,MACW,kBAApB0J,EAAM+mI,YAA2BvjF,MAAMltD,KAAKwxE,MAAM9nE,KAG5D,MAAM,IAAIzD,MAAM,GAAD87B,OAAI8sG,EAAU,+DAE/BnlI,EACEA,aAAiB1J,KACb0J,EAAM0nI,cAAcxxD,UAAU,EAAG,IACjC,IAAI5/E,KAAK0J,GAAO0nI,cAAcxxD,UAAU,EAAG,GACnD,MAAO,GAAsC,OAAlC4wD,EAASn+H,MAAM,eAAyB,CACjD,KAEI3I,aAAiB1J,MACW,kBAApB0J,EAAM+mI,YAA2BvjF,MAAMltD,KAAKwxE,MAAM9nE,KAG5D,MAAM,IAAIzD,MAAM,GAAD87B,OAAI8sG,EAAU,+DAE/BnlI,EAAQA,aAAiB1J,KAAO0J,EAAM0nI,cAAgB,IAAIpxI,KAAK0J,GAAO0nI,aACxE,MAAO,GAA6C,OAAzCZ,EAASn+H,MAAM,sBAAgC,CACxD,KAEI3I,aAAiB1J,MACW,kBAApB0J,EAAM+mI,YAA2BvjF,MAAMltD,KAAKwxE,MAAM9nE,KAG5D,MAAM,IAAIzD,MAAM,GAAD87B,OAAI8sG,EAAU,gEAE/BnlI,EAAQA,aAAiB1J,KAAO0J,EAAM2/D,cAAgB,IAAIrpE,KAAK0J,GAAO2/D,aACxE,MAAO,GAAsC,OAAlCmnE,EAASn+H,MAAM,eAAyB,CACjD,KAEI3I,aAAiB1J,MACW,kBAApB0J,EAAM+mI,YAA2BvjF,MAAMltD,KAAKwxE,MAAM9nE,KAG5D,MAAM,IAAIzD,MACR,GAAA87B,OAAG8sG,EAAU,4HAIjBnlI,EApJN,SAAwB8kD,GACtB,IAAKA,EACH,OAGyB,kBAAhBA,EAAEiiF,YACXjiF,EAAI,IAAIxuD,KAAKwuD,IAEf,OAAOhrD,KAAKC,MAAO+qD,EAAWsjB,UAAY,IAC5C,CA2Icu/D,CAAe3nI,EACzB,MAAO,GAAsC,OAAlC8mI,EAASn+H,MAAM,iBDnfxB,SAAqB3I,GACzB,OAAOojI,GAAoBn7H,KAAKjI,EAClC,CCkfW4nI,CAAW5nI,GACd,MAAM,IAAIzD,MAAM,GAAD87B,OACV8sG,EAAU,uDAAA9sG,OAAsDr4B,EAAK,OAKhF,OAAOA,CACT,CA3XkB6nI,CAAmBlB,EAAYl5E,EAAQ03E,GACH,OAArCwB,EAAWh+H,MAAM,gBAC1B+kB,EA4SR,SAAgCy3G,EAAoBnlI,GAClD,QAAcgyD,IAAVhyD,GAAiC,OAAVA,EAAgB,CACzC,KAAMA,aAAiB+sF,YACrB,MAAM,IAAIxwF,MAAM,GAAD87B,OAAI8sG,EAAU,iCAE/BnlI,EAAQ8nI,GAAuB9nI,EACjC,CACA,OAAOA,CACT,CApTkB+nI,CAAuB5C,EAAY13E,GACC,OAArCk5E,EAAWh+H,MAAM,gBAC1B+kB,EAoTR,SAAgCy3G,EAAoBnlI,GAClD,QAAcgyD,IAAVhyD,GAAiC,OAAVA,EAAgB,CACzC,KAAMA,aAAiB+sF,YACrB,MAAM,IAAIxwF,MAAM,GAAD87B,OAAI8sG,EAAU,iCAE/BnlI,EA9IJ,SAA2BitH,GACzB,IAAKA,EACH,OAEF,KAAMA,aAAkBlgC,YACtB,MAAM,IAAIxwF,MAAM,2EAKlB,OAlBF,SAAiB0xE,EAAaphE,GAC5B,IAAIm7H,EAAM/5D,EAAIn5E,OACd,KAAOkzI,EAAM,GAAK,GAAK/5D,EAAI+5D,EAAM,KAAOn7H,KACpCm7H,EAEJ,OAAO/5D,EAAIg6D,OAAO,EAAGD,EACvB,CAYSE,CAFKJ,GAAuB7a,GAEf,KAAKtiH,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAC9D,CAmIYw9H,CAAkBnoI,EAC5B,CACA,OAAOA,CACT,CA5TkBooI,CAAuBjD,EAAY13E,GACA,OAApCk5E,EAAWh+H,MAAM,eAC1B+kB,EAuXR,SACE26G,EACAnD,EACAz3E,EACA03E,EACAmD,EACAhuI,SAEA,IAAK0E,MAAMC,QAAQwuD,GACjB,MAAM,IAAIlxD,MAAM,GAAD87B,OAAI8sG,EAAU,4BAE/B,IAAI3iH,EAAc0iH,EAAO7mI,KAAK2O,QAC9B,IAAKwV,GAAsC,kBAAhBA,EACzB,MAAM,IAAIjmB,MACR,mGAAA87B,OAC4C8sG,EAAU,MAM5B,cAA1B3iH,EAAYnkB,KAAKG,MAAwBgkB,EAAYnkB,KAAKs4H,YAC5Dn0G,EAAiE,QAAnD2/G,EAAAkG,EAAWtD,aAAaviH,EAAYnkB,KAAKs4H,kBAAU,IAAAwL,EAAAA,EAAI3/G,GAEvE,MAAM+lH,EAAY,GAClB,IAAK,IAAI/sI,EAAI,EAAGA,EAAIiyD,EAAO34D,OAAQ0G,IAAK,CACtC,MAAMgtI,EAAkBH,EAAWjC,UAAU5jH,EAAairC,EAAOjyD,GAAI2pI,EAAY7qI,GACjF,GAAIguI,GAAS9lH,EAAYimH,aAAc,CACrC,MAAMC,EAAWlmH,EAAYmmH,mBAAkB,SAAAtwG,OAClC7V,EAAYmmH,oBACrB,QAC0B,cAA1BnmH,EAAYnkB,KAAKG,MACnB+pI,EAAU/sI,GAAEoB,OAAAD,OAAA,GAAQ6rI,GACpBD,EAAU/sI,GAAG0nI,IAAe,CAAE,CAACwF,GAAWlmH,EAAYimH,gBAEtDF,EAAU/sI,GAAK,CAAC,EAChB+sI,EAAU/sI,GAAGlB,EAAQ+rI,IAAII,YAAc+B,EACvCD,EAAU/sI,GAAG0nI,IAAe,CAAE,CAACwF,GAAWlmH,EAAYimH,cAE1D,MACEF,EAAU/sI,GAAKgtI,CAEnB,CACA,OAAOD,CACT,CAnakBK,CACR/tI,KACAqqI,EACAz3E,EACA03E,EACAtB,QAAQhpI,KAAKmqI,OACbsB,GAE6C,OAAtCK,EAAWh+H,MAAM,iBAC1B+kB,EA4ZR,SACE26G,EACAnD,EACAz3E,EACA03E,EACAmD,EACAhuI,GAEA,GAAsB,kBAAXmzD,EACT,MAAM,IAAIlxD,MAAM,GAAD87B,OAAI8sG,EAAU,6BAE/B,MAAM0D,EAAY3D,EAAO7mI,KAAK2B,MAC9B,IAAK6oI,GAAkC,kBAAdA,EACvB,MAAM,IAAItsI,MACR,sGAAA87B,OAC4C8sG,EAAU,MAG1D,MAAM2D,EAAyC,CAAC,EAChD,IAAK,MAAMzxH,KAAOza,OAAOmgB,KAAK0wC,GAAS,CACrC,MAAM+6E,EAAkBH,EAAWjC,UAAUyC,EAAWp7E,EAAOp2C,GAAM8tH,EAAY7qI,GAEjFwuI,EAAezxH,GAAO0xH,GAAkBF,EAAWL,EAAiBF,EAAOhuI,EAC7E,CAGA,GAAIguI,GAASpD,EAAOuD,aAAc,CAChC,MAAMC,EAAWxD,EAAOyD,mBAAqB,SAAHtwG,OAAY6sG,EAAOyD,oBAAuB,QAC9EvvG,EAAS0vG,EAEf,OADA1vG,EAAO8pG,IAAe,CAAE,CAACwF,GAAWxD,EAAOuD,cACpCrvG,CACT,CAEA,OAAO0vG,CACT,CA9bkBE,CACRnuI,KACAqqI,EACAz3E,EACA03E,EACAtB,QAAQhpI,KAAKmqI,OACbsB,GAE4C,OAArCK,EAAWh+H,MAAM,kBAC1B+kB,EAmgBR,SACE26G,EACAnD,EACAz3E,EACA03E,EACAmD,EACAhuI,GAEI2uI,GAAuCZ,EAAYnD,KACrDA,EAASgE,GAAqBb,EAAYnD,EAAQz3E,EAAQ,eAG5D,QAAeuE,IAAXvE,GAAmC,OAAXA,EAAiB,CAC3C,MAAM//B,EAAe,CAAC,EAChBy7G,EAAaC,GAAuBf,EAAYnD,EAAQC,GAC9D,IAAK,MAAM9tH,KAAOza,OAAOmgB,KAAKosH,GAAa,CACzC,MAAME,EAAiBF,EAAW9xH,GAClC,GAAIgyH,EAAeC,SACjB,SAGF,IAAIj3H,EACAk3H,EAAoB77G,EACxB,GAAI26G,EAAWrD,MAEX3yH,EADEg3H,EAAeG,aACNH,EAAeI,QAEfJ,EAAeK,gBAAkBL,EAAeI,YAExD,CACL,MAAME,EAAQC,GAAmBP,EAAejF,gBAChD/xH,EAAWs3H,EAAMv0I,MAEjB,IAAK,MAAMy0I,KAAYF,EAAO,CAC5B,MAAMG,EAAcP,EAAaM,QAEd73E,IAAhB83E,GAA6C,OAAhBA,SACZ93E,IAAhBvE,EAAOp2C,IAAsC,OAAhBo2C,EAAOp2C,UACJ26C,IAAhCq3E,EAAexpI,eAEjB0pI,EAAaM,GAAY,CAAC,GAE5BN,EAAeA,EAAaM,EAC9B,CACF,CAEA,QAAqB73E,IAAjBu3E,GAA+C,OAAjBA,EAAuB,CACvD,GAAIjB,GAASpD,EAAOuD,aAAc,CAChC,MAAMC,EAAWxD,EAAOyD,mBAAkB,SAAAtwG,OAC7B6sG,EAAOyD,oBAChB,QACJY,EAAarG,IAAYtmI,OAAAD,OAAAC,OAAAD,OAAA,GACpB4sI,EAAarG,KAAY,CAC5B,CAACwF,GAAWxD,EAAOuD,cAEvB,CACA,MAAMsB,EAC8B,KAAlCV,EAAejF,eACXe,EAAa,IAAMkE,EAAejF,eAClCe,EAEN,IAAI6E,EAAcv8E,EAAOp2C,GACzB,MAAM4yH,EAA2BhB,GAAuCZ,EAAYnD,IAElF+E,GACAA,EAAyBC,aAAe7yH,QACvB26C,IAAhBg4E,GAA6C,OAAhBA,IAE9BA,EAAc9E,EAAOd,gBAGvB,MAAMoE,EAAkBH,EAAWjC,UACjCiD,EACAW,EACAD,EACAzvI,GAEF,QAAwB03D,IAApBw2E,QAA8Cx2E,IAAb3/C,GAAuC,OAAbA,EAAmB,CAChF,MAAMrS,EAAQ+oI,GAAkBM,EAAgBb,EAAiBF,EAAOhuI,GACpEguI,GAASe,EAAec,gBAI1BZ,EAAarG,IAAeqG,EAAarG,KAAgB,CAAC,EAC1DqG,EAAarG,IAAa7wH,GAAYm2H,GAC7BF,GAASe,EAAeG,aACjCD,EAAal3H,GAAY,CAAE,CAACg3H,EAAeK,gBAAkB1pI,GAE7DupI,EAAal3H,GAAYrS,CAE7B,CACF,CACF,CAEA,MAAMoqI,EApKV,SACE/B,EACAnD,EACAC,GAEA,MAAMkF,EAAuBnF,EAAO7mI,KAAKgsI,qBAEzC,IAAKA,GAAwBnF,EAAO7mI,KAAKs4H,UAAW,CAClD,MAAM2T,EAAcC,GAAwBlC,EAAYnD,EAAQC,GAChE,OAAkB,OAAXmF,QAAW,IAAXA,OAAW,EAAXA,EAAajsI,KAAKgsI,oBAC3B,CAEA,OAAOA,CACT,CAuJuCG,CAA4BnC,EAAYnD,EAAQC,GACnF,GAAIiF,EAA4B,CAC9B,MAAMK,EAAY7tI,OAAOmgB,KAAKosH,GAC9B,IAAK,MAAMuB,KAAkBj9E,EAAQ,CACNg9E,EAAUloE,OAAOooE,GAAOA,IAAOD,MAE1Dh9G,EAAQg9G,GAAkBrC,EAAWjC,UACnCgE,EACA38E,EAAOi9E,GACPvF,EAAa,KAAOuF,EAAiB,KACrCpwI,GAGN,CACF,CAEA,OAAOozB,CACT,CACA,OAAO+/B,CACT,CApnBkBm9E,CACR/vI,KACAqqI,EACAz3E,EACA03E,EACAtB,QAAQhpI,KAAKmqI,OACbsB,IAIN,OAAO54G,CACT,CAeAm9G,WAAAA,CACE3F,EACA4F,EACA3F,GACwC,IAAxC7qI,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA6B,CAAEurI,IAAK,CAAC,eAErC,MAAMC,EAA4C,CAChDD,IAAK,CACHE,SAA8B,QAApBpE,EAAA7nI,EAAQ+rI,IAAIE,gBAAQ,IAAApE,EAAAA,EAAI,GAClCqE,YAAoC,QAAvBlC,EAAAhqI,EAAQ+rI,IAAIG,mBAAW,IAAAlC,GAAAA,EACpCmC,WAAkC,QAAtBC,EAAApsI,EAAQ+rI,IAAII,kBAAU,IAAAC,EAAAA,EAAIvD,IAExC4H,wBAAwD,QAA/BC,EAAA1wI,EAAQywI,+BAAuB,IAAAC,GAAAA,GAE1D,QAAqBh5E,IAAjB84E,GAA+C,OAAjBA,EAWhC,OAVIjwI,KAAKmqI,OAA8B,aAArBE,EAAO7mI,KAAKG,OAAwB0mI,EAAOsE,eAI3DsB,EAAe,SAGW94E,IAAxBkzE,EAAOrlI,eACTirI,EAAe5F,EAAOrlI,cAEjBirI,EAGT,IAAIp9G,EACJ,MAAMi5G,EAAazB,EAAO7mI,KAAKG,KAK/B,GAJK2mI,IACHA,EAAaD,EAAOd,gBAGmB,OAArCuC,EAAWh+H,MAAM,gBACnB+kB,EA2lBN,SACE26G,EACAnD,EACA4F,EACA3F,EACA7qI,WAEA,MAAMmsI,EAAmC,QAAtBtE,EAAA7nI,EAAQ+rI,IAAII,kBAAU,IAAAtE,EAAAA,EAAIgB,GACzC8F,GAAuCZ,EAAYnD,KACrDA,EAASgE,GAAqBb,EAAYnD,EAAQ4F,EAAc,mBAGlE,MAAM3B,EAAaC,GAAuBf,EAAYnD,EAAQC,GAC9D,IAAIh/G,EAAmC,CAAC,EACxC,MAAM8kH,EAAiC,GAEvC,IAAK,MAAM5zH,KAAOza,OAAOmgB,KAAKosH,GAAa,CACzC,MAAME,EAAiBF,EAAW9xH,GAC5BsyH,EAAQC,GAAmBT,EAAW9xH,GAAK+sH,gBACjD6G,EAAqBv2I,KAAKi1I,EAAM,IAChC,MAAM,eAAEvF,EAAc,QAAEqF,EAAO,eAAEC,GAAmBL,EACpD,IAAIU,EAAqB5E,EACF,KAAnBf,QAA4CpyE,IAAnBoyE,IAC3B2F,EAAqB5E,EAAa,IAAMf,GAG1C,MAAM8G,EAA0B7B,EAAoC6B,uBACpE,GAAIA,EAAwB,CAC1B,MAAMC,EAAkB,CAAC,EACzB,IAAK,MAAMC,KAAaxuI,OAAOmgB,KAAK+tH,GAC9BM,EAAUp9D,WAAWk9D,KACvBC,EAAWC,EAAUl1D,UAAUg1D,EAAuBp2I,SAAWuzI,EAAWwC,YACzExB,EAAoChrI,KAAK2B,MAC1C8qI,EAAaM,GACbrB,EACAzvI,IAIJ2wI,EAAqBv2I,KAAK02I,GAE5BjlH,EAAS9O,GAAO8zH,CAClB,MAAO,GAAI9C,EAAWrD,MACpB,GAAIqE,EAAec,gBAAkBW,EAAa5H,IAChD/8G,EAAS9O,GAAOgxH,EAAWwC,YACzBxB,EACAyB,EAAa5H,IAAauG,GAC1BM,EACAzvI,QAEG,GAAI+uI,EAAegC,iBACSr5E,IAA7B84E,EAAarE,GACftgH,EAAS9O,GAAOyzH,EAAarE,GACI,kBAAjBqE,IAGhB3kH,EAAS9O,GAAOyzH,OAEb,CACL,MAAMlyH,EAAe8wH,GAAkBD,GAAWrF,EAClD,GAAIiF,EAAeG,aAAc,CAe/B,MAAM8B,EAAUR,EAAarB,GACvB8B,EAAwC,QAA1BjH,EAAO,OAAPgH,QAAO,IAAPA,OAAO,EAAPA,EAAU5B,UAAgB,IAAApF,EAAAA,EAAI,GAClDn+G,EAAS9O,GAAOgxH,EAAWwC,YACzBxB,EACAkC,EACAxB,EACAzvI,GAEF2wI,EAAqBv2I,KAAK+0I,EAC5B,KAAO,CACL,MAAM35F,EAAWg7F,EAAalyH,GAC9BuN,EAAS9O,GAAOgxH,EAAWwC,YACzBxB,EACAv5F,EACAi6F,EACAzvI,GAEF2wI,EAAqBv2I,KAAKkkB,EAC5B,CACF,KACK,CAEL,IAAI4yH,EACApM,EAAM0L,EAENW,EAAQ,EACZ,IAAK,MAAMxyC,KAAQ0wC,EAAO,CACxB,IAAKvK,EAAK,MACVqM,IACArM,EAAMA,EAAInmC,EACZ,CAEY,OAARmmC,GAAgBqM,EAAQ9B,EAAM70I,SAChCsqI,OAAMptE,GAERw5E,EAAmBpM,EACnB,MAAM6K,EAA2B/E,EAAO7mI,KAAK4rI,yBAkB7C,IAAIzB,EAEJ,IATEyB,GACA5yH,IAAQ4yH,EAAyBC,iBACXl4E,IAArBw5E,GAAuD,OAArBA,IAEnCA,EAAmBtG,EAAOd,gBAKxBplI,MAAMC,QAAQ6rI,EAAazzH,KAA4C,KAAnC8xH,EAAW9xH,GAAK+sH,eAAuB,CAC7EoH,EAAmBV,EAAazzH,GAChC,MAAMq0H,EAAgBrD,EAAWwC,YAC/BxB,EACAmC,EACAzB,EACAzvI,GAIF,IAAK,MAAO+0F,EAAGs8C,KAAM/uI,OAAOivF,QAAQ1lE,GAC7BvpB,OAAOwE,UAAUD,eAAe6G,KAAK0jI,EAAer8C,KACvDq8C,EAAcr8C,GAAKs8C,GAGvBxlH,EAAWulH,CACb,WAAgC15E,IAArBw5E,QAAkEx5E,IAAhCq3E,EAAexpI,eAC1D2oI,EAAkBH,EAAWwC,YAC3BxB,EACAmC,EACAzB,EACAzvI,GAEF6rB,EAAS9O,GAAOmxH,EAEpB,CACF,CAEA,MAAM4B,EAA6BlF,EAAO7mI,KAAKgsI,qBAC/C,GAAID,EAA4B,CAC9B,MAAMwB,EAAwBC,IAC5B,IAAK,MAAMnB,KAAkBvB,EAAY,CAEvC,GADcS,GAAmBT,EAAWuB,GAAgBtG,gBAClD,KAAOyH,EACf,OAAO,CAEX,CACA,OAAO,GAGT,IAAK,MAAMA,KAAoBf,EACzBc,EAAqBC,KACvB1lH,EAAS0lH,GAAoBxD,EAAWwC,YACtCT,EACAU,EAAae,GACb1G,EAAa,KAAO0G,EAAmB,KACvCvxI,GAIR,MAAO,GAAIwwI,IAAiBxwI,EAAQywI,wBAClC,IAAK,MAAM1zH,KAAOza,OAAOmgB,KAAK+tH,QAER94E,IAAlB7rC,EAAS9O,IACR4zH,EAAqBxgI,SAAS4M,IAC9By0H,GAAqBz0H,EAAK/c,KAE3B6rB,EAAS9O,GAAOyzH,EAAazzH,IAKnC,OAAO8O,CACT,CA7xBgB4lH,CACRlxI,KACAqqI,EACA4F,EACA3F,EACAmB,OAEG,CACL,GAAIzrI,KAAKmqI,MAAO,CACd,MAAMyB,EAAaH,EAAeD,IAAII,gBAMJz0E,IAA9B84E,EAAa5H,UAA2DlxE,IAA7B84E,EAAarE,KAC1DqE,EAAeA,EAAarE,GAEhC,CAEsC,OAAlCE,EAAWh+H,MAAM,cACnB+kB,EAAUs+G,WAAWlB,GACjBtnF,MAAM91B,KACRA,EAAUo9G,IAEgC,OAAnCnE,EAAWh+H,MAAM,cAExB+kB,EADmB,SAAjBo9G,GAEwB,UAAjBA,GAGCA,EAEsE,OAAzEnE,EAAWh+H,MAAM,oDAC1B+kB,EAAUo9G,EAC0D,OAA3DnE,EAAWh+H,MAAM,sCAC1B+kB,EAAU,IAAIp3B,KAAKw0I,GAC0B,OAApCnE,EAAWh+H,MAAM,eAC1B+kB,EA6GR,SAAwBshC,GACtB,IAAKA,EACH,OAEF,OAAO,IAAI14D,KAAS,IAAJ04D,EAClB,CAlHkBi9E,CAAenB,GACqB,OAArCnE,EAAWh+H,MAAM,gBAC1B+kB,EAAUo6G,GAAoBgD,GACgB,OAArCnE,EAAWh+H,MAAM,gBAC1B+kB,EA6DR,SAA8BugD,GAC5B,IAAKA,EACH,OAEF,GAAIA,GAAgC,kBAAlBA,EAAI84D,UACpB,MAAM,IAAIxqI,MAAM,uEAKlB,OAAOurI,GAFP75D,EAAMA,EAAItjE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAG7C,CAxEkBuhI,CAAqBpB,GACc,OAApCnE,EAAWh+H,MAAM,eAC1B+kB,EA4wBR,SACE26G,EACAnD,EACA4F,EACA3F,EACA7qI,SAEA,IAAI0S,EAAUk4H,EAAO7mI,KAAK2O,QAC1B,IAAKA,GAA8B,kBAAZA,EACrB,MAAM,IAAIzQ,MACR,mGAAA87B,OAC4C8sG,IAGhD,GAAI2F,EAAc,CACX9rI,MAAMC,QAAQ6rI,KAEjBA,EAAe,CAACA,IAMQ,cAAtB99H,EAAQ3O,KAAKG,MAAwBwO,EAAQ3O,KAAKs4H,YACpD3pH,EAAyD,QAA/Cm1H,EAAAkG,EAAWtD,aAAa/3H,EAAQ3O,KAAKs4H,kBAAU,IAAAwL,EAAAA,EAAIn1H,GAG/D,MAAMu7H,EAAY,GAClB,IAAK,IAAI/sI,EAAI,EAAGA,EAAIsvI,EAAah2I,OAAQ0G,IACvC+sI,EAAU/sI,GAAK6sI,EAAWwC,YACxB79H,EACA89H,EAAatvI,GAAE,GAAA68B,OACZ8sG,EAAU,KAAA9sG,OAAI78B,EAAC,KAClBlB,GAGJ,OAAOiuI,CACT,CACA,OAAOuC,CACT,CAnzBkBqB,CACRtxI,KACAqqI,EACA4F,EACA3F,EACAmB,GAE6C,OAAtCK,EAAWh+H,MAAM,mBAC1B+kB,EA2uBR,SACE26G,EACAnD,EACA4F,EACA3F,EACA7qI,GAGA,MAAM0F,EAAQklI,EAAO7mI,KAAK2B,MAC1B,IAAKA,GAA0B,kBAAVA,EACnB,MAAM,IAAIzD,MACR,sGAAA87B,OAC4C8sG,IAGhD,GAAI2F,EAAc,CAChB,MAAMhC,EAAyC,CAAC,EAChD,IAAK,MAAMzxH,KAAOza,OAAOmgB,KAAK+tH,GAC5BhC,EAAezxH,GAAOgxH,EAAWwC,YAAY7qI,EAAO8qI,EAAazzH,GAAM8tH,EAAY7qI,GAErF,OAAOwuI,CACT,CACA,OAAOgC,CACT,CAlwBkBsB,CACRvxI,KACAqqI,EACA4F,EACA3F,EACAmB,GAGN,CAMA,OAJIpB,EAAO0B,aACTl5G,EAAUw3G,EAAOrlI,cAGZ6tB,CACT,EAQI,SAAU2+G,KAId,OAAO,IAAIvH,GAHXhqI,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAuC,CAAC,EACxCA,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,IAAAA,UAAA,GAGF,CAoCA,SAAS8uI,GAAmBj3E,GAC1B,MAAM25E,EAAoB,GAC1B,IAAIC,EAAe,GACnB,GAAI55E,EAAM,CACR,MAAM65E,EAAW75E,EAAKpoD,MAAM,KAE5B,IAAK,MAAM0uF,KAAQuzC,EACoB,OAAjCvzC,EAAKpK,OAAOoK,EAAKnkG,OAAS,GAC5By3I,GAAgBtzC,EAAKgvC,OAAO,EAAGhvC,EAAKnkG,OAAS,GAAK,KAElDy3I,GAAgBtzC,EAChBqzC,EAAQ53I,KAAK63I,GACbA,EAAe,GAGrB,CAEA,OAAOD,CACT,CA+QA,SAAS/B,GACPlC,EACAnD,EACAC,GAEA,MAAMxO,EAAYuO,EAAO7mI,KAAKs4H,UAC9B,IAAKA,EACH,MAAM,IAAIp6H,MAAM,yBAAD87B,OACY8sG,EAAU,qCAAA9sG,OAAoCwvC,KAAKynB,UAC1E41C,OACAlzE,EACA,GACD,OAIL,OAAOq2E,EAAWtD,aAAapO,EACjC,CAOA,SAASyS,GACPf,EACAnD,EACAC,GAEA,IAAIgE,EAAajE,EAAO7mI,KAAK6lI,gBAC7B,IAAKiF,EAAY,CACf,MAAMmB,EAAcC,GAAwBlC,EAAYnD,EAAQC,GAChE,IAAKmF,EACH,MAAM,IAAI/tI,MAAM,mDAAD87B,OAAoD6sG,EAAO7mI,KAAKs4H,UAAS,OAG1F,GADAwS,EAAwB,OAAXmB,QAAW,IAAXA,OAAW,EAAXA,EAAajsI,KAAK6lI,iBAC1BiF,EACH,MAAM,IAAI5sI,MACR,iEAAA87B,OACawvC,KAAKynB,UAAUg7C,GAAY,eAAAjyG,OACpC6sG,EAAO7mI,KAAKs4H,UACd,kBAAAt+F,OAAiB8sG,EAAU,MAGnC,CAEA,OAAOgE,CACT,CAqHA,SAASJ,GACPM,EACAb,EACAF,EACAhuI,GAEA,IAAKguI,IAAUe,EAAeZ,aAC5B,OAAOD,EAGT,MAAME,EAAWW,EAAeV,mBAAkB,SAAAtwG,OACrCgxG,EAAeV,oBACxB,QACEF,EAAe,CAAE,CAACC,GAAWW,EAAeZ,cAElD,GAAI,CAAC,aAAah+H,SAAS4+H,EAAehrI,KAAKG,MAAO,CACpD,GAAIgqI,EAAgBtF,IAClB,OAAOsF,EACF,CACL,MAAMpvG,EAAMx8B,OAAAD,OAAA,GAAa6rI,GAEzB,OADApvG,EAAO8pG,IAAeuF,EACfrvG,CACT,CACF,CACA,MAAMA,EAAc,CAAC,EAGrB,OAFAA,EAAO9+B,EAAQ+rI,IAAII,YAAc+B,EACjCpvG,EAAO8pG,IAAeuF,EACfrvG,CACT,CAEA,SAAS0yG,GAAqBlzH,EAAsBte,GAClD,MAAO,CAAC4oI,GAAa5oI,EAAQ+rI,IAAII,YAAYh8H,SAASmO,EACxD,CAsSA,SAASswH,GACPb,EACAnD,EACAz3E,EACAg/E,SAEA,MAAMxC,EAA2BhB,GAAuCZ,EAAYnD,GAEpF,GAAI+E,EAA0B,CAC5B,IAAIyC,EAAoBzC,EAAyBwC,GACjD,GAAIC,EAAmB,CAEW,mBAA5BD,IACFC,EAAoBA,EAAkB/hI,QAAQ,OAAQ,KAExD,MAAMgiI,EAAqBl/E,EAAOi/E,GAC5B5F,EAAiC,QAAtB3E,EAAA+C,EAAO7mI,KAAKuuI,kBAAU,IAAAzK,EAAAA,EAAI+C,EAAO7mI,KAAKs4H,UAEvD,GAAkC,kBAAvBgW,GAAmC7F,EAAU,CACtD,MAAM+F,EAjDd,SACEC,EACAH,EACA7F,GAEA,MAAMiG,EAAmB,CAACjG,GAC1B,KAAOiG,EAAiBj4I,QAAQ,CAC9B,MAAMk4I,EAAcD,EAAiB5iF,QAC/B8iF,EACJN,IAAuBK,EACnBL,EACAK,EAAc,IAAML,EAC1B,GAAI/vI,OAAOwE,UAAUD,eAAe6G,KAAK8kI,EAAgBG,GACvD,OAAOH,EAAeG,GAEtB,IAAK,MAAOzuI,EAAM0mI,KAAWtoI,OAAOivF,QAAQihD,GAExCtuI,EAAKwvE,WAAWg/D,EAAc,MAC9B9H,EAAO7mI,KAAKuuI,aAAeI,GAC3B9H,EAAO7mI,KAAKs4H,WAEZoW,EAAiBr4I,KAAKwwI,EAAO7mI,KAAKs4H,UAI1C,CAGF,CAqBkCuW,CACxB7E,EAAWtD,aAAa+H,eACxBH,EACA7F,GAEE+F,IACF3H,EAAS2H,EAEb,CACF,CACF,CACA,OAAO3H,CACT,CAEA,SAAS+D,GACPZ,EACAnD,GAEA,OACEA,EAAO7mI,KAAK4rI,0BACZkD,GAAkC9E,EAAYnD,EAAO7mI,KAAKuuI,aAC1DO,GAAkC9E,EAAYnD,EAAO7mI,KAAKs4H,UAE9D,CAEA,SAASwW,GACP9E,EACAvB,GAEA,OACEA,GACAuB,EAAWtD,aAAa+B,IACxBuB,EAAWtD,aAAa+B,GAAUzoI,KAAK4rI,wBAE3C,CAKO,MAAMmD,GAYD,WAZCA,GAaH,SAbGA,GAcH,SCpqCJ,MAAOC,WAAmB9wI,MAC9BkP,WAAAA,CAAYT,GACVuvD,MAAMvvD,GACNnQ,KAAK2D,KAAO,YACd,EC+BF,MAAM8uI,GACgB,qBAAZjsG,SAA2BA,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,IAAeA,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYksG,YAAUv7E,EAE1E,IAAIw7E,GACAC,GAA8B,GAC9BC,GAA8B,GAClC,MAAMC,GAAwB,GAE1BL,IACFM,GAAON,IAGT,MAAMO,GAAkBjxI,OAAOD,QAC5B6L,GACQslI,GAAetlI,IAExB,CACEolI,UACAG,WACAC,QAyCJ,WACE,MAAM50G,EAASo0G,IAAiB,GAEhC,OADAI,GAAO,IACAx0G,CACT,EA5CIp3B,ICpFE,WACJ,GAAIlH,UAAKhG,OAAS,EAAG,CACnB,MAAMm5I,EAAW32H,OAAMxc,UAAAhG,QAAA,OAAAk9D,EAAAl3D,UAAA,IACnBmzI,EAASxjI,SAAS,UACpB7Q,QAAQC,SAAMiB,WACLmzI,EAASxjI,SAAS,YAC3B7Q,QAAQi5F,QAAK/3F,WACJmzI,EAASxjI,SAAS,SAC3B7Q,QAAQmR,QAAKjQ,YACJmzI,EAASxjI,SAAS,YAC3B7Q,QAAQg5F,SAAM93F,WAIlB,CACF,IDyEA,SAAS8yI,GAAOM,GACdV,GAAgBU,EAChBT,GAAoB,GACpBC,GAAoB,GACpB,MAAMS,EAAW,MACXC,EAAgBF,EAAW3jI,MAAM,KAAKmoB,KAAK27G,GAAOA,EAAGxlI,OAAO8B,QAAQwjI,EAAU,SACpF,IAAK,MAAME,KAAMD,EACXC,EAAGrgE,WAAW,KAChB0/D,GAAkBh5I,KAAK,IAAIiT,OAAO,IAAD0wB,OAAKg2G,EAAGpG,OAAO,GAAE,OAElDwF,GAAkB/4I,KAAK,IAAIiT,OAAO,IAAD0wB,OAAKg2G,EAAE,OAG5C,IAAK,MAAMloH,KAAYwnH,GACrBxnH,EAAS4nH,QAAUA,GAAQ5nH,EAAS3d,UAExC,CAEA,SAASulI,GAAQvlI,GACf,GAAIA,EAAUi7C,SAAS,KACrB,OAAO,EAGT,IAAK,MAAM6qF,KAAWZ,GACpB,GAAIY,EAAQrmI,KAAKO,GACf,OAAO,EAGX,IAAK,MAAM+lI,KAAoBd,GAC7B,GAAIc,EAAiBtmI,KAAKO,GACxB,OAAO,EAGX,OAAO,CACT,CAQA,SAASslI,GAAetlI,GACtB,MAAMgmI,EAAwB5xI,OAAOD,QAQrC,WACE,IAAK6xI,EAAYT,QACf,OACD,QAAAU,EAAA3zI,UAAAhG,OAHe45I,EAAW,IAAA1vI,MAAAyvI,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAXD,EAAWC,GAAA7zI,UAAA6zI,GAIvBD,EAAK55I,OAAS,IAChB45I,EAAK,GAAK,GAAHr2G,OAAM7vB,EAAS,KAAA6vB,OAAIq2G,EAAK,KAEjCF,EAAYxsI,OAAO0sI,EACrB,GAhBmD,CACjDX,QAASA,GAAQvlI,GACjB+rB,WACAvyB,IAAK6rI,GAAS7rI,IACdwG,YACAuzC,YAeF,OAFA4xF,GAAUj5I,KAAK85I,GAERA,CACT,CAEA,SAASj6G,KACP,MAAM1/B,EAAQ84I,GAAU7kI,QAAQjO,MAChC,OAAIhG,GAAS,IACX84I,GAAU99F,OAAOh7C,EAAO,IACjB,EAGX,CAEA,SAASknD,GAAuBvzC,GAC9B,MAAMgmI,EAAcV,GAAe,GAADz1G,OAAIx9B,KAAK2N,UAAS,KAAA6vB,OAAI7vB,IAExD,OADAgmI,EAAYxsI,IAAMnH,KAAKmH,IAChBwsI,CACT,CAEA,YExEMI,GAA8B,CAAC,UAAW,OAAQ,UAAW,SAI7DC,GAAW,CACf1uE,QAAS,IACTp1D,KAAM,IACNg1D,QAAS,IACTlmE,MAAO,KAGT,SAASi1I,GACP75I,EACAwH,GAEAA,EAAMuF,IAAM,WACV/M,EAAO+M,OAAIlH,UACb,CACF,CAEA,SAASi0I,GAA0BhwE,GACjC,OAAO6vE,GAA4BnkI,SAASs0D,EAC9C,CAOM,SAAUiwE,GAAoB10I,GAClC,MAAM20I,EAAoB,IAAIhoI,IACxBioI,EACgB,qBAAZ7tG,SAA2BA,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,IAAeA,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAY/mC,EAAQ60I,0BACtEn9E,EAEF,IAAIuN,EAEJ,MAAM6vE,EAA4Cx8C,GAAMt4F,EAAQkO,WAKhE,SAAS6mI,EAAmBtwE,GAC1B,GAAIA,IAAUgwE,GAA0BhwE,GACtC,MAAM,IAAIxiE,MAAM,sBAAD87B,OACS0mC,EAAK,0BAAA1mC,OAAyBu2G,GAA4BryG,KAAK,OAGzFgjC,EAAWR,EAEX,MAAM0uE,EAAoB,GAC1B,IAAK,MAAM7sE,KAAUquE,EACfK,EAAa1uE,IACf6sE,EAAkB/4I,KAAKksE,EAAOp4D,WAIlCoqF,GAAMg7C,OAAOH,EAAkBlxG,KAAK,KACtC,CAeA,SAAS+yG,EAAa1uE,GACpB,OAAOijE,QAAQtkE,GAAYsvE,GAASjuE,EAAO7B,QAAU8vE,GAAStvE,GAChE,CAEA,SAASgwE,EACPt6I,EACA8pE,GAEA,MAAM6B,EAA+BhkE,OAAOD,OAAO1H,EAAO8mD,OAAOgjB,GAAQ,CACvEA,UAKF,GAFA+vE,GAAe75I,EAAQ2rE,GAEnB0uE,EAAa1uE,GAAS,CACxB,MAAM6sE,EAAoB76C,GAAMo7C,UAChCp7C,GAAMg7C,OAAOH,EAAoB,IAAM7sE,EAAOp4D,UAChD,CAIA,OAFAymI,EAAkB1nI,IAAIq5D,GAEfA,CACT,CAiBA,OA1EAwuE,EAAaptI,IAAM,WACjB4wF,GAAM5wF,OAAIlH,UACZ,EAoBIo0I,IAEEH,GAA0BG,GAC5BG,EAAmBH,GAEnBt1I,QAAQC,MAAM,GAADw+B,OACR/9B,EAAQ60I,mBAAkB,+BAAA92G,OAA8B62G,EAAe,kDAAA72G,OAAiDu2G,GAA4BryG,KACrJ,MACD,OA4CA,CACLizG,YAAaH,EACbI,YAjBF,WACE,OAAOlwE,CACT,EAgBEmwE,mBAdF,SAAmClnI,GACjC,MAAMmnI,EAAgDP,EAAarzF,OAAOvzC,GAE1E,OADAsmI,GAAeM,EAAcO,GACtB,CACL91I,MAAO01I,EAAaI,EAAkB,SACtC5vE,QAASwvE,EAAaI,EAAkB,WACxC5kI,KAAMwkI,EAAaI,EAAkB,QACrCxvE,QAASovE,EAAaI,EAAkB,WAE5C,EAME/uE,OAAQwuE,EAEZ,CAEA,MAAMtuI,GAAUkuI,GAAoB,CAClCG,mBAAoB,6BACpB3mI,UAAW,oBAaqD1H,GAAQ8/D,OAqBpE,SAAU8uE,GAAmBlnI,GACjC,OAAO1H,GAAQ4uI,mBAAmBlnI,EACpC,CCxPA,SAASonI,GAAcpxI,GACrB,OAAOA,EAAK4J,aACd,CAQA,MAAMynI,GAGJpkI,WAAAA,CAAYqkI,GAEV,GADAj1I,KAAKk1I,YAAc,IAAIlpI,IACnBipI,EACF,IAAK,MAAME,KAAcpzI,OAAOmgB,KAAK+yH,GACnCj1I,KAAK4O,IAAIumI,EAAYF,EAAWE,GAGtC,CAQOvmI,GAAAA,CAAIjL,EAAcwB,GACvBnF,KAAKk1I,YAAYtmI,IAAImmI,GAAcpxI,GAAO,CAAEA,OAAMwB,MAAOsX,OAAOtX,GAAO6I,QACzE,CAOO8C,GAAAA,CAAInN,SACT,OAAgD,QAAzC2jI,EAAAtnI,KAAKk1I,YAAYpkI,IAAIikI,GAAcpxI,WAAM,IAAA2jI,OAAA,EAAAA,EAAEniI,KACpD,CAMO8O,GAAAA,CAAItQ,GACT,OAAO3D,KAAKk1I,YAAYjhI,IAAI8gI,GAAcpxI,GAC5C,CAMO+/B,OAAO//B,GACZ3D,KAAKk1I,YAAYxxG,OAAOqxG,GAAcpxI,GACxC,CAKOyxI,MAAAA,GACL,MAAM72G,EAAyB,CAAC,EAChC,IAFYt+B,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAsC,CAAC,GAEvCo1I,aACV,IAAK,MAAMvhE,KAAS9zE,KAAKk1I,YAAY76D,SACnC97C,EAAOu1C,EAAMnwE,MAAQmwE,EAAM3uE,WAG7B,IAAK,MAAOmwI,EAAgBxhE,KAAU9zE,KAAKk1I,YACzC32G,EAAO+2G,GAAkBxhE,EAAM3uE,MAInC,OAAOo5B,CACT,CAKO9zB,QAAAA,GACL,OAAOuiE,KAAKynB,UAAUz0F,KAAKo1I,OAAO,CAAEC,cAAc,IACpD,CAKA,CAACpzI,OAAOkB,YACN,OAlFJ,UAAyB00B,GACvB,IAAK,MAAMi8C,KAASj8C,EAAIwiD,cAChB,CAACvG,EAAMnwE,KAAMmwE,EAAM3uE,MAE7B,CA8EWowI,CAAev1I,KAAKk1I,YAC7B,EAOI,SAAUM,GAAkBP,GAChC,OAAO,IAAID,GAAgBC,EAC7B,CClGM,SAAUQ,KACd,IAAItJ,EAAO,GACX,IAAK,IAAIxrI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,MAAM+0I,EAAez2I,KAAKC,MAAsB,GAAhBD,KAAKuL,UAGnC2hI,GADQ,KAANxrI,EACM,IACO,KAANA,EAEe,EAAf+0I,EAAsB,EAGvBA,EAAajrI,SAAS,IAGtB,IAAN9J,GAAiB,KAANA,GAAkB,KAANA,GAAkB,KAANA,IACrCwrI,GAAQ,IAEZ,CACA,OAAOA,CACT,QCfA,MAAMwJ,GACsC,oBAAjB,QAAlBrO,GAAU,OAAVsO,iBAAU,IAAVA,gBAAU,EAAVA,WAAYxiD,cAAM,IAAAk0C,QAAA,EAAAA,GAAEuO,YACvBD,WAAWxiD,OAAOyiD,WAAWr8G,KAAKo8G,WAAWxiD,QAC7CqiD,GAOA,SAAUI,KACd,OAAOF,IACT,CC6GA,MAAMG,GAsBJllI,WAAAA,CAAYnR,qBACVO,KAAKS,IAAMhB,EAAQgB,IACnBT,KAAK4R,KAAOnS,EAAQmS,KACpB5R,KAAKywF,QAAyB,QAAf62C,EAAA7nI,EAAQgxF,eAAO,IAAA62C,EAAAA,EAAIkO,KAClCx1I,KAAK4E,OAAuB,QAAd6kI,EAAAhqI,EAAQmF,cAAM,IAAA6kI,EAAAA,EAAI,MAChCzpI,KAAKL,QAAyB,QAAfksI,EAAApsI,EAAQE,eAAO,IAAAksI,EAAAA,EAAI,EAClC7rI,KAAK+1I,cAAgBt2I,EAAQs2I,cAC7B/1I,KAAK8+B,SAAWr/B,EAAQq/B,SACxB9+B,KAAKg2I,iBAA2C,QAAxB7F,EAAA1wI,EAAQu2I,wBAAgB,IAAA7F,GAAAA,EAChDnwI,KAAKi2I,cAAgBx2I,EAAQw2I,cAC7Bj2I,KAAKk2I,0BAA4Bz2I,EAAQy2I,0BACzCl2I,KAAKm2I,gBAAyC,QAAvBC,EAAA32I,EAAQ02I,uBAAe,IAAAC,GAAAA,EAC9Cp2I,KAAKq2I,YAAc52I,EAAQ42I,YAC3Br2I,KAAKs2I,iBAAmB72I,EAAQ62I,iBAChCt2I,KAAKu2I,mBAAqB92I,EAAQ82I,mBAClCv2I,KAAKw4G,UAAY/4G,EAAQ+4G,WAAaq9B,KACtC71I,KAAKw2I,wBAAyD,QAA/BC,EAAAh3I,EAAQ+2I,+BAAuB,IAAAC,GAAAA,EAC9Dz2I,KAAK02I,qBAAmD,QAA5BC,EAAAl3I,EAAQi3I,4BAAoB,IAAAC,GAAAA,EACxD32I,KAAK42I,iBAAmBn3I,EAAQm3I,iBAChC52I,KAAK62I,YAAcp3I,EAAQo3I,WAC7B,ECjKF,MAAMC,GAAkB,IAAI1qI,IAAmB,CAAC,cAAe,YAAa,QAAS,SAsGrF,MAAM2qI,GAIJnmI,WAAAA,CAAoBomI,SAHZ,KAAAC,UAAkC,GAIxCj3I,KAAKi3I,UAA8B,QAAlB3P,EAAQ,OAAR0P,QAAQ,IAARA,OAAQ,EAARA,EAAUtsI,MAAM,UAAE,IAAA48H,EAAAA,EAAI,GACvCtnI,KAAKk3I,sBAAmB//E,CAC1B,CAEOggF,SAAAA,CAAUC,GAAsD,IAA9B33I,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA4B,CAAC,EACpE,GAAIR,EAAQ43I,OAAS53I,EAAQ63I,WAC3B,MAAM,IAAI51I,MAAM,sDAElB,GAAIjC,EAAQ43I,QAAUP,GAAgB7iI,IAAIxU,EAAQ43I,OAChD,MAAM,IAAI31I,MAAM,uBAAD87B,OAAwB/9B,EAAQ43I,QAEjD,GAAI53I,EAAQ63I,aAAeR,GAAgB7iI,IAAIxU,EAAQ63I,YACrD,MAAM,IAAI51I,MAAM,4BAAD87B,OAA6B/9B,EAAQ63I,aAEtDt3I,KAAKi3I,UAAUp9I,KAAK,CAClBu9I,SACA33I,YAEFO,KAAKk3I,sBAAmB//E,CAC1B,CAEOogF,YAAAA,CAAa93I,GAClB,MAAM+3I,EAAoC,GAe1C,OAbAx3I,KAAKi3I,UAAYj3I,KAAKi3I,UAAUtwE,QAAQ8wE,KAEnCh4I,EAAQkE,MAAQ8zI,EAAiBL,OAAOzzI,OAASlE,EAAQkE,MACzDlE,EAAQ43I,OAASI,EAAiBh4I,QAAQ43I,QAAU53I,EAAQ43I,SAE7DG,EAAgB39I,KAAK49I,EAAiBL,SAC/B,KAKXp3I,KAAKk3I,sBAAmB//E,EAEjBqgF,CACT,CAEOE,WAAAA,CAAYC,EAAwB3+E,GAYzC,OAXiBh5D,KAAK43I,qBAEIC,aACxB,CAACnxH,EAAM0wH,IACGnkB,GACCmkB,EAAOM,YAAYzkB,EAAKvsG,KAGlCusG,GAAyB0kB,EAAWD,YAAYzkB,IAG5C6kB,CAAS9+E,EAClB,CAEO4+E,kBAAAA,GAIL,OAHK53I,KAAKk3I,mBACRl3I,KAAKk3I,iBAAmBl3I,KAAK+3I,iBAExB/3I,KAAKk3I,gBACd,CAEO5jH,KAAAA,GACL,OAAO,IAAIyjH,GAAa/2I,KAAKi3I,UAC/B,CAEO,aAAOt6G,GACZ,OAAO,IAAIo6G,EACb,CAEQgB,aAAAA,GAoCN,MAAMx5G,EAA2B,GAG3By5G,EAA0C,IAAIhsI,IAEpD,SAASisI,EAAYt0I,GACnB,MAAO,CACLA,OACAqzI,SAAU,IAAI5qI,IACd8rI,QAAQ,EACRC,kBAAkB,EAEtB,CAGA,MAAMC,EAAiBH,EAAY,aAC7BI,EAAUJ,EAAY,QACtBK,EAAmBL,EAAY,eAC/BM,EAAaN,EAAY,SACzBO,EAAYP,EAAY,QAGxBQ,EAAgB,CAACL,EAAgBC,EAASC,EAAkBC,EAAYC,GAG9E,SAASE,EAASrB,GAChB,MAAc,UAAVA,EACKkB,EACY,cAAVlB,EACFe,EACY,gBAAVf,EACFiB,EACY,SAAVjB,EACFmB,EAEAH,CAEX,CAGA,IAAK,MAAM1nI,KAAc3Q,KAAKi3I,UAAW,CACvC,MAAMG,EAASzmI,EAAWymI,OACpB33I,EAAUkR,EAAWlR,QACrBk5I,EAAavB,EAAOzzI,KAC1B,GAAIq0I,EAAU/jI,IAAI0kI,GAChB,MAAM,IAAIj3I,MAAM,kDAElB,MAAM3H,EAAwB,CAC5Bq9I,SACAwB,UAAW,IAAIxsI,IACfysI,WAAY,IAAIzsI,KAEd3M,EAAQ63I,aACVv9I,EAAKu9I,WAAaoB,EAASj5I,EAAQ63I,YACnCv9I,EAAKu9I,WAAWa,kBAAmB,GAErCH,EAAUppI,IAAI+pI,EAAY5+I,GACZ2+I,EAASj5I,EAAQ43I,OACzBL,SAAStqI,IAAI3S,EACrB,CAGA,IAAK,MAAM4W,KAAc3Q,KAAKi3I,UAAW,CACvC,MAAM,OAAEG,EAAM,QAAE33I,GAAYkR,EACtBgoI,EAAavB,EAAOzzI,KACpB5J,EAAOi+I,EAAUlnI,IAAI6nI,GAC3B,IAAK5+I,EACH,MAAM,IAAI2H,MAAM,2BAAD87B,OAA4Bm7G,IAG7C,GAAIl5I,EAAQq5I,cACV,IAAK,MAAMC,KAAmBt5I,EAAQq5I,cAAe,CACnD,MAAME,EAAYhB,EAAUlnI,IAAIioI,GAC5BC,IAGFj/I,EAAK6+I,UAAUlsI,IAAIssI,GACnBA,EAAUH,WAAWnsI,IAAI3S,GAE7B,CAEF,GAAI0F,EAAQw5I,eACV,IAAK,MAAMC,KAAoBz5I,EAAQw5I,eAAgB,CACrD,MAAME,EAAanB,EAAUlnI,IAAIooI,GAC7BC,IAGFA,EAAWP,UAAUlsI,IAAI3S,GACzBA,EAAK8+I,WAAWnsI,IAAIysI,GAExB,CAEJ,CAEA,SAASC,EAAU/B,GACjBA,EAAMa,QAAS,EAEf,IAAK,MAAMn+I,KAAQs9I,EAAML,SACvB,KAAIj9I,EAAKu9I,YAAgBv9I,EAAKu9I,WAAWY,SAAUn+I,EAAKu9I,WAAWN,SAASp/G,OAOhD,IAAxB79B,EAAK6+I,UAAUhhH,KAAY,CAG7B2G,EAAO1kC,KAAKE,EAAKq9I,QAGjB,IAAK,MAAMiC,KAAat/I,EAAK8+I,WAC3BQ,EAAUT,UAAUl1G,OAAO3pC,GAE7Bi+I,EAAUt0G,OAAO3pC,EAAKq9I,OAAOzzI,MAC7B0zI,EAAML,SAAStzG,OAAO3pC,EACxB,CAEJ,CAEA,SAASu/I,IACP,IAAK,MAAMjC,KAASoB,EAAe,CAGjC,GAFAW,EAAU/B,GAENA,EAAML,SAASp/G,KAAO,GAAKy/G,IAAUgB,EAQvC,YAPKA,EAAQH,QAIXkB,EAAUf,IAMVhB,EAAMc,kBAERiB,EAAUf,EAEd,CACF,CAGA,IAAIkB,EAAY,EAChB,KAAOvB,EAAUpgH,KAAO,GAAG,CACzB2hH,IACA,MAAMC,EAAsBj7G,EAAOtkC,OAMnC,GAJAq/I,IAII/6G,EAAOtkC,QAAUu/I,GAAuBD,EAAY,EACtD,MAAM,IAAI73I,MAAM,gEAEpB,CAEA,OAAO68B,CACT,ECvXI,SAAUk7G,GAAS9jF,GACvB,MACmB,kBAAVA,GACG,OAAVA,IACCxxD,MAAMC,QAAQuxD,MACbA,aAAiB7oD,WACjB6oD,aAAiBl6D,KAEvB,CCXM,SAAUi+I,GAAQ7nI,GACtB,GAAI4nI,GAAS5nI,GAAI,CACf,MAAM8nI,EAA4B,kBAAX9nI,EAAElO,KACnBi2I,EAAkC,kBAAd/nI,EAAE1B,QAC5B,OAAOwpI,GAAWC,CACpB,CACA,OAAO,CACT,CCbO,MAAMC,GAAS53I,SCqBhB63I,GAAiB,WAGjBC,GAA4B,CAChC,yBACA,gCACA,iBACA,8BACA,kBACA,oBACA,QACA,2BACA,cAEA,mCACA,+BACA,+BACA,8BACA,gCACA,yBACA,iCACA,gCACA,SAEA,SACA,kBACA,gBACA,aACA,iBACA,eACA,OACA,OACA,UACA,WACA,oBACA,gBACA,sBACA,gBACA,SACA,aACA,cACA,SACA,oBACA,aACA,oBAGIC,GAA0C,CAAC,eAK3C,MAAOC,GAIXrpI,WAAAA,GAGwB,IAFtBspI,6BAA8BC,EAAqB,GACnDC,iCAAkCC,EAAyB,IAAEp6I,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GACzC,CAAC,EACrBk6I,EAAqBJ,GAA0Bv8G,OAAO28G,GACtDE,EAAyBL,GAA8Bx8G,OAAO68G,GAE9Dr6I,KAAKm6I,mBAAqB,IAAI/tI,IAAI+tI,EAAmBtiH,KAAKs8B,GAAMA,EAAE5mD,iBAClEvN,KAAKq6I,uBAAyB,IAAIjuI,IAAIiuI,EAAuBxiH,KAAK1tB,GAAMA,EAAEoD,gBAC5E,CAOO+sI,QAAAA,CAASziF,GACd,MAAM0iF,EAAO,IAAInuI,IACjB,OAAO4gE,KAAKynB,UACV58B,GACA,CAACr7C,EAAarX,KAEZ,GAAIA,aAAiBzD,MACnB,OAAAK,OAAAD,OAAAC,OAAAD,OAAA,GACKqD,GAAK,CACRxB,KAAMwB,EAAMxB,KACZwM,QAAShL,EAAMgL,UAInB,GAAY,YAARqM,EACF,OAAOxc,KAAKw6I,gBAAgBr1I,GACvB,GAAY,QAARqX,EACT,OAAOxc,KAAKy6I,YAAYt1I,GACnB,GAAY,UAARqX,EACT,OAAOxc,KAAK06I,cAAcv1I,GACrB,GAAY,SAARqX,GAGQ,aAARA,GAGQ,kBAARA,EAAJ,CAIA,GAAIrY,MAAMC,QAAQe,IAAUs0I,GAASt0I,GAAQ,CAClD,GAAIo1I,EAAKtmI,IAAI9O,GACX,MAAO,aAETo1I,EAAK7tI,IAAIvH,EACX,CAEA,OAAOA,CAFP,IAIF,EAEJ,CAOOs1I,WAAAA,CAAYt1I,GACjB,GAAqB,kBAAVA,GAAgC,OAAVA,GAA4B,KAAVA,EACjD,OAAOA,EAGT,MAAM1E,EAAM,IAAIk3F,IAAIxyF,GAEpB,IAAK1E,EAAIsf,OACP,OAAO5a,EAGT,IAAK,MAAOqX,KAAQ/b,EAAIk6I,aACjB36I,KAAKq6I,uBAAuBpmI,IAAIuI,EAAIjP,gBACvC9M,EAAIk6I,aAAa/rI,IAAI4N,EAAKs9H,IAI9B,OAAOr5I,EAAIgK,UACb,CAEQ+vI,eAAAA,CAAgB3iF,GACtB,MAAM+iF,EAA2B,CAAC,EAClC,IAAK,MAAMp+H,KAAOza,OAAOmgB,KAAK21C,GACxB73D,KAAKm6I,mBAAmBlmI,IAAIuI,EAAIjP,eAClCqtI,EAAUp+H,GAAOq7C,EAAIr7C,GAErBo+H,EAAUp+H,GAAOs9H,GAGrB,OAAOc,CACT,CAEQF,aAAAA,CAAcv1I,GACpB,GAAqB,kBAAVA,GAAgC,OAAVA,EAC/B,OAAOA,EAGT,MAAMy1I,EAA2B,CAAC,EAElC,IAAK,MAAMpmD,KAAKzyF,OAAOmgB,KAAK/c,GACtBnF,KAAKq6I,uBAAuBpmI,IAAIugF,EAAEjnF,eACpCqtI,EAAUpmD,GAAKrvF,EAAMqvF,GAErBomD,EAAUpmD,GAAKslD,GAInB,OAAOc,CACT,ECxLF,MAAMC,GAAiB,IAAIZ,GA2BrB,MAAOa,WAAkBp5I,MAoC7BkP,WAAAA,CAAYT,GAA+C,IAA9B1Q,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA4B,CAAC,EACxDy/D,MAAMvvD,GACNnQ,KAAK2D,KAAO,YACZ3D,KAAKQ,KAAOf,EAAQe,KACpBR,KAAK+6I,WAAat7I,EAAQs7I,WAM1Bh5I,OAAO4M,eAAe3O,KAAM,UAAW,CAAEmF,MAAO1F,EAAQu5D,QAASjoD,YAAY,IAC7EhP,OAAO4M,eAAe3O,KAAM,WAAY,CAAEmF,MAAO1F,EAAQs+E,SAAUhtE,YAAY,IAG/EhP,OAAO4M,eAAe3O,KAAM65I,GAAQ,CAClC10I,MAAOA,IAGE,cAAPq4B,OAAqBx9B,KAAKmQ,QAAO,QAAAqtB,OAAOq9G,GAAeP,SAAQv4I,OAAAD,OAAAC,OAAAD,OAAC,CAAC,EAC5D9B,MAAI,CACPg5D,QAASh5D,KAAKg5D,QACd+kB,SAAU/9E,KAAK+9E,aAGnBhtE,YAAY,IAGdhP,OAAO49D,eAAe3/D,KAAM86I,GAAUv0I,UACxC,EC9DI,SAAUy0I,GAAmB71I,EAAe81I,GAChD,OAAQA,GACN,IAAK,QACH,OAgDA,SAAiC91I,GACrC,OAAO,IAAIosF,aAAcC,OAAOrsF,EAClC,CAlDa+1I,CAAuB/1I,GAChC,IAAK,SACH,OAAOg2I,GAAmBh2I,GAC5B,IAAK,YACH,OA4DA,SAAgCA,GACpC,MAAM4sF,EAAe5sF,EAAM2K,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC5D,OAAOqrI,GAAmBppD,EAC5B,CA/DaqpD,CAAsBj2I,GAC/B,IAAK,MACH,OAqEA,SAAgCA,GAEpC,MAAMwuF,EAAQ,IAAIzB,WAAW/sF,EAAMlL,OAAS,GAC5C,IAAK,IAAI0G,EAAI,EAAGA,EAAIwE,EAAMlL,OAAS,IAAK0G,EAAG,CACzC,MAAM06I,EAAal2I,EAAM,EAAIxE,GACvB26I,EAAYn2I,EAAM,EAAIxE,EAAI,GAChC,IAAK46I,GAAUtnI,IAAIonI,KAAgBE,GAAUtnI,IAAIqnI,GAE/C,OAAO3nD,EAAMjpF,MAAM,EAAG/J,GAGxBgzF,EAAMhzF,GAAK81G,SAAS,GAADj5E,OAAI69G,GAAU79G,OAAG89G,GAAa,GACnD,CAEA,OAAO3nD,CACT,CApFa6nD,CAAsBr2I,GAEnC,CAgDM,SAAUg2I,GAAmBh2I,GACjC,OAAO,IAAI+sF,WAAW,IAAID,KAAK9sF,IAAQ0yB,KAAK5zB,GAAMA,EAAEgO,WAAW,KACjE,CDzDkB6oI,GAAAW,mBAA6B,qBAK7BX,GAAAY,YAAsB,cC+DxC,MAAMH,GAAY,IAAInvI,IAAI,0BC1GpB,SAAUuvI,GAAqB13I,GACnC,OAAO+kI,QAAQ/kI,GAAqD,oBAAxCA,EAAkC,KAChE,CAEM,SAAU23I,GAAoB33I,GAClC,OAAO+kI,QACL/kI,GAC6C,oBAAnCA,EAAqB43I,WACQ,oBAA7B53I,EAAqBqoI,IAEnC,CCcA,MAAMwP,GAKG,iBAAMpE,CAAY1+E,GAIvB,GAFoC,WADxB,IAAI2+B,IAAI3+B,EAAQv4D,KACLs7I,WAEJ/iF,EAAQw9E,wBACzB,MAAM,IAAI90I,MAAM,qBAAD87B,OAAsBw7B,EAAQv4D,IAAG,6CAGlD,GAAIu4D,EAAQi9E,cACV,MAAM,IAAIv0I,MAAM,sDAGlB,IACE,aAUNwnB,eAA2B8vC,GACzB,MAAM,gBAAEgjF,EAAe,uBAAEC,GAyF3B,SAA0BjjF,GAIxB,MAAMgjF,EAAkB,IAAIztH,gBAG5B,IAAI0tH,EAKAC,EACJ,GAAIljF,EAAQq9E,YAAa,CACvB,GAAIr9E,EAAQq9E,YAAY5nH,QACtB,MAAM,IAAI+jH,GAAW,iEAGvB0J,EAAiB7xI,IACI,UAAfA,EAAM7G,MACRw4I,EAAgBrtH,SAGpBqqC,EAAQq9E,YAAYpgI,iBAAiB,QAASimI,GAC9CD,EAAyBA,WACnBC,IACiB,QAAnB5U,EAAAtuE,EAAQq9E,mBAAW,IAAA/O,GAAAA,EAAEpxH,oBAAoB,QAASgmI,IAGxD,CAGIljF,EAAQr5D,QAAU,GACpBtD,YAAW,KACT2/I,EAAgBrtH,UACfqqC,EAAQr5D,SAGb,MAAO,CAAEq8I,kBAAiBC,yBAC5B,CAhIsDE,CAAiBnjF,GACrE,IACE,MAAMy3B,EAkJV,SAA2B2rD,GACzB,MAAM3rD,EAAU,IAAIK,QACpB,IAAK,MAAOntF,EAAMwB,KAAUi3I,EAC1B3rD,EAAQQ,OAAOttF,EAAMwB,GAGvB,OAAOsrF,CACT,CAzJoB4rD,CAAkBrjF,EAAQy3B,UACpC,UAAE6rD,EAAW1qI,KAAMmvG,GAgL7B,SAA0B/nD,GACxB,MAAMpnD,EAA+B,oBAAjBonD,EAAQpnD,KAAsBonD,EAAQpnD,OAASonD,EAAQpnD,KAC3E,GAAI+pI,GAAqB/pI,GACvB,MAAM,IAAIlQ,MAAM,0DAGlB,OAAOk6I,GAAoBhqI,GACvB,CAAE0qI,WAAW,EAAM1qI,KAAM2qI,GAAgB3qI,EAAM,CAAE4qI,WAAYxjF,EAAQs9E,oBACrE,CAAEgG,WAAW,EAAO1qI,OAC1B,CAzL6C6qI,CAAiBzjF,GACpD0jF,EAAW36I,OAAAD,OAAAC,OAAAD,OAAA,CACf8P,KAAMmvG,EACNn8G,OAAQo0D,EAAQp0D,OAChB6rF,QAASA,EACTjiE,OAAQwtH,EAAgBxtH,QAIpB,gBAAiBmuH,QAAQp2I,UACzB,CAAEq2I,YAAa5jF,EAAQm9E,gBAAkB,UAAY,eACrD,CAAC,GACD,UAAWwG,QAAQp2I,UAAY,CAAEipB,MAAO,YAAe,CAAC,GAM1D8sH,IACDI,EAAoBG,OAAS,QAQhC,MAAM9+D,QAAiByS,MAAMx3B,EAAQv4D,IAAGsB,OAAAD,OAAAC,OAAAD,OAAA,GACnC46I,GACA1jF,EAAQ49E,mBAMb,OA5EYhlI,EAyEDonD,EAAQpnD,MAvEG,oBAAT66H,MAAuC,kBAATA,OAAsB76H,aAAgB66H,MAuErDzzE,EAAQs9E,kBAClCt9E,EAAQs9E,iBAAiB,CAAEwG,YAAa9jF,EAAQpnD,KAAKgmB,OAY3D1O,eACE6zH,EACA/jF,EACAijF,WAEA,MAAMxrD,EAwGR,SAA8BssD,GAC5B,MAAMlwD,EAAkB2oD,KACxB,IAAK,MAAO7xI,EAAMwB,KAAU43I,EAAatsD,QACvC5D,EAAgBj+E,IAAIjL,EAAMwB,GAG5B,OAAO0nF,CACT,CA/GkBmwD,CAAqBD,GAC/Bh/D,EAA6B,CACjC/kB,UACAy3B,UACA3gE,OAAQitH,EAAajtH,QAGjBmtH,EAAarB,GAAoBmB,EAAanrI,MAChD2qI,GAAgBQ,EAAanrI,KAAM,CACjC4qI,WAAYxjF,EAAQu9E,mBACpB2G,MAAOjB,IAETc,EAAanrI,KAEjB,IAEmC,QAAjC01H,EAAAtuE,EAAQk9E,iCAAyB,IAAA5O,OAAA,EAAAA,EAAErzH,IAAIqyD,OAAO62E,sBACb,QAAjC1T,EAAAzwE,EAAQk9E,iCAAyB,IAAAzM,OAAA,EAAAA,EAAEx1H,IAAI8pE,EAASjuD,SAEhD,GAAIkpC,EAAQ09E,qBACV34D,EAASq/D,kBAA8B,OAAVH,QAAU,IAAVA,EAAAA,OAAc9lF,MACtC,CACL,MAAMkmF,EAAiB,IAAIC,SAASL,GACpCl/D,EAASorD,SAAWkU,EAAeE,OACb,OAAtBtB,QAAsB,IAAtBA,GAAAA,GACF,KACK,CACL,MAAMoB,EAAiB,IAAIC,SAASL,GAEpCl/D,EAASy/D,iBAAmBH,EAAe/pI,OACrB,OAAtB2oI,QAAsB,IAAtBA,GAAAA,GACF,CAEA,OAAOl+D,CACT,CAjDW0/D,CAAsB1/D,EAAU/kB,EAASijF,EAClD,CAAE,MAAOpqI,GAEP,MADsB,OAAtBoqI,QAAsB,IAAtBA,GAAAA,IACMpqI,CACR,CAhFF,IAAgBD,CAiFhB,CAtDmB8rI,CAAY1kF,EAC3B,CAAE,MAAOnnD,GACP,MA+IN,SAAkBA,EAAcmnD,SAC9B,OAAInnD,GAAiB,gBAAX,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGlO,MACHkO,EAEA,IAAIipI,GAAU,0BAADt9G,OAA2B3rB,EAAE1B,SAAW,CAC1D3P,KAAa,QAAP8mI,EAAC,OAADz1H,QAAC,IAADA,OAAC,EAADA,EAAGrR,YAAI,IAAA8mI,EAAAA,EAAIwT,GAAUW,mBAC3BziF,WAGN,CAxJY2kF,CAAS9rI,EAAGmnD,EACpB,CACF,EA2MF,SAASujF,GACPqB,GAC4F,IAA5Fn+I,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA0F,CAAC,EAEvF68I,EAAc,EAClB,MAAM,WAAEN,EAAU,MAAEU,GAAUz9I,EAI9B,GA6DF,SAAoCm+I,GAClC,YAAsCzmF,IAA/BymF,EAAeC,kBAAsD1mF,IAAzBzE,KAAKorF,eAC1D,CA/DMC,CAA2BH,GAC7B,OAAOA,EAAeC,YACpB,IAAIC,gBAAgB,CAClBE,SAAAA,CAAUC,EAAO5uH,GACD,OAAV4uH,GAKJ5uH,EAAW6uH,QAAQD,GACnBnB,GAAemB,EAAMhkJ,OACjBuiJ,GACFA,EAAW,CAAEM,iBAPbztH,EAAW8uH,WASf,EACAC,KAAAA,GACO,OAALlB,QAAK,IAALA,GAAAA,GACF,KAGC,CAGL,MAAMmB,EAAST,EAAe/B,YAC9B,OAAO,IAAIyC,eAAe,CACxB,UAAMC,CAAKlvH,SACT,MAAM,KAAEwU,EAAI,MAAE1+B,SAAgBk5I,EAAOG,OAErC,GAAI36G,IAAS1+B,EAKX,OAJK,OAAL+3I,QAAK,IAALA,GAAAA,IAEA7tH,EAAWutE,aACXyhD,EAAOI,cAIT3B,GAA4B,QAAbxV,EAAK,OAALniI,QAAK,IAALA,OAAK,EAALA,EAAOlL,cAAM,IAAAqtI,EAAAA,EAAI,EAGhCj4G,EAAW6uH,QAAQ/4I,GAEfq3I,GACFA,EAAW,CAAEM,eAEjB,EACA4B,OAAO/sH,IACA,OAALurH,QAAK,IAALA,GAAAA,IACOmB,EAAOK,OAAO/sH,KAG3B,CACF,CC/SM,SAAUgtH,KACd,ODqTO,IAAI7C,ECpTb,CCPO,MAAM/1E,GAAS8uE,GAAmB,mBCOnC,SAAU+J,GACdC,EACAhqF,GAMA,MAAMiqF,EAAmBjqF,EAAOkqF,eAAiB9/I,KAAK+/I,IAAI,EAAGH,GAGvDI,EAAehgJ,KAAK6hD,IAAI+T,EAAOqqF,kBAAmBJ,GCXpD,IAAoCh+F,EAAay4E,EDiBrD,MAAO,CAAE4lB,eAFcF,EAAe,GCfEn+F,EDe4B,ECffy4E,EDekB0lB,EAAe,ECbtFn+F,EAAM7hD,KAAKmgJ,KAAKt+F,GAChBy4E,EAAMt6H,KAAKC,MAAMq6H,GAIFt6H,KAAKC,MAAMD,KAAKuL,UAAY+uH,EAAMz4E,EAAM,IACvCA,GDUlB,CEZM,SAAUphD,GACd2/I,EACAl6I,EACA1F,GAKA,OAAO,IAAIw4C,SAAQ,CAAC5nB,EAAS6nB,KAC3B,IAAIt7C,EACA0iJ,EAEJ,MAAMC,EAAgBA,IACbrnG,EACL,IAAIs6F,IAAkB,OAAP/yI,QAAO,IAAPA,OAAO,EAAPA,EAAS+/I,eAAuB,OAAP//I,QAAO,IAAPA,OAAO,EAAPA,EAAS+/I,cAzB5B,+BA6BnBC,EAAkBA,MACX,OAAPhgJ,QAAO,IAAPA,OAAO,EAAPA,EAAS42I,cAAeiJ,GAC1B7/I,EAAQ42I,YAAYngI,oBAAoB,QAASopI,IAYrD,GARAA,EAAYA,KACN1iJ,GACFL,aAAaK,GAEf6iJ,IACOF,MAGE,OAAP9/I,QAAO,IAAPA,OAAO,EAAPA,EAAS42I,cAAe52I,EAAQ42I,YAAY5nH,QAC9C,OAAO8wH,IAGT3iJ,EAAQP,YAAW,KACjBojJ,IACApvH,EAAQlrB,KACPk6I,IAEQ,OAAP5/I,QAAO,IAAPA,OAAO,EAAPA,EAAS42I,cACX52I,EAAQ42I,YAAYpgI,iBAAiB,QAASqpI,KAGpD,CAMM,SAAUI,GACd3hE,EACAo3D,GAEA,MAAMhwI,EAAQ44E,EAAS0S,QAAQ3/E,IAAIqkI,GACnC,IAAKhwI,EAAO,OACZ,MAAMw6I,EAAar5E,OAAOnhE,GAC1B,OAAImhE,OAAO3d,MAAMg3F,QAAjB,EACOA,CACT,CClEA,MAAMC,GAAmB,cAQnBC,GAAiC,CAAC,iBAAkB,sBAAuBD,IAWjF,SAASE,GAAkB/hE,GACzB,GAAMA,GAAY,CAAC,IAAK,KAAKnuE,SAASmuE,EAASjuD,QAC/C,IAEE,IAAK,MAAMolE,KAAU2qD,GAAsB,CACzC,MAAME,EAAkBL,GAAyB3hE,EAAUmX,GAC3D,GAAwB,IAApB6qD,GAAyBA,EAAiB,CAI5C,OAAOA,GADmB7qD,IAAW0qD,GAAmB,IAAO,EAEjE,CACF,CAGA,MAAMI,EAAmBjiE,EAAS0S,QAAQ3/E,IAAI8uI,IAC9C,IAAKI,EAAkB,OAEvB,MACMhlJ,EADOS,KAAKwxE,MAAM+yE,GACJvkJ,KAAKH,MAEzB,OAAOgrE,OAAO25E,SAASjlJ,GAAQiE,KAAKs6H,IAAI,EAAGv+H,QAAQm8D,CACrD,CAAE,MAAAmwE,IACA,MACF,CACF,CCrCM,SAAU4Y,KAwBR,IAvBNzgJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAuBI,CAAC,UAEL,MAAMkgJ,EAAsC,QAAtB7Y,EAAA7nI,EAAQs/I,sBAAc,IAAAzX,EAAAA,EAlCR,IAmC9B8Y,EAA4C,QAAzB3W,EAAAhqI,EAAQy/I,yBAAiB,IAAAzV,EAAAA,EAlCV,KAoCxC,MAAO,CACL9lI,KAAM,2BACNswC,KAAAA,CAAKq0B,GAAwC,IAAvC,WAAE+3E,EAAU,SAAEtiE,EAAQ,cAAEuiE,GAAeh4E,EAC3C,MAAMi4E,EAyCN,SAAwB74I,GAC5B,IAAKA,EACH,OAAO,EAET,MACe,cAAbA,EAAIlH,MACS,oBAAbkH,EAAIlH,MACS,iBAAbkH,EAAIlH,MACS,eAAbkH,EAAIlH,MACS,WAAbkH,EAAIlH,MACS,cAAbkH,EAAIlH,IAER,CArDiCggJ,CAAcF,GACnCG,EAAqBF,GAAsB9gJ,EAAQghJ,mBAEnDC,EAyBN,SAAqC3iE,GACzC,OAAOirD,QACLjrD,QACsB5mB,IAApB4mB,EAASjuD,SACRiuD,EAASjuD,QAAU,KAA2B,MAApBiuD,EAASjuD,SAChB,MAApBiuD,EAASjuD,QACW,MAApBiuD,EAASjuD,OAEf,CAjC4B6wH,CAA2B5iE,GAC3C6iE,EAA4BF,GAAiBjhJ,EAAQohJ,sBACrDC,EAAkB/iE,IDMxB,SAAoCA,GACxC,OAAOzX,OAAO25E,SAASH,GAAkB/hE,GAC3C,CCR2CgjE,CAA0BhjE,KAAc2iE,GAE7E,OAAII,GAAmBF,GAA6BH,EAC3C,CAAEO,cAAc,IAGrBV,GAAkBC,GAAuBG,EAItC9B,GAAoByB,EAAY,CACrCtB,eAAgBoB,EAChBjB,kBAAmBkB,IALZ,CAAEa,aAAcX,EAO3B,EAEJ,CCpEO,MCUDY,GAAoBrM,GAAmB,+BAwBvC,SAAUsM,GACdC,GACwE,IAAxE3hJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA8B,CAAEohJ,WDlCQ,GCoCxC,MAAMt7E,EAAStmE,EAAQsmE,QAAUm7E,GACjC,MAAO,CACLv9I,KAzBoB,cA0BpB,iBAAM+zI,CAAY1+E,EAA0BtyC,WAC1C,IAAIq3D,EACAuiE,EACAD,GAAc,EAElBiB,EAAc,OAAa,CACzBjB,GAAc,EACdtiE,OAAW5mB,EACXmpF,OAAgBnpF,EAEhB,IACE4O,EAAO71D,KAAK,SAADstB,OAAU6iH,EAAU,gCAAgCrnF,EAAQw/C,WACvEz6B,QAAiBr3D,EAAKsyC,GACtB+M,EAAO71D,KAAK,SAADstB,OAAU6iH,EAAU,sCAAsCrnF,EAAQw/C,UAC/E,CAAE,MAAO3mG,GAOP,GANAk0D,EAAO/mE,MAAM,SAADw+B,OAAU6iH,EAAU,oCAAoCrnF,EAAQw/C,WAK5E8nC,EAAgBzuI,GACXA,GAA4B,cAAvByuI,EAAc38I,KACtB,MAAMkO,EAGRksE,EAAWuiE,EAAcviE,QAC3B,CAEA,GAAuB,QAAnBupD,EAAAtuE,EAAQq9E,mBAAW,IAAA/O,OAAA,EAAAA,EAAE74G,QAAS,CAChCs3C,EAAO/mE,MAAM,SAADw+B,OAAU6iH,EAAU,uBAEhC,MADmB,IAAI7N,EAEzB,CAEA,GAAI6N,IAAiC,QAAlB5W,EAAAhqI,EAAQ4hJ,kBAAU,IAAA5X,EAAAA,EDzEH,GCyEoC,CAIpE,GAHA1jE,EAAO71D,KAAK,SAADstB,OACA6iH,EAAU,0GAEjBC,EACF,MAAMA,EACD,GAAIviE,EACT,OAAOA,EAEP,MAAM,IAAIr8E,MAAM,6DAEpB,CAEAqkE,EAAO71D,KAAK,SAADstB,OAAU6iH,EAAU,iBAAA7iH,OAAgB4jH,EAAWnnJ,OAAM,uBAEhEsnJ,EAAgB,IAAK,MAAMC,KAAYJ,EAAY,CACjD,MAAMK,EAAiBD,EAASz7E,QAAUA,EAC1C07E,EAAevxI,KAAK,SAADstB,OAAU6iH,EAAU,gCAAA7iH,OAA+BgkH,EAAS79I,KAAI,MAEnF,MAAM+9I,EAAYF,EAASvtG,MAAM,CAC/BosG,aACAtiE,WACAuiE,kBAGF,GAAIoB,EAAUV,aAAc,CAC1BS,EAAevxI,KAAK,SAADstB,OAAU6iH,EAAU,eACvC,SAASkB,CACX,CAEA,MAAM,aAAEN,EAAY,eAAE9B,EAAc,WAAEwC,GAAeD,EAErD,GAAIT,EAKF,MAJAQ,EAAeziJ,MAAM,SAADw+B,OACT6iH,EAAU,qBAAA7iH,OAAoBgkH,EAAS79I,KAAI,kBACpDs9I,GAEIA,EAGR,GAAI9B,GAAqC,IAAnBA,EAAsB,CAC1CsC,EAAevxI,KAAK,SAADstB,OACR6iH,EAAU,qBAAA7iH,OAAoBgkH,EAAS79I,KAAI,mBAAA65B,OAAkB2hH,UAElEz/I,GAAMy/I,OAAgBhoF,EAAW,CAAEk/E,YAAar9E,EAAQq9E,cAC9D,SAASiL,CACX,CAEA,GAAIK,EAAY,CACdF,EAAevxI,KAAK,SAADstB,OACR6iH,EAAU,qBAAA7iH,OAAoBgkH,EAAS79I,KAAI,kBAAA65B,OAAiBmkH,IAEvE3oF,EAAQv4D,IAAMkhJ,EACd,SAASL,CACX,CACF,CAEA,GAAIhB,EAIF,MAHAv6E,EAAO71D,KAAK,iFAGNowI,EAER,GAAIviE,EAIF,OAHAhY,EAAO71D,KAAK,qFAGL6tE,CAMX,CACF,EAEJ,iBClH2C,qBAAX3zE,QAAiCA,OAAOsH,SAMtD,kBAATghD,MACwB,oBAApB,OAAJA,WAAI,IAAJA,UAAI,EAAJA,KAAMkvF,iBACe,gCAAX,QAAhBta,GAAA50E,KAAK9hD,mBAAW,IAAA02H,QAAA,EAAAA,GAAE3jI,OACU,8BAAX,QAAhB8lI,GAAA/2E,KAAK9hD,mBAAW,IAAA64H,QAAA,EAAAA,GAAE9lI,OACF,QAAhBkoI,GAAAn5E,KAAK9hD,mBAAW,IAAAi7H,IAAAA,GAAEloI,MAMJ,qBAATk+I,MACiB,qBAAjBA,KAAKpxF,SACLoxF,KAAKpxF,QAAQqxF,KAKc,qBAARC,KAA8BA,IAAItxF,QAvBvD,MA4BMuxF,GACmB,qBAAvBpM,WAAWpvG,SAClBwiG,QAAQ4M,WAAWpvG,QAAQiqB,UAC3Bu4E,QAAmC,QAA3BmH,GAAAyF,WAAWpvG,QAAQy7G,gBAAQ,IAAA9R,QAAA,EAAAA,GAAEp2I,MAYhB,qBAAd22F,YAAsC,OAATA,gBAAS,IAATA,WAAAA,UAAWwxD,SClD3C,SAAUC,KACd,MAAO,CACLx+I,KAhB8B,iBAiB9B,iBAAM+zI,CAAY1+E,EAA0BtyC,GAM1C,GALIs7H,IAAkC,qBAAbx9F,UAA4BwU,EAAQpnD,gBAAgB4yC,WAC3EwU,EAAQl6B,SAjBhB,SAA+BA,SAC7B,MAAMsjH,EAA2B,CAAC,EAClC,IAAK,MAAO5lI,EAAKrX,KAAU25B,EAASkyD,UACnB,QAAfs2C,EAAA8a,EAAY5lI,UAAG,IAAA8qH,IAAf8a,EAAY5lI,GAAS,IACpB4lI,EAAY5lI,GAAyB3iB,KAAKsL,GAE7C,OAAOi9I,CACT,CAU2BC,CAAsBrpF,EAAQpnD,MACjDonD,EAAQpnD,UAAOulD,GAGb6B,EAAQl6B,SAAU,CACpB,MAAMwjH,EAActpF,EAAQy3B,QAAQ3/E,IAAI,gBACpCwxI,IAA6E,IAA9DA,EAAYr0I,QAAQ,qCACrC+qD,EAAQpnD,KAYlB,SAA0BktB,GACxB,MAAMyjH,EAAkB,IAAI7mE,gBAC5B,IAAK,MAAOl/D,EAAKrX,KAAUpD,OAAOivF,QAAQlyD,GACxC,GAAI36B,MAAMC,QAAQe,GAChB,IAAK,MAAMq9I,KAAYr9I,EACrBo9I,EAAgBtxD,OAAOz0E,EAAKgmI,EAAS/3I,iBAGvC83I,EAAgBtxD,OAAOz0E,EAAKrX,EAAMsF,YAGtC,OAAO83I,EAAgB93I,UACzB,CAxByBg4I,CAAiBzpF,EAAQl6B,gBA0BlD5V,eAA+B4V,EAAuBk6B,GAEpD,MAAMspF,EAActpF,EAAQy3B,QAAQ3/E,IAAI,gBACxC,GAAIwxI,IAAgBA,EAAYnvE,WAAW,uBAEzC,OAGFna,EAAQy3B,QAAQ7hF,IAAI,eAA2B,OAAX0zI,QAAW,IAAXA,EAAAA,EAAe,uBAGnD,MAAMI,EAAoB,GAE1B,IAAK,MAAOC,EAAWtoE,KAAWt4E,OAAOivF,QAAQlyD,GAC/C,IAAK,MAAM35B,KAAShB,MAAMC,QAAQi2E,GAAUA,EAAS,CAACA,GACpD,GAAqB,kBAAVl1E,EACTu9I,EAAM7oJ,KAAK,CACT42F,QAAS+kD,GAAkB,CACzB,sBAAuB,oBAAFh4G,OAAsBmlH,EAAS,OAEtD/wI,KAAMopI,GAAmB71I,EAAO,eAE7B,SAAcgyD,IAAVhyD,GAAiC,OAAVA,GAAmC,kBAAVA,EACzD,MAAM,IAAIzD,MAAM,4BAAD87B,OACemlH,EAAS,MAAAnlH,OAAKr4B,EAAK,kDAE5C,CAEL,MAAMy9I,EAAYz9I,EAAexB,MAAQ,OACnC8sF,EAAU+kD,KAChB/kD,EAAQ7hF,IACN,sBAAqB,oBAAA4uB,OACDmlH,EAAS,iBAAAnlH,OAAgBolH,EAAQ,MAIvDnyD,EAAQ7hF,IAAI,eAAgBzJ,EAAM3B,MAAQ,4BAE1Ck/I,EAAM7oJ,KAAK,CACT42F,UACA7+E,KAAMzM,GAEV,EAGJ6zD,EAAQ+8E,cAAgB,CAAE2M,QAC5B,CAtEgBG,CAAgB7pF,EAAQl6B,SAAUk6B,GAG1CA,EAAQl6B,cAAWq4B,CACrB,CACA,OAAOzwC,EAAKsyC,EACd,EAEJ,CC1CA9vC,eAAe45H,GACb78H,GAEA,GAAIA,aAAkBwmH,MAAQxmH,aAAkBisE,WAC9C,OAAOjsE,EAGT,GAAI21H,GAAoB31H,GACtB,OAXK,IAAIq3H,SAWIr3H,GAXas3H,OAa1B,MAAM,IAAI77I,MACR,+FAGN,CCbA,SAASqhJ,GAActyD,GACrB,IAAIlyD,EAAS,GACb,IAAK,MAAO/hB,EAAKrX,KAAUsrF,EACzBlyD,GAAU,GAAJf,OAAOhhB,EAAG,MAAAghB,OAAKr4B,EAAK,QAE5B,OAAOo5B,CACT,CAEA,SAASykH,GACP/8H,GAQA,OAAIA,aAAkBisE,WACbjsE,EAAOqvE,WdMqB,oBcLnBrvE,EdKQg9H,QcHA,IAAjBh9H,EAAO2R,UAAcu/B,EAAYlxC,EAAO2R,UAE/C,CAEJ,CAwBA1O,eAAeuzH,GACbzjF,EACA0pF,EACAv7G,GAEA,MAAM+7G,EAAU,CACdlI,GAAmB,KAADx9G,OAAM2J,GAAY,YACjCu7G,EAAM/iE,SAASwjE,GAAS,CACzBnI,GAAmB,OAAQ,SAC3BA,GAAmB+H,GAAcI,EAAK1yD,SAAU,SAChDuqD,GAAmB,OAAQ,SAC3BmI,EAAKvxI,KACLopI,GAAmB,SAADx9G,OAAU2J,GAAY,YAE1C6zG,GAAmB,aAAc,UAG7BoI,EAvCR,SACEF,GASA,IAAIG,EAAQ,EACZ,IAAK,MAAMp9H,KAAUi9H,EAAS,CAC5B,MAAMI,EAAaN,GAAU/8H,GAC7B,QAAmBkxC,IAAfmsF,EACF,OAEAD,GAASC,CAEb,CACA,OAAOD,CACT,CAmBwBE,CAAeL,GACjCE,GACFpqF,EAAQy3B,QAAQ7hF,IAAI,iBAAkBw0I,GAGxCpqF,EAAQpnD,WDxCHsX,eACLg6H,GAEA,MAAMR,EAAQ,GACd,IAAK,MAAMz8H,KAAUi9H,EACnBR,EAAM7oJ,WAAWipJ,GAA6B,oBAAX78H,EAAwBA,IAAWA,IAGxE,OAAO,IAAIwmH,KAAKiW,EAClB,CC+BuBllH,CAAO0lH,EAC9B,CAKO,MAAMM,GAAsB,kBAG7BC,GAA0B,IAAIr3I,IAAI,6EAiBlC,SAAUs3I,KACd,MAAO,CACL//I,KAAM6/I,GACN,iBAAM9L,CAAY1+E,EAAStyC,SACzB,IAAKsyC,EAAQ+8E,cACX,OAAOrvH,EAAKsyC,GAGd,GAAIA,EAAQpnD,KACV,MAAM,IAAIlQ,MAAM,iEAGlB,IAAIylC,EAAW6xB,EAAQ+8E,cAAc5uG,SAErC,MAAMsxE,EAAuD,QAAnC6uB,EAAAtuE,EAAQy3B,QAAQ3/E,IAAI,uBAAe,IAAAw2H,EAAAA,EAAI,kBAC3Dqc,EAAelrC,EAAkB3qG,MAAM,8CAC7C,IAAK61I,EACH,MAAM,IAAIjiJ,MAAM,0EAAD87B,OAC6Di7E,IAI9E,MAAO,CAAE6pC,EAAasB,GAAkBD,EACxC,GAAIC,GAAkBz8G,GAAYy8G,IAAmBz8G,EACnD,MAAM,IAAIzlC,MAAM,uCAAD87B,OAC0BomH,EAAc,4BAAApmH,OAA2B2J,EAAQ,yBAe5F,OAXQ,OAARA,QAAQ,IAARA,IAAAA,EAAay8G,GACTz8G,EA3CV,SAA6BA,GAC3B,GAAIA,EAASltC,OANW,GAOtB,MAAM,IAAIyH,MAAM,uBAAD87B,OAAwB2J,EAAQ,8CAGjD,GAAIhjC,MAAMi2E,KAAKjzC,GAAUmyB,MAAMr1D,IAAOw/I,GAAwBxvI,IAAIhQ,KAChE,MAAM,IAAIvC,MAAM,uBAAD87B,OAAwB2J,EAAQ,iCAEnD,CAoCQ08G,CAAoB18G,GAEpBA,EArIC,wBAAP3J,OAA+Bq4G,MAuI3B78E,EAAQy3B,QAAQ7hF,IAAI,eAAgB,GAAF4uB,OAAK8kH,EAAW,eAAA9kH,OAAc2J,UAC1Ds1G,GAAiBzjF,EAASA,EAAQ+8E,cAAc2M,MAAOv7G,GAE7D6xB,EAAQ+8E,mBAAgB5+E,EAEjBzwC,EAAKsyC,EACd,EAEJ,CCzDM,SAAU8qF,KACd,OtBySO/M,GAAap6G,QsBxStB,CC9FA,MAAM12B,GAAUkuI,GAAoB,CAClCG,mBAAoB,kBACpB3mI,UAAW,UAQiC1H,GAAQ8/D,OA2BhD,SAAU8uE,GAAmBlnI,GACjC,OAAO1H,GAAQ4uI,mBAAmBlnI,EACpC,CCxCO,MAAMo4D,GAAS8uE,GAAmB,sBCDlC,MACDr1E,GAAe,sDCKd,MAKDukF,GAAkB,CAAC,MAAO,QAmB1B,SAAUC,KAAkD,IAAnCvkJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAiC,CAAC,EAC/D,MAAM,WAAEohJ,EAAa,IAAO5hJ,EAC5B,MAAO,CACLkE,KA3B8B,iBA4B9B,iBAAM+zI,CAAY1+E,EAA0BtyC,GAC1C,MAAMq3D,QAAiBr3D,EAAKsyC,GAC5B,OAAOirF,GAAev9H,EAAMq3D,EAAUsjE,EACxC,EAEJ,CAEAn4H,eAAe+6H,GACbv9H,EACAq3D,EACAsjE,GAC0B,IAA1B6C,EAAAjkJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAyB,EAEzB,MAAM,QAAE+4D,EAAO,OAAElpC,EAAM,QAAE2gE,GAAY1S,EAC/BomE,EAAiB1zD,EAAQ3/E,IAAI,YACnC,GACEqzI,IACY,MAAXr0H,GACa,MAAXA,GAAkBi0H,GAAgBn0I,SAASopD,EAAQp0D,SACxC,MAAXkrB,GAAkBi0H,GAAgBn0I,SAASopD,EAAQp0D,SACxC,MAAXkrB,GAAqC,SAAnBkpC,EAAQp0D,QAChB,MAAXkrB,IACFo0H,EAAiB7C,EACjB,CACA,MAAM5gJ,EAAM,IAAIk3F,IAAIwsD,EAAgBnrF,EAAQv4D,KAC5Cu4D,EAAQv4D,IAAMA,EAAIgK,WAIH,MAAXqlB,IACFkpC,EAAQp0D,OAAS,MACjBo0D,EAAQy3B,QAAQ/sD,OAAO,yBAChBs1B,EAAQpnD,MAGjBonD,EAAQy3B,QAAQ/sD,OAAO,iBAEvB,MAAM6gG,QAAY79G,EAAKsyC,GACvB,OAAOirF,GAAev9H,EAAM69G,EAAK8c,EAAY6C,EAAiB,EAChE,CAEA,OAAOnmE,CACT,CCjCM,SAAUqmE,KAAwC,IAA9B3kJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA4B,CAAC,EACrD,OCHI,WAAkD,IAA9BR,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAA4B,CAAC,QACrD,MAAM8lE,EAAuB,QAAduhE,EAAA7nI,EAAQsmE,cAAM,IAAAuhE,EAAAA,EAAI+c,GAAWn0I,KACtCo0I,EAAY,IAAIrK,GAAU,CAC9BC,6BAA8Bz6I,EAAQy6I,6BACtCE,iCAAkC36I,EAAQ26I,mCAE5C,MAAO,CACLz2I,KAvCyB,YAwCzB,iBAAM+zI,CAAY1+E,EAA0BtyC,GAC1C,IAAKq/C,EAAOmtE,QACV,OAAOxsH,EAAKsyC,GAGd+M,EAAO,YAADvoC,OAAa8mH,EAAUhK,SAASthF,KAEtC,MAAM+kB,QAAiBr3D,EAAKsyC,GAK5B,OAHA+M,EAAO,yBAADvoC,OAA0BugD,EAASjuD,SACzCi2C,EAAO,YAADvoC,OAAa8mH,EAAUhK,SAASv8D,EAAS0S,WAExC1S,CACT,EAEJ,CDpBSwmE,CAAYxiJ,OAAAD,OAAC,CAClBikE,OAAQs+E,GAAWn0I,MAChBzQ,GAEP,CEhDO,MAAM+kJ,GAAsB,SCsB5Bt7H,eAAeu7H,GAAkB93I,GACtC,MAAM+3I,EAAc,IAAI14I,IACxB04I,EAAY91I,IAAI,qBAAsB41I,UC2CjCt7H,eAAuC2O,GAC5C,MAAM8sH,EAAiB/O,WAAWllD,UAClC,IAAIk0D,EAAa,UACjB,GAAkB,OAAdD,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,cAAe,CACjC,MAAMC,QAAsBH,EAAeE,cAAcE,qBAAqB,CAC5E,eACA,oBAEFH,EAAa,GAAHpnH,OAAMsnH,EAAcE,aAAY,KAAAxnH,OAAIsnH,EAAcG,SAAQ,KAAAznH,OAAIsnH,EAAcI,iBAGtF,MAAMC,EAzBV,SAA+BC,GAC7B,MAAMC,EAAa,CAAC,gBAAiB,iBAAkB,QAAS,QAAS,YACzE,IAAK,MAAMF,KAASE,EAAY,CAC9B,MAAMC,EAAaF,EAAOjmC,MAAMpkH,GAAMA,EAAEoqJ,QAAUA,IAClD,GAAIG,EACF,OAAOA,CAEX,CAEF,CAgBkBC,CAAsBZ,EAAeE,cAAcO,QAC7DD,GACFttH,EAAIjpB,IAAIu2I,EAAMA,MAAOA,EAAM10F,QAE/B,MAAO,GAAkB,OAAdk0F,QAAc,IAAdA,OAAc,EAAdA,EAAgBM,SAAU,CACnCL,EAAaD,EAAeM,SAC5B,MAAME,EA/CV,SAAwBK,GACtB,MAAMC,EAAiB,CACrB,CAAE9hJ,KAAM,UAAW+hJ,MAAO,qBAC1B,CAAE/hJ,KAAM,SAAU+hJ,MAAO,8BAG3B,IAAK,MAAMC,KAAWF,EAAgB,CACpC,MAAM33I,EAAQ03I,EAAU13I,MAAM63I,EAAQD,OACtC,GAAI53I,EACF,MAAO,CAAEq3I,MAAOQ,EAAQhiJ,KAAM8sD,QAAS3iD,EAAM,GAEjD,CAGF,CAiCkB83I,CAAejB,EAAea,WACxCL,GACFttH,EAAIjpB,IAAIu2I,EAAMA,MAAOA,EAAM10F,QAE/B,KAA6C,kBAA3BmlF,WAAWiQ,aAC3BhuH,EAAIjpB,IAAI,cAAegnI,WAAWiQ,aAGpChuH,EAAIjpB,IAAI,KAAMg2I,EAChB,CDpEQkB,CAAwBpB,GAC9B,MAAMqB,EAvBR,SAA4BC,GAC1B,MAAMtD,EAAkB,GACxB,IAAK,MAAOlmI,EAAKrX,KAAU6gJ,EAAe,CACxC,MAAMC,EAAQ9gJ,EAAQ,GAAHq4B,OAAMhhB,EAAG,KAAAghB,OAAIr4B,GAAUqX,EAC1CkmI,EAAM7oJ,KAAKosJ,EACb,CACA,OAAOvD,EAAMhhH,KAAK,IACpB,CAgBuBwkH,CAAmBxB,GAExC,OADuB/3I,EAAS,GAAH6wB,OAAM7wB,EAAM,KAAA6wB,OAAIuoH,GAAiBA,CAEhE,CEzBA,MAAMI,GDAG,iBEcH,MAAO3T,WAAmB9wI,MAC9BkP,WAAAA,CAAYT,GACVuvD,MAAMvvD,GACNnQ,KAAK2D,KAAO,YACd,ECLI,SAAUjE,GAAM0mJ,EAAkB3mJ,GACtC,IAAIwmJ,EACJ,MAAM,YAAE5P,EAAW,cAAEmJ,GAAyB,OAAP//I,QAAO,IAAPA,EAAAA,EAAW,CAAC,EACnD,OCHI,SACJ4mJ,EAIA5mJ,GAEA,MAAM,mBAAE6mJ,EAAkB,YAAEjQ,EAAW,cAAEmJ,GAAyB,OAAP//I,QAAO,IAAPA,EAAAA,EAAW,CAAC,EACvE,OAAO,IAAIw4C,SAAQ,CAAC5nB,EAAS6nB,KAC3B,SAASqnG,IACPrnG,EAAO,IAAIs6F,GAAwB,OAAbgN,QAAa,IAAbA,EAAAA,EAAiB,8BACzC,CACA,SAASC,IACI,OAAXpJ,QAAW,IAAXA,GAAAA,EAAangI,oBAAoB,QAASqwI,EAC5C,CACA,SAASA,IACW,OAAlBD,QAAkB,IAAlBA,GAAAA,IACA7G,IACAF,GACF,CACA,GAAe,OAAXlJ,QAAW,IAAXA,OAAW,EAAXA,EAAa5nH,QACf,OAAO8wH,IAET,IACE8G,GACGpiJ,IACCw7I,IACApvH,EAAQpsB,MAETA,IACCw7I,IACAvnG,EAAOj0C,KAGb,CAAE,MAAOyD,GACPwwC,EAAOxwC,EACT,CACW,OAAX2uI,QAAW,IAAXA,GAAAA,EAAapgI,iBAAiB,QAASswI,KAE3C,CDpCSC,EACJn2H,IACC41H,EAAQ5pJ,WAAWg0B,EAAS+1H,KAE9B,CACEE,mBAAoBA,IAAM/pJ,aAAa0pJ,GACvC5P,cACAmJ,cAA4B,OAAbA,QAAa,IAAbA,EAAAA,EAvBQ,0BA0B7B,CEtBM,SAAUiH,GAAgB50I,GAC9B,GAAI6nI,GAAQ7nI,GACV,OAAOA,EAAE1B,QACJ,CACL,IAAIu2I,EACJ,IAEIA,EADe,kBAAN70I,GAAkBA,EACbm7D,KAAKynB,UAAU5iF,GAEf4K,OAAO5K,EAEzB,CAAE,MAAOnK,GACPg/I,EAAc,6BAChB,CACA,MAAO,iBAAPlpH,OAAwBkpH,EAC1B,CACF,CCwDM,SAAUhN,GAAQ7nI,GACtB,OAAO80I,GAAmB90I,EAC5B,CA6CO,MAoBMmwI,GAAsB2E,GC3GnC,MA6BMC,GAA4B3kJ,OAAO,cAYnC,SAAU4kJ,GAAc5iJ,GAC5B,MAAgD,oBAAjCA,EAAiB2iJ,GAClC,CCpEO,MAAMpD,GAAsBsD,GCC7B,SAAUC,KACd,OCPI,WACJ,MAAM,IAAIrlJ,MAAM,mEAClB,CDKSslJ,EACT,CEMM,SAAUC,KACd,OCFI,WAAoE,IAAvCxnJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAqC,CAAC,QACvE,MAAO,CACL0D,KAfkC,qBAgBlC+zI,YAAayJ,GAAY,C7BqCpB,CACLx9I,KAAM,0BACNswC,KAAAA,CAAKq0B,GAAa,IAAZ,SAAEyV,GAAUzV,EAChB,MAAM62E,EAAiBW,GAAkB/hE,GACzC,OAAKzX,OAAO25E,SAASd,GAGd,CACLA,kBAHO,CAAE6B,cAAc,EAK3B,G6B/CqDd,GAAyBzgJ,IAAW,CACvF4hJ,WAA8B,QAAlB/Z,EAAA7nI,EAAQ4hJ,kBAAU,IAAA/Z,EAAAA,E3BzBM,I2B0BnCoQ,YAEP,CDLSwP,CAD0BjnJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAqC,CAAC,EAEzE,CEMM,SAAUknJ,GACdlR,EACAx2I,GAKA,OnB5BI,WACJ,MAAM,IAAIiC,MAAM89D,GAClB,CmB0BS4nF,EACT,CCrCO,MAAMC,GAAmB,CAC9BC,KAAMrlJ,OAAOC,IAAI,4BACjByL,UAAW1L,OAAOC,IAAI,kCAUlB,SAAUqlJ,KAA8D,IAAzC9nJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAuC,CAAC,EACvEgG,EAA0B,IAAIuhJ,GAAmB/nJ,EAAQgoJ,eAO7D,OANIhoJ,EAAQ6nJ,OACVrhJ,EAAUA,EAAQgL,SAASo2I,GAAiBC,KAAM7nJ,EAAQ6nJ,OAExD7nJ,EAAQkO,YACV1H,EAAUA,EAAQgL,SAASo2I,GAAiB15I,UAAWlO,EAAQkO,YAE1D1H,CACT,CAGM,MAAOuhJ,GAEX52I,WAAAA,CAAY82I,GACV1nJ,KAAK2nJ,YACHD,aAA0BF,GACtB,IAAIx7I,IAAqB07I,EAAeC,aACxC,IAAI37I,GACZ,CAEAiF,QAAAA,CAASuL,EAAarX,GACpB,MAAMyiJ,EAAa,IAAIJ,GAAmBxnJ,MAE1C,OADA4nJ,EAAWD,YAAY/4I,IAAI4N,EAAKrX,GACzByiJ,CACT,CAEA52I,QAAAA,CAASwL,GACP,OAAOxc,KAAK2nJ,YAAY72I,IAAI0L,EAC9B,CAEAqrI,WAAAA,CAAYrrI,GACV,MAAMorI,EAAa,IAAIJ,GAAmBxnJ,MAE1C,OADA4nJ,EAAWD,YAAYjkH,OAAOlnB,GACvBorI,CACT,EC7CK,MAAM5vH,GAAQ,CACnB8vH,gCAA4B3wF,GCqExB,SAAU4wF,KAId,OAHK/vH,GAAM8vH,6BACT9vH,GAAM8vH,2BA7CD,CACLE,qBAAsBA,KACb,CAAC,GAEVC,uBAAwBA,OAGxBC,UAAWA,CACTC,EACAC,KAEO,CACLd,KAjCC,CACL/wI,IAAKA,OAGL8xI,YAAaA,KAAM,EACnBC,gBAAiBA,OAGjB96I,aAAcA,OAGd+6I,UAAWA,OAGXC,SAAUA,QAoBNC,eAAgBlB,GAAqB,CAAEE,cAAeW,EAAYK,mBAGtEC,WAAAA,CAIE9kJ,EACA/G,GAC6B,QAAA+2I,EAAA3zI,UAAAhG,OAA1B0uJ,EAA0B,IAAAxkJ,MAAAyvI,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAA1B6U,EAA0B7U,EAAA,GAAA7zI,UAAA6zI,GAE7B,OAAOj3I,KAAY8rJ,EACrB,IAsBK3wH,GAAM8vH,0BACf,CCQO,MAAMhN,GAAkC8N,GAMzC,SAAUC,GAAYh3I,GAC1B,O3CQI,SAAsBA,GAC1B,OAAIA,aAAaipI,IAGVpB,GAAQ7nI,IAAiB,cAAXA,EAAElO,IACzB,C2CbSmlJ,CAAej3I,EACxB,CCrDM,SAAUk3I,KAAgD,IAAlCtpJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAgC,CAAC,EAC7D,MAAM+oJ,EAAmBvE,GAAkBhlJ,EAAQwpJ,iBAC7C3E,EAAY,IAAIrK,GAAU,CAC9BG,iCAAkC36I,EAAQ26I,mCAEtC8O,EAuCR,WACE,IACE,OCtEE,SAA8BzpJ,GAClC,MAAM,UAAEkO,EAAS,YAAEq2D,EAAW,eAAEC,GAAmBxkE,EAEnD,SAASyoJ,EACPvkJ,EACAwlJ,EACAf,SAKA,MAAMgB,EAAkBrB,KAAkBG,UAAUvkJ,EAAI5B,OAAAD,OAAAC,OAAAD,OAAA,GACnDsmJ,GAAW,CACdpkF,YAAaA,EACbC,eAAgBA,EAChBwkF,eAAgD,QAAhCnhB,EAAgB,OAAhB6hB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBE,sBAAc,IAAA/hB,OAAA,EAAAA,EAAEmhB,kBAEpD,IAAIA,EAAiBW,EAAgBX,eACrC,MAAMnB,EAAO8B,EAAgB9B,KAS7B,OARKmB,EAAez3I,SAASq2I,GAAiB15I,aAC5C86I,EAAiBA,EAAex3I,SAASo2I,GAAiB15I,UAAWA,IAEvE25I,EAAK95I,aAAa,eAAgBi7I,EAAez3I,SAASq2I,GAAiB15I,YAKpE,CACL25I,OACA7b,eANyD1pI,OAAOD,OAAO,CAAC,EAAGqnJ,EAAkB,CAC7FE,eAActnJ,OAAAD,OAAAC,OAAAD,OAAA,GAAuB,OAAhBqnJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBE,gBAAc,CAAEZ,qBAO3D,CA6BA,SAASC,EAIPziJ,EACApJ,GAC6B,QAAA+2I,EAAA3zI,UAAAhG,OAA1B0uJ,EAA0B,IAAAxkJ,MAAAyvI,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAA1B6U,EAA0B7U,EAAA,GAAA7zI,UAAA6zI,GAE7B,OAAOiU,KAAkBW,YAAYziJ,EAASpJ,KAAa8rJ,EAC7D,CAsBA,MAAO,CACLT,YACAoB,SA5DFpgI,eAOEvlB,EACAwlJ,EACAtsJ,EACAurJ,GAEA,MAAM,KAAEd,EAAI,eAAE7b,GAAmByc,EAAUvkJ,EAAMwlJ,EAAkBf,GACnE,IACE,MAAM7pH,QAAemqH,EAAYjd,EAAe4d,eAAeZ,gBAAgB,IAC7ExwG,QAAQ5nB,QAAQxzB,EAAS4uI,EAAgB6b,MAG3C,OADAA,EAAKiB,UAAU,CAAEz4H,OAAQ,YAClByO,CACT,CAAE,MAAO72B,GAEP,MADA4/I,EAAKiB,UAAU,CAAEz4H,OAAQ,QAAS9wB,MAAO0I,IACnCA,CACR,CAAE,QACA4/I,EAAK/wI,KACP,CACF,EAoCEmyI,cACAT,uBAlBF,SAAgCsB,GAC9B,OAAOxB,KAAkBE,uBAAuBsB,EAClD,EAiBEvB,qBATF,SAA8BS,GAC5B,OAAOV,KAAkBC,qBAAqBS,EAChD,EASF,CD5BWe,CAAoB,CACzB77I,UAAW,GACXq2D,YAAa,4BACbC,eAAgBugF,IAEpB,CAAE,MAAO3yI,GAEP,YADAk0D,GAAOb,QAAQ,0CAAD1nC,OAA2CipH,GAAgB50I,IAE3E,CACF,CAlDwB43I,GAEtB,MAAO,CACL9lJ,KAjC6B,gBAkC7B,iBAAM+zI,CAAY1+E,EAA0BtyC,SAC1C,IAAKwiI,EACH,OAAOxiI,EAAKsyC,GAGd,MAAMwsF,QAAkBwD,EAElBU,EAAiB,CACrB,WAAYpF,EAAU7J,YAAYzhF,EAAQv4D,KAC1C,cAAeu4D,EAAQp0D,OACvB,kBAAmB4gJ,EACnBhtC,UAAWx/C,EAAQw/C,WAEjBgtC,IACFkE,EAAe,mBAAqBlE,GAGtC,MAAM,KAAE8B,EAAI,eAAEmB,GAAwE,QAArDnhB,EA+BvC,SACE4hB,EACAlwF,EACA0wF,GAEA,IAEE,MAAM,KAAEpC,EAAI,eAAE7b,GAAmByd,EAAchB,UAAU,QAAD1qH,OAC9Cw7B,EAAQp0D,QAChB,CAAEykJ,eAAgBrwF,EAAQqwF,gBAC1B,CACEM,SAAU,SACVD,mBAKJ,IAAKpC,EAAKe,cAER,YADAf,EAAK/wI,MAKP,MAAMk6E,EAAUy4D,EAAclB,qBAC5Bvc,EAAe4d,eAAeZ,gBAEhC,IAAK,MAAOjsI,EAAKrX,KAAUpD,OAAOivF,QAAQP,GACxCz3B,EAAQy3B,QAAQ7hF,IAAI4N,EAAKrX,GAE3B,MAAO,CAAEmiJ,OAAMmB,eAAgBhd,EAAe4d,eAAeZ,eAC/D,CAAE,MAAO52I,GAEP,YADAk0D,GAAOb,QAAQ,qDAAD1nC,OAAsDipH,GAAgB50I,IAEtF,CACF,CAjEuC+3I,CAAcV,EAAelwF,EAAS0wF,UAAe,IAAApiB,EAAAA,EAAI,CAAC,EAE3F,IAAKggB,IAASmB,EACZ,OAAO/hI,EAAKsyC,GAGd,IACE,MAAM+kB,QAAiBmrE,EAAcR,YAAYD,EAAgB/hI,EAAMsyC,GAEvE,OAyER,SAA4BsuF,EAAmBvpE,GAC7C,IACEupE,EAAK95I,aAAa,mBAAoBuwE,EAASjuD,QAC/C,MAAM+5H,EAAmB9rE,EAAS0S,QAAQ3/E,IAAI,mBAC1C+4I,GACFvC,EAAK95I,aAAa,mBAAoBq8I,GAKpC9rE,EAASjuD,QAAU,KACrBw3H,EAAKiB,UAAU,CACbz4H,OAAQ,UAGZw3H,EAAK/wI,KACP,CAAE,MAAO1E,GACPk0D,GAAOb,QAAQ,qDAAD1nC,OAAsDipH,GAAgB50I,IACtF,CACF,CA7FQi4I,CAAmBxC,EAAMvpE,GAClBA,CACT,CAAE,MAAOr2E,GAEP,MAuDR,SAAyB4/I,EAAmBtoJ,GAC1C,IACEsoJ,EAAKiB,UAAU,CACbz4H,OAAQ,QACR9wB,MAAO06I,GAAQ16I,GAASA,OAAQm4D,IAE9B0xF,GAAY7pJ,IAAUA,EAAM+7I,YAC9BuM,EAAK95I,aAAa,mBAAoBxO,EAAM+7I,YAE9CuM,EAAK/wI,KACP,CAAE,MAAO1E,GACPk0D,GAAOb,QAAQ,qDAAD1nC,OAAsDipH,GAAgB50I,IACtF,CACF,CArEQk4I,CAAgBzC,EAAM5/I,GAChBA,CACR,CACF,EAEJ,CE7EM,SAAUsiJ,GAAoBC,GAIlC,GAAIA,aAA2BC,YAC7B,MAAO,CAAE7T,YAAa4T,GAGxB,GAAIA,EAAgBx7H,QAClB,MAAO,CAAE4nH,YAAa6T,YAAYv7H,MAAOs7H,EAAwBt4H,SAGnE,MAAMtC,EAAa,IAAId,gBACvB,IAAI47H,GAAe,EACnB,SAASC,IACHD,IACFF,EAAgB/zI,oBAAoB,QAASwY,GAC7Cy7H,GAAe,EAEnB,CACA,SAASz7H,IACPW,EAAWV,MAAOs7H,EAAwBt4H,QAC1Cy4H,GACF,CAGA,OADAH,EAAgBh0I,iBAAiB,QAASyY,GACnC,CAAE2nH,YAAahnH,EAAWb,OAAQ47H,UAC3C,CC4CM,SAAUC,GAA0B5qJ,SACxC,MAAMq4I,EAAWgM,KAiCjB,OA/BI9B,KACEviJ,EAAQ6qJ,OACVxS,EAASX,UCzET,SAAsBmT,GAC1B,MAAO,CACL3mJ,KAP2B,cAQ3B+zI,YAAaxuH,MAAO+pG,EAAKvsG,KAElBusG,EAAIq3B,QACPr3B,EAAIq3B,MAAQA,GAEP5jI,EAAKusG,IAGlB,CCNSs3B,CFoE4B9qJ,EAAQ6qJ,QAErC7qJ,EAAQ+qJ,YACV1S,EAASX,UG5ET,SAAoBsT,GACxB,MAAO,CACL9mJ,KAPyB,YAQzB+zI,YAAaxuH,MAAO+pG,EAAKvsG,KAElBusG,EAAIw3B,cACPx3B,EAAIw3B,YAAcA,GAEb/jI,EAAKusG,IAGlB,CCLSy3B,CJsE0BjrJ,EAAQ+qJ,aAEvC1S,EAASX,UAAUgQ,GAAY1nJ,EAAQkrJ,eACvC7S,EAASX,UAAU4P,OAGrBjP,EAASX,UKjFF,CACLxzI,KAVyC,4BAWzC+zI,YAAaxuH,MAAO8vC,EAAStyC,KAC3B,IAAKsyC,EAAQq9E,YACX,OAAO3vH,EAAKsyC,GAGd,MAAM,YAAEq9E,EAAW,QAAE+T,GAAYJ,GAAoBhxF,EAAQq9E,aAE7Dr9E,EAAQq9E,YAAcA,EACtB,IACE,aAAa3vH,EAAKsyC,EACpB,CAAE,QACO,OAAPoxF,QAAO,IAAPA,GAAAA,GACF,KLqEJtS,EAASX,UM/EFyT,KN+E8B,CAAE3R,eAAgB,CAACuK,MACxD1L,EAASX,UpBrEL,WACJ,MAAM0T,EAAiBpG,IADOxkJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAkC,CAAC,GAChBgpJ,iBACjD,MAAO,CACLtlJ,KArB+B,kBAsB/BulB,YAAiBwuH,MAAC1+E,EAA0BtyC,KACrCsyC,EAAQy3B,QAAQx8E,IAAIkyI,KACvBntF,EAAQy3B,QAAQ7hF,IAAIu3I,SAA2B0E,GAE1CnkI,EAAKsyC,IAGlB,CoB0DqB8xF,CAAgBrrJ,EAAQsrJ,mBAC3CjT,EAASX,UOnFL,WAC0C,IAA9C6T,EAAmB/qJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAG,yBAEtB,MAAO,CACL0D,KAZwC,2BAaxCulB,YAAiBwuH,MAAC1+E,EAA0BtyC,KACrCsyC,EAAQy3B,QAAQx8E,IAAI+2I,IACvBhyF,EAAQy3B,QAAQ7hF,IAAIo8I,EAAqBhyF,EAAQw/C,WAE5C9xF,EAAKsyC,IAGlB,CPuEqBiyF,CAAiD,QAAxB3jB,EAAA7nI,EAAQyrJ,wBAAgB,IAAA5jB,OAAA,EAAAA,EAAE6jB,4BAItErT,EAASX,UbjFL,WACJ,MAAMiU,EAAYC,KAElB,MAAO,CACL1nJ,KAAM6/I,GACN9L,YAAaxuH,MAAO8vC,EAAStyC,KAC3B,GAAIsyC,EAAQ+8E,cACV,IAAK,MAAMoN,KAAQnqF,EAAQ+8E,cAAc2M,MACnCmE,GAAc1D,EAAKvxI,QACrBuxI,EAAKvxI,KDkEXi1I,GAFJtJ,EChEoC4F,EAAKvxI,MDmEhC2rI,EAAKqJ,MAELrJ,GANL,IACJA,EC3DI,OAAO6N,EAAU1T,YAAY1+E,EAA+BtyC,IAGlE,CagEqBg9H,GAAmB,CAAEpM,WAAY,gBACpDQ,EAASX,UAAU8P,GAAmBxnJ,EAAQ6rJ,cAAe,CAAEjU,MAAO,UACtES,EAASX,UAAU4R,GAAahnJ,OAAAD,OAAAC,OAAAD,OAAC,CAAC,EAAIrC,EAAQsrJ,kBAAqBtrJ,EAAQ8rJ,iBAAmB,CAC5FjU,WAAY,UAEV0K,IAGFlK,EAASX,UQhFP,WACJ,OAAOqU,GADsBvrJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAiC,CAAC,EAEjE,CR8EuB+jJ,CAAevkJ,EAAQgsJ,iBAAkB,CAAEnU,WAAY,UAE5EQ,EAASX,UAAUiN,GAAU3kJ,EAAQ8rJ,gBAAiB,CAAEjU,WAAY,SAE7DQ,CACT,CSoCM,SAAU4T,GAAsBjsJ,GAIpC,O9D4BI,SAAgCA,GACpC,OAAO,IAAIq2I,GAAoBr2I,EACjC,C8D9BSksJ,CAAyBlsJ,EAClC,CChJ0Bo1I,GAAmB,kCCyBtC,MAAM+W,GAA6C,CACxDC,wBAAyB,IACzBC,kBAAmB,IACnBC,kBAAmB,MAgEf,SAAUC,GACdlqE,EACAmqE,GAEA,IAEIx9E,EAFAy9E,EAA6C,KAC7CjG,EAA4B,KAGhC,MAAMxmJ,EAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACR8pJ,IACAK,GAOCE,EAAS,CAIb,gBAAIC,GACF,OAAyB,OAAlBF,CACT,EAKA,iBAAIG,SACF,OAAIF,EAAOC,mBAGF,OAALnG,QAAK,IAALA,OAAK,EAALA,EAAOqG,wBAAyBrG,EAAMqG,sBAAwB7wJ,KAAKH,SAItC,QAAzBgsI,EAAK,OAAL2e,QAAK,IAALA,OAAK,EAALA,EAAOsG,0BAAkB,IAAAjlB,EAAAA,EAAI,GAAK7nI,EAAQssJ,kBAAoBtwJ,KAAKH,MAC7E,EAKA,eAAIkxJ,GACF,OACY,OAAVvG,GAAkBA,EAAMsG,mBAAqB9sJ,EAAQosJ,wBAA0BpwJ,KAAKH,KAExF,GAOF,SAASmxJ,EACPnpF,EACAopF,SAEA,IAAKP,EAAOC,aAAc,CAOxBF,EAnHNhjI,eACEq9D,EACAulE,EACAa,GAIAzjI,eAAe0jI,IACb,KAAInxJ,KAAKH,MAAQqxJ,GAMV,CACL,MAAME,QAAmBtmE,IAGzB,GAAmB,OAAfsmE,EACF,MAAM,IAAInrJ,MAAM,mCAGlB,OAAOmrJ,CACT,CAdE,IACE,aAAatmE,GACf,CAAE,MAAA+gD,GACA,OAAO,IACT,CAWJ,CAEA,IAAI2e,QAAkC2G,IAEtC,KAAiB,OAAV3G,SACCvmJ,GAAMosJ,GAEZ7F,QAAc2G,IAGhB,OAAO3G,CACT,CAgFsB6G,EALUF,IACxB9qE,EAAWirE,SAASzpF,EAAQopF,IAM5BjtJ,EAAQqsJ,kBAEiB,QAAzBxkB,EAAK,OAAL2e,QAAK,IAALA,OAAK,EAALA,EAAOsG,0BAAkB,IAAAjlB,EAAAA,EAAI7rI,KAAKH,OAEjC20B,MAAM+8H,IACLd,EAAgB,KAChBjG,EAAQ+G,EACRv+E,EAAWi+E,EAAgBj+E,SACpBw3E,KAERh3I,OAAO0iB,IAON,MAHAu6H,EAAgB,KAChBjG,EAAQ,KACRx3E,OAAWtX,EACLxlC,IAEZ,CAEA,OAAOu6H,CACT,CAEA,OAAOhjI,MAAOo6C,EAA2B2pF,KAWvC,MAAMC,EAAoBlkB,QAAQikB,EAAallE,QACzColE,EAAkB1+E,IAAaw+E,EAAax+E,SAE9Cy+E,IAGFjH,EAAQ,MAQV,OAFoBkH,GAAmBD,GAAqBf,EAAOK,YAG1DC,EAAQnpF,EAAQ2pF,IAGrBd,EAAOE,eACTI,EAAQnpF,EAAQ2pF,GAGXhH,GAEX,CCxNO,MAAMmH,GAAsC,kCAmGnDlkI,eAAemkI,GACbr0F,EACAtyC,GAEA,IACE,MAAO,OAAOA,EAAKsyC,QAAU7B,EAC/B,CAAE,MAAOtlD,GACP,GAAIg3I,GAAYh3I,IAAMA,EAAEksE,SACtB,MAAO,CAAClsE,EAAEksE,SAAUlsE,GAEpB,MAAMA,CAEV,CACF,CAIAqX,eAAeokI,GAAwB7tJ,GACrC,MAAM,OAAE6jE,EAAM,eAAEijB,EAAc,QAAEvtB,GAAYv5D,EAEtCitJ,EAAmC,CACvCrW,YAAar9E,EAAQq9E,YACrBgT,eAAgBrwF,EAAQqwF,eACxBkE,WAAW,GAGPz+E,QAAoByX,EAAejjB,EAAQopF,GAE7C59E,GACFrvE,EAAQu5D,QAAQy3B,QAAQ7hF,IAAI,gBAAiB,UAAF4uB,OAAYsxC,EAAYm3E,OAEvE,CAMA,SAASuH,GAAoBzvE,GAC3B,OAA2B,MAApBA,EAASjuD,QAAkBiuD,EAAS0S,QAAQx8E,IAAI,mBACzD,CAOAiV,eAAeukI,GACbC,EACAC,SAEA,MAAM,OAAErqF,GAAWoqF,EAEb5+E,QAAoB4+E,EAAmBnnE,eAAejjB,EAAQ,CAClEiqF,WAAW,EACXxlE,OAAQ4lE,IAEV,QAAK7+E,IAIL4+E,EAAmB10F,QAAQy3B,QAAQ7hF,IACjC,gBAAe,GAAA4uB,OACS,QAArB8pG,EAAAx4D,EAAYG,iBAAS,IAAAq4D,EAAAA,EAAI,SAAQ,KAAA9pG,OAAIsxC,EAAYm3E,SAE/C,EACT,CAMM,SAAU2H,GACdnuJ,aAEA,MAAM,WAAEqiF,EAAU,OAAExe,EAAM,mBAAEuqF,GAAuBpuJ,EAC7CsmE,EAAStmE,EAAQsmE,QAAUs+E,GAC3B3xH,EAAY,CAChBo7H,iBACgE,QAA9DrkB,EAAoC,QAApCnC,EAAkB,OAAlBumB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBC,wBAAgB,IAAAxmB,OAAA,EAAAA,EAAE9tG,KAAKq0H,UAAmB,IAAApkB,EAAAA,EAAI6jB,GACpES,4BACiD,QAA/CliB,EAAkB,OAAlBgiB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBE,mCAA2B,IAAAliB,OAAA,EAAAA,EAAEryG,KAAKq0H,IAOpDtnE,EAAiBzE,EACnBkqE,GAAkBlqE,GAClB,IAAM7pC,QAAQ5nB,QAAQ,MAE1B,MAAO,CACL1sB,KAAMypJ,GAcN,iBAAM1V,CAAY1+E,EAA0BtyC,GAC1C,IAAKsyC,EAAQv4D,IAAI8M,cAAc4lE,WAAW,YACxC,MAAM,IAAIzxE,MACR,wFAWJ,IAAIq8E,EACA/+E,EACAgvJ,EAGJ,SAZMt7H,EAAUo7H,iBAAiB,CAC/BxqF,OAAQn/D,MAAMC,QAAQk/D,GAAUA,EAAS,CAACA,GAC1CtK,UACAutB,iBACAxgB,YAMDgY,EAAU/+E,SAAequJ,GAAer0F,EAAStyC,GAE9C8mI,GAAoBzvE,GAAW,CACjC,IAAIgK,EAASkmE,GAAsBlwE,EAAS0S,QAAQ3/E,IAAI,qBAExD,GAAIi3E,EAAQ,CACV,IAAImmE,EAEJ,IACEA,EAAcj8D,KAAKlK,EACrB,CAAE,MAAOl2E,GAIP,OAHAk0D,EAAOb,QAAQ,mKAAD1nC,OACuJuqD,IAE9JhK,CACT,CACAiwE,QAA0BP,GACxB,CACEnqF,OAAQn/D,MAAMC,QAAQk/D,GAAUA,EAAS,CAACA,GAC1Cya,WACA/kB,UACAutB,iBACAxgB,UAEFmoF,GAGEF,KACDjwE,EAAU/+E,SAAequJ,GAAer0F,EAAStyC,GAEtD,MAAO,GAAIgM,EAAUq7H,8BAEnBC,QAA0Bt7H,EAAUq7H,4BAA4B,CAC9DzqF,OAAQn/D,MAAMC,QAAQk/D,GAAUA,EAAS,CAACA,GAC1CtK,UACA+kB,WACAwI,iBACAxgB,WAIEioF,KACDjwE,EAAU/+E,SAAequJ,GAAer0F,EAAStyC,IAIhD8mI,GAAoBzvE,KACtBgK,EAASkmE,GAAsBlwE,EAAS0S,QAAQ3/E,IAAI,qBAChDi3E,IAAQ,CACV,IAAImmE,EACJ,IACEA,EAAcj8D,KAAKlK,EACrB,CAAE,MAAOl2E,GAIP,OAHAk0D,EAAOb,QAAQ,mKAAD1nC,OACuJuqD,IAE9JhK,CACT,CAEAiwE,QAA0BP,GACxB,CACEnqF,OAAQn/D,MAAMC,QAAQk/D,GAAUA,EAAS,CAACA,GAC1Cya,WACA/kB,UACAutB,iBACAxgB,UAEFmoF,GAGEF,KACDjwE,EAAU/+E,SAAequJ,GAAer0F,EAAStyC,GAEtD,CAGN,CAEA,GAAI1nB,EACF,MAAMA,EAEN,OAAO++E,CAEX,EAEJ,CAoDA,SAASkwE,GAAsBE,SAC7B,IAAKA,EACH,OAGF,MAAMC,EAtCF,SAA0BD,GAG9B,MAAME,EAAiB,6CAGjBC,EAAa,mBAEbF,EAAoC,GAC1C,IAAItgJ,EAGJ,KAAqD,QAA7CA,EAAQugJ,EAAexhF,KAAKshF,KAAuB,CACzD,MAAMI,EAASzgJ,EAAM,GACf0gJ,EAAe1gJ,EAAM,GACrB0lE,EAAiC,CAAC,EACxC,IAAIi7E,EAGJ,KAAwD,QAAhDA,EAAaH,EAAWzhF,KAAK2hF,KACnCh7E,EAAOi7E,EAAW,IAAMA,EAAW,GAGrCL,EAAiBv0J,KAAK,CAAE00J,SAAQ/6E,UAClC,CACA,OAAO46E,CACT,CAY2BM,CAAgBP,GACzC,OAEC,QAFM7mB,EAAA8mB,EAAiBjvC,MACrBl7G,GAAmB,WAAbA,EAAEsqJ,QAAuBtqJ,EAAEuvE,OAAOuU,QAA6B,wBAAnB9jF,EAAEuvE,OAAOx0E,eAC7D,IAAAsoI,OAAA,EAAAA,EAAE9zD,OAAOuU,MACZ,CCvXO,MAAM/vD,GAAQ,CACnB22H,oBAAqB,IAAI5oI,SCcrB,SAAU6oI,GACdC,EACAC,EACAC,GAEA,IAAIC,EAAgBF,EAAUE,cAC9B,MAAMC,EAAkBH,EAAUzkB,OAClC,IAAIllI,EAIJ,GAH6B,kBAAlB6pJ,IACTA,EAAgB,CAACA,IAEf7qJ,MAAMC,QAAQ4qJ,IAChB,GAAIA,EAAc/0J,OAAS,EACzB,GAAIg1J,EAAgBljB,WAClB5mI,EAAQ8pJ,EAAgBjqJ,iBACnB,CACL,IAAIkqJ,EAAuBC,GAA6BN,EAAoBG,IAEvEE,EAAqBE,eAAiBL,IACzCG,EAAuBC,GAA6BJ,EAAgBC,IAGtE,IAAIK,GAAkB,EACjBH,EAAqBE,gBACxBC,EACEJ,EAAgBjjB,UACM,YAArBgjB,EAAc,IAA6C,IAAzBA,EAAc/0J,QAErDkL,EAAQkqJ,EAAkBJ,EAAgBjqJ,aAAekqJ,EAAqBI,aAChF,MAEG,CACDL,EAAgBjjB,WAClB7mI,EAAQ,CAAC,GAGX,IAAK,MAAM4Y,KAAgBixI,EAAe,CACxC,MAAMxgB,EAA0BygB,EAAoCzrJ,KAAK6lI,gBACvEtrH,GAGIuxI,EAAqBV,GACzBC,EACA,CACEG,cAJgCA,EAAcjxI,GAK9CssH,OAAQmE,GAEVugB,QAEoB53F,IAAlBm4F,IACGnqJ,IACHA,EAAQ,CAAC,GAEXA,EAAM4Y,GAAgBuxI,EAE1B,CACF,CACA,OAAOnqJ,CACT,CAOA,SAASgqJ,GACP/0J,EACA40J,GAEA,MAAMzwH,EAA+B,CAAE6wH,eAAe,GACtD,IAAIzuJ,EAAI,EACR,KAAOA,EAAIquJ,EAAc/0J,SAAU0G,EAAG,CACpC,MAAM4uJ,EAA4BP,EAAcruJ,GAEhD,IAAIvG,KAAUm1J,KAAqBn1J,GAGjC,MAFAA,EAASA,EAAOm1J,EAIpB,CAKA,OAJI5uJ,IAAMquJ,EAAc/0J,SACtBskC,EAAO+wH,cAAgBl1J,EACvBmkC,EAAO6wH,eAAgB,GAElB7wH,CACT,CAEA,MAAMixH,GAAwBvtJ,OAAOC,IAAI,uCAQnC,SAAUutJ,GAAwBz2F,GACtC,GAPF,SACEA,GAEA,OAAOw2F,MAAyBx2F,CAClC,CAGM02F,CAAmB12F,GACrB,OAAOy2F,GAAwBz2F,EAAQw2F,KAEzC,IAAIt/I,EAAO8nB,GAAM22H,oBAAoB79I,IAAIkoD,GAMzC,OAJK9oD,IACHA,EAAO,CAAC,EACR8nB,GAAM22H,oBAAoB//I,IAAIoqD,EAAS9oD,IAElCA,CACT,CC1GA,MAAMy/I,GAA0B,CAAC,mBAAoB,aAC/CC,GAAyB,CAAC,kBAAmB,wBAiD7C,SAAUC,KAAgE,IAA1CpwJ,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAwC,CAAC,oBAC7E,MAAM6vJ,EAAqD,QAAlCrmB,EAA4B,QAA5BnC,EAAA7nI,EAAQswJ,4BAAoB,IAAAzoB,OAAA,EAAAA,EAAEz+C,YAAI,IAAA4gD,EAAAA,EAAIkmB,GACzDK,EAAmD,QAAjC7f,EAA4B,QAA5BtE,EAAApsI,EAAQswJ,4BAAoB,IAAAlkB,OAAA,EAAAA,EAAEL,WAAG,IAAA2E,EAAAA,EAAIyf,GACvDK,EAAWxwJ,EAAQwwJ,SACnBC,EAAoBzwJ,EAAQywJ,kBAC5BzkB,EAA4C,CAChDD,IAAK,CACHE,SAAyC,QAA/B0K,EAAiB,OAAjB8Z,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB1kB,IAAIE,gBAAQ,IAAA0K,EAAAA,EAAI,GAC7CzK,YAA+C,QAAlC8K,EAAiB,OAAjByZ,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB1kB,IAAIG,mBAAW,IAAA8K,GAAAA,EAC/C7K,WAA6C,QAAjC+K,EAAiB,OAAjBuZ,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB1kB,IAAII,kBAAU,IAAA+K,EAAAA,EAAIrO,KAIrD,MAAO,CACL3kI,KA1DqC,wBA2DrC,iBAAM+zI,CAAY1+E,EAA0BtyC,GAC1C,MAAMq3D,QAAiBr3D,EAAKsyC,GAC5B,OA2CN9vC,eACE4mI,EACAE,EACAjyE,EACAt+E,EACAwwJ,GAEA,MAAME,QAwLRjnI,eACE4mI,EACAE,EACAI,EACAC,EACAJ,SAEA,KACsD,QAAnD3oB,EAAA8oB,EAAkBp3F,QAAQk9E,iCAAyB,IAAA5O,OAAA,EAAAA,EAAErzH,IAAIm8I,EAAkBtgI,UAC5EsgI,EAAkB5S,WAClB,CACA,MAAMlqI,EAAO88I,EAAkB5S,WACzB8E,EAAsB8N,EAAkB3/D,QAAQ3/E,IAAI,iBAAmB,GACvEw/I,EAA+BhO,EAEjCA,EAAY5yI,MAAM,KAAKmoB,KAAK04H,GAAcA,EAAUhjJ,gBADpD,GAGJ,IACE,GAC+B,IAA7B+iJ,EAAkBr2J,QAClBq2J,EAAkBh3F,MAAMi3F,IAAuD,IAAzCT,EAAiB7hJ,QAAQsiJ,KAG/D,OADAH,EAAkBvnB,WAAa77D,KAAKC,MAAM35D,GACnC88I,EACF,GAAIE,EAAkBh3F,MAAMi3F,IAAsD,IAAxCP,EAAgB/hJ,QAAQsiJ,KAAoB,CAC3F,IAAKN,EACH,MAAM,IAAIvuJ,MAAM,8BAElB,MAAMkQ,QAAaq+I,EAAS38I,EAAM+8I,EAAK7kB,KAEvC,OADA4kB,EAAkBvnB,WAAaj3H,EACxBw+I,CACT,CACF,CAAE,MAAO1oJ,GACP,MAAM8oJ,EAAM,UAAHhzH,OAAa91B,EAAG,iDAAA81B,OAAgD4yH,EAAkB5S,WAAU,KAC/FiT,EAAU/oJ,EAAIlH,MAAQs6I,GAAUY,YAOtC,MANU,IAAIZ,GAAU0V,EAAK,CAC3BhwJ,KAAMiwJ,EACN1V,WAAYqV,EAAkBtgI,OAC9BkpC,QAASo3F,EAAkBp3F,QAC3B+kB,SAAUqyE,GAGd,CACF,CAEA,OAAOA,CACT,CAtO+BnjF,CAC3B6iF,EACAE,EACAjyE,EACAt+E,EACAwwJ,GAEF,IA7BF,SAAmCE,GACjC,MAAMn3F,EAA4Bm3F,EAAen3F,QAC3C03F,EAAgBjB,GAAwBz2F,GACxC23F,EAAiC,OAAbD,QAAa,IAAbA,OAAa,EAAbA,EAAeC,kBACzC,IAAIpyH,EAEFA,OADwB44B,IAAtBw5F,IAEoC,mBAAtBA,EACPA,EAEAA,EAAkBR,IAE7B,OAAO5xH,CACT,CAgBOqyH,CAA0BT,GAC7B,OAAOA,EAGT,MAAMO,EAAgBjB,GAAwBU,EAAen3F,SACvD63F,EAA6B,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,cACrC,IAAKA,IAAkBA,EAAcC,UACnC,OAAOX,EAGT,MAAMxnB,EAxDR,SACEwnB,GAEA,IAAI5xH,EACJ,MAAMy6B,EAA4Bm3F,EAAen3F,QAC3C03F,EAAgBjB,GAAwBz2F,GACxC63F,EAA6B,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,cACjCA,IAIAtyH,GAHgB,OAAbmyH,QAAa,IAAbA,OAAa,EAAbA,EAAeK,yBAGI,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,wBAAwBF,EAAeV,GAFtDU,EAAcC,UAAUX,EAAergI,SAKpD,OAAOyO,CACT,CAyCuByyH,CAAwBb,IACvC,MAAEnxJ,EAAK,qBAAEiyJ,GAmEjB,SACEd,EACAU,EACAloB,EACAlpI,iBAEA,MAAMyxJ,EAAoB,KAAOf,EAAergI,QAAUqgI,EAAergI,OAAS,IAC5EqhI,EAfR,SAA8BN,GAC5B,MAAMO,EAAsBrvJ,OAAOmgB,KAAK2uI,EAAcC,WACtD,OACiC,IAA/BM,EAAoBn3J,QACY,IAA/Bm3J,EAAoBn3J,QAA2C,YAA3Bm3J,EAAoB,EAE7D,CASwCC,CAAqBR,GACvDK,IACEvoB,EAEN,GAAIwoB,EAAsB,CACxB,IAAIxoB,EAKF,MAAO,CAAE3pI,MAAO,KAAMiyJ,sBAAsB,GAJ5C,IAAKtoB,EAAa+Q,QAChB,MAAO,CAAE16I,MAAO,KAAMiyJ,sBAAsB,EAKlD,CAEA,MAAMK,EAAgC,OAAZ3oB,QAAY,IAAZA,EAAAA,EAAgBkoB,EAAcC,UAAU/8F,QAE5Dw9F,GAAsE,QAAhDjqB,EAAA6oB,EAAen3F,QAAQk9E,iCAAyB,IAAA5O,OAAA,EAAAA,EAAErzH,IAC5Ek8I,EAAergI,SAChB,2BAAA0N,OAC8B2yH,EAAergI,QACzCqgI,EAAe3S,WAEdx+I,EAAQ,IAAI87I,GAAUyW,EAAqB,CAC/CxW,WAAYoV,EAAergI,OAC3BkpC,QAASm3F,EAAen3F,QACxB+kB,SAAUoyE,IAMZ,IACGmB,MACiC,QAAhCzlB,EAAyB,QAAzBpC,EAAA0mB,EAAetnB,kBAAU,IAAAY,OAAA,EAAAA,EAAEzqI,aAAK,IAAA6sI,OAAA,EAAAA,EAAErrI,SAAwC,QAAhC41I,EAAyB,QAAzBjG,EAAAggB,EAAetnB,kBAAU,IAAAsH,OAAA,EAAAA,EAAEnxI,aAAK,IAAAo3I,OAAA,EAAAA,EAAEjmI,UAE9E,MAAMnR,EAGR,MAAMwyJ,EAAqC,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBxoB,WACvC2oB,EAAwC,OAAjBH,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBI,cAEhD,IAGE,GAAIvB,EAAetnB,WAAY,CAC7B,MAAMA,EAAasnB,EAAetnB,WAClC,IAAI8oB,EAEJ,GAAIH,EAAmB,CACrB,IAAII,EAA0B/oB,EAC9B,GAAIgoB,EAAc1mB,OAASqnB,EAAkBhuJ,KAAKG,OAAS4uI,GAA0B,CACnFqf,EAAqB,GACrB,MAAMC,EAAcL,EAAkB3iB,eACZ,kBAAfhG,GAA2BgpB,IACpCD,EAAqB/oB,EAAWgpB,GAEpC,CACAF,EAAoBd,EAAcrjB,WAAWwC,YAC3CwhB,EACAI,EACA,4BACAnyJ,EAEJ,CAEA,MAAMqyJ,EAAqBjpB,EAAW7pI,OAAS2yJ,GAAqB9oB,EACpE7pI,EAAMwB,KAAOsxJ,EAActxJ,KACvBsxJ,EAAc3hJ,UAChBnR,EAAMmR,QAAU2hJ,EAAc3hJ,SAG5BqhJ,IACDxyJ,EAAM++E,SAAoC8qD,WAAa8oB,EAE5D,CAGIxB,EAAe1/D,SAAWghE,IAC3BzyJ,EAAM++E,SAAoC6qD,cACzCioB,EAAcrjB,WAAWwC,YACvByhB,EACAtB,EAAe1/D,QAAQ2kD,SACvB,8BAGR,CAAE,MAAO2c,GACP/yJ,EAAMmR,QAAU,UAAHqtB,OAAau0H,EAAa5hJ,QAAO,oDAAAqtB,OAAmD2yH,EAAe3S,WAAU,8BAC5H,CAEA,MAAO,CAAEx+I,QAAOiyJ,sBAAsB,EACxC,CApK0Ce,CACtC7B,EACAU,EACAloB,EACAlpI,GAEF,GAAIT,EACF,MAAMA,EACD,GAAIiyJ,EACT,OAAOd,EAKT,GAAIxnB,EAAc,CAChB,GAAIA,EAAaG,WAAY,CAC3B,IAAI8oB,EAA0BzB,EAAetnB,WACzCgoB,EAAc1mB,OAASxB,EAAaG,WAAWtlI,KAAKG,OAAS4uI,KAC/Dqf,EACgC,kBAAvBA,EACHA,EAAmBjpB,EAAaG,WAAW+F,gBAC3C,IAER,IACEshB,EAAetnB,WAAagoB,EAAcrjB,WAAWwC,YACnDrH,EAAaG,WACb8oB,EACA,0BACAnyJ,EAEJ,CAAE,MAAOwyJ,GASP,MARkB,IAAInX,GAAU,SAADt9G,OACpBy0H,EAAgB,kDAAAz0H,OAAiD2yH,EAAe3S,YACzF,CACEzC,WAAYoV,EAAergI,OAC3BkpC,QAASm3F,EAAen3F,QACxB+kB,SAAUoyE,GAIhB,CACF,KAAwC,SAA7BU,EAAcqB,aAEvB/B,EAAetnB,WAAa9qD,EAASjuD,QAAU,KAAOiuD,EAASjuD,OAAS,KAGtE64G,EAAa+oB,gBACfvB,EAAevnB,cAAgBioB,EAAcrjB,WAAWwC,YACtDrH,EAAa+oB,cACbvB,EAAe1/D,QAAQ2kD,SACvB,6BACA,CAAE5J,IAAK,CAAC,EAAG0E,yBAAyB,IAG1C,CAEA,OAAOigB,CACT,CA7HagC,CACLrC,EACAE,EACAjyE,EACA0tD,EACAwkB,EAEJ,EAEJ,CCrEM,SAAUmC,GAA2BtD,GACzC,MAAM,cAAEE,EAAa,OAAE3kB,GAAWykB,EAClC,IAAIvwH,EAQJ,OANEA,EAD2B,kBAAlBywH,EACAA,EACA7qJ,MAAMC,QAAQ4qJ,GACdA,EAActtH,KAAK,KAEnB2oG,EAAOd,eAEXhrG,CACT,CCIM,SAAU8zH,KACd,MAAMC,GAD4BryJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAsC,CAAC,GAC5CqyJ,aAE7B,MAAO,CACL3uJ,KAzBmC,sBA0BnC,iBAAM+zI,CAAY1+E,EAA2BtyC,GAC3C,MAAMgqI,EAAgBjB,GAAwBz2F,GACxC63F,EAA6B,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,cAC/BhC,EAAkC,OAAb6B,QAAa,IAAbA,OAAa,EAAbA,EAAe7B,mBAK1C,OAJIgC,GAAiBhC,IAYrB,SACJ71F,EACA61F,EACAgC,WAEA,GAAIA,EAAc0B,iBAChB,IAAK,MAAMC,KAAmB3B,EAAc0B,iBAAkB,CAC5D,IAAIE,EAAc7D,GAAuCC,EAAoB2D,GAC7E,GAAqB,OAAhBC,QAAwCt7F,IAAhBs7F,GAA8BD,EAAgBnoB,OAAO2B,SAAU,CAC1FymB,EAAc5B,EAAcrjB,WAAWjC,UACrCinB,EAAgBnoB,OAChBooB,EACAL,GAA2BI,IAE7B,MAAMniB,EAA0BmiB,EAAgBnoB,OAC7CgG,uBACH,GAAIA,EACF,IAAK,MAAM7zH,KAAOza,OAAOmgB,KAAKuwI,GAC5Bz5F,EAAQy3B,QAAQ7hF,IAAIyhI,EAAyB7zH,EAAKi2I,EAAYj2I,SAGhEw8C,EAAQy3B,QAAQ7hF,IACd4jJ,EAAgBnoB,OAAOd,gBAAkB6oB,GAA2BI,GACpEC,EAGN,CACF,CAEF,MAAMC,EAA0D,QAA1CjpB,EAA0B,QAA1BnC,EAAAunB,EAAmBpvJ,eAAO,IAAA6nI,OAAA,EAAAA,EAAEqrB,sBAAc,IAAAlpB,OAAA,EAAAA,EAAEipB,cAClE,GAAIA,EACF,IAAK,MAAME,KAAoB7wJ,OAAOmgB,KAAKwwI,GACzC15F,EAAQy3B,QAAQ7hF,IAAIgkJ,EAAkBF,EAAcE,GAG1D,CA9CQC,CAAiB75F,EAAS61F,EAAoBgC,GAmDhD,SACJ73F,EACA61F,EACAgC,GAGC,IAFDyB,EAAAryJ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAwD,WACtD,MAAM,IAAIyB,MAAM,iCAClB,gBAEA,MAAMwuJ,EAA8C,QAA1B5oB,EAAAunB,EAAmBpvJ,eAAO,IAAA6nI,OAAA,EAAAA,EAAE4oB,kBAChDzkB,EAA4C,CAChDD,IAAK,CACHE,SAAyC,QAA/BjC,EAAiB,OAAjBymB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB1kB,IAAIE,gBAAQ,IAAAjC,EAAAA,EAAI,GAC7CkC,YAA+C,QAAlCE,EAAiB,OAAjBqkB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB1kB,IAAIG,mBAAW,IAAAE,GAAAA,EAC/CD,WAA6C,QAAjCuE,EAAiB,OAAjB+f,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB1kB,IAAII,kBAAU,IAAAuE,EAAAA,EAAI7H,KAI/CsD,EAAaH,EAAeD,IAAII,WACtC,GAAIilB,EAAc9vC,aAAe8vC,EAAc9vC,YAAYspB,OAAQ,CACjErxE,EAAQpnD,KAAOg9I,GACbC,EACAgC,EAAc9vC,aAGhB,MAAM+nB,EAAa+nB,EAAc9vC,YAAYspB,QACvC,SACJ2B,EAAQ,eACRzC,EAAc,QACdqF,EAAO,eACPC,EAAc,aACdjB,EAAY,mBACZE,EAAkB,SAClB7E,GACEH,EACEmD,EAAWnD,EAAWtlI,KAAKG,KAEjC,IACE,QACoBwzD,IAAjB6B,EAAQpnD,MAAuC,OAAjBonD,EAAQpnD,MACtCq3H,GAA6B,OAAjBjwE,EAAQpnD,MACrBo6H,EACA,CACA,MAAM8mB,EAAyCV,GAC7CvB,EAAc9vC,aAEhB/nD,EAAQpnD,KAAOi/I,EAAcrjB,WAAWjC,UACtCzC,EACA9vE,EAAQpnD,KACRkhJ,EACArnB,GAGF,MAAMsnB,EAAW9mB,IAAasG,GAE9B,GAAIse,EAAc1mB,MAAO,CACvB,MAAM0D,EAAWC,EAAqB,SAAHtwG,OAAYswG,GAAuB,QAChE3oI,EAoEhB,SACEyoI,EACAC,EACA5B,EACA0B,EACAluI,GAIA,GAAImuI,IAAiB,CAAC,YAAa,WAAY,cAAch+H,SAASq8H,GAAW,CAC/E,MAAM1tG,EAAc,CAAC,EAGrB,OAFAA,EAAO9+B,EAAQ+rI,IAAII,YAAc+B,EACjCpvG,EAAO8pG,IAAe,CAAE,CAACwF,GAAWD,GAC7BrvG,CACT,CAEA,OAAOovG,CACT,CArFwBqlB,CACZplB,EACAC,EACA5B,EACAjzE,EAAQpnD,KACR65H,GAGEQ,IAAasG,GACfv5E,EAAQpnD,KAAO0gJ,EA8E3B,SACEz6F,EACAg6F,EACAoB,EACArlB,GAEKzpI,MAAMC,QAAQyzD,KACjBA,EAAM,CAACA,IAET,IAAKo7F,IAAoBrlB,EACvB,MAAO,CAAE,CAACikB,GAAch6F,GAG1B,MAAMt5B,EAAS,CAAE,CAACszH,GAAch6F,GAEhC,OADAt5B,EAAO8pG,IAAe,CAAE,CAAC4qB,GAAkBrlB,GACpCrvG,CACT,CA7Fc20H,CACE/tJ,EACA0pI,GAAkBD,GAAWrF,EAC7BsE,EACAD,GAEF,CAAElC,SAAUkD,GAAWrF,EAAgBqC,eAE/BmnB,IACV/5F,EAAQpnD,KAAO0gJ,EAAantJ,EAAO,CACjCumI,SAAUkD,GAAWrF,EACrBqC,eAGN,KAAO,IACLK,IAAasG,MACa,QAAzB6D,EAAAya,EAAcvO,mBAAW,IAAAlM,OAAA,EAAAA,EAAEtoI,MAAM,gBAA6C,SAA5B+iJ,EAAcsC,WAIjE,OACUJ,IACV/5F,EAAQpnD,KAAOo7D,KAAKynB,UAAUz7B,EAAQpnD,MACxC,CACF,CACF,CAAE,MAAO5S,GACP,MAAM,IAAI0C,MAAM,UAAD87B,OACHx+B,EAAMmR,QAAO,4CAAAqtB,OAA2CwvC,KAAKynB,UACrE80C,OACApyE,EACA,MACD,KAEL,CACF,MAAO,GAAI05F,EAAcuC,oBAAsBvC,EAAcuC,mBAAmBn5J,OAAS,EAAG,CAC1F++D,EAAQl6B,SAAW,CAAC,EACpB,IAAK,MAAMu0H,KAAqBxC,EAAcuC,mBAAoB,CAChE,MAAME,EAAyB1E,GAC7BC,EACAwE,GAEF,QAA+Bl8F,IAA3Bm8F,GAAmE,OAA3BA,EAAiC,CAC3E,MAAMC,EACJF,EAAkBhpB,OAAOd,gBAAkB6oB,GAA2BiB,GACxEr6F,EAAQl6B,SAASy0H,GAAiC1C,EAAcrjB,WAAWjC,UACzE8nB,EAAkBhpB,OAClBipB,EACAlB,GAA2BiB,GAC3B5nB,EAEJ,CACF,CACF,CACF,CAzKQ+nB,CAAqBx6F,EAAS61F,EAAoBgC,EAAeyB,IAE5D5rI,EAAKsyC,EACd,EAEJ,CCvDA,IAAIy6F,GAEE,SAAUC,KAKd,OAJKD,KACHA,GCCE,WACJ,MAAM/4D,EAASi5D,KACf,MAAO,CACL,iBAAMjc,CAAY1+E,GAGhB,MAAM,YAAEq9E,EAAW,QAAE+T,GAAYpxF,EAAQq9E,YACrC2T,GAAoBhxF,EAAQq9E,aAC5B,CAAC,EACL,IAGE,OADAr9E,EAAQq9E,YAAcA,QACT37C,EAAOg9C,YAAY1+E,EAClC,CAAE,QACO,OAAPoxF,QAAO,IAAPA,GAAAA,GACF,CACF,EAEJ,CDnBuBzL,IAGd8U,EACT,CEPA,MAAMG,GAA6E,CACjFC,IAAK,IACLC,IAAK,IACLC,MAAO,QACPC,IAAK,KACLC,MAAO,KAGH,SAAUC,GACdC,EACAtD,EACAhC,EACAE,GAEA,MAAMqF,EAoDR,SACEvD,EACAhC,EACAE,SAEA,MAAMxwH,EAAS,IAAIvyB,IACnB,GAA+B,QAA3Bs7H,EAAAupB,EAAcwD,qBAAa,IAAA/sB,OAAA,EAAAA,EAAErtI,OAC/B,IAAK,MAAMq6J,KAAgBzD,EAAcwD,cAAe,CACtD,IAAIE,EAA4B3F,GAC9BC,EACAyF,EACAvF,GAEF,MAAMyF,EAAsBpC,GAA2BkC,GACvDC,EAAoB1D,EAAcrjB,WAAWjC,UAC3C+oB,EAAajqB,OACbkqB,EACAC,GAEGF,EAAaG,eAChBF,EAAoB7zJ,mBAAmB6zJ,IAEzCh2H,EAAO3vB,IAAI,IAAD4uB,OACJ82H,EAAajqB,OAAOd,gBAAkBirB,EAAmB,KAC7DD,EAEJ,CAEF,OAAOh2H,CACT,CAjF0Bm2H,CACtB7D,EACAhC,EACAE,GAGF,IAAI4F,GAAiB,EAEjB58B,EAAa68B,GAAWT,EAASC,GACrC,GAAIvD,EAAcgE,KAAM,CACtB,IAAIA,EAAOD,GAAW/D,EAAcgE,KAAMT,GAIf,gBAAvBvD,EAAcgE,MAA0BA,EAAK1hF,WAAW,OAC1D0hF,EAAOA,EAAKx5E,UAAU,IAKNw5E,EAgETjlJ,SAAS,QA/DhBmoH,EAAa88B,EACbF,GAAiB,GAEjB58B,EA+DN,SAAoBt3H,EAAaq0J,GAC/B,IAAKA,EACH,OAAOr0J,EAGT,MAAMs0J,EAAY,IAAIp9D,IAAIl3F,GAC1B,IAAIu0J,EAAUD,EAAUp+D,SAEnBq+D,EAAQpsG,SAAS,OACpBosG,EAAU,GAAHx3H,OAAMw3H,EAAO,MAGlBF,EAAa3hF,WAAW,OAC1B2hF,EAAeA,EAAaz5E,UAAU,IAGxC,MAAM45E,EAAcH,EAAa7mJ,QAAQ,KACzC,IAAqB,IAAjBgnJ,EAAoB,CACtB,MAAMJ,EAAOC,EAAaz5E,UAAU,EAAG45E,GACjCl1I,EAAS+0I,EAAaz5E,UAAU45E,EAAc,GACpDD,GAAoBH,EAChB90I,IACFg1I,EAAUh1I,OAASg1I,EAAUh1I,OAAS,GAAHyd,OAAMu3H,EAAUh1I,OAAM,KAAAyd,OAAIzd,GAAWA,EAE5E,MACEi1I,GAAoBF,EAKtB,OAFAC,EAAUp+D,SAAWq+D,EAEdD,EAAUtqJ,UACnB,CA9FmByqJ,CAAWn9B,EAAY88B,EAExC,CAEA,MAAM,YAAE1jC,EAAW,eAAEgkC,GA4FvB,SACEtE,EACAhC,EACAE,SAKA,MAAMxwH,EAAS,IAAIvyB,IACbmpJ,EAA8B,IAAI/oJ,IAExC,GAAiC,QAA7Bk7H,EAAAupB,EAAcuE,uBAAe,IAAA9tB,OAAA,EAAAA,EAAErtI,OACjC,IAAK,MAAMo7J,KAAkBxE,EAAcuE,gBAAiB,CAClB,aAApCC,EAAehrB,OAAO7mI,KAAKG,MAAuB0xJ,EAAehrB,OAAOd,gBAC1E4rB,EAAezoJ,IAAI2oJ,EAAehrB,OAAOd,gBAE3C,IAAI+rB,EAAyC1G,GAC3CC,EACAwG,EACAtG,GAEF,QAC2B53F,IAAxBm+F,GAA6D,OAAxBA,GACtCD,EAAehrB,OAAO2B,SACtB,CACAspB,EAAsBzE,EAAcrjB,WAAWjC,UAC7C8pB,EAAehrB,OACfirB,EACAlD,GAA2BiD,IAG7B,MAAME,EAAYF,EAAeG,iBAC7B5B,GAA+ByB,EAAeG,kBAC9C,GAWJ,GAVIrxJ,MAAMC,QAAQkxJ,KAEhBA,EAAsBA,EAAoBz9H,KAAKumE,GAChC,OAATA,QAA0BjnC,IAATinC,EACZ,GAGFA,KAG6B,UAApCi3D,EAAeG,kBAA+D,IAA/BF,EAAoBr7J,OACrE,UAEAkK,MAAMC,QAAQkxJ,IACuB,QAApCD,EAAeG,kBAAkE,QAApCH,EAAeG,mBAE7DF,EAAsBA,EAAoB5zH,KAAK6zH,IAE5CF,EAAeZ,eAEhBa,EADEnxJ,MAAMC,QAAQkxJ,GACMA,EAAoBz9H,KAAKumE,GACtC19F,mBAAmB09F,KAGN19F,mBAAmB40J,KAM3CnxJ,MAAMC,QAAQkxJ,IACuB,QAApCD,EAAeG,kBAAkE,UAApCH,EAAeG,mBAE7DF,EAAsBA,EAAoB5zH,KAAK6zH,IAGjDh3H,EAAO3vB,IACLymJ,EAAehrB,OAAOd,gBAAkB6oB,GAA2BiD,GACnEC,EAEJ,CACF,CAEF,MAAO,CACLnkC,YAAa5yF,EACb42H,iBAEJ,CA7K0CM,CACtC5E,EACAhC,EACAE,GAUF,OAFAh3B,EAmMI,SACJt3H,EACA0wH,EACAgkC,GAC4B,IAA5BO,EAAAz1J,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,IAAAA,UAAA,GAEA,GAAyB,IAArBkxH,EAAYv5F,KACd,OAAOn3B,EAGT,MAAMs0J,EAAY,IAAIp9D,IAAIl3F,GAKpBk1J,EA9CR,SAAgC74E,GAC9B,MAAMv+C,EAAqD,IAAIvyB,IAI/D,IAAK8wE,GAAkC,MAAnBA,EAAY,GAC9B,OAAOv+C,EAKT,MAAMq3H,GADN94E,EAAcA,EAAYpyE,MAAM,IACNgF,MAAM,KAEhC,IAAK,MAAMikE,KAAQiiF,EAAO,CACxB,MAAOjyJ,EAAMwB,GAASwuE,EAAKjkE,MAAM,IAAK,GAChCmmJ,EAAgBt3H,EAAOztB,IAAInN,GAC7BkyJ,EACE1xJ,MAAMC,QAAQyxJ,GAChBA,EAAch8J,KAAKsL,GAEnBo5B,EAAO3vB,IAAIjL,EAAM,CAACkyJ,EAAe1wJ,IAGnCo5B,EAAO3vB,IAAIjL,EAAMwB,EAErB,CAEA,OAAOo5B,CACT,CAkByBu3H,CAAuBf,EAAUh1I,QAExD,IAAK,MAAOpc,EAAMwB,KAAUgsH,EAAa,CACvC,MAAM0kC,EAAgBF,EAAe7kJ,IAAInN,GACzC,GAAIQ,MAAMC,QAAQyxJ,GAChB,GAAI1xJ,MAAMC,QAAQe,GAAQ,CACxB0wJ,EAAch8J,QAAQsL,GACtB,MAAM4wJ,EAAW,IAAI3pJ,IAAIypJ,GACzBF,EAAe/mJ,IAAIjL,EAAMQ,MAAMi2E,KAAK27E,GACtC,MACEF,EAAch8J,KAAKsL,QAEZ0wJ,GACL1xJ,MAAMC,QAAQe,GAChBA,EAAMyiD,QAAQiuG,GACLV,EAAelhJ,IAAItQ,IAC5BgyJ,EAAe/mJ,IAAIjL,EAAM,CAACkyJ,EAAe1wJ,IAEtCuwJ,GACHC,EAAe/mJ,IAAIjL,EAAMwB,IAG3BwwJ,EAAe/mJ,IAAIjL,EAAMwB,EAE7B,CAEA,MAAM6wJ,EAAyB,GAC/B,IAAK,MAAOryJ,EAAMwB,KAAUwwJ,EAC1B,GAAqB,kBAAVxwJ,EACT6wJ,EAAan8J,KAAK,GAAD2jC,OAAI75B,EAAI,KAAA65B,OAAIr4B,SACxB,GAAIhB,MAAMC,QAAQe,GAEvB,IAAK,MAAMq9I,KAAYr9I,EACrB6wJ,EAAan8J,KAAK,GAAD2jC,OAAI75B,EAAI,KAAA65B,OAAIglH,SAG/BwT,EAAan8J,KAAK,GAAD2jC,OAAI75B,EAAI,KAAA65B,OAAIr4B,IAMjC,OADA4vJ,EAAUh1I,OAASi2I,EAAa/7J,OAAS,IAAHujC,OAAOw4H,EAAat0H,KAAK,MAAS,GACjEqzH,EAAUtqJ,UACnB,CA7PewrJ,CAAkBl+B,EAAY5G,EAAagkC,EAAgBR,GAEjE58B,CACT,CAEA,SAAS68B,GAAWj/F,EAAeugG,GACjC,IAAI33H,EAASo3B,EACb,IAAK,MAAOwgG,EAAaC,KAAiBF,EACxC33H,EAASA,EAAO7uB,MAAMymJ,GAAaz0H,KAAK00H,GAE1C,OAAO73H,CACT,CCnEO,MAAMwnC,GAAS8uE,GAAmB,eC2DnC,MAAOwhB,GAgCXzlJ,WAAAA,GAA8C,IAAlCnR,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAgC,CAAC,UAY3C,GAXAD,KAAKs2J,oBAAsB72J,EAAQ82J,mBACnCv2J,KAAKw2J,UAA4B,QAAhBlvB,EAAA7nI,EAAQmkG,gBAAQ,IAAA0jC,EAAAA,EAAI7nI,EAAQ00J,QACzC10J,EAAQ00J,SACVpuF,GAAOb,QACL,wFAGJllE,KAAKy2J,yBAA2Bh3J,EAAQ+2I,wBACxCx2I,KAAK02J,YAAcj3J,EAAQk4I,YAAc+b,KAEzC1zJ,KAAK83I,SAAWr4I,EAAQq4I,UA6H5B,SAA+Br4I,GAC7B,MAAMk3J,EAYR,SAA6Bl3J,GAC3B,GAAIA,EAAQk3J,iBACV,OAAOl3J,EAAQk3J,iBAGjB,GAAIl3J,EAAQmkG,SACV,MAAO,GAAPpmE,OAAU/9B,EAAQmkG,SAAQ,aAG5B,GAAInkG,EAAQ00J,QACV,MAAO,GAAP32H,OAAU/9B,EAAQ00J,QAAO,aAG3B,GAAI10J,EAAQqiF,aAAeriF,EAAQk3J,iBACjC,MAAM,IAAIj1J,MAAM,6JAKlB,MACF,CAhC2Bk1J,CAAoBn3J,GACvCo3J,EACJp3J,EAAQqiF,YAAc60E,EAClB,CAAEA,mBAAkB70E,WAAYriF,EAAQqiF,iBACxC3qB,EAEN,OCtMI,WAA0E,IAA3C13D,EAAAQ,UAAAhG,OAAA,QAAAk9D,IAAAl3D,UAAA,GAAAA,UAAA,GAAyC,CAAC,EAC7E,MAAM63I,EAAWuS,GAAiC,OAAP5qJ,QAAO,IAAPA,EAAAA,EAAW,CAAC,GAevD,OAdIA,EAAQo3J,mBACV/e,EAASX,UACPyW,GAAgC,CAC9B9rE,WAAYriF,EAAQo3J,kBAAkB/0E,WACtCxe,OAAQ7jE,EAAQo3J,kBAAkBF,oBAKxC7e,EAASX,UAAUkb,GAAoB5yJ,EAAQq3J,sBAAuB,CAAEzf,MAAO,cAC/ES,EAASX,UAAU0Y,GAAsBpwJ,EAAQs3J,wBAAyB,CACxE1f,MAAO,gBAGFS,CACT,CDqLSkf,CAAoBj1J,OAAAD,OAAAC,OAAAD,OAAC,CAAC,EACxBrC,GAAO,CACVo3J,sBAEJ,CAxIwCI,CAAsBx3J,GAC5B,QAA1BgqI,EAAAhqI,EAAQy3J,0BAAkB,IAAAztB,OAAA,EAAAA,EAAExvI,OAC9B,IAAK,MAAM,OAAEm9I,EAAM,SAAEpb,KAAcv8H,EAAQy3J,mBAAoB,CAG7D,MAAM5f,EAA0B,aAAbtb,EAA0B,YAAS7kE,EACtDn3D,KAAK83I,SAASX,UAAUC,EAAQ,CAC9BE,cAEJ,CAEJ,CAKA,iBAAMI,CAAY1+E,GAChB,OAAOh5D,KAAK83I,SAASJ,YAAY13I,KAAK02J,YAAa19F,EACrD,CAQA,0BAAMm+F,CACJtI,EACAgC,GAEA,MAAMjtD,EAA+BitD,EAAcjzE,SAAW59E,KAAKw2J,UACnE,IAAK5yD,EACH,MAAM,IAAIliG,MACR,6IAOJ,MAEMs3D,EAA4B0yF,GAAsB,CACtDjrJ,IAHUyzJ,GAActwD,EAAUitD,EAAehC,EAAoB7uJ,QAKvEg5D,EAAQp0D,OAASisJ,EAAcqB,WAC/B,MAAMxB,EAAgBjB,GAAwBz2F,GAC9C03F,EAAcG,cAAgBA,EAC9BH,EAAc7B,mBAAqBA,EAEnC,MAAMvM,EAAcuO,EAAcvO,aAAetiJ,KAAKs2J,oBAClDhU,GAAeuO,EAAc9vC,aAC/B/nD,EAAQy3B,QAAQ7hF,IAAI,eAAgB0zI,GAGtC,MAAM7iJ,EAAUovJ,EAAmBpvJ,QACnC,GAAIA,EAAS,CACX,MAAMkzJ,EAAiBlzJ,EAAQkzJ,eAE3BA,IACEA,EAAehzJ,UACjBq5D,EAAQr5D,QAAUgzJ,EAAehzJ,SAG/BgzJ,EAAerc,mBACjBt9E,EAAQs9E,iBAAmBqc,EAAerc,kBAGxCqc,EAAepc,qBACjBv9E,EAAQu9E,mBAAqBoc,EAAepc,yBAGLp/E,IAArCw7F,EAAehC,oBACjBD,EAAcC,kBAAoBgC,EAAehC,mBAG/CgC,EAAenc,0BACjBx9E,EAAQw9E,yBAA0B,IAIlC/2I,EAAQ42I,cACVr9E,EAAQq9E,YAAc52I,EAAQ42I,aAG5B52I,EAAQ4pJ,iBACVrwF,EAAQqwF,eAAiB5pJ,EAAQ4pJ,eAErC,CAEIrpJ,KAAKy2J,2BACPz9F,EAAQw9E,yBAA0B,QAGMr/E,IAAtC6B,EAAQk9E,4BACVl9E,EAAQk9E,0BN/LR,SAA0C2a,GAC9C,MAAMtyH,EAAS,IAAInyB,IACnB,IAAK,MAAM2uI,KAAc8V,EAAcC,UAAW,CAChD,MAAMV,EAAoBS,EAAcC,UAAU/V,GAEhDqV,EAAkBtnB,YAClBsnB,EAAkBtnB,WAAWtlI,KAAKG,OAAS4uI,IAE3Ch0G,EAAO7xB,IAAI45D,OAAOy0E,GAEtB,CACA,OAAOx8G,CACT,CMmL0C64H,CAAgCvG,IAGtE,IACE,MAAMwG,QAAoBr3J,KAAK03I,YAAY1+E,GACrCs+F,EAAe7uB,GACnB4uB,EACAxG,EAAcC,UAAUuG,EAAYvnI,SAKtC,OAHW,OAAPrwB,QAAO,IAAPA,OAAO,EAAPA,EAAS83J,aACX93J,EAAQ83J,WAAWF,EAAaC,GAE3BA,CACT,CAAE,MAAOt4J,GACP,GAAqB,kBAAVA,IAA2B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO++E,UAAU,CAChD,MAAMs5E,EAAcr4J,EAAM++E,SACpBu5E,EAAe7uB,GACnB4uB,EACAxG,EAAcC,UAAU9xJ,EAAM+7I,aAAe8V,EAAcC,UAAmB,SAEhF9xJ,EAAMw4J,QAAUF,GACL,OAAP73J,QAAO,IAAPA,OAAO,EAAPA,EAAS83J,aACX93J,EAAQ83J,WAAWF,EAAaC,EAAct4J,EAElD,CACA,MAAMA,CACR,CACF,EEtKKkqB,eAAeuuI,GACpB/J,SAEA,MAAM,OAAEpqF,EAAM,SAAEya,GAAa2vE,EACvB3nF,EAAS2nF,EAAmB3nF,QAAU2xF,GAEtCxlC,EAAYn0C,EAAS0S,QAAQ3/E,IAAI,oBACvC,IAAKohH,EAIH,OAHAnsD,EAAO71D,KAAK,qHAGL,EAET,MAAMi+I,EA9DF,SAA4BA,GAEhC,MADyB,KAAA3wH,OAAK2wH,EAAWngJ,QAAS0B,MAAM,aAAai3D,QAAQ1iE,GAAMA,IAC3D4zB,KAAKq6F,GACJ,GAAA10F,OAAG00F,EAAUlkH,OAAM,MAAK0B,MAAM,OAAOi3D,QAAQ1iE,GAAMA,IACrC4zB,KAAK8/H,GACxC,CAACrvF,IAAA,IAAE9rD,EAAKrX,GAAMmjE,EAAA,MAAM,CAAE,CAAC9rD,GAAMrX,EAAQ,EAArC,CAAuCwyJ,EAAS3pJ,OAAO0B,MAAM,SAG1C+nD,QAAO,CAACv9D,EAAGa,IAAMgH,OAAAD,OAAAC,OAAAD,OAAC,CAAC,EAAI5H,GAAMa,IAAM,CAAC,IAE7D,CAoDqC68J,CAAkB1lC,IAAc,GAE7D2lC,EAAkB1J,EAAWhvC,MAAMl7G,GAAMA,EAAE8jF,SACjD,IAAK8vE,EAIH,OAHA9xF,EAAO71D,KAAK,oIAGL,EAGT,MAAM4+D,QAAoB4+E,EAAmBnnE,eAC3CsxE,EAAgBxiG,MAAQ,CAACwiG,EAAgBxiG,OAASiO,EAClD,CACEykB,QxFtC+B5iF,EwFsCF0yJ,EAAgB9vE,OxFrC1CkK,KAAK9sF,MADR,IAA+BA,EwF0CnC,QAAK2pE,IAIL4+E,EAAmB10F,QAAQy3B,QAAQ7hF,IACjC,gBAAe,GAAA4uB,OACS,QAArB8pG,EAAAx4D,EAAYG,iBAAS,IAAAq4D,EAAAA,EAAI,SAAQ,KAAA9pG,OAAIsxC,EAAYm3E,SAE/C,EACT,CC3DO,SAAS6R,GAAO1/F,EAAGvmD,GACxB,IAAIs0D,EAAI,CAAC,EACT,IAAK,IAAIh8D,KAAKiuD,EAAOr2D,OAAOwE,UAAUD,eAAe6G,KAAKirD,EAAGjuD,IAAM0H,EAAE5D,QAAQ9D,GAAK,IAC9Eg8D,EAAEh8D,GAAKiuD,EAAEjuD,IACb,GAAS,MAALiuD,GAAqD,oBAAjCr2D,OAAO2kE,sBACtB,KAAI/lE,EAAI,EAAb,IAAgBwJ,EAAIpI,OAAO2kE,sBAAsBtO,GAAIz3D,EAAIwJ,EAAElQ,OAAQ0G,IAC3DkR,EAAE5D,QAAQ9D,EAAExJ,IAAM,GAAKoB,OAAOwE,UAAUowE,qBAAqBxpE,KAAKirD,EAAGjuD,EAAExJ,MACvEwlE,EAAEh8D,EAAExJ,IAAMy3D,EAAEjuD,EAAExJ,IAF4B,CAItD,OAAOwlE,CACT,CAoG6BpkE,OAAO46B,OAgB7B,SAASo7H,GAASzgG,GACvB,IAAIc,EAAsB,oBAAXn2D,QAAyBA,OAAOkB,SAAU+nD,EAAIkN,GAAKd,EAAEc,GAAIz3D,EAAI,EAC5E,GAAIuqD,EAAG,OAAOA,EAAE/9C,KAAKmqD,GACrB,GAAIA,GAAyB,kBAAbA,EAAEr9D,OAAqB,MAAO,CAC1CysB,KAAM,WAEF,OADI4wC,GAAK32D,GAAK22D,EAAEr9D,SAAQq9D,OAAI,GACrB,CAAEnyD,MAAOmyD,GAAKA,EAAE32D,KAAMkjC,MAAOyzB,EACxC,GAEJ,MAAM,IAAI+O,UAAUjO,EAAI,0BAA4B,kCACtD,CA6CO,SAAS4/F,GAAQlnB,GACtB,OAAO9wI,gBAAgBg4J,IAAWh4J,KAAK8wI,EAAIA,EAAG9wI,MAAQ,IAAIg4J,GAAQlnB,EACpE,CAEO,SAASmnB,GAAiBC,EAASC,EAAYC,GACpD,IAAKn2J,OAAOo2J,cAAe,MAAM,IAAIhyF,UAAU,wCAC/C,IAAoD1lE,EAAhD23J,EAAIF,EAAUr4J,MAAMm4J,EAASC,GAAc,IAAQv9C,EAAI,GAC3D,OAAOj6G,EAAIoB,OAAO46B,QAAiC,oBAAlB47H,cAA+BA,cAAgBx2J,QAAQwE,WAAYiyJ,EAAK,QAASA,EAAK,SAAUA,EAAK,UACtI,SAAqBtuG,GAAK,OAAO,SAAU4mF,GAAK,OAAO74F,QAAQ5nB,QAAQygH,GAAG7gH,KAAKi6B,EAAGhS,EAAS,CAAG,IADgEv3C,EAAEsB,OAAOo2J,eAAiB,WAAc,OAAOr4J,IAAM,EAAGW,EAEtN,SAAS63J,EAAKrkG,EAAGjK,GAASouG,EAAEnkG,KAAMxzD,EAAEwzD,GAAK,SAAU28E,GAAK,OAAO,IAAI74F,SAAQ,SAAU/9C,EAAGa,GAAK6/G,EAAE/gH,KAAK,CAACs6D,EAAG28E,EAAG52I,EAAGa,IAAM,GAAK09J,EAAOtkG,EAAG28E,EAAI,GAAI,EAAO5mF,IAAGvpD,EAAEwzD,GAAKjK,EAAEvpD,EAAEwzD,KAAO,CACvK,SAASskG,EAAOtkG,EAAG28E,GAAK,KACVzmF,EADqBiuG,EAAEnkG,GAAG28E,IACnB3rI,iBAAiB6yJ,GAAU//G,QAAQ5nB,QAAQg6B,EAAEllD,MAAM2rI,GAAG7gH,KAAKyoI,EAASxgH,GAAUygH,EAAO/9C,EAAE,GAAG,GAAIvwD,EADtE,CAAE,MAAOx4C,GAAK8mJ,EAAO/9C,EAAE,GAAG,GAAI/oG,EAAI,CAC/E,IAAcw4C,CADmE,CAEjF,SAASquG,EAAQvzJ,GAASszJ,EAAO,OAAQtzJ,EAAQ,CACjD,SAAS+yC,EAAO/yC,GAASszJ,EAAO,QAAStzJ,EAAQ,CACjD,SAASwzJ,EAAOzuG,EAAG4mF,GAAS5mF,EAAE4mF,GAAIl2B,EAAEtrD,QAASsrD,EAAE3gH,QAAQw+J,EAAO79C,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAK,CACnF,CAEO,SAASg+C,GAAiBthG,GAC/B,IAAI32D,EAAGwJ,EACP,OAAOxJ,EAAI,CAAC,EAAG63J,EAAK,QAASA,EAAK,SAAS,SAAU3mJ,GAAK,MAAMA,CAAG,IAAI2mJ,EAAK,UAAW73J,EAAEsB,OAAOkB,UAAY,WAAc,OAAOnD,IAAM,EAAGW,EAC1I,SAAS63J,EAAKrkG,EAAGjK,GAAKvpD,EAAEwzD,GAAKmD,EAAEnD,GAAK,SAAU28E,GAAK,OAAQ3mI,GAAKA,GAAK,CAAEhF,MAAO6yJ,GAAQ1gG,EAAEnD,GAAG28E,IAAKjtG,MAAM,GAAUqmB,EAAIA,EAAE4mF,GAAKA,CAAG,EAAI5mF,CAAG,CACvI,CAEO,SAAS2uG,GAAcvhG,GAC5B,IAAKr1D,OAAOo2J,cAAe,MAAM,IAAIhyF,UAAU,wCAC/C,IAAiC1lE,EAA7BuqD,EAAIoM,EAAEr1D,OAAOo2J,eACjB,OAAOntG,EAAIA,EAAE/9C,KAAKmqD,IAAMA,EAAqCygG,GAASzgG,GAA2B32D,EAAI,CAAC,EAAG63J,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW73J,EAAEsB,OAAOo2J,eAAiB,WAAc,OAAOr4J,IAAM,EAAGW,GAC9M,SAAS63J,EAAKrkG,GAAKxzD,EAAEwzD,GAAKmD,EAAEnD,IAAM,SAAU28E,GAAK,OAAO,IAAI74F,SAAQ,SAAU5nB,EAAS6nB,IACvF,SAAgB7nB,EAAS6nB,EAAQ+R,EAAG6mF,GAAK74F,QAAQ5nB,QAAQygH,GAAG7gH,MAAK,SAAS6gH,GAAKzgH,EAAQ,CAAElrB,MAAO2rI,EAAGjtG,KAAMomB,GAAM,GAAG/R,EAAS,EADbygH,CAAOtoI,EAAS6nB,GAA7B44F,EAAIx5E,EAAEnD,GAAG28E,IAA8BjtG,KAAMitG,EAAE3rI,MAAQ,GAAI,CAAG,CAEjK,CAOyBpD,OAAO46B,OAoEkB,oBAApBm8H,iBAAiCA,gBAwC/D,MCrWaC,GAAkD,CAC7Dv1J,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBAKnBk9B,SAAU,CACRzvB,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOHs1J,GAAwC,CACnDz1J,KAAM,CACJG,KAAM,YACNm4H,UAAW,YACXuN,gBAAiB,CACf1lI,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVkyC,QAAS,CACP0zF,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,wBAORo9B,GAA+C,CAC1D11J,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBACXuN,gBAAiB,CACf9pG,SAAU,CACRgqG,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVg2B,SAAU,CACR4vG,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVw1J,UAAW,CACT5vB,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGVwmH,YAAa,CACXof,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOHy1J,GAAyC,CACpD51J,KAAM,CACJG,KAAM,YACNm4H,UAAW,aACXuN,gBAAiB,CACfrqI,MAAO,CACLuqI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBAORu9B,GAA4C,CACvD71J,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBACXuN,gBAAiB,CACf7oI,KAAM,CACJ+oI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVwM,QAAS,CACPo5H,eAAgB,UAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVmR,OAAQ,CACNy0H,eAAgB,SAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV6zJ,QAAS,CACPjuB,eAAgB,UAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBAKnBw9B,eAAgB,CACd/vB,eAAgB,iBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,6BASZy9B,GAAkD,CAC7D/1J,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBACXuN,gBAAiB,CACf7lI,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVuM,KAAM,CACJq5H,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,aAOpB61J,GAAyC,CACpDh2J,KAAM,CACJG,KAAM,YACNm4H,UAAW,aACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBAGf29B,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpB+1J,GAAmD,CAC9Dl2J,KAAM,CACJG,KAAM,YACNm4H,UAAW,uBACXuN,gBAAiB,CACfswB,SAAU,CACRpwB,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3Bi2J,aAAc,CACZrwB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAGfhgD,WAAY,CACVytD,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CACL3B,KAAM,CAAEG,KAAM,YAAam4H,UAAW,0BAI5C+9B,eAAgB,CACdtwB,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAGfg+B,iBAAkB,CAChBvwB,eAAgB,mBAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CACL3B,KAAM,CACJG,KAAM,aACNwB,MAAO,CACL3B,KAAM,CACJG,KAAM,YACNm4H,UAAW,sCAOvBp0G,KAAM,CACJ6hH,eAAgB,OAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,cAAe,cAGnCotB,aAAc,CACZxwB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAGfk+B,kBAAmB,CACjBzwB,eAAgB,oBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBAGfm+B,4BAA6B,CAC3B1wB,eAAgB,8BAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,gCAGfo+B,gBAAiB,CACf3wB,eAAgB,kBAChB/lI,KAAM,CACJG,KAAM,cAOHw2J,GAA2C,CACtD32J,KAAM,CACJG,KAAM,YACNm4H,UAAW,eACXuN,gBAAiB,CACf+wB,IAAK,CACH7wB,eAAgB,MAChB/lI,KAAM,CACJG,KAAM,WAGVzI,GAAI,CACFquI,eAAgB,KAChB/lI,KAAM,CACJG,KAAM,WAGV02J,aAAc,CACZ9wB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGV22J,eAAgB,CACd/wB,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,WAGVm5E,YAAa,CACXysD,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOH42J,GAAkD,CAC7D/2J,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,QAGV62J,UAAW,CACTjxB,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCAOR2+B,GAAyD,CACpEj3J,KAAM,CACJG,KAAM,YACNm4H,UAAW,6BACXuN,gBAAiB,CACfqxB,SAAU,CACRnxB,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBAGf6+B,WAAY,CACVpxB,eAAgB,aAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGVi3J,cAAe,CACbrxB,eAAgB,gBAChB/lI,KAAM,CACJG,KAAM,cAOHk3J,GAAgD,CAC3Dr3J,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,cAOHm3J,GAA6C,CACxDt3J,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBACXuN,gBAAiB,CACf+wB,IAAK,CACH7wB,eAAgB,MAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV22J,eAAgB,CACd/wB,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,cAOHo3J,GAA4D,CACvEv3J,KAAM,CACJG,KAAM,YACNm4H,UAAW,gCACXuN,gBAAiB,CACf7lI,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVwB,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,QAGVq3J,kBAAmB,CACjBzxB,eAAgB,oBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCAORm/B,GAA2C,CACtDz3J,KAAM,CACJG,KAAM,YACNm4H,UAAW,eACXuN,gBAAiB,CACf6xB,YAAa,CACX3xB,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOHw3J,GAAgD,CAC3D33J,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBACXuN,gBAAiB,CACf7lI,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,iBAAkB,wBAGtChG,eAAgB,CACd4C,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,cAOHy3J,GAA0D,CACrE53J,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BACXuN,gBAAiB,CACfh0E,MAAO,CACLk0E,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,cAOH03J,GAAiD,CAC5D73J,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVgZ,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iCAGf29B,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpB23J,GAA2D,CACtE93J,KAAM,CACJG,KAAM,YACNm4H,UAAW,+BACXuN,gBAAiB,CACfkyB,kBAAmB,CACjBhyB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVm8D,cAAe,CACbypE,eAAgB,gBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVkhE,UAAW,CACT0kE,eAAgB,YAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aAGV63J,SAAU,CACRjyB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV83J,QAAS,CACPlyB,eAAgB,UAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3B+3J,UAAW,CACTnyB,eAAgB,YAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,eAKnBtvH,aAAc,CACZ+8H,eAAgB,eAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAKnB89B,aAAc,CACZrwB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAGfhgD,WAAY,CACVytD,eAAgB,aAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3Bk2J,eAAgB,CACdtwB,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAGf6/B,WAAY,CACVpyB,eAAgB,aAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,oCAKnBp0G,KAAM,CACJ6hH,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,cAAe,cAGnCotB,aAAc,CACZxwB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAGfk+B,kBAAmB,CACjBzwB,eAAgB,oBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BAGf8/B,aAAc,CACZryB,eAAgB,eAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVk4J,gBAAiB,CACftyB,eAAgB,kBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,wBAKnBggC,mBAAoB,CAClBvyB,eAAgB,qBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,wBAKnB98H,MAAO,CACLuqI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBAGfigC,YAAa,CACXxyB,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,sCAKnBo+B,gBAAiB,CACf3wB,eAAgB,kBAChB/lI,KAAM,CACJG,KAAM,cAOHsrB,GAAuC,CAClDzrB,KAAM,CACJG,KAAM,YACNm4H,UAAW,WACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVgK,UAAW,CACT47H,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGVq4J,kBAAmB,CACjBzyB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVs4J,mBAAoB,CAClB1yB,eAAgB,qBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVu4J,cAAe,CACb3yB,eAAgB,gBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BAKnBqgC,kCAAmC,CACjC5yB,eAAgB,oCAChB/lI,KAAM,CACJG,KAAM,cAOHy4J,GAAmD,CAC9D54J,KAAM,CACJG,KAAM,YACNm4H,UAAW,uBACXuN,gBAAiB,CACfnwF,aAAc,CACZqwF,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGV04J,UAAW,CACT9yB,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKd24J,iBAAkB,CAChB/yB,eAAgB,mBAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,+BAKnBtnH,QAAS,CACP+0H,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,YAKnBygC,YAAa,CACXhzB,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKd64J,kBAAmB,CACjBjzB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV84J,aAAc,CACZlzB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBAKnB4gC,YAAa,CACXnzB,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAKnB6gC,aAAc,CACZpzB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpBi5J,GAAuD,CAClEp5J,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVk5J,kBAAmB,CACjBtzB,eAAgB,oBAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,gBASPm5J,GAAoC,CAC/Ct5J,KAAM,CACJG,KAAM,YACNm4H,UAAW,QACXuN,gBAAiB,CACf1lI,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVmrI,MAAO,CACLvF,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBAKnBt4H,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,eAAgB,YAAa,UAGjDowB,YAAa,CACXxzB,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,WAGVq5J,eAAgB,CACdzzB,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAGfmhC,gBAAiB,CACf1zB,eAAgB,kBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBAORohC,GAAwC,CACnD15J,KAAM,CACJG,KAAM,YACNm4H,UAAW,YACXuN,gBAAiB,CACfwrB,KAAM,CACJtrB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGV44J,YAAa,CACXhzB,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKduwE,QAAS,CACPq1D,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAGfzqD,SAAU,CACRk4D,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBAORqhC,GAA2C,CACtD35J,KAAM,CACJG,KAAM,YACNm4H,UAAW,eACXuN,gBAAiB,CACf+zB,OAAQ,CACN7zB,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WAGV05J,SAAU,CACR9zB,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,eAAgB,gBAO7B2wB,GAAgD,CAC3D95J,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBACXuN,gBAAiB,CACf7lI,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVguC,WAAY,CACV43F,eAAgB,aAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOH45J,GAA0C,CACrD/5J,KAAM,CACJG,KAAM,YACNm4H,UAAW,cACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGV65J,MAAO,CACLj0B,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,gBASP85J,GAAyC,CACpDj6J,KAAM,CACJG,KAAM,YACNm4H,UAAW,aACXuN,gBAAiB,CACfq0B,eAAgB,CACdn0B,eAAgB,iBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVg6J,WAAY,CACVp0B,eAAgB,aAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHi6J,GAAyC,CACpDp6J,KAAM,CACJG,KAAM,YACNm4H,UAAW,aACXuN,gBAAiB,CACfuP,UAAW,CACTrP,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBAKnB5gI,GAAI,CACFquI,eAAgB,KAChB/lI,KAAM,CACJG,KAAM,WAGVu1C,aAAc,CACZqwF,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVk6J,aAAc,CACZt0B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,cAOHm6J,GAA8C,CACzDt6J,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChB/lI,KAAM,CACJG,KAAM,WAGVu1C,aAAc,CACZqwF,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVk6J,aAAc,CACZt0B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,cAOHo6J,GAA4D,CACvEv6J,KAAM,CACJG,KAAM,YACNm4H,UAAW,gCACXuN,gBAAiB,CACf5qD,MAAO,CACL8qD,eAAgB,QAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV8sD,QAAS,CACP84E,eAAgB,UAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVq6J,SAAU,CACRz0B,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVkxD,OAAQ,CACN00E,eAAgB,SAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aACNwB,MAAO,CACL3B,KAAM,CACJG,KAAM,YACNm4H,UAAW,uCASZmiC,GAAwD,CACnEz6J,KAAM,CACJG,KAAM,YACNm4H,UAAW,4BACXuN,gBAAiB,CACfkyB,kBAAmB,CACjBhyB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,iBAAkB,wBAGtChG,eAAgB,CACd4C,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,cAOHu6J,GAAgD,CAC3D16J,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVw6J,UAAW,CACT50B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCAGf5iF,aAAc,CACZqwF,eAAgB,eAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVy6J,YAAa,CACX70B,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3Bg6J,WAAY,CACVp0B,eAAgB,aAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOH06J,GAA8D,CACzE76J,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCACXuN,gBAAiB,CACfnlE,MAAO,CACLqlE,eAAgB,QAChByC,UAAU,EACVyC,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVnD,KAAM,CACJ+oI,eAAgB,OAChByC,UAAU,EACVyC,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVwM,QAAS,CACPo5H,eAAgB,UAChByC,UAAU,EACVyC,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVmR,OAAQ,CACNy0H,eAAgB,SAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV21J,eAAgB,CACd/vB,eAAgB,iBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,6BASZwiC,GAAuD,CAClE96J,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACfrqI,MAAO,CACLuqI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBAGf5gI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,oCAORyiC,GAAqD,CAChE/6J,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBACXuN,gBAAiB,CACfswB,SAAU,CACRpwB,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,aAOpB66J,GAAmD,CAC9Dh7J,KAAM,CACJG,KAAM,YACNm4H,UAAW,uBACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOH86J,GAA+C,CAC1Dj7J,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBAGf29B,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpB+6J,GAAqD,CAChEl7J,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCAOR6iC,GAAuD,CAClEn7J,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACfu1B,aAAc,CACZr1B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,iBAAkB,6BAO/BkyB,GAAoD,CAC/Dr7J,KAAM,CACJG,KAAM,YACNm4H,UAAW,wBACXuN,gBAAiB,CACfv5G,OAAQ,CACNy5G,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WAGV3E,MAAO,CACLuqI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBAGfgjC,QAAS,CACPv1B,eAAgB,qBAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAKnBijC,iBAAkB,CAChBx1B,eAAgB,8BAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAKnBigC,YAAa,CACXxyB,eAAgB,yBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,yCASZkjC,GAA2C,CACtDx7J,KAAM,CACJG,KAAM,YACNm4H,UAAW,eACXuN,gBAAiB,CACf41B,WAAY,CACV11B,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,WAGVu7J,aAAc,CACZ31B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVw7J,aAAc,CACZ51B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVy6J,YAAa,CACX70B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3By7J,WAAY,CACV71B,eAAgB,aAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CACb,SACA,SACA,SACA,SACA,WACA,SACA,iBAIN0yB,kBAAmB,CACjB91B,eAAgB,oBAChB/lI,KAAM,CACJG,KAAM,WAGV0tC,OAAQ,CACNk4F,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3B27J,MAAO,CACL/1B,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3B47J,MAAO,CACLh2B,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BASZ0jC,GAAmD,CAC9Dh8J,KAAM,CACJG,KAAM,YACNm4H,UAAW,uBACXuN,gBAAiB,CACfwrB,KAAM,CACJtrB,eAAgB,OAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV87J,mBAAoB,CAClBl2B,eAAgB,qBAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CAAC,SAAU,SAAU,SAAU,QAAS,cAG3Dt7F,OAAQ,CACNk4F,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3B27J,MAAO,CACL/1B,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3BwP,SAAU,CACRo2H,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BASZ4jC,GAA+C,CAC1Dl8J,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCAOR6jC,GAA2D,CACtEn8J,KAAM,CACJG,KAAM,YACNm4H,UAAW,+BACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHi8J,GAAiD,CAC5Dp8J,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBACXuN,gBAAiB,CACfw2B,cAAe,CACbt2B,eAAgB,gBAChB/lI,KAAM,CACJG,KAAM,WAGVm8J,eAAgB,CACdv2B,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAGfikC,wBAAyB,CACvBx2B,eAAgB,0BAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAGfqgC,kCAAmC,CACjC5yB,eAAgB,oCAChB/lI,KAAM,CACJG,KAAM,cAOHq8J,GAA6C,CACxDx8J,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChB/lI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVs8J,cAAe,CACb12B,eAAgB,gBAChB/lI,KAAM,CACJG,KAAM,YAGVu8J,YAAa,CACX32B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAKnBx4D,OAAQ,CACNimE,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,gBASPw8J,GAAyC,CACpD38J,KAAM,CACJG,KAAM,YACNm4H,UAAW,aACXuN,gBAAiB,CACf+2B,QAAS,CACP72B,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKd08J,WAAY,CACV92B,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKd28J,YAAa,CACX/2B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKd48J,eAAgB,CACdh3B,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,gBASP68J,GAA0D,CACrEh9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BACXuN,gBAAiB,CACfo3B,0BAA2B,CACzBl3B,eAAgB,4BAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iCAOR4kC,GAAwD,CACnEl9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,4BACXuN,gBAAiB,CACfs3B,uBAAwB,CACtBp3B,eAAgB,yBAChB/lI,KAAM,CACJG,KAAM,eAOHi9J,GAAiD,CAC5Dp9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,eAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHk9J,GAA6D,CACxEr9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,iCACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHm9J,GAAiD,CAC5Dt9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHo9J,GAAmC,CAC9Cv9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,OACXuN,gBAAiB,CACf1lI,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVq9J,UAAW,CACTz3B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGVu+I,QAAS,CACP3Y,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WAGVs9J,cAAe,CACb13B,eAAgB,gBAChB/lI,KAAM,CACJG,KAAM,WAGV8sD,QAAS,CACP84E,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,cAOHu9J,GAAkC,CAC7C19J,KAAM,CACJG,KAAM,YACNm4H,UAAW,MACXuN,gBAAiB,CACf1lI,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVw9J,KAAM,CACJ53B,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVi0B,KAAM,CACJ2xG,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVy9J,OAAQ,CACN73B,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WAGV09J,MAAO,CACL93B,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WAGV29J,SAAU,CACR/3B,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOH49J,GAAuC,CAClD/9J,KAAM,CACJG,KAAM,YACNm4H,UAAW,WACXuN,gBAAiB,CACfm4B,YAAa,CACXj4B,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV8qE,SAAU,CACR86D,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CACb,iBACA,eACA,+BACA,UAIN80B,uBAAwB,CACtBl4B,eAAgB,yBAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CACL3B,KAAM,CACJG,KAAM,YACNm4H,UAAW,6CASZ4lC,GAAkE,CAC7El+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,sCACXuN,gBAAiB,CACfm4B,YAAa,CACXj4B,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV6qE,SAAU,CACR+6D,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHg+J,GAAuC,CAClDn+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,WACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVgZ,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVi+J,iBAAkB,CAChBr4B,eAAgB,mBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBAGf29B,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpBk+J,GAA+C,CAC1Dr+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBACXuN,gBAAiB,CACf7lI,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,cAOHm+J,GAA4C,CACvDt+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,4BAGfn/G,SAAU,CACR4sH,eAAgB,WAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGVo+J,UAAW,CACTx4B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGV81J,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpBq+J,GAAsD,CACjEx+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,0BACXuN,gBAAiB,CACfkyB,kBAAmB,CACjBhyB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHs+J,GAAqD,CAChEz+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,yBACXuN,gBAAiB,CACf1lI,KAAM,CACJ4lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,4BAGfimC,UAAW,CACTx4B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGV81J,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpBu+J,GAAoD,CAC/D1+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,wBACXuN,gBAAiB,CACfv9H,UAAW,CACTy9H,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKdlE,QAAS,CACP8pI,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WAGVw+J,aAAc,CACZ54B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,cAOHy+J,GAAwD,CACnE5+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,4BACXuN,gBAAiB,CACfswB,SAAU,CACRpwB,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3B0+J,OAAQ,CACN94B,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WAGV3E,MAAO,CACLuqI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBAORwmC,GAAsD,CACjE9+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,0BACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOH4+J,GAAgD,CAC3D/+J,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBACXuN,gBAAiB,CACfv9H,UAAW,CACTy9H,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,aAKd6+J,oBAAqB,CACnBj5B,eAAgB,sBAChB/lI,KAAM,CACJG,KAAM,cAOH8+J,GAAuC,CAClDj/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,WACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGV++J,SAAU,CACRn5B,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGV2vC,MAAO,CACLi2F,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBAOR6mC,GAAuC,CAClDn/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,WACXuN,gBAAiB,CACf7lI,KAAM,CACJ+lI,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVwB,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,cAOHi/J,GAAyC,CACpDp/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,aACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVkC,QAAS,CACP0jI,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WAGV2vC,MAAO,CACLi2F,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,aAGfzhD,OAAQ,CACNkvD,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBASZ+mC,GAA6C,CACxDr/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOHm/J,GAAkD,CAC7Dt/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVo/J,YAAa,CACXx5B,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,qCAORknC,GAA4D,CACvEx/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,gCACXuN,gBAAiB,CACf45B,sBAAuB,CACrB15B,eAAgB,wBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,OACNgpI,cAAe,CACb,eACA,SACA,SACA,UACA,6BACA,uBACA,SACA,OACA,2BACA,uBAIN4uB,kBAAmB,CACjBhyB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVkhE,UAAW,CACT0kE,eAAgB,YAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aAGV63J,SAAU,CACRjyB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVkmJ,iBAAkB,CAChBtgB,eAAgB,mBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVo3I,WAAY,CACVxR,eAAgB,aAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVu/J,cAAe,CACb35B,eAAgB,gBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBAGfqnC,eAAgB,CACd55B,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAGf9iE,QAAS,CACPuwE,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBAGf/9C,SAAU,CACRwrD,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,mBAORsnC,GAA4C,CACvD5/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,gBACXuN,gBAAiB,CACfv5G,OAAQ,CACNy5G,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,WAGV3E,MAAO,CACLuqI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBAORunC,GAA6C,CACxD7/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChB/lI,KAAM,CACJG,KAAM,WAGVk6J,aAAc,CACZt0B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVu1C,aAAc,CACZqwF,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVw6J,UAAW,CACT50B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,kCAGfsiC,YAAa,CACX70B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3Bg6J,WAAY,CACVp0B,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,WAGVw7J,aAAc,CACZ51B,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,cAOH2/J,GAA0C,CACrD9/J,KAAM,CACJG,KAAM,YACNm4H,UAAW,cACXuN,gBAAiB,CACf7/G,QAAS,CACP+/G,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,aAOpB4/J,GAA6D,CACxE//J,KAAM,CACJG,KAAM,YACNm4H,UAAW,iCACXuN,gBAAiB,CACflkI,MAAO,CACLokI,eAAgB,QAChB/lI,KAAM,CACJG,KAAM,WACNwO,QAAS,CACP3O,KAAM,CACJG,KAAM,YACNm4H,UAAW,0BAKnBk9B,SAAU,CACRzvB,eAAgB,WAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,cAOH6/J,GAAiD,CAC5DhgK,KAAM,CACJG,KAAM,YACNm4H,UAAW,qBACXuN,gBAAiB,CACfo6B,iBAAkB,CAChBl6B,eAAgB,mBAChB/lI,KAAM,CACJG,KAAM,WAGVi4J,aAAc,CACZryB,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,cAOH+/J,GAA2C,CACtDlgK,KAAM,CACJG,KAAM,YACNm4H,UAAW,eACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVA,KAAM,CACJ4lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVH,KAAM,CACJ+lI,eAAgB,OAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,YAOR6nC,GAAmC,CAC9CngK,KAAM,CACJG,KAAM,YACNm4H,UAAW,OACXuN,gBAAiB,CACfowB,KAAM,CACJlwB,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,gBAOpBigK,GAAgD,CAC3DpgK,KAAM,CACJG,KAAM,YACNm4H,UAAW,oBACXuN,gBAAiB,CACf8vB,UAAW,CACT5vB,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGVmqH,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,YAOR+nC,GAAuD,CAClErgK,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACfkyB,kBAAmB,CACjBhyB,eAAgB,oBAChB/lI,KAAM,CACJG,KAAM,cAOHmgK,GAAoD,CAC/DtgK,KAAM,CACJG,KAAM,YACNm4H,UAAW,wBACXuN,gBAAiB,CACfnwF,aAAc,CACZqwF,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,WAGVogK,QAAS,CACPx6B,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WAGVqgK,SAAU,CACRz6B,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOHsgK,GAAkD,CAC7DzgK,KAAM,CACJG,KAAM,YACNm4H,UAAW,sBACXuN,gBAAiB,CACfxjI,QAAS,CACP0jI,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,WAGV++J,SAAU,CACRn5B,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOHugK,GACX,CACE1gK,KAAM,CACJG,KAAM,YACNm4H,UAAW,6CACXuN,gBAAiB,CACf23B,UAAW,CACTz3B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGV47B,SAAU,CACRgqG,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVg2B,SAAU,CACR4vG,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVw1J,UAAW,CACT5vB,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGVwmH,YAAa,CACXof,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOLwgK,GAA0C,CACrD3gK,KAAM,CACJG,KAAM,YACNm4H,UAAW,cACXuN,gBAAiB,CACfnuI,GAAI,CACFquI,eAAgB,KAChB/lI,KAAM,CACJG,KAAM,cAOHygK,GAAyD,CACpE5gK,KAAM,CACJG,KAAM,YACNm4H,UAAW,6BACXuN,gBAAetnI,OAAAD,OAAAC,OAAAD,OAAA,GACV43J,GAAqBl2J,KAAK6lI,iBAAe,CAC5Cg7B,eAAgB,CACd96B,eAAgB,iBAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iCAORwoC,GAA8C,CACzD9gK,KAAM,CACJG,KAAM,YACNm4H,UAAW,kBACXuN,gBAAetnI,OAAAD,OAAAC,OAAAD,OAAA,GACV6/J,GAASn+J,KAAK6lI,iBAAe,CAChCk7B,KAAM,CACJh7B,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,SAGfhO,WAAY,CACVyb,eAAgB,aAChB/lI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,UAG3B6gK,KAAM,CACJ95B,YAAa,CACXU,QAAS,IAAIt+H,OAAO,yBAEtBy8H,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,WAGVo+J,UAAW,CACTx4B,eAAgB,YAChB/lI,KAAM,CACJG,KAAM,WAGVmmF,IAAK,CACHy/C,eAAgB,MAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,QAGf2oC,SAAU,CACRl7B,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,YACNm4H,UAAW,iBAOR4oC,GAAsD,CACjElhK,KAAM,CACJG,KAAM,YACNm4H,UAAW,0BACXuN,gBAAetnI,OAAAD,OAAAC,OAAAD,OAAA,GACVwiK,GAAgB9gK,KAAK6lI,iBAAe,CACvCs7B,YAAa,CACXp7B,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aAGVihK,YAAa,CACXr7B,eAAgB,cAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,aAGV43J,kBAAmB,CACjBhyB,eAAgB,oBAChBkF,UAAU,EACVjrI,KAAM,CACJG,KAAM,eAOHkhK,GACX,CACErhK,KAAM,CACJG,KAAM,YACNm4H,UAAW,wCACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmhK,WAAY,CACVv7B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOLohK,GACX,CACEvhK,KAAM,CACJG,KAAM,YACNm4H,UAAW,iDACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmhK,WAAY,CACVv7B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOLqhK,GACX,CACExhK,KAAM,CACJG,KAAM,YACNm4H,UAAW,8CACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmhK,WAAY,CACVv7B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOLshK,GAAuD,CAClEzhK,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,WAGVmhK,WAAY,CACVv7B,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,cAOHuhK,GAA0D,CACrE1hK,KAAM,CACJG,KAAM,YACNm4H,UAAW,8BACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOHwhK,GAA+D,CAC1E3hK,KAAM,CACJG,KAAM,YACNm4H,UAAW,mCACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOHyhK,GAAuD,CAClE5hK,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cAOH0hK,GAAuD,CAClE7hK,KAAM,CACJG,KAAM,YACNm4H,UAAW,2BACXuN,gBAAiB,CACf1sH,SAAU,CACR4sH,eAAgB,WAChB/lI,KAAM,CACJG,KAAM,cCrsGHyiI,GAA6B,CACxC4oB,cAAe,SACf3kB,OAAQ,CACNrlI,aAAc,mBACd+mI,YAAY,EACZxC,eAAgB,SAChB/lI,KAAM,CACJG,KAAM,YAKC2hK,GAA+B,CAC1CtW,cAAe,QACf3kB,OAAQ,CACNd,eAAgB,QAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV8wJ,cAAc,GAGHkJ,GAAsC,CACjD3O,cAAe,aACf3kB,OAAQ,CACNrlI,aAAc,aACd+mI,YAAY,EACZxC,eAAgB,cAChB/lI,KAAM,CACJG,KAAM,YAKCq1J,GAAkC,CAC7ChK,cAAe,WACf3kB,OAAQ,CACNd,eAAgB,WAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV8wJ,cAAc,GAGHp/F,GAA+B,CAC1C25F,cAAe,QACf3kB,OAAQ,CACNd,eAAgB,QAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV8wJ,cAAc,GAGH9tB,GAAwC,CACnDqoB,cAAe,iBACf3kB,OAAQ,CACNK,YAAa,CACXU,QAAS,IAAIt+H,OAAO,uBACpBk+H,UAAW,GACXE,UAAW,GAEb3B,eAAgB,iBAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKC2+I,GAAkC,CAC7C0M,cAAe,CAAC,UAAW,eAC3B3kB,OAAQ,CACNrlI,aAAc,mBACd+mI,YAAY,EACZxC,eAAgB,eAChB/lI,KAAM,CACJG,KAAM,YAKCm4E,GAAiC,CAC5CkzE,cAAe,aACf3kB,OAAQk7B,IAGG5+F,GAAkC,CAC7CqoF,cAAe,CAAC,UAAW,UAC3B3kB,OAAQ,CACNd,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,YAKCg+C,GAA+B,CAC1CqtG,cAAe,CAAC,UAAW,OAC3B3kB,OAAQ,CACNd,eAAgB,OAChB/lI,KAAM,CACJG,KAAM,YAKC6hK,GAAkC,CAC7CxW,cAAe,aACf3kB,OAAQo7B,IAGGC,GAAkC,CAC7C1W,cAAe,aACf3kB,OAAQs7B,IAGGC,GAAiC,CAC5C5W,cAAe,UACf3kB,OAAQ,CACNK,YAAa,CACXM,UAAW,GACXE,UAAW,GAEb3B,eAAgB,UAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKCkiK,GAAwC,CACnD7W,cAAe,iBACf3kB,OAAQ,CACNd,eAAgB,iBAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKCmiK,GAAkC,CAC7C9W,cAAe,aACf3kB,OAAQ07B,IAGGC,GAA2C,CACtDhX,cAAe,oBACf3kB,OAAQ,CACNK,YAAa,CACXU,QAAS,IAAIt+H,OAAO,uBACpBk+H,UAAW,GACXE,UAAW,GAEb3B,eAAgB,oBAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAiBCsiK,GAAmD,CAC9DjX,cAAe,4BACf3kB,OAAQ,CACNd,eAAgB,4BAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKCmqH,GAAiC,CAC5CkhC,cAAe,CAAC,UAAW,cAC3B3kB,OAAQ67B,IAGGC,GAAkC,CAC7CnX,cAAe,CAAC,UAAW,UAC3B3kB,OAAQ,CACNd,eAAgB,UAChB/lI,KAAM,CACJG,KAAM,YAKCyiK,GAAkC,CAC7CpX,cAAe,aACf3kB,OAAQg8B,IAGGC,GAAiD,CAC5DtX,cAAe,0BACf3kB,OAAQ,CACNK,YAAa,CACXU,QAAS,IAAIt+H,OAAO,uBACpBk+H,UAAW,GACXE,UAAW,GAEb3B,eAAgB,0BAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKC4iK,GAA4C,CACvDvX,cAAe,qBACf3kB,OAAQ,CACNd,eAAgB,qBAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV8wJ,cAAc,GAGHv7G,GAAsC,CACjD81G,cAAe,eACf3kB,OAAQ,CACNd,eAAgB,eAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV8wJ,cAAc,GAGHoJ,GAAsC,CACjD7O,cAAe,eACf3kB,OAAQ,CACNd,eAAgB,eAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKC6iK,GAAuC,CAClDxX,cAAe,aACf3kB,OAAQ,CACNd,eAAgB,cAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKC8iK,GAAkC,CAC7CzX,cAAe,aACf3kB,OAAQq8B,IAGGzH,GAAoC,CAC/CjQ,cAAe,aACf3kB,OAAQ,CACNd,eAAgB,aAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,WAGV8wJ,cAAc,GAGHkS,GAAkC,CAC7C3X,cAAe,aACf3kB,OAAQu8B,IAaGC,GAAkC,CAC7C7X,cAAe,aACf3kB,OAAQy8B,IAGGC,GAAkC,CAC7C/X,cAAe,aACf3kB,OAAQ28B,IAkBGnhK,GAAiC,CAC5CmpJ,cAAe,UACf3kB,OAAQ,CACNd,eAAgB,UAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKC++J,GAAkC,CAC7C1T,cAAe,WACf3kB,OAAQ,CACNd,eAAgB,WAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YAKCsjK,GAAkC,CAC7CjY,cAAe,aACf3kB,OAAQ68B,IAGGC,GAAmC,CAC9CnY,cAAe,aACf3kB,OAAQ+8B,IAGGrE,GAAqC,CAChD/T,cAAe,cACf3kB,OAAQ,CACNd,eAAgB,cAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,YCrXN,MAAO0jK,GAOXz2J,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAMOltE,IAAAA,CACL/tB,GAEA,MAAM6nK,EAAOtnK,KAAKunK,cAAc9nK,GAChC,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK2nK,eAAeloK,EAASgoK,IAG1C,CAEeE,cAAAA,CACbloK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK4nK,MAAMnoK,IAC1B,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK6nK,UAAUzgC,EAAmB3nI,IACjD2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeogC,aAAAA,CACb9nK,yDAEA,IAAyB,IAA4Bg3I,EAA5BtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK2nK,eAAeloK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA9BtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAMQygC,KAAAA,CACNnoK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBAAqB,CAAE13J,WAAWqoK,GACvD,CAOQD,SAAAA,CACN7O,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZsoK,GAEJ,EAGF,MAAMv6B,GAAaw6B,GAA4BC,GAAqB,GAE9DH,GAA8C,CAClDjT,KAAM,4CACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,IAChB3V,iBAAkB,CAAC2V,IACnB16B,eAEIu6B,GAAkD,CACtDlT,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,eC1IWznE,GAAS8uE,GAAmB,YCH5BszB,GAAsB,IAItBC,GAAiB,CAAC,YAAa,WAAY,UCOlD,SAAUC,GACdC,GAEA,IACE,OAAOt7F,KAAKC,MAAMq7F,GAAiBtwI,KACrC,CAAE,MAAOnmB,GACP,MAAM,IAAInQ,MAAM,sCAAD87B,OAAuC8qI,GACxD,CACF,CAEA,SAASC,GAA+BC,GAKtC,MAAM,MAAExwI,EAAK,WAAEywI,EAAU,iBAAEC,GAAqBF,EAChD,OAAQxpK,IAKN,MAJI0pK,EAAiB1pK,KACnBypK,EAAWE,SAAS3wI,EAAOh5B,GAC3BypK,EAAWG,UAAU5wI,IAEjBh5B,EAEV,CAEA,SAAS6pK,GAA2BC,EAAwBC,GAC1D,IAAI54J,EAAU24J,EAId,MAH0B,MAAtB34J,EAAQzF,OAAO,KACjByF,GAAoB,KAEfA,EAAU,IAAM44J,CACzB,CAoBA,SAASC,GAAmDzqI,GAU1D,MAAM,MAAEvG,EAAK,WAAEywI,EAAU,OAAE34I,EAAM,OAAEm5I,EAAM,cAAEC,EAAa,SAAEvrB,EAAQ,SAAE5/D,EAAQ,iBAAEorF,GAC5E5qI,EACF,OAAQzO,GACN,IAAK,YACH24I,EAAWW,aAAapxI,GACxB,MAEF,IAAK,SAAU,CACb,MAAMtwB,EAAc,OAARi2I,QAAQ,IAARA,OAAQ,EAARA,EAAW5/D,GACvB,IAAIsrF,EAAU,GACd,GAAI3hK,EAAK,CACP,MAAM,KAAElH,EAAI,QAAE2P,GAvCtB,SAAuBzI,GAIrB,IAAIyI,EAAUzI,EAAIyI,QACd3P,EAAOkH,EAAIlH,KACX8oK,EAAS5hK,EACb,KAAO4hK,EAAOC,YACZD,EAASA,EAAOC,WAChB/oK,EAAO8oK,EAAO9oK,KACd2P,EAAU04J,GAA2B14J,EAASm5J,EAAOn5J,SAEvD,MAAO,CACL3P,OACA2P,UAEJ,CAuBkCq5J,CAAc9hK,GACxC2hK,EAAU,KAAH7rI,OAAQh9B,EAAI,MAAAg9B,OAAKrtB,EAC1B,CACA,MAAMs5J,EAAS,wCAAHjsI,OAA2C6rI,GACvDZ,EAAWE,SAAS3wI,EAAO,IAAIt2B,MAAM+nK,IACrChB,EAAWG,UAAU5wI,GACrB+tC,GAAOb,QAAQukG,GACf,KACF,CACA,IAAK,WACHhB,EAAWiB,YAAY1xI,KAKnB,OAANixI,QAAM,IAANA,OAAM,EAANA,EAASlrF,EAAU/lD,UACPm/B,IAAX8xG,GACC,CAAC,YAAa,YAAYzrI,OAAO2rI,EAAmB,GAAK,CAAC,WAAWv5J,SAASkgB,KAEhF24I,EAAWkB,UACT3xI,EAUN,SAAiDwwI,GAK/C,MAAM,cAAEU,EAAa,SAAEnrF,EAAQ,MAAE/lD,GAAUwwI,EAC3C,OAAOU,EAAgBA,EAAcnrF,EAAU/lD,GAAU+lD,CAC3D,CAhBM6rF,CAAY,CACV7rF,WACA/lD,QACAkxI,kBAIR,CAcOhgJ,eAAe2gJ,GAA0CrB,GAY9D,MAAM,KACJvnI,EAAI,WACJwnI,EAAU,cACVS,EAAa,mBACbY,EAAkB,sBAClBC,EAAqB,iBACrBZ,GACEX,GACE,kBAAEwB,EAAiB,iBAAEC,EAAgB,SAAE54F,EAAQ,SAAE0M,SAAmB98C,IACtE+oI,IAAwC,OAArBD,QAAqB,IAArBA,GAAAA,EAAwBC,GAAmB,IAClE,MAAMn1G,EAAS,CACbwc,WACA24F,oBACAC,oBAEFlkG,GAAOT,QAAQ,8BAA+BzQ,GAC9C,MAAM78B,EAAQywI,EAAWyB,UAAUr1G,GAGnC,OADAm0G,GAAuB,CAAEhxI,QAAOlI,OADjBg6I,EAAmB,CAAE/rF,WAAU/lD,QAAOgyI,sBACbvB,aAAY1qF,WAAUorF,mBAAkBD,kBACzElxI,CACT,CA6DO9O,eAAeihJ,GAAoD3B,GA2BxE,MAAM,KACJ4B,EAAI,MACJpyI,EAAK,WACLywI,EAAU,QACVhpK,EAAO,mBACPqqK,EAAkB,oBAClBO,EAAmB,qBACnBC,EAAoB,iBACpB5B,EAAgB,sBAChBqB,EAAqB,mBACrBQ,EAAkB,cAClBrB,EAAa,SACbvrB,EAAQ,YACRp1E,EAAW,SACXiiG,EAAQ,OACRvB,EAAM,iBACNE,GACEX,GACE,kBAAEwB,GAAsBhyI,EAAM68B,OACpC,QAA0BsC,IAAtB6yG,EAAiC,CACnC,MAAM,SAAEjsF,EAAQ,OAAEjuD,SA1GtB5G,eAAyEs/I,GAmBvE,MAAM,KACJ4B,EAAI,MACJpyI,EAAK,WACLywI,EAAU,kBACVuB,EAAiB,mBACjBF,EAAkB,oBAClBO,EAAmB,iBACnB3B,EAAgB,QAChBjpK,GACE+oK,EACEzqF,QAAiBqsF,EAAKJ,EAAmBvqK,GAASwP,MACtDs5J,GAAc,CACZvwI,QACAywI,aACAC,sBAGE54I,EAASg6I,EAAmB/rF,EAAU/lD,GAQ5C,GAPA+tC,GAAOT,QAAQ,iCAAD9nC,OAEVxF,EAAM68B,OAAOm1G,kBACf,0BAAAxsI,OAAyB1N,EAAM,wBAAA0N,OAC7B4qI,GAAex4J,SAASkgB,GAAU,UAAY,YAGnC,cAAXA,EAAwB,CAC1B,MAAMm6I,EAAmBI,EAAoBtsF,EAAU/lD,GACvD,QAAyBm/B,IAArB8yG,EACF,MAAO,CACLlsF,eAAgBqsF,EAAKH,GAAkBh7J,MACrCs5J,GAAc,CAAEvwI,QAAOywI,aAAYC,sBAErC54I,SAGN,CACA,MAAO,CAAEiuD,WAAUjuD,SACrB,CAkDuC26I,CAAoB,CACrDL,OACAN,qBACA9xI,QACAywI,aACAuB,oBACAK,sBACA3B,mBACAjpK,YAaF,GAXAupK,GAAuB,CACrBl5I,SACAiuD,WACA/lD,QACAywI,aACAQ,SACAC,gBACAvrB,WACAwrB,sBAGGf,GAAex4J,SAASkgB,GAAS,CACpC,MAAM46I,EAAiC,OAAlBH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAqBxsF,GACtC2sF,GAAcF,EAASE,GAC3B,MAAM/tJ,EAA+B,OAApB2tJ,QAAoB,IAApBA,OAAoB,EAApBA,EAAuBvsF,EAAU/lD,GAClD,QAAiBm/B,IAAbx6C,EAAwB,CAC1B,MAAMguJ,EAAYX,IAAsBrtJ,EACxCqb,EAAM68B,OAAOm1G,kBAAoBrtJ,EACZ,OAArBotJ,QAAqB,IAArBA,GAAAA,EAAwBptJ,EAAUguJ,EACpC,MAA4B,OAArBZ,QAAqB,IAArBA,GAAAA,EAAwBC,GAAmB,EACpD,CACW,OAAXzhG,QAAW,IAAXA,GAAAA,EAAcvwC,EAAO+lD,EACvB,CACF,CC1RA,SAAS6sF,GAA+BpC,GAItC,MAAM,oBAAEqC,EAAmB,kBAAEb,GAAsBxB,EACnD,OAAwB,OAAjBwB,QAAiB,IAAjBA,EAAAA,EAAqBa,CAC9B,CAEA,SAASC,GAAkBzT,GACzB,OAAOA,EAAY5mE,QAAkB,QACvC,CAEA,SAASs6E,GAA2B1T,GAClC,OAAOA,EAAY5mE,QAAQ,qBAC7B,CAEA,SAASu6E,GAA6B3T,GACpC,OAAOA,EAAY5mE,QAAQ,uBAC7B,CAEA,SAASw6E,GAAqBzC,SAM5B,MAAM,SAAE7rJ,EAAQ,cAAEkjF,EAAa,YAAEqrE,EAAW,uBAAEC,GAA2B3C,EACzE,OAAQ3oE,GACN,IAAK,MACH,OAAOqrE,EAET,IAAK,SACH,OAEF,IAAK,QACH,OAAmB,QAAZ5jC,EAAA8jC,WAAY,IAAA9jC,EAAAA,EAAI4jC,EAEzB,QACE,OAAOE,IAIX,SAASA,IACP,OAAQD,GACN,IAAK,wBACH,OAEF,IAAK,eACH,OAAOD,EAGT,QACE,OAAOvuJ,EAGb,CACF,CAEM,SAAU0uJ,GAAa7C,GAM3B,MAAM,YAAEnR,EAAW,cAAEx3D,EAAa,YAAEqrE,EAAW,uBAAEC,GAA2B3C,EAGtE8C,EAAaV,GAA+B,CAAEZ,kBAF1Be,GAA2B1T,GAEkBwT,oBAD3CG,GAA6B3T,KAEnD16I,EAAWmuJ,GAAkBzT,GAC7BkU,EAAuC,OAAb1rE,QAAa,IAAbA,OAAa,EAAbA,EAAe2rE,oBAC/C,YAAmBr0G,IAAfm0G,EACK,CACL5jJ,KAAM,oBACNsiJ,kBAAmBsB,EACnBrB,iBAAkBgB,GAAqB,CACrCprE,cAAe0rE,EACf5uJ,WACAuuJ,cACAC,iCAGkBh0G,IAAbx6C,EACF,CACL+K,KAAM,mBACNsiJ,kBAAmBrtJ,GAEgB,QAA5B4uJ,GAAqCL,EACvC,CACLxjJ,KAAM,OACNsiJ,kBAAmBkB,QAGrB,CAEJ,CAEA,SAASO,GAAgBjD,GACvB,MAAM,OAAE14I,EAAM,WAAEirH,GAAeytB,EAC/B,GAAsB,kBAAX14I,QAAkCqnC,IAAXrnC,EAChC,MAAM,IAAIpuB,MAAM,oGAAD87B,OACuF1N,EAAM,yIAG9G,OAAc,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ47I,qBACd,UAAKv0G,EACH,OAAOw0G,GAAkB5wB,GAC3B,IAAK,YACH,MAAO,YACT,IAAK,SACH,MAAO,SACT,IAAK,UACL,IAAK,WACL,IAAK,UACL,IAAK,YACL,IAAK,aACH,MAAO,UACT,IAAK,WACL,IAAK,YACH,MAAO,WACT,QAEE,OADAh1E,GAAOT,QAAQ,uCAAD9nC,OAAwC1N,IAC/CA,EAGb,CAaA,SAAS67I,GAAkB5wB,GACzB,OAAmB,MAAfA,EACK,UACEA,EAAa,IACf,YAEA,QAEX,CAEM,SAAU6wB,GAAetjG,GAAmC,IAA/B,YAAE+uF,GAA6B/uF,EAChE,MAAMw8F,EAAiCzN,EAAY5mE,QAAQ,eAC3D,QAAmBt5B,IAAf2tG,EAA0B,CAE5B,MAAM+G,EAAsBp1D,SAASquD,GACrC,OAAOn8G,MAAMkjH,GAwBjB,SAA0CC,GACxC,MAAMC,EAAU9sK,KAAKC,OAAM,IAAIzD,MAAO8xE,WAChCy+F,EAAiBF,EAAev+F,UACtC,GAAIw+F,EAAUC,EACZ,OAAOA,EAAiBD,EAE1B,MACF,CA9BQE,CAAiC,IAAIxwK,KAAKqpK,IACpB,IAAtB+G,CACN,CAEF,CAEM,SAAUK,GAAwBnuF,GACtC,MAAM/+E,EAAQmtK,GAAmBpuF,EAAU,SAC3C,GAAK/+E,EAAL,CAMA,GAAKA,EAAMwB,MAASxB,EAAMmR,QAM1B,OAAOnR,EALL+mE,GAAOb,QAAQ,kHAFjB,MAJEa,GAAOb,QAAQ,0FAYnB,CAWM,SAAUknG,GAAqC5D,GAKnD,MAAM,SAAEzqF,EAAQ,MAAE/lD,EAAK,kBAAEgyI,GAAsBxB,EAY/C,MAAM14I,EAXN,iBAEE,OADkC,QAArBw3G,EAAAtvG,EAAM68B,OAAOwc,gBAAQ,IAAAi2D,OAAA,EAAAA,EAAS,MAEzC,UAAKnwE,EACH,OAAOw0G,GAAkB5tF,EAASs5E,YAAYtc,YAChD,IAAK,OACH,OAAO+uB,GAAmB/rF,EAAU/lD,GACtC,QACE,MAAO,UAEb,CACeq0I,GACf,MAAkB,YAAXv8I,QAA8CqnC,IAAtB6yG,EAAkC,YAAcl6I,CACjF,CAsCM,SAAUw6I,GAAoBgC,EAElCt0I,GAAuC,IADvC,YAAEq/H,GAA0BiV,QAI5B,OADkC,QAArBhlC,EAAAtvG,EAAM68B,OAAOwc,gBAAQ,IAAAi2D,OAAA,EAAAA,EAAS,MAEzC,IAAK,oBACH,OAAOsjC,GAA+B,CACpCZ,kBAAmBe,GAA2B1T,GAC9CwT,oBAAqBG,GAA6B3T,KAGtD,IAAK,mBACH,OAAOyT,GAAkBzT,GAG3B,QACE,OAGN,CAEM,SAAUyS,GAAkByC,EAEhCv0I,GAAuC,IADvC,YAAEq/H,GAA0BkV,QAG5B,MAAM7kJ,EAA4B,QAArB4/G,EAAAtvG,EAAM68B,OAAOwc,gBAAQ,IAAAi2D,OAAA,EAAAA,EAAS,KAC3C,OAAQ5/G,GACN,IAAK,oBACH,OAjJN,SAAmB2vI,SACjB,MAAM,OAAEvnI,GAA6C,QAAlCw3G,EAAC+vB,EAAYzlJ,YAAqB,IAAA01H,EAAAA,EAAI,CAAC,EAC1D,OAAOmkC,GAAgB,CAAE37I,SAAQirH,WAAYsc,EAAYtc,YAC3D,CA8IayxB,CAAUnV,GAEnB,IAAK,mBACH,OAAOsU,GAAkBtU,EAAYtc,YAEvC,IAAK,OACH,OAlJN,SAA8Bsc,WAC5B,MAAM,WAAEvpC,EAAU,kBAAEytC,GAAwD,QAAlCj0B,EAAC+vB,EAAYzlJ,YAAqB,IAAA01H,EAAAA,EAAI,CAAC,EAEjF,OAAOmkC,GAAgB,CAAE37I,OADmB,QAA7B25G,EAAU,OAAV3b,QAAU,IAAVA,OAAU,EAAVA,EAAYytC,yBAAiB,IAAA9xB,EAAAA,EAAI8xB,EACfxgB,WAAYsc,EAAYtc,YAC3D,CA8Ia0xB,CAAqBpV,GAE9B,QACE,MAAM,IAAI31J,MAAM,8CAAD87B,OAA+C9V,IAEpE,CAEA,SAASykJ,GAAkBO,EAEzB50G,GAAO,IADP,aAAEw/F,EAAY,YAAED,GAA0BqV,UAG1C,OAA6C,QAAtCplC,EAA8B,OAA7BgwB,QAAY,IAAZA,OAAY,EAAZA,EAAgCx/F,UAAK,IAAAwvE,EAAAA,EAAsC,QAAlCmC,EAAC4tB,EAAYzlJ,YAAqB,IAAA63H,OAAA,EAAAA,EAAG3xE,EACxF,CAEM,SAAUuyG,GACd9lC,EACAvsG,GAEA,MAAM20I,EAAMR,GAAmB5nC,EAAK,oBAIpC,OAHIooC,GAAsB,kBAARA,IAChB30I,EAAM68B,OAAOo1G,iBAAmB0C,GAE3B30I,EAAM68B,OAAOo1G,gBACtB,CAEM,SAAUvB,GAAiB72J,GAC/B,MAAkB,cAAXA,EAAElO,IACX,CCzRM,SAAUipK,GACdpE,GAKA,MAAM,qBACJ8B,EAAoB,6BACpB8B,EAA4B,0BAC5BS,EAAyB,iBACzBnE,EAAgB,oBAChB2B,EAAmB,mBACnBE,EAAkB,SAClB5sB,EAAQ,sBACRmvB,GACEtE,EACJ,OAAOt/I,MAAAo/C,EAEL7oE,KACE,IAFF,KAAEwhC,EAAI,KAAEmpI,GAA+D9hG,EAGvE,MAAM,cACJ4gG,EAAa,YACb3gG,EACAwhG,sBAAuBgD,EAA6B,aACpDrC,EAAevC,GAAmB,YAClC6E,GACEvtK,GAAW,CAAC,EACVgpK,EApDN,CAMFyB,UAAYr1G,IAAM,CAAQ/kC,OAAQ,UAAW+kC,WAC7C60G,YAAc1xI,GAAWA,EAAMlI,OAAS,WACxC64I,SAAUA,CAAC3wI,EAAOh5B,IAAWg5B,EAAMh5B,MAAQA,EAC3C2qK,UAAWA,CAAC3xI,EAAOuG,IAAYvG,EAAMuG,OAASA,EAC9C0uI,WAAaj1I,GAAWA,EAAMlI,OAAS,UACvCs5I,aAAepxI,GAAWA,EAAMlI,OAAS,YACzC84I,UAAY5wI,GAAWA,EAAMlI,OAAS,SAEtC6tH,SAAW3lH,GAAUA,EAAMh5B,MAC3BkuK,UAAYl1I,GAAUA,EAAMuG,OAC5B4uI,WAAan1I,GAA2B,aAAjBA,EAAMlI,OAC7Bs9I,SAAWp1I,GAA2B,WAAjBA,EAAMlI,OAC3Bu9I,UAAYr1I,GAA2B,YAAjBA,EAAMlI,OAC5Bw9I,YAAct1I,GAA2B,cAAjBA,EAAMlI,QAkCtBi6I,EAAwBgD,EAC1B,MACE,IAAIQ,GAAS,EACb,MAAO,CAACvD,EAA2BW,KAC7BA,EAAWoC,EAA8B/C,GACnCuD,GAAQR,EAA8B/C,GAChDuD,GAAS,EAEZ,EAPD,QAQAp2G,EACEn/B,EAA0Cg1I,EAC5C3E,GAAiB2E,SACXnD,GAAc,CAClB5oI,OACAwnI,aACAS,gBACAY,mBAAoBsC,EACpBrC,wBACAZ,kBAAmB2D,IAEzB,IAAIU,EACJ,MAAMxxB,EAAkB,IAAIztH,gBAGtBk/I,EAAW,IAAIzhK,IAEf0hK,EAAe,yBACrB,IAAIC,EAA0BjD,EAE9B,MAAMkD,EAA4C,CAChDC,kBAAmBA,IAAM71I,EACzBk1I,UAAWA,IAAMl1I,EAAMuG,OACvB0qI,OAAQA,IAAM,CAAC,YAAa,SAAU,YAAYr5J,SAASooB,EAAMlI,QACjEg+I,UAAWA,SAAwB32G,IAAlBq2G,EACjBO,YAAaA,KACX/xB,EAAgBrtH,SAElBlkB,SAAUA,IACRuiE,KAAKynB,UAAU,CACbz8D,UAEJwkH,WAAa3/I,IACX,MAAMu7D,EAAIn2D,SAEV,OADAwrK,EAAS7+J,IAAIwpD,EAAGv7D,GACT,IAAM4wK,EAAS/pI,OAAO00B,IAE/B41G,cAAgBC,GACA,OAAbT,QAAa,IAAbA,EAAAA,EAAAA,EAAkB,WACjB,MAAQn3B,YAAa63B,GAAqBD,GAAe,CAAC,EAE1D,SAAS/xB,IACPF,EAAgBrtH,OAClB,CACA,MAAM0nH,EAAc2F,EAAgBxtH,QAChB,OAAhB0/I,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBz/I,SACpButH,EAAgBrtH,QACN0nH,EAAY5nH,SACN,OAAhBy/I,QAAgB,IAAhBA,GAAAA,EAAkBj4J,iBAAiB,QAASimI,EAAe,CAAEiyB,MAAM,IAGrE,IACE,IAAKP,EAAO3E,SAEV,UADM2E,EAAOxD,KAAK,CAAE/zB,iBACZu3B,EAAO3E,gBACPvpK,GAAMiuK,EAAyB,CAAEt3B,sBACjCu3B,EAAOxD,KAAK,CAAE/zB,eAG1B,CAAE,QACgB,OAAhB63B,QAAgB,IAAhBA,GAAAA,EAAkBh4J,oBAAoB,QAASgmI,EACjD,CACA,GAAI4wB,EACF,OAAOc,EAAOV,YAEd,OAAQl1I,EAAMlI,QACZ,IAAK,YACH,OAAO89I,EAAOV,YAChB,IAAK,WACH,MAAM,IAAIxrK,MAAMgsK,GAClB,IAAK,SACH,MAAM11I,EAAMh5B,MACd,IAAK,aACL,IAAK,UACH,MAAM,IAAI0C,MAAM,mDAGvB,EAvCkB,GAuCd+mE,SAAQ,KACX+kG,OAAgBr2G,KAEpB,UAAMizG,CAAK6D,GACT,GAAInB,GACF,GAAIc,EAAO3E,SAAU,YAErB,OAAQjxI,EAAMlI,QACZ,IAAK,YACH,OACF,IAAK,WACH,MAAM,IAAIpuB,MAAMgsK,GAClB,IAAK,SACH,MAAM11I,EAAMh5B,MAuBlB,SApBMmrK,GAAc,CAClBC,OACApyI,QACAywI,aACA6B,uBACA5B,mBACAqB,wBACAQ,qBACAT,mBAAoB+C,EACpBxC,sBACAnB,gBACAvrB,WACAp1E,cACA9oE,QAASwuK,EACTzD,SAAW4D,IACTT,EAA0BS,GAE5BjF,kBAAmB2D,SA9FI5jJ,UAA2BukJ,EAAS7+I,SAASy/I,GAAMA,EAAEr2I,KAgGxEs2I,IACDxB,EACH,OAAQ90I,EAAMlI,QACZ,IAAK,WACH,MAAM,IAAIpuB,MAAMgsK,GAClB,IAAK,SACH,MAAM11I,EAAMh5B,MAGpB,GAEF,OAAO4uK,EAEX,CCvLO1kJ,eAAeqlJ,GACpBC,EACA/uK,GAEA,MAAM,uBACJ0rK,EAAsB,aACtBT,EAAY,cACZxB,EAAa,YACb8D,EAAW,YACXzkG,EAAW,sBACXwhG,EAAqB,sBACrB+C,GAAwB,GACtBrtK,GAAW,CAAC,EAChB,OAAOmtK,GAAgD,CACrDR,6BAA4B,GAC5BS,0BAA2B/C,GAC3BpB,iBAAgB,GAChB4B,qBAAoB,GACpBD,oBAAmB,GACnBE,mBAAoBqB,GACpBjuB,SAAUuuB,GACVY,yBARKF,CAUL,CACE3rI,KAAM/X,UACJ,MAAM60D,QAAiBywF,EAAIC,qBACrB55G,EAASw2G,GAAa,CAC1BhU,YAAat5E,EAASs5E,YACtB6T,YAAasD,EAAItD,YACjBrrE,cAAe2uE,EAAI3uE,cACnBsrE,2BAEF,OAAAppK,OAAAD,OAAA,CACEi8E,WACAisF,kBAAyB,OAANn1G,QAAM,IAANA,OAAM,EAANA,EAAQm1G,kBAC3BC,iBAAwB,OAANp1G,QAAM,IAANA,OAAM,EAANA,EAAQo1G,mBAChB,OAANp1G,QAAM,IAANA,OAAM,EAANA,EAAQntC,MAAO,CAAE2pD,SAAU,CAAE3pD,KAAMmtC,EAAOntC,OAAW,CAAC,IAG9D0iJ,KAAMoE,EAAIE,iBAEZ,CACEhE,eACAX,wBACAiD,cACAzkG,cACA2gG,cAAeA,EACX,CAAA5gG,EAAmBtwC,KAAK,IAAvB,aAAEs/H,GAAchvF,EAAA,OAAY4gG,EAAc5R,EAAct/H,IACzD22I,IAAA,IAAC,aAAErX,GAAcqX,EAAA,OAAKrX,IAGhC,CCxDwC51J,MAYEA,MCpBpC,SAAUktK,GAAiBpG,GAS/B,MAAM,KAAE30B,EAAI,KAAEg7B,EAAI,gBAAEC,GAAoBtG,EACxC,MAAO,CACL3oE,cAAegvE,EAAK3c,WACpBgZ,YAAa2D,EAAKha,KAClB4Z,mBAAoBA,IAAMK,EAAgBj7B,EAAMg7B,GAChDH,gBAAiBA,CACf7Z,EACAp1J,KAEA,MAAM,YAAEshH,GAA6B8tD,EAAbE,EAAQjX,GAAK+W,EAA/B,iBACN,OAAOC,EAAgBj7B,EAAI9xI,OAAAD,OAAAC,OAAAD,OAAA,GACtBitK,GAAQ,CACX7c,WAAY,MACZ2C,OACAxe,YAAoB,OAAP52I,QAAO,IAAPA,OAAO,EAAPA,EAAS42I,gBAI9B,CCmFM,MAAO24B,GAOXp+J,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAOOu0E,WAAAA,CACL55G,EACA51D,GAEA,MAAM6nK,EAAOtnK,KAAKkvK,qBAAqB75G,EAAO51D,GAC9C,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKmvK,sBAAsB95G,EAAO51D,EAASgoK,IAGxD,CAEe0H,qBAAAA,CACb95G,EACA51D,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKovK,aAAa/5G,EAAO51D,IACxC,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAKqvK,iBAAiBh6G,EAAO+xE,EAAmB3nI,IAC/D2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEe+nC,oBAAAA,CACb75G,EACA51D,yDAEA,IAAyB,IAA0Cg3I,EAA1CtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKmvK,sBAAsB95G,EAAO51D,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA5CtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAMOmoC,iBAAAA,CACL7vK,GAEA,MAAM6nK,EAAOtnK,KAAKuvK,2BAA2B9vK,GAC7C,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKwvK,4BAA4B/vK,EAASgoK,IAGvD,CAEe+H,2BAAAA,CACb/vK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKyvK,mBAAmBhwK,IACvC,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK0vK,uBAAuBtoC,EAAmB3nI,IAC9D2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeooC,0BAAAA,CACb9vK,yDAEA,IAAyB,IAAyCg3I,EAAzCtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKwvK,4BAA4B/vK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA3CtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAOOwoC,0BAAAA,CACL/J,EACAnmK,GAEA,MAAM6nK,EAAOtnK,KAAK4vK,oCAAoChK,EAASnmK,GAC/D,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK6vK,qCACVjK,EACAnmK,EACAgoK,IAIR,CAEeoI,oCAAAA,CACbjK,EACAnmK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK8vK,4BAA4BlK,EAASnmK,IACzD,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK+vK,gCAClBnK,EACAx+B,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeyoC,mCAAAA,CACbhK,EACAnmK,yDAEA,IAAyB,IAGxBg3I,EAHwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK6vK,qCAC5BjK,EACAnmK,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAHsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAInBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAMO6oC,uBAAAA,CACLvwK,GAEA,MAAM6nK,EAAOtnK,KAAKiwK,iCAAiCxwK,GACnD,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKkwK,kCAAkCzwK,EAASgoK,IAG7D,CAEeyI,iCAAAA,CACbzwK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKmwK,yBAAyB1wK,IAC7C,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAKowK,6BAClBhpC,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEe8oC,gCAAAA,CACbxwK,yDAEA,IAAyB,IAA+Cg3I,EAA/CtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKkwK,kCAAkCzwK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAAjDtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAQOkpC,mBAAAA,CACLrK,EACAvmK,GAEA,MAAM6nK,EAAOtnK,KAAKswK,6BAA6BtK,EAAmBvmK,GAClE,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKuwK,8BACVvK,EACAvmK,EACAgoK,IAIR,CAEe8I,6BAAAA,CACbvK,EACAvmK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKwwK,qBAAqBxK,EAAmBvmK,IAC5D,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAKywK,yBAClBzK,EACA5+B,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEempC,4BAAAA,CACbtK,EACAvmK,yDAEA,IAAyB,IAGxBg3I,EAHwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKuwK,8BAC5BvK,EACAvmK,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAHsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAInBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAcA,wBAAMupC,CACJr7G,EACAsxE,EACAlnI,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEx+E,QAAOsxE,iBAAgBlnI,WAC/BovK,KAAMkC,KAEFnD,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAcA,+BAAMsD,CACJ77G,EACAsxE,EACAlnI,GAOA,aALqBO,KAAK0wK,mBACxBr7G,EACAsxE,EACAlnI,IAEYuuK,eAChB,CAQAmD,qBAAAA,CACE97G,EACAsxE,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBlnI,WACzB2xK,GAEJ,CASA,gCAAMC,CACJh8G,EACAsxE,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEx+E,QAAOsxE,iBAAgB7qD,aAAYr8E,WAC3CovK,KAAMyC,KAEF1D,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CASA,uCAAM2D,CACJl8G,EACAsxE,EACA7qD,EACAr8E,GAQA,aANqBO,KAAKqxK,2BACxBh8G,EACAsxE,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQAwD,UAAAA,CACEn8G,EACAsxE,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBlnI,WACzBgyK,GAEJ,CAUAC,aAAAA,CACEr8G,EACAsxE,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBlnI,WACzBkyK,GAEJ,CAUA,0BAAMC,CACJv8G,EACAsxE,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEx+E,QAAOsxE,iBAAgB7qD,aAAYr8E,WAC3CovK,KAAMgD,KAEFjE,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAUA,iCAAMkE,CACJz8G,EACAsxE,EACA7qD,EACAr8E,GAQA,aANqBO,KAAK4xK,qBACxBv8G,EACAsxE,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQA+D,qBAAAA,CACE18G,EACAsxE,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBlnI,WACzBuyK,GAEJ,CAOQ5C,YAAAA,CACN/5G,EACA51D,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAO51D,WACTwyK,GAEJ,CAaA,8BAAMC,CACJvrC,EACAlnI,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgBlnI,WACxBovK,KAAMsD,KAEFvE,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAaA,qCAAMwE,CACJzrC,EACAlnI,GAGA,aADqBO,KAAKkyK,yBAAyBvrC,EAAgBlnI,IACrDuuK,eAChB,CAOAqE,2BAAAA,CACE1rC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClB6yK,GAEJ,CAQA,sCAAMC,CACJ5rC,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgB7qD,aAAYr8E,WACpCovK,KAAM2D,KAEF5E,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAQA,6CAAM6E,CACJ9rC,EACA7qD,EACAr8E,GAOA,aALqBO,KAAKuyK,iCACxB5rC,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAOA0E,gBAAAA,CACE/rC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClBkzK,GAEJ,CASAC,mBAAAA,CACEjsC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClBozK,GAEJ,CASA,gCAAMC,CACJnsC,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgB7qD,aAAYr8E,WACpCovK,KAAMkE,KAEFnF,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CASA,uCAAMoF,CACJrsC,EACA7qD,EACAr8E,GAOA,aALqBO,KAAK8yK,2BACxBnsC,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQA,8BAAMiF,CACJtsC,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgB7qD,aAAYr8E,WACpCovK,KAAMqE,KAEFtF,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,mBACvB9F,uBAAwB,aAG1B,aADMyC,EAAOxD,OACNwD,CACT,CAQA,qCAAMuF,CACJxsC,EACA7qD,EACAr8E,GAOA,aALqBO,KAAKizK,yBACxBtsC,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAOAoF,2BAAAA,CACEzsC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClB4zK,GAEJ,CAMQ5D,kBAAAA,CACNhwK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE13J,WACF6zK,GAEJ,CAcA,uCAAMC,CACJ3N,EACAj/B,EACAlnI,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAE+xB,UAASj/B,iBAAgBlnI,WACjCovK,KAAM2E,KAEF5F,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAcA,8CAAM6F,CACJ7N,EACAj/B,EACAlnI,GAOA,aALqBO,KAAKuzK,kCACxB3N,EACAj/B,EACAlnI,IAEYuuK,eAChB,CAQA0F,oCAAAA,CACE9N,EACAj/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBlnI,WAC3Bk0K,GAEJ,CASA,+CAAMC,CACJhO,EACAj/B,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAE+xB,UAASj/B,iBAAgB7qD,aAAYr8E,WAC7CovK,KAAMgF,KAEFjG,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CASA,sDAAMkG,CACJlO,EACAj/B,EACA7qD,EACAr8E,GAQA,aANqBO,KAAK4zK,0CACxBhO,EACAj/B,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQA+F,yBAAAA,CACEnO,EACAj/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBlnI,WAC3Bu0K,GAEJ,CAUAC,4BAAAA,CACErO,EACAj/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBlnI,WAC3By0K,GAEJ,CAUA,yCAAMC,CACJvO,EACAj/B,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAE+xB,UAASj/B,iBAAgB7qD,aAAYr8E,WAC7CovK,KAAMuF,KAEFxG,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAUA,gDAAMyG,CACJzO,EACAj/B,EACA7qD,EACAr8E,GAQA,aANqBO,KAAKm0K,oCACxBvO,EACAj/B,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAUA,uCAAMsG,CACJ1O,EACAj/B,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAE+xB,UAASj/B,iBAAgB7qD,aAAYr8E,WAC7CovK,KAAM0F,KAEF3G,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,mBACvB9F,uBAAwB,aAG1B,aADMyC,EAAOxD,OACNwD,CACT,CAUA,8CAAM4G,CACJ5O,EACAj/B,EACA7qD,EACAr8E,GAQA,aANqBO,KAAKs0K,kCACxB1O,EACAj/B,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQAyG,oCAAAA,CACE7O,EACAj/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBlnI,WAC3Bi1K,GAEJ,CAOQ5E,2BAAAA,CACNlK,EACAnmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASnmK,WACXk1K,GAEJ,CAaA,oCAAMC,CACJjuC,EACAlnI,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgBlnI,WACxBovK,KAAMgG,KAEFjH,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAaA,2CAAMkH,CACJnuC,EACAlnI,GAMA,aAJqBO,KAAK40K,+BACxBjuC,EACAlnI,IAEYuuK,eAChB,CAOA+G,iCAAAA,CACEpuC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClBu1K,GAEJ,CAQA,4CAAMC,CACJtuC,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgB7qD,aAAYr8E,WACpCovK,KAAMqG,KAEFtH,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAQA,mDAAMuH,CACJxuC,EACA7qD,EACAr8E,GAOA,aALqBO,KAAKi1K,uCACxBtuC,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAOAoH,sBAAAA,CACEzuC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClB41K,GAEJ,CASAC,yBAAAA,CACE3uC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClB81K,GAEJ,CASA,sCAAMC,CACJ7uC,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgB7qD,aAAYr8E,WACpCovK,KAAM4G,KAEF7H,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CASA,6CAAM8H,CACJ/uC,EACA7qD,EACAr8E,GAOA,aALqBO,KAAKw1K,iCACxB7uC,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQA,oCAAM2H,CACJhvC,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAElN,iBAAgB7qD,aAAYr8E,WACpCovK,KAAM+G,KAEFhI,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,mBACvB9F,uBAAwB,aAG1B,aADMyC,EAAOxD,OACNwD,CACT,CAQA,2CAAMiI,CACJlvC,EACA7qD,EACAr8E,GAOA,aALqBO,KAAK21K,+BACxBhvC,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAOA8H,iCAAAA,CACEnvC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClBs2K,GAEJ,CAMQ5F,wBAAAA,CACN1wK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE13J,WACFu2K,GAEJ,CAgBA,iBAAMC,CACJjQ,EACAr/B,EACAlnI,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEmyB,oBAAmBr/B,iBAAgBlnI,WAC3CovK,KAAMqH,KAEFtI,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAgBA,wBAAMuI,CACJnQ,EACAr/B,EACAlnI,GAOA,aALqBO,KAAKi2K,YACxBjQ,EACAr/B,EACAlnI,IAEYuuK,eAChB,CASAoI,cAAAA,CACEpQ,EACAr/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBlnI,WACrC42K,GAEJ,CAUA,yBAAMC,CACJtQ,EACAr/B,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEmyB,oBAAmBr/B,iBAAgB7qD,aAAYr8E,WACvDovK,KAAM0H,KAEF3I,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAUA,gCAAM4I,CACJxQ,EACAr/B,EACA7qD,EACAr8E,GAQA,aANqBO,KAAKs2K,oBACxBtQ,EACAr/B,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQAl9J,GAAAA,CACEk1J,EACAr/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBlnI,WACrCg3K,GAEJ,CAUA/3B,MAAAA,CACEsnB,EACAr/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBlnI,WACrCi3K,GAEJ,CAWA,mBAAMC,CACJ3Q,EACAr/B,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEmyB,oBAAmBr/B,iBAAgB7qD,aAAYr8E,WACvDovK,KAAM+H,KAEFhJ,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAWA,0BAAMiJ,CACJ7Q,EACAr/B,EACA7qD,EACAr8E,GAQA,aANqBO,KAAK22K,cACxB3Q,EACAr/B,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAUA,iBAAM8I,CACJ9Q,EACAr/B,EACA7qD,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEmyB,oBAAmBr/B,iBAAgB7qD,aAAYr8E,WACvDovK,KAAMkI,KAEFnJ,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,mBACvB9F,uBAAwB,aAG1B,aADMyC,EAAOxD,OACNwD,CACT,CAUA,wBAAMoJ,CACJhR,EACAr/B,EACA7qD,EACAr8E,GAQA,aANqBO,KAAK82K,YACxB9Q,EACAr/B,EACA7qD,EACAr8E,IAEYuuK,eAChB,CAQAiJ,cAAAA,CACEjR,EACAr/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBlnI,WACrCy3K,GAEJ,CAQQ1G,oBAAAA,CACNxK,EACAvmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBvmK,WACrB03K,GAEJ,CAOAC,qBAAAA,CACEzd,EACAl6J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEwC,WAAUl6J,WACZ43K,GAEJ,CAQQhI,gBAAAA,CACNh6G,EACA2jG,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAO2jG,WAAUv5J,WACnB63K,GAEJ,CAOQ5H,sBAAAA,CACN1W,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZ83K,GAEJ,CASQxH,+BAAAA,CACNnK,EACA5M,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAAS5M,WAAUv5J,WACrB+3K,GAEJ,CAQQpH,4BAAAA,CACNpX,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZg4K,GAEJ,CASQhH,wBAAAA,CACNzK,EACAhN,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBhN,WAAUv5J,WAC/Bi4K,GAEJ,EAGF,MAAMlqC,GAAaw6B,GAA4BC,GAAqB,GAE9D8I,GAAuD,CAC3Dlc,KAAM,sEACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN4jC,GAA+D,CACnEvc,KAAM,sEACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8jC,GAA+D,CACnEzc,KAAM,sEACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENikC,GAAoD,CACxD5c,KAAM,sEACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENmkC,GAAuD,CAC3D9c,KAAM,6EACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENqkC,GAAyD,CAC7Dhd,KAAM,+EACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENwkC,GAA+D,CACnEnd,KAAM,qFACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENykC,GAAqD,CACzDpd,KAAM,sDACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,GAAmBA,IAC5D7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN2kC,GAA6D,CACjEtd,KAAM,8DACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8kC,GAAqE,CACzEzd,KAAM,8DACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENglC,GAAqE,CACzE3d,KAAM,8DACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENmlC,GAA0D,CAC9D9d,KAAM,8DACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENqlC,GAA6D,CACjEhe,KAAM,qEACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENulC,GAA+D,CACnEle,KAAM,uEACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN0lC,GAA6D,CACjEre,KAAM,qEACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN6lC,GAAqE,CACzExe,KAAM,6EACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8lC,GAA2D,CAC/Dze,KAAM,8CACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,GAAmBA,IAC5D7T,cAAe,CAAC6T,IAChB3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENgmC,GAAsE,CAC1E3e,KAAM,wHACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENmmC,GACJ,CACE9e,KAAM,wHACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAERqmC,GACJ,CACEhf,KAAM,wHACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAERwmC,GAAmE,CACvEnf,KAAM,wHACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN0mC,GAAsE,CAC1Erf,KAAM,+HACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN4mC,GAAwE,CAC5Evf,KAAM,iIACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN+mC,GAAsE,CAC1E1f,KAAM,+HACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENknC,GACJ,CACE7f,KAAM,uIACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAERmnC,GAAoE,CACxE9f,KAAM,wGACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,GAAmBA,IAC5D7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENqnC,GAAmE,CACvEhgB,KAAM,6FACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENwnC,GACJ,CACEngB,KAAM,6FACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAER0nC,GACJ,CACErgB,KAAM,6FACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAER6nC,GAAgE,CACpExgB,KAAM,6FACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+nC,GAAmE,CACvE1gB,KAAM,oGACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENioC,GAAqE,CACzE5gB,KAAM,sGACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENooC,GAAmE,CACvE/gB,KAAM,oGACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENuoC,GACJ,CACElhB,KAAM,4GACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAERwoC,GAAiE,CACrEnhB,KAAM,6EACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,GAAmBA,IAC5D7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN0oC,GAAgD,CACpDrhB,KAAM,gIACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN6oC,GAAwD,CAC5DxhB,KAAM,gIACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+oC,GAAwD,CAC5D1hB,KAAM,gIACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENipC,GAA6C,CACjD5hB,KAAM,gIACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENkpC,GAAgD,CACpD7hB,KAAM,uIACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENopC,GAAkD,CACtD/hB,KAAM,yIACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENupC,GAAgD,CACpDliB,KAAM,uIACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN0pC,GAAwD,CAC5DriB,KAAM,+IACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN2pC,GAA6D,CACjEtiB,KAAM,gHACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,GAAmBA,IAC5D7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN6pC,GAA+D,CACnExiB,KAAM,uDACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YV57G0C,CAC1CiuC,cAAe,WACf3kB,OAAQ,CACNd,eAAgB,WAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,aACNwB,MAAO,CAAE3B,KAAM,CAAEG,KAAM,WUs7G3ByxJ,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,IAChB3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN8pC,GAAyD,CAC7DziB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CAAC6T,GAAkBA,GAAqBA,IACvD3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+pC,GAA+D,CACnE1iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENgqC,GAAwE,CAC5E3iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CAAC6T,GAAkBA,GAAqBA,IACvD3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENiqC,GAAqE,CACzE5iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENkqC,GAAiE,CACrE7iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,ICnrHN,MAAOmqC,GAOX/mK,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAMOltE,IAAAA,CACL/tB,GAEA,MAAM6nK,EAAOtnK,KAAKunK,cAAc9nK,GAChC,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK2nK,eAAeloK,EAASgoK,IAG1C,CAEeE,cAAAA,CACbloK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK4nK,MAAMnoK,IAC1B,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK6nK,UAAUzgC,EAAmB3nI,IACjD2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeogC,aAAAA,CACb9nK,yDAEA,IAAyB,IAA4Bg3I,EAA5BtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK2nK,eAAeloK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA9BtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAMOmoC,iBAAAA,CACL7vK,GAEA,MAAM6nK,EAAOtnK,KAAKuvK,2BAA2B9vK,GAC7C,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKwvK,4BAA4B/vK,EAASgoK,IAGvD,CAEe+H,2BAAAA,CACb/vK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKyvK,mBAAmBhwK,IACvC,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK0vK,uBAAuBtoC,EAAmB3nI,IAC9D2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeooC,0BAAAA,CACb9vK,yDAEA,IAAyB,IAAyCg3I,EAAzCtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKwvK,4BAA4B/vK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA3CtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAOAywC,UAAAA,CACE3R,EACAxmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BxmK,WAC7Bo4K,GAEJ,CAWAC,8BAAAA,CACE7R,EACAL,EACAnmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BL,UAASnmK,WACtCs4K,GAEJ,CAOAC,mBAAAA,CACE/R,EACAxmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BxmK,WAC7Bw4K,GAEJ,CAOAC,QAAAA,CACEjS,EACAxmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BxmK,WAC7B04K,GAEJ,CAMQvQ,KAAAA,CACNnoK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBAAqB,CAAE13J,WAAWqoK,GACvD,CAMQ2H,kBAAAA,CACNhwK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE13J,WACF6zK,GAEJ,CAOAxiK,GAAAA,CACEm1J,EACAxmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BxmK,WAC7Bg3K,GAEJ,CAOA/D,gBAAAA,CACEzM,EACAxmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BxmK,WAC7BkzK,GAEJ,CAOQ9K,SAAAA,CACN7O,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZsoK,GAEJ,CAOQ2H,sBAAAA,CACN1W,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZ83K,GAEJ,EAGF,MAAM/pC,GAAaw6B,GAA4BC,GAAqB,GAE9D4P,GAAoD,CACxDhjB,KAAM,mFACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENuqC,GAAwE,CAC5EljB,KAAM,4GACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENyqC,GAA6D,CACjEpjB,KAAM,4FACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN2qC,GAAkD,CACtDtjB,KAAM,iFACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENs6B,GAA8C,CAClDjT,KAAM,4CACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8lC,GAA2D,CAC/Dze,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CAAC6T,IAChB3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENipC,GAA6C,CACjD5hB,KAAM,wEACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENmlC,GAA0D,CAC9D9d,KAAM,yCACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENu6B,GAAkD,CACtDlT,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+pC,GAA+D,CACnE1iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,ICvdN,MAAO4qC,GAOXxnK,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAOAltE,IAAAA,CACEy4I,EACAxmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8O,4BAA2BxmK,WAC7BqoK,GAEJ,EAGF,MAAMt6B,GAAaw6B,GAA4BC,GAAqB,GAE9DH,GAA8C,CAClDjT,KAAM,sFACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,ICTN,MAAO6qC,GAOXznK,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAOO21E,mBAAAA,CACLrK,EACAvmK,GAEA,MAAM6nK,EAAOtnK,KAAKswK,6BAA6BtK,EAAmBvmK,GAClE,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKuwK,8BACVvK,EACAvmK,EACAgoK,IAIR,CAEe8I,6BAAAA,CACbvK,EACAvmK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKwwK,qBAAqBxK,EAAmBvmK,IAC5D,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAKywK,yBAClBzK,EACA5+B,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEempC,4BAAAA,CACbtK,EACAvmK,yDAEA,IAAyB,IAGxBg3I,EAHwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKuwK,8BAC5BvK,EACAvmK,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAHsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAInBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAMO35G,IAAAA,CACL/tB,GAEA,MAAM6nK,EAAOtnK,KAAKunK,cAAc9nK,GAChC,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK2nK,eAAeloK,EAASgoK,IAG1C,CAEeE,cAAAA,CACbloK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK4nK,MAAMnoK,IAC1B,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK6nK,UAAUzgC,EAAmB3nI,IACjD2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeogC,aAAAA,CACb9nK,yDAEA,IAAyB,IAA4Bg3I,EAA5BtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK2nK,eAAeloK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA9BtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAOQqpC,oBAAAA,CACNxK,EACAvmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBvmK,WACrB03K,GAEJ,CAYA,wBAAMmB,CACJhS,EACAxqF,EACAr8E,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEyyB,0BAAyBxqF,aAAYr8E,WAC7CovK,KAAM0J,KAEF3K,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAYA,+BAAM4K,CACJlS,EACAxqF,EACAr8E,GAOA,aALqBO,KAAKs4K,mBACxBhS,EACAxqF,EACAr8E,IAEYuuK,eAChB,CAcA,gCAAMyK,CACJnS,EACAxqF,EACAr8E,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEyyB,0BAAyBxqF,aAAYr8E,WAC7CovK,KAAM6J,KAEF9K,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAcA,uCAAM+K,CACJrS,EACAxqF,EACAr8E,GAOA,aALqBO,KAAKy4K,2BACxBnS,EACAxqF,EACAr8E,IAEYuuK,eAChB,CAMQpG,KAAAA,CACNnoK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBAAqB,CAAE13J,WAAWqoK,GACvD,CAaAsO,cAAAA,CACEpQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACAl+J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CACE6O,oBACAC,4BACAM,qBACArtH,eACA2kH,eACAF,aACAl+J,WAEF42K,GAEJ,CAaA,iBAAMJ,CACJjQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACAl+J,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CACJmyB,oBACAC,4BACAM,qBACArtH,eACA2kH,eACAF,aACAl+J,WAEFovK,KAAMqH,KAEFtI,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAaA,wBAAMuI,CACJnQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACAl+J,GAWA,aATqBO,KAAKi2K,YACxBjQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACAl+J,IAEYuuK,eAChB,CAcA,yBAAMsI,CACJtQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACA7hF,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CACJmyB,oBACAC,4BACAM,qBACArtH,eACA2kH,eACAF,aACA7hF,aACAr8E,WAEFovK,KAAM0H,KAEF3I,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAcA,gCAAM4I,CACJxQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACA7hF,EACAr8E,GAYA,aAVqBO,KAAKs2K,oBACxBtQ,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACA7hF,EACAr8E,IAEYuuK,eAChB,CAcA,iBAAM4K,CACJ5S,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACA7hF,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CACJmyB,oBACAC,4BACAM,qBACArtH,eACA2kH,eACAF,aACA7hF,aACAr8E,WAEFovK,KAAMgK,KAEFjL,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAcA,wBAAMkL,CACJ9S,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACA7hF,EACAr8E,GAYA,aAVqBO,KAAK44K,YACxB5S,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACA7hF,EACAr8E,IAEYuuK,eAChB,CAaAl9J,GAAAA,CACEk1J,EACAC,EACAM,EACArtH,EACA2kH,EACAF,EACAl+J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CACE6O,oBACAC,4BACAM,qBACArtH,eACA2kH,eACAF,aACAl+J,WAEFg3K,GAEJ,CAYAsC,kBAAAA,CACE9Z,EACAtB,EACAl+J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8H,aAAYtB,aAAYl+J,WAC1Bu5K,GAEJ,CAUA,qBAAMC,CACJha,EACAtB,EACAl+J,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEorB,aAAYtB,aAAYl+J,WAChCovK,KAAMqK,KAEFtL,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAUA,4BAAMuL,CACJla,EACAtB,EACAl+J,GAGA,aADqBO,KAAKi5K,gBAAgBha,EAAYtB,EAAYl+J,IACpDuuK,eAChB,CAWA,6BAAMoL,CACJna,EACAtB,EACA7hF,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEorB,aAAYtB,aAAY7hF,aAAYr8E,WAC5CovK,KAAMwK,KAEFzL,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAWA,oCAAM0L,CACJra,EACAtB,EACA7hF,EACAr8E,GAQA,aANqBO,KAAKo5K,wBACxBna,EACAtB,EACA7hF,EACAr8E,IAEYuuK,eAChB,CAWA,qBAAMuL,CACJta,EACAtB,EACA7hF,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEorB,aAAYtB,aAAY7hF,aAAYr8E,WAC5CovK,KAAM2K,KAEF5L,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAWA,4BAAM6L,CACJxa,EACAtB,EACA7hF,EACAr8E,GAQA,aANqBO,KAAKu5K,gBACxBta,EACAtB,EACA7hF,EACAr8E,IAEYuuK,eAChB,CAUA0L,OAAAA,CACEza,EACAtB,EACAl+J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE8H,aAAYtB,aAAYl+J,WAC1Bk6K,GAEJ,CAQQlJ,wBAAAA,CACNzK,EACAhN,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBhN,WAAUv5J,WAC/Bi4K,GAEJ,CAOQ7P,SAAAA,CACN7O,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZsoK,GAEJ,EAGF,MAAMv6B,GAAaw6B,GAA4BC,GAAqB,GAE9DkP,GAA6D,CACjEtiB,KAAM,+EACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CACf8S,GACAA,GACAA,GACAA,IAEF7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+qC,GAAuD,CAC3D1jB,KAAM,yFACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENkrC,GAA+D,CACnE7jB,KAAM,iGACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENs6B,GAA8C,CAClDjT,KAAM,4CACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CACf8S,GACAA,GACAA,GACAA,IAEF7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN6oC,GAAwD,CAC5DxhB,KAAM,8JACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN0oC,GAAgD,CACpDrhB,KAAM,8JACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+oC,GAAwD,CAC5D1hB,KAAM,8JACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENqrC,GAAgD,CACpDhkB,KAAM,8JACN3C,WAAY,QACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENipC,GAA6C,CACjD5hB,KAAM,8JACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENwrC,GAA4D,CAChEnkB,KAAM,gBACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN0rC,GAAoD,CACxDrkB,KAAM,gBACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN6rC,GAA4D,CAChExkB,KAAM,gBACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENgsC,GAAoD,CACxD3kB,KAAM,gBACN3C,WAAY,QACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENmsC,GAAiD,CACrD9kB,KAAM,gBACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENkqC,GAAiE,CACrE7iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENu6B,GAAkD,CACtDlT,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,ICp+CN,MAAOosC,GAOXhpK,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAMOltE,IAAAA,CACL/tB,GAEA,MAAM6nK,EAAOtnK,KAAKunK,cAAc9nK,GAChC,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK2nK,eAAeloK,EAASgoK,IAG1C,CAEeE,cAAAA,CACbloK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK4nK,MAAMnoK,IAC1B,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK6nK,UAAUzgC,EAAmB3nI,IACjD2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeogC,aAAAA,CACb9nK,yDAEA,IAAyB,IAA4Bg3I,EAA5BtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK2nK,eAAeloK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA9BtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAOAivC,cAAAA,CACEpQ,EACAvmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBvmK,WACrB42K,GAEJ,CAUAwD,cAAAA,CACE7T,EACAlqF,EACAr8E,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBlqF,aAAYr8E,WACjC82K,GAEJ,CAQA,iBAAMN,CACJjQ,EACAvmK,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEmyB,oBAAmBvmK,WAC3BovK,KAAMqH,KAEFtI,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAQA,wBAAMuI,CACJnQ,EACAvmK,GAGA,aADqBO,KAAKi2K,YAAYjQ,EAAmBvmK,IAC3CuuK,eAChB,CAOAl9J,GAAAA,CACEk1J,EACAvmK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBvmK,WACrBg3K,GAEJ,CAUAhwJ,MAAAA,CACEu/I,EACAlqF,EACAr8E,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBlqF,aAAYr8E,WACjCo5K,GAEJ,CAQA,yBAAMiB,CACJ9T,EACAlqF,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEmyB,oBAAmBlqF,aAAYr8E,WACvCovK,KAAMqI,KAEFtJ,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,mBACvB9F,uBAAwB,aAG1B,aADMyC,EAAOxD,OACNwD,CACT,CAQA,gCAAMmM,CACJ/T,EACAlqF,EACAr8E,GAOA,aALqBO,KAAK85K,oBACxB9T,EACAlqF,EACAr8E,IAEYuuK,eAChB,CAMQpG,KAAAA,CACNnoK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBAAqB,CAAE13J,WAAWqoK,GACvD,CAOQD,SAAAA,CACN7O,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZsoK,GAEJ,EAGF,MAAMv6B,GAAaw6B,GAA4BC,GAAqB,GAE9DoO,GAAwD,CAC5DxhB,KAAM,qEACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+oC,GAAwD,CAC5D1hB,KAAM,qEACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN0oC,GAAgD,CACpDrhB,KAAM,qEACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GdrGuC,CACzDlZ,cAAe,CAAC,UAAW,sBAC3B3kB,OAAQ,CACNd,eAAgB,qBAChB/lI,KAAM,CACJG,KAAM,aciGV0wJ,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENipC,GAA6C,CACjD5hB,KAAM,qEACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENqrC,GAAgD,CACpDhkB,KAAM,qEACN3C,WAAY,QACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN0pC,GAAwD,CAC5DriB,KAAM,oFACN3C,WAAY,OACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,Gd5JqD,CACvDlZ,cAAe,oBACf3kB,OAAQ,CACNK,YAAa,CACXM,UAAW,GACXE,UAAW,GAEb3B,eAAgB,oBAChByC,UAAU,EACVxoI,KAAM,CACJG,KAAM,acqJV4uJ,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENs6B,GAA8C,CAClDjT,KAAM,iDACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,GAAmBA,IAC5D7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENu6B,GAAkD,CACtDlT,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IC/eN,MAAOwsC,GAOXppK,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CASOltE,IAAAA,CACL/tB,GAEA,MAAM6nK,EAAOtnK,KAAKunK,cAAc9nK,GAChC,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK2nK,eAAeloK,EAASgoK,IAG1C,CAEeE,cAAAA,CACbloK,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK4nK,MAAMnoK,IAC1B,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK6nK,UAAUzgC,EAAmB3nI,IACjD2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeogC,aAAAA,CACb9nK,yDAEA,IAAyB,IAA4Bg3I,EAA5BtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK2nK,eAAeloK,MAAQ6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAA9BtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QACnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAUA0gB,WAAAA,CACEhiJ,EACA68J,EACAjjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEtxJ,UAAS68J,WAAUjjK,WACrBw6K,GAEJ,CASAC,mBAAAA,CACEr0K,EACA68J,EACAjjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEtxJ,UAAS68J,WAAUjjK,WACrB06K,GAEJ,CASAN,cAAAA,CACEh0K,EACApG,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEtxJ,UAASpG,WACX82K,GAEJ,CASA7yI,OAAO79B,EAAiBpG,GACtB,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEtxJ,UAASpG,WACXy2K,GAEJ,CASQtO,KAAAA,CAAMnoK,GACZ,OAAOO,KAAK06F,OAAOy8D,qBAAqB,CAAE13J,WAAWqoK,GACvD,CASA,gCAAMuJ,CACJh8G,EACAymB,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEx+E,QAAOymB,aAAYr8E,WAC3BovK,KAAMyC,KAEF1D,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CASA,uCAAM2D,CACJl8G,EACAymB,EACAr8E,GAOA,aALqBO,KAAKqxK,2BACxBh8G,EACAymB,EACAr8E,IAEYuuK,eAChB,CAYA,wBAAMoM,CACJ/kH,EACAymB,EACAr8E,GAOA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEx+E,QAAOymB,aAAYr8E,WAC3BovK,KAAMwL,KAEFzM,QAAeW,GAGnBC,EAAK,CACLxB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAYA,+BAAM0M,CACJjlH,EACAymB,EACAr8E,GAGA,aADqBO,KAAKo6K,mBAAmB/kH,EAAOymB,EAAYr8E,IAClDuuK,eAChB,CAOAwD,UAAAA,CACEn8G,EACA51D,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAO51D,WACTgyK,GAEJ,CAOA,wBAAMf,CACJr7G,EACA51D,GAEA,MAAMkxK,EAAsBznJ,MAC1B2qH,EACAg7B,IAEO7uK,KAAK06F,OAAOy8D,qBAAqBtjB,EAAMg7B,GAkC1CL,EAAMI,GAAc,CACxBE,gBAjCsB5lJ,MACtB2qH,EACAg7B,WAEA,IAAI+B,EAEJ,MAAMC,EAA+B,QAAZvpC,EAAAuM,EAAKp0I,eAAO,IAAA6nI,OAAA,EAAAA,EAAEiwB,WAQjCuZ,EAAW/uK,OAAAD,OAAAC,OAAAD,OAAA,GACZ+xI,GAAI,CACPp0I,QAAOsC,OAAAD,OAAAC,OAAAD,OAAA,GACF+xI,EAAKp0I,SAAO,CACf83J,WAX6C16J,CAC/Cw6J,EACAC,KAEAsZ,EAAqBvZ,EACL,OAAhBwZ,QAAgB,IAAhBA,GAAAA,EAAmBxZ,EAAaC,QAUlC,MAAO,CACLA,mBAFyBqZ,EAAoBG,EAAajC,GAG1DxX,YAAa,CACXtc,WAAY61B,EAAoB9gJ,OAChCle,KAAMg/J,EAAoB/nC,WAC1Bp4C,QAASmgF,EAAoBngF,QAAQ2kD,YAOzCvB,KAAM,CAAEx+E,QAAO51D,WACfovK,KAAMkC,KAEFnD,QAAeW,GAA6CC,EAAK,CACrExB,YAAoB,OAAPvtK,QAAO,IAAPA,OAAO,EAAPA,EAASuxK,WACtBtG,aAAqB,OAAPjrK,QAAO,IAAPA,OAAO,EAAPA,EAASwxK,qBAGzB,aADMrD,EAAOxD,OACNwD,CACT,CAOA,+BAAMsD,CACJ77G,EACA51D,GAGA,aADqBO,KAAK0wK,mBAAmBr7G,EAAO51D,IACtCuuK,eAChB,CAOQnG,SAAAA,CACN7O,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6B,WAAUv5J,WACZsoK,GAEJ,EAGF,MAAMv6B,GAAaw6B,GAA4BC,GAAqB,GAE9DgS,GAAqD,CACzDplB,KAAM,0EACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN2sC,GAA6D,CACjEtlB,KAAM,0EACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+oC,GAAwD,CAC5D1hB,KAAM,qDACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN0oC,GAAgD,CACpDrhB,KAAM,qDACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENs6B,GAA8C,CAClDjT,KAAM,2CACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8jC,GAA+D,CACnEzc,KAAM,sDACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAEN6sC,GAAuD,CAC3DxlB,KAAM,sDACN3C,WAAY,QACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEd,IAAK,CACHn/B,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhBlnD,YAAamnD,GACb9S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,GAAmBA,IACtC/U,UAAW,OACX3lB,WAAUA,IAENikC,GAAoD,CACxD5c,KAAM,sDACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENujC,GAAuD,CAC3Dlc,KAAM,sDACN3C,WAAY,SACZpB,UAAW,CACT,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN,IAAK,CAAC,EACN/8F,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENu6B,GAAkD,CACtDlT,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IC9nBN,MAAO+sC,GAOX3pK,WAAAA,CAAY8pF,GACV16F,KAAK06F,OAASA,CAChB,CAQOu0E,WAAAA,CACL55G,EACAsxE,EACAlnI,GAEA,MAAM6nK,EAAOtnK,KAAKkvK,qBAAqB75G,EAAOsxE,EAAgBlnI,GAC9D,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKmvK,sBACV95G,EACAsxE,EACAlnI,EACAgoK,IAIR,CAEe0H,qBAAAA,CACb95G,EACAsxE,EACAlnI,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKovK,aAAa/5G,EAAOsxE,EAAgBlnI,IACxD,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAKqvK,iBAClBh6G,EACAsxE,EACAS,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEe+nC,oBAAAA,CACb75G,EACAsxE,EACAlnI,yDAEA,IAAyB,IAIxBg3I,EAJwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKmvK,sBAC5B95G,EACAsxE,EACAlnI,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAJsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAKnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAOOmoC,iBAAAA,CACL3oC,EACAlnI,GAEA,MAAM6nK,EAAOtnK,KAAKuvK,2BAA2B5oC,EAAgBlnI,GAC7D,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKwvK,4BACV7oC,EACAlnI,EACAgoK,IAIR,CAEe+H,2BAAAA,CACb7oC,EACAlnI,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKyvK,mBAAmB9oC,EAAgBlnI,IACvD,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK0vK,uBAClB/oC,EACAS,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeooC,0BAAAA,CACb5oC,EACAlnI,yDAEA,IAAyB,IAGxBg3I,EAHwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKwvK,4BAC5B7oC,EACAlnI,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAHsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAInBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAQOwoC,0BAAAA,CACL/J,EACAj/B,EACAlnI,GAEA,MAAM6nK,EAAOtnK,KAAK4vK,oCAChBhK,EACAj/B,EACAlnI,GAEF,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK6vK,qCACVjK,EACAj/B,EACAlnI,EACAgoK,IAIR,CAEeoI,oCAAAA,CACbjK,EACAj/B,EACAlnI,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK8vK,4BAClBlK,EACAj/B,EACAlnI,IAEF,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK+vK,gCAClBnK,EACAj/B,EACAS,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeyoC,mCAAAA,CACbhK,EACAj/B,EACAlnI,yDAEA,IAAyB,IAIxBg3I,EAJwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK6vK,qCAC5BjK,EACAj/B,EACAlnI,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAJsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAKnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAOO6oC,uBAAAA,CACLrpC,EACAlnI,GAEA,MAAM6nK,EAAOtnK,KAAKiwK,iCAAiCtpC,EAAgBlnI,GACnE,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAKkwK,kCACVvpC,EACAlnI,EACAgoK,IAIR,CAEeyI,iCAAAA,CACbvpC,EACAlnI,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAKmwK,yBAAyBxpC,EAAgBlnI,IAC7D,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAKowK,6BAClBzpC,EACAS,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEe8oC,gCAAAA,CACbtpC,EACAlnI,yDAEA,IAAyB,IAGxBg3I,EAHwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAKkwK,kCAC5BvpC,EACAlnI,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAHsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAInBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IAQO35G,IAAAA,CACLw4I,EACAr/B,EACAlnI,GAEA,MAAM6nK,EAAOtnK,KAAKunK,cAAcvB,EAAmBr/B,EAAgBlnI,GACnE,MAAO,CACLinB,KAAIA,IACK4gJ,EAAK5gJ,OAEd,CAACzkB,OAAOo2J,iBACN,OAAOr4J,IACT,EACAwnK,OAASC,IACP,GAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUC,YACZ,MAAM,IAAIhmK,MAAM,mDAElB,OAAO1B,KAAK2nK,eACV3B,EACAr/B,EACAlnI,EACAgoK,IAIR,CAEeE,cAAAA,CACb3B,EACAr/B,EACAlnI,EACAgoK,yCAEA,IAAIlpI,EACA6oG,EAA4B,OAARqgC,QAAQ,IAARA,OAAQ,EAARA,EAAUrgC,kBAClC,IAAKA,EAAmB,CACtB7oG,QAASy5H,GAAMh4J,KAAK4nK,MAAM5B,EAAmBr/B,EAAgBlnI,IAC7D,IAAI0nI,EAAO5oG,EAAOp5B,OAAS,GAC3BiiI,EAAoB7oG,EAAOy6H,SAC3B9xB,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACA,KAAOC,GAAmB,CACxB7oG,QAASy5H,GAAMh4J,KAAK6nK,UAClB7B,EACAr/B,EACAS,EACA3nI,IAEF2nI,EAAoB7oG,EAAOy6H,SAC3B,IAAI7xB,EAAO5oG,EAAOp5B,OAAS,GAC3B+hI,GAAqBC,EAAMC,eAC3B4wB,GAAM7wB,EACR,CACF,IAEeogC,aAAAA,CACbvB,EACAr/B,EACAlnI,yDAEA,IAAyB,IAIxBg3I,EAJwBtG,GAAA,EAAAiG,EAAAyiB,GAAA74J,KAAK2nK,eAC5B3B,EACAr/B,EACAlnI,MACD6nI,GAAAmP,QAAAuhB,GAAA5hB,EAAA1vH,SAAAmd,MAAAssG,GAAA,EAAE,CAJsBtE,EAAA4K,EAAAtxI,MAAAgrI,GAAA,EAAd,MAAMhJ,EAAI0E,QAKnBmsB,SAAOY,GAAAC,GAAA1xB,IACT,0GACF,IASAqqC,UAAAA,CACEn8G,EACAsxE,EACAo8B,EACAtjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBo8B,cAAatjK,WACtCgyK,GAEJ,CAQQrC,YAAAA,CACN/5G,EACAsxE,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBlnI,WACzBwyK,GAEJ,CAQAS,gBAAAA,CACE/rC,EACAo8B,EACAtjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBo8B,cAAatjK,WAC/BkzK,GAEJ,CAOQlD,kBAAAA,CACN9oC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClB6zK,GAEJ,CASAS,yBAAAA,CACEnO,EACAj/B,EACAo8B,EACAtjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBo8B,cAAatjK,WACxCu0K,GAEJ,CAQQlE,2BAAAA,CACNlK,EACAj/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBlnI,WAC3Bk1K,GAEJ,CAQAS,sBAAAA,CACEzuC,EACAo8B,EACAtjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBo8B,cAAatjK,WAC/B41K,GAEJ,CAOQlF,wBAAAA,CACNxpC,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBlnI,WAClBu2K,GAEJ,CASAllK,GAAAA,CACEk1J,EACAr/B,EACAo8B,EACAtjK,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBo8B,cAAatjK,WAClDg3K,GAEJ,CAQQ7O,KAAAA,CACN5B,EACAr/B,EACAlnI,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBlnI,WACrCqoK,GAEJ,CASQuH,gBAAAA,CACNh6G,EACAsxE,EACAqyB,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE9hG,QAAOsxE,iBAAgBqyB,WAAUv5J,WACnC63K,GAEJ,CAQQ5H,sBAAAA,CACN/oC,EACAqyB,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBqyB,WAAUv5J,WAC5B83K,GAEJ,CAUQxH,+BAAAA,CACNnK,EACAj/B,EACAqyB,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAEyO,UAASj/B,iBAAgBqyB,WAAUv5J,WACrC+3K,GAEJ,CASQpH,4BAAAA,CACNzpC,EACAqyB,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAExwB,iBAAgBqyB,WAAUv5J,WAC5Bg4K,GAEJ,CASQ5P,SAAAA,CACN7B,EACAr/B,EACAqyB,EACAv5J,GAEA,OAAOO,KAAK06F,OAAOy8D,qBACjB,CAAE6O,oBAAmBr/B,iBAAgBqyB,WAAUv5J,WAC/CsoK,GAEJ,EAGF,MAAMv6B,GAAaw6B,GAA4BC,GAAqB,GAE9DwJ,GAAoD,CACxD5c,KAAM,+FACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENykC,GAAqD,CACzDpd,KAAM,iFACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENmlC,GAA0D,CAC9D9d,KAAM,uFACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8lC,GAA2D,CAC/Dze,KAAM,yEACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CAAC6T,GAAkBA,IAClC3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENwmC,GAAmE,CACvEnf,KAAM,iJACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENmnC,GAAoE,CACxE9f,KAAM,mIACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN6nC,GAAgE,CACpExgB,KAAM,sHACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENwoC,GAAiE,CACrEnhB,KAAM,wGACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENipC,GAA6C,CACjD5hB,KAAM,2HACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,IAClB7T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENs6B,GAA8C,CAClDjT,KAAM,6GACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB7S,gBAAiB,CAAC8S,GAAuBA,IACzC7T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN8pC,GAAyD,CAC7DziB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAEN+pC,GAA+D,CACnE1iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENgqC,GAAwE,CAC5E3iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENiqC,GAAqE,CACzE5iB,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,IAENu6B,GAAkD,CACtDlT,KAAM,aACN3C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHhoB,WAAYm/B,IAEdl0G,QAAS,CACP+0E,WAAYm/B,KAGhB5T,cAAe,CACb6T,GACAA,GACAA,GACAA,GACAA,IAEF3V,iBAAkB,CAAC2V,IACnB16B,WAAUA,ICt8BN,MAAOgtC,WAAiCxS,GAoB5Cp3J,WAAAA,CACEgsI,EACA69B,EACAh7K,aAEA,QAAoB03D,IAAhBylF,EACF,MAAM,IAAIl7I,MAAM,gCAGlB,IAAImkK,EAEmC,kBAA5B4U,EACT5U,EAAiB4U,EAC2B,kBAA5BA,IAChBh7K,EAAUg7K,GAIPh7K,IACHA,EAAU,CAAC,GAEb,MAAMi7K,EAAmD,CACvDnkB,mBAAoB,kCACpBz0E,WAAY86D,GAGR+9B,EAAiB,+BACjB1xB,EACJxpJ,EAAQsrJ,kBAAoBtrJ,EAAQsrJ,iBAAiB9B,gBAAe,GAAAzrH,OAC7D/9B,EAAQsrJ,iBAAiB9B,gBAAe,KAAAzrH,OAAIm9I,GAAc,GAAAn9I,OAC1Dm9I,GAEHC,EAAmB74K,OAAAD,OAAAC,OAAAD,OAAAC,OAAAD,OAAA,GACpB44K,GACAj7K,GAAO,CACVsrJ,iBAAkB,CAChB9B,mBAEFrlD,SACqC,QAAnC6lC,EAAgB,QAAhBnC,EAAA7nI,EAAQmkG,gBAAQ,IAAA0jC,EAAAA,EAAI7nI,EAAQ00J,eAAO,IAAA1qB,EAAAA,EAAI,iCAE3C/pE,MAAMk7G,GAEN,IAAIC,GAAgD,EACpD,IAAW,OAAPp7K,QAAO,IAAPA,OAAO,EAAPA,EAASq4I,WAAYr4I,EAAQq4I,SAASF,qBAAqB39I,OAAS,EAAG,CAGzE4gL,EADEp7K,EAAQq4I,SAASF,qBACqCt+E,MACrDwhH,GACCA,EAAen3K,OACfo3K,IAEN,CAEGt7K,GACAA,EAAQq4I,UACuC,GAAhDr4I,EAAQq4I,SAASF,qBAAqB39I,QACrC4gL,IAED76K,KAAK83I,SAASP,aAAa,CACzB5zI,KAAMo3K,KAER/6K,KAAK83I,SAASX,UACZ4jC,GAAiD,CAC/Cj5F,WAAY86D,EACZt5E,OACsC,QAApCuoE,EAAA+uC,EAAoBjkB,wBAAgB,IAAA9qB,EAAAA,EAAA,GAAAruG,OACjCo9I,EAAoBh3E,SAAQ,aACjCiqD,mBAAoB,CAClBE,4BACEia,QAMVhoK,KAAK6lK,eAAiBA,EAGtB7lK,KAAKslK,MAAQ7lK,EAAQ6lK,OAAS,+BAC9BtlK,KAAK29J,WAAal+J,EAAQk+J,YAAc,aACxC39J,KAAKg7K,WAAa,IAAI3T,GAAernK,MACrCA,KAAKi7K,YAAc,IAAIjM,GAAgBhvK,MACvCA,KAAK07J,UAAY,IAAIic,GAAc33K,MACnCA,KAAKk7K,sBAAwB,IAAI9C,GAA0Bp4K,MAC3DA,KAAK8L,UAAY,IAAIusK,GAAcr4K,MACnCA,KAAKm7K,eAAiB,IAAIvB,GAAmB55K,MAC7CA,KAAKo7K,eAAiB,IAAIpB,GAAmBh6K,MAC7CA,KAAKq7K,qBAAuB,IAAId,GAAyBv6K,MACzDA,KAAKs7K,0BAA0B77K,EAAQk+J,WACzC,CAGQ2d,yBAAAA,CAA0B3d,GAChC,IAAKA,EACH,OAEF,MAAM4d,EAAmB,CACvB53K,KAAM,yBACN,iBAAM+zI,CACJ1+E,EACAtyC,GAEA,MAAM2qG,EAAQr4D,EAAQv4D,IAAIiP,MAAM,KAChC,GAAI2hH,EAAMp3H,OAAS,EAAG,CACpB,MAAMuhL,EAAYnqD,EAAM,GAAG3hH,MAAM,KAAKmoB,KAAKumE,GACrCA,EAAKnwF,QAAQ,gBAAkB,EAC1B,eAAiB0vJ,EAEjBv/D,IAGXplC,EAAQv4D,IAAM4wH,EAAM,GAAK,IAAMmqD,EAAU95I,KAAK,IAChD,CACA,OAAOhb,EAAKsyC,EACd,GAEFh5D,KAAK83I,SAASX,UAAUokC,EAC1B,EC/JK,MAAME,GAKX7qK,WAAAA,CAAYkxE,GAIV,GAJwC,KAJlC4Y,YAAM,OACNmrE,oBAAc,OACdG,uBAAiB,EAGvBhmK,KAAK6lK,eAAiBr/H,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYk1I,gCAClC17K,KAAKgmK,kBAAoBx/H,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYm1I,gCAEhC37K,KAAK6lK,iBAAmB7lK,KAAKgmK,kBAChC,MAAM,IAAItkK,MAAM,6GAGlB1B,KAAK06F,OAAS,IAAI8/E,GAAyB14F,EAAY9hF,KAAK6lK,eAC9D,CAOQ+V,iBAAAA,CAAkB9/F,GAExB,OAAIA,GAAoC,kBAAfA,GAA2BA,EAAWA,WACtDA,EAAWA,WAIbA,CACT,CAEA,oBAAM+/F,CAAeroG,GACnB,IAAK,IAADsoG,EAEF,MAAMC,EAAmB/7K,KAAK47K,kBAAkBpoG,EAAOsI,YAEjDkgG,EAAmC,CACvCluD,WAAY,CACV6rC,SAAUnmF,EAAOmmF,SACjB79E,WAAYigG,EACZr0J,KAAM,gBAIV3oB,QAAQoI,IAAI,wBAADq2B,OAAyBg2C,EAAOmzD,iBAE3C,MAAMs1C,QAAmBj8K,KAAK06F,OAAOugF,YAAYzE,2BAC/Cx2K,KAAKgmK,kBACLxyF,EAAOmzD,eACPq1C,GAGF,MAAO,CACL/7E,SAAS,EACT0mC,eAAgBnzD,EAAOmzD,eACvBq/B,kBAAmBhmK,KAAKgmK,kBACxBvK,QAA8B,QAAvBqgB,EAAEG,EAAWnuD,kBAAU,IAAAguD,OAAA,EAArBA,EAAuBrgB,QAEpC,CAAE,MAAOz8J,GAEP,OADAD,QAAQC,MAAM,qBAAsBA,GAC7B,CACLihG,SAAS,EACT0mC,eAAgBnzD,EAAOmzD,eACvBq/B,kBAAmBhmK,KAAKgmK,kBACxBhnK,MAAOA,aAAiB0C,MAAQ1C,EAAMmR,QAAU,2BAEpD,CACF,CAEA,yBAAM+rK,CAAoBv1C,GACxB,IAAK,IAADw1C,EAKF,OAA4B,QAA5BA,SAJyBn8K,KAAK06F,OAAOugF,YAAYnqK,IAC/C9Q,KAAKgmK,kBACLr/B,IAEgB7Y,kBAAU,IAAAquD,OAAA,EAArBA,EAAuB5gB,iBAChC,CAAE,MAAOv8J,GAEP,OADAD,QAAQC,MAAM,mCAAoCA,GAC3C,QACT,CACF,EC7FK,MAAMo9K,GACXxrK,WAAAA,CAAoB0a,GAAgB,KAAhBA,SAAAA,CAAgB,CAEpC,cAAMyhI,CAASzpF,GACb,IAAK,IAAD+4G,EACF,MAAM/iG,EAAUt5E,KAAKsrB,SAASu1C,iBAAiB,GAC/C,IAAKyY,EACH,MAAM,IAAI53E,MAAM,oBAGlB,MAAM46K,EAAan4K,MAAMC,QAAQk/D,GAAUA,EAAS,CAACA,GAC/Cya,QAAiB/9E,KAAKsrB,SAASq1C,mBAAkByH,GAAAA,GAAC,CAAC,EACpDu9D,IAAY,IACfriE,OAAQg5G,EACRhjG,QAASA,KAGX,MAAO,CACL2sE,MAAOloE,EAASjP,YAChBy9E,oBAAsC,QAAlB8vB,EAAAt+F,EAASnQ,iBAAS,IAAAyuG,OAAA,EAAlBA,EAAoB9uG,YAAa,EAEzD,CAAE,MAAOvuE,GAEP,OADAD,QAAQC,MAAM,2BAA4BA,GACnC,IACT,CACF,EAGK,MCrBDu9K,GAAe,IAAIt3C,GAAwBM,IAE3Ci3C,GAAuBA,KAC3B,MAAOz2C,EAAc02C,IAAmB5lJ,EAAAA,EAAAA,UAAsB,OACvDmvG,EAAgB02C,IAAqB7lJ,EAAAA,EAAAA,UAAsB,OAC3D8lJ,EAAiBC,IAAsB/lJ,EAAAA,EAAAA,UAA0B,SACjEgmJ,EAAmBC,IAAwBjmJ,EAAAA,EAAAA,UAAiB,KAC5D8vG,EAAgBo2C,IAAqBlmJ,EAAAA,EAAAA,UAAiB,IAEvDirD,EDY0Bk7F,MAChC,MAAM,SAAE1xJ,EAAQ,SAAEw6C,GAAa8C,KAE/B,OAAwB,IAApB9C,EAAS7rE,OACJ,KAGF,IAAImiL,GAAoB9wJ,ICnBZ0xJ,GAObC,EAAY/zJ,UAChB,MAAMM,QAAgB+8G,EAAKjzH,OAC3B,IACE,OAAO05D,KAAKC,MAAMzjD,EACpB,CAAE,MAAOxqB,GACP,MAAM,IAAI0C,MAAM,wBAAD87B,OAAyB+oG,EAAK5iI,KAAI,MAAA65B,OAAKx+B,GACxD,GA6CIk+K,EAAYn3C,GAAgBC,GAAkBlkD,GAAkC,YAApB66F,EAElE,OACE12C,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,MAAK3oH,SAAA,EAClB8yH,EAAAA,GAAAA,MAAA,UAAQnK,UAAU,aAAY3oH,SAAA,EAC5B+yH,EAAAA,GAAAA,KAAA,MAAA/yH,SAAI,qDACJ+yH,EAAAA,GAAAA,KAAA,KAAA/yH,SAAG,mDAGL8yH,EAAAA,GAAAA,MAAA,QAAMnK,UAAU,WAAU3oH,SAAA,EACxB+yH,EAAAA,GAAAA,KAACY,GAAW,IAEXhlD,IACCmkD,EAAAA,GAAAA,MAAAk3C,GAAAA,SAAA,CAAAhqK,SAAA,EACE+yH,EAAAA,GAAAA,KAACN,GAAU,CACTC,qBAAsB42C,EACtB32C,uBAAwB42C,EACxB32C,aAAcA,EACdC,eAAgBA,KAGlBC,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,iBAAgB3oH,SAAA,EAC7B+yH,EAAAA,GAAAA,KAAA,UACEp6G,QAjEO5C,UACnB,GAAK68G,GAAiBC,EAKtB,GAAKlkD,EAKL,IACE86F,EAAmB,WACnB,MAAMQ,EA3BqBC,MAC7B,MAAMx4G,GAAY,IAAIppE,MAAOoxI,cAAc/8H,QAAQ,QAAS,KAAKpF,MAAM,GAAI,GAC3E,MAAM,kBAAN8yB,OAAyBqnC,IAyBGw4G,GAC1BN,EAAkBK,GAClBN,EAAqB,IAGrB,MAAMnjB,QAAiBsjB,EAAUl3C,GAC3BjqD,QAAmBmhG,EAAUj3C,GAG7Bs3C,EAAoB,IAAI7B,GAAuB35F,GAC/CvjD,QAAe++I,EAAkBzB,eAAe,CACpDliB,WACA79E,aACA6qD,eAAgBy2C,IAGd7+I,EAAO0hE,SACT28E,EAAmB,WACnBE,EAAqB,sCAErBF,EAAmB,SACnBE,EAAqBv+I,EAAOv/B,OAAS,0BAEzC,CAAE,MAAOA,GACP49K,EAAmB,SACnBE,EAAqB99K,aAAiB0C,MAAQ1C,EAAMmR,QAAU,yBAChE,MAhCEotK,MAAM,sCALNA,MAAM,qDAgEIvqK,UAAWkqK,EACXphD,UAAS,iBAAAt+F,OAAoB0/I,EAAyB,GAAb,YAAkB/pK,SAEtC,YAApBwpK,EAAgC,sBAAmB,kCAGtD12C,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,kBAAiB3oH,SAAA,EAC9B8yH,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,EAAG+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAAQ,yBAA6B,IAAEqzB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYk1I,iCAAmC,qBACzFz1C,EAAAA,GAAAA,MAAA,KAAA9yH,SAAA,EAAG+yH,EAAAA,GAAAA,KAAA,UAAA/yH,SAAQ,2BAA+B,IAAEqzB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYm1I,gCAAkC,2BAI9Fz1C,EAAAA,GAAAA,KAACQ,GAAgB,CACf1uG,MAAO2kJ,EACPxsK,QAAS0sK,EACTl2C,eAAgBA,EAChBC,cAAepgG,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYm1I,qCAK/B75F,IACAmkD,EAAAA,GAAAA,MAAA,OAAKnK,UAAU,oBAAmB3oH,SAAA,EAChC+yH,EAAAA,GAAAA,KAAA,MAAA/yH,SAAI,0CACJ+yH,EAAAA,GAAAA,KAAA,KAAA/yH,SAAG,oFAgBf,SARA,WACE,OACE+yH,EAAAA,GAAAA,KAAC79D,GAAY,CAAC/8C,SAAUixJ,GAAappK,UACnC+yH,EAAAA,GAAAA,KAACs2C,GAAU,KAGjB,EC9HA,GAZyBgB,IACnBA,GAAeA,aAAuBC,UACxC,6BAAqBxtJ,MAAKq4C,IAAkD,IAAjD,OAAEo1G,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASx1G,EACpEo1G,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHDl9K,EAAAA,WACXoR,SAASqsK,eAAe,SAErBj6K,QACHoiI,EAAAA,GAAAA,KAAC7lI,EAAAA,WAAgB,CAAA8S,UACf+yH,EAAAA,GAAAA,KAAC83C,GAAG,OAORC","sources":["../../../node_modules/scheduler/cjs/scheduler.production.js","../../../node_modules/react/index.js","../../../node_modules/react-dom/cjs/react-dom-client.production.js","../../../node_modules/scheduler/index.js","../../../node_modules/react-dom/client.js","../../../node_modules/react/cjs/react.production.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/cjs/react-dom.production.js","../../../node_modules/react/cjs/react-jsx-runtime.production.js","../../../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../../../node_modules/@azure/msal-common/src/utils/Constants.ts","../../../node_modules/@azure/msal-common/src/error/AuthErrorCodes.ts","../../../node_modules/@azure/msal-common/src/error/AuthError.ts","../../../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthErrorCodes.ts","../../../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../../../node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts","../../../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../../../node_modules/@azure/msal-common/src/logger/Logger.ts","../../../node_modules/@azure/msal-react/src/MsalContext.ts","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/@azure/msal-browser/src/event/EventType.ts","../../../node_modules/@azure/msal-browser/src/event/EventMessage.ts","../../../node_modules/@azure/msal-react/src/utils/utilities.ts","../../../node_modules/@azure/msal-react/src/packageMetadata.ts","../../../node_modules/@azure/msal-react/src/MsalProvider.tsx","../../../node_modules/@azure/msal-react/src/hooks/useMsal.ts","../../../node_modules/@azure/msal-react/src/components/withMsal.tsx","../../../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../../../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../../../node_modules/@azure/msal-common/src/error/ClientAuthErrorCodes.ts","../../../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../../../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../../../node_modules/@azure/msal-common/src/packageMetadata.ts","../../../node_modules/@azure/msal-common/src/account/AuthToken.ts","../../../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../../../node_modules/@azure/msal-common/src/cache/utils/CacheHelpers.ts","../../../node_modules/@azure/msal-common/src/error/ClientConfigurationErrorCodes.ts","../../../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../../../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../../../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../../../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/@azure/msal-common/src/account/AccountInfo.ts","../../../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../../../node_modules/@azure/msal-common/src/account/TokenClaims.ts","../../../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../../../node_modules/@azure/msal-common/src/utils/UrlUtils.ts","../../../node_modules/@azure/msal-common/src/url/UrlString.ts","../../../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../../../node_modules/@azure/msal-common/src/error/CacheErrorCodes.ts","../../../node_modules/@azure/msal-common/src/error/CacheError.ts","../../../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../../../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../../../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../../../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","../../../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../../../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../../../node_modules/@azure/msal-common/src/error/NetworkError.ts","../../../node_modules/@azure/msal-browser/src/error/BrowserAuthErrorCodes.ts","../../../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../../../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../../../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../../../node_modules/@azure/msal-browser/src/encode/Base64Decode.ts","../../../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../../../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../../../node_modules/@azure/msal-browser/src/config/Configuration.ts","../../../node_modules/@azure/msal-browser/src/packageMetadata.ts","../../../node_modules/@azure/msal-browser/src/operatingcontext/BaseOperatingContext.ts","../../../node_modules/@azure/msal-browser/src/operatingcontext/StandardOperatingContext.ts","../../../node_modules/@azure/msal-common/src/error/JoseHeaderErrorCodes.ts","../../../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../../../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../../../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../../../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../../../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../../../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../../../node_modules/@azure/msal-common/src/utils/FunctionWrappers.ts","../../../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../../../node_modules/@azure/msal-common/src/authority/Authority.ts","../../../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../../../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../../../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryErrorResponse.ts","../../../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthErrorCodes.ts","../../../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../../../node_modules/@azure/msal-common/src/network/RequestThumbprint.ts","../../../node_modules/@azure/msal-browser/src/cache/CookieStorage.ts","../../../node_modules/@azure/msal-browser/src/cache/CacheHelpers.ts","../../../node_modules/@azure/msal-browser/src/cache/LocalStorage.ts","../../../node_modules/@azure/msal-browser/src/cache/SessionStorage.ts","../../../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../../../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../../../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../../../node_modules/@azure/msal-common/src/constants/AADServerParamKeys.ts","../../../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../../../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../../../node_modules/@azure/msal-common/src/error/ServerError.ts","../../../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../../../node_modules/@azure/msal-common/src/client/BaseClient.ts","../../../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../../../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../../../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../../../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../../../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../../../node_modules/@azure/msal-common/src/utils/ClientAssertionUtils.ts","../../../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../../../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../../../node_modules/@azure/msal-browser/src/request/RequestHelpers.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../../../node_modules/@azure/msal-browser/src/response/ResponseHandler.ts","../../../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../../../node_modules/@azure/msal-common/src/protocol/Authorize.ts","../../../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../../../node_modules/@azure/msal-browser/src/error/NativeAuthErrorCodes.ts","../../../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../../../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeStatusCodes.ts","../../../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/PlatformAuthInteractionClient.ts","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../../node_modules/@azure/msal-browser/src/protocol/Authorize.ts","../../../node_modules/@azure/msal-browser/src/crypto/PkceGenerator.ts","../../../node_modules/@azure/msal-browser/src/broker/nativeBroker/PlatformAuthExtensionHandler.ts","../../../node_modules/@azure/msal-browser/src/broker/nativeBroker/PlatformAuthDOMHandler.ts","../../../node_modules/@azure/msal-browser/src/broker/nativeBroker/PlatformAuthProvider.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../../../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../../../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../../../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/HybridSpaAuthorizationCodeClient.ts","../../../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../../../node_modules/@azure/msal-browser/src/controllers/StandardController.ts","../../../node_modules/@azure/msal-browser/src/cache/AccountManager.ts","../../../node_modules/@azure/msal-browser/src/utils/MsalFrameStatsUtils.ts","../../../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","../../../node_modules/@azure/msal-browser/src/controllers/ControllerFactory.ts","authConfig.ts","components/FileUpload.tsx","components/DeploymentStatus.tsx","components/LoginButton.tsx","../../../node_modules/@azure/arm-resources/src/pagingHelper.ts","../../../node_modules/@azure/arm-resources/src/models/index.ts","../../../node_modules/@azure/core-client/src/base64-browser.mts","../../../node_modules/@azure/core-client/src/interfaces.ts","../../../node_modules/@azure/core-client/src/utils.ts","../../../node_modules/@azure/core-client/src/serializer.ts","../../../node_modules/@typespec/ts-http-runtime/src/abort-controller/AbortError.ts","../../../node_modules/@typespec/ts-http-runtime/src/logger/debug.ts","../../../node_modules/@typespec/ts-http-runtime/src/logger/log.common.ts","../../../node_modules/@typespec/ts-http-runtime/src/logger/logger.ts","../../../node_modules/@typespec/ts-http-runtime/src/httpHeaders.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/uuidUtils.common.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/uuidUtils-browser.mts","../../../node_modules/@typespec/ts-http-runtime/src/pipelineRequest.ts","../../../node_modules/@typespec/ts-http-runtime/src/pipeline.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/object.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/error.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/inspect.common.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/sanitizer.ts","../../../node_modules/@typespec/ts-http-runtime/src/restError.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/bytesEncoding.common.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/typeGuards.ts","../../../node_modules/@typespec/ts-http-runtime/src/fetchHttpClient.ts","../../../node_modules/@typespec/ts-http-runtime/src/defaultHttpClient-browser.mts","../../../node_modules/@typespec/ts-http-runtime/src/log.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/delay.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/random.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/helpers.ts","../../../node_modules/@typespec/ts-http-runtime/src/retryStrategies/throttlingRetryStrategy.ts","../../../node_modules/@typespec/ts-http-runtime/src/retryStrategies/exponentialRetryStrategy.ts","../../../node_modules/@typespec/ts-http-runtime/src/constants.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/retryPolicy.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/checkEnvironment.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/formDataPolicy.ts","../../../node_modules/@typespec/ts-http-runtime/src/util/concat.common.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/multipartPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/pipeline.ts","../../../node_modules/@azure/logger/src/index.ts","../../../node_modules/@azure/core-rest-pipeline/src/log.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/proxyPolicy.common.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/redirectPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/logPolicy.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/logPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/constants.ts","../../../node_modules/@azure/core-rest-pipeline/src/util/userAgent.ts","../../../node_modules/@azure/core-rest-pipeline/src/util/userAgentPlatform-browser.mts","../../../node_modules/@azure/core-rest-pipeline/src/policies/userAgentPolicy.ts","../../../node_modules/@azure/abort-controller/src/AbortError.ts","../../../node_modules/@azure/core-util/src/delay.ts","../../../node_modules/@azure/core-util/src/createAbortablePromise.ts","../../../node_modules/@azure/core-util/src/error.ts","../../../node_modules/@azure/core-util/src/index.ts","../../../node_modules/@azure/core-rest-pipeline/src/util/file.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/multipartPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/decompressResponsePolicy.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/decompressResponsePolicy-browser.mts","../../../node_modules/@azure/core-rest-pipeline/src/policies/defaultRetryPolicy.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/defaultRetryPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/proxyPolicy.ts","../../../node_modules/@azure/core-tracing/src/tracingContext.ts","../../../node_modules/@azure/core-tracing/src/state-browser.mts","../../../node_modules/@azure/core-tracing/src/instrumenter.ts","../../../node_modules/@azure/core-rest-pipeline/src/restError.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/tracingPolicy.ts","../../../node_modules/@azure/core-tracing/src/tracingClient.ts","../../../node_modules/@azure/core-rest-pipeline/src/util/wrapAbortSignal.ts","../../../node_modules/@azure/core-rest-pipeline/src/createPipelineFromOptions.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/agentPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/agentPolicy.ts","../../../node_modules/@typespec/ts-http-runtime/src/policies/tlsPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/tlsPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/wrapAbortSignalLikePolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/formDataPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/setClientRequestIdPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/redirectPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/pipelineRequest.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/retryPolicy.ts","../../../node_modules/@azure/core-rest-pipeline/src/util/tokenCycler.ts","../../../node_modules/@azure/core-rest-pipeline/src/policies/bearerTokenAuthenticationPolicy.ts","../../../node_modules/@azure/core-client/src/state-browser.mts","../../../node_modules/@azure/core-client/src/operationHelpers.ts","../../../node_modules/@azure/core-client/src/deserializationPolicy.ts","../../../node_modules/@azure/core-client/src/interfaceHelpers.ts","../../../node_modules/@azure/core-client/src/serializationPolicy.ts","../../../node_modules/@azure/core-client/src/httpClientCache.ts","../../../node_modules/@azure/core-rest-pipeline/src/defaultHttpClient.ts","../../../node_modules/@azure/core-client/src/urlHelpers.ts","../../../node_modules/@azure/core-client/src/log.ts","../../../node_modules/@azure/core-client/src/serviceClient.ts","../../../node_modules/@azure/core-client/src/pipeline.ts","../../../node_modules/@azure/core-client/src/authorizeRequestOnClaimChallenge.ts","../../../node_modules/tslib/tslib.es6.mjs","../../../node_modules/@azure/arm-resources/src/models/mappers.ts","../../../node_modules/@azure/arm-resources/src/models/parameters.ts","../../../node_modules/@azure/arm-resources/src/operations/operations.ts","../../../node_modules/@azure/core-lro/src/logger.ts","../../../node_modules/@azure/core-lro/src/poller/constants.ts","../../../node_modules/@azure/core-lro/src/poller/operation.ts","../../../node_modules/@azure/core-lro/src/http/operation.ts","../../../node_modules/@azure/core-lro/src/poller/poller.ts","../../../node_modules/@azure/core-lro/src/http/poller.ts","../../../node_modules/@azure/core-lro/src/legacy/poller.ts","../../../node_modules/@azure/arm-resources/src/lroImpl.ts","../../../node_modules/@azure/arm-resources/src/operations/deployments.ts","../../../node_modules/@azure/arm-resources/src/operations/providers.ts","../../../node_modules/@azure/arm-resources/src/operations/providerResourceTypes.ts","../../../node_modules/@azure/arm-resources/src/operations/resources.ts","../../../node_modules/@azure/arm-resources/src/operations/resourceGroups.ts","../../../node_modules/@azure/arm-resources/src/operations/tagsOperations.ts","../../../node_modules/@azure/arm-resources/src/operations/deploymentOperations.ts","../../../node_modules/@azure/arm-resources/src/resourceManagementClient.ts","services/azureDeploymentService.ts","hooks/useAzureCredential.ts","App.tsx","reportWebVitals.ts","index.tsx"],"sourcesContent":["/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$0 = parentA.child; child$0; ) {\n        if (child$0 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$0 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$0 = child$0.sibling;\n      }\n      if (!didFindChild) {\n        for (child$0 = parentB.child; child$0; ) {\n          if (child$0 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$0 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$0 = child$0.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar assign = Object.assign,\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nvar REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.view_transition\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  switch (nextRootInstance.nodeType) {\n    case 9:\n    case 11:\n      fiber = (fiber = nextRootInstance.documentElement)\n        ? (fiber = fiber.namespaceURI)\n          ? getOwnHostContext(fiber)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = nextRootInstance.tagName),\n        (nextRootInstance = nextRootInstance.namespaceURI))\n      )\n        (nextRootInstance = getOwnHostContext(nextRootInstance)),\n          (fiber = getChildHostContextProd(nextRootInstance, fiber));\n      else\n        switch (fiber) {\n          case \"svg\":\n            fiber = 1;\n            break;\n          case \"math\":\n            fiber = 2;\n            break;\n          default:\n            fiber = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, fiber);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 256,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n      return 128;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194048;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes, rootHasPendingCommit) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes;\n  root = root.warmLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : rootHasPendingCommit ||\n              ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\n              0 !== rootHasPendingCommit &&\n                (nextLanes = getHighestPriorityLanes(rootHasPendingCommit)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : rootHasPendingCommit ||\n            ((rootHasPendingCommit = pendingLanes & ~root),\n            0 !== rootHasPendingCommit &&\n              (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (rootHasPendingCommit = wipLanes & -wipLanes),\n        suspendedLanes >= rootHasPendingCommit ||\n          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n    case 64:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$5 = 31 - clz32(remainingLanes),\n      lane = 1 << index$5;\n    entanglements[index$5] = 0;\n    expirationTimes[index$5] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$5];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$5] = null, index$5 = 0;\n        index$5 < hiddenUpdatesForLane.length;\n        index$5++\n      ) {\n        var update = hiddenUpdatesForLane[index$5];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194090);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$6 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$6;\n    (lane & entangledLanes) | (root[index$6] & entangledLanes) &&\n      (root[index$6] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydrationByLane(lane) {\n  switch (lane) {\n    case 2:\n      lane = 1;\n      break;\n    case 8:\n      lane = 4;\n      break;\n    case 32:\n      lane = 16;\n      break;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      lane = 128;\n      break;\n    case 268435456:\n      lane = 134217728;\n      break;\n    default:\n      lane = 0;\n  }\n  return lane;\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$8 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$9) {\n                control = x$9;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$10) {\n              control = x$10;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return describeNativeComponentFrame(fiber.type, !1);\n    case 11:\n      return describeNativeComponentFrame(fiber.type.render, !1);\n    case 1:\n      return describeNativeComponentFrame(fiber.type, !0);\n    case 31:\n      return describeBuiltInComponentFrame(\"Activity\");\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$282;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_417 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_417) {\n      var element$jscomp$inline_418 = document.createElement(\"div\");\n      element$jscomp$inline_418.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_417 =\n        \"function\" === typeof element$jscomp$inline_418.oninput;\n    }\n    JSCompiler_inline_result$jscomp$282 = isSupported$jscomp$inline_417;\n  } else JSCompiler_inline_result$jscomp$282 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$282 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nsimpleEventPluginEvents.push(\"scrollEnd\");\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  return 3 === sourceFiber.tag\n    ? ((parent = sourceFiber.stateNode),\n      isHidden &&\n        null !== update &&\n        ((isHidden = 31 - clz32(lane)),\n        (sourceFiber = parent.hiddenUpdates),\n        (alternate = sourceFiber[isHidden]),\n        null === alternate\n          ? (sourceFiber[isHidden] = [update])\n          : alternate.push(update),\n        (update.lane = lane | 536870912)),\n      parent)\n    : null;\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {};\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 65011712;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 65011714;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_ACTIVITY_TYPE:\n        return (\n          (type = createFiberImplClass(31, pendingProps, key, mode)),\n          (type.elementType = REACT_ACTIVITY_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      case 27:\n      case 3:\n        rootOrSingletonContext = !0;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var tag = fiber.tag,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\n    if ((JSCompiler_temp = 5 === tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (tag = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === tag) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            tag--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              tag++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    27 === tag\n      ? ((tag = nextHydratableInstance),\n        isSingletonScope(fiber.type)\n          ? ((fiber = previousHydratableOnEnteringScopedSingleton),\n            (previousHydratableOnEnteringScopedSingleton = null),\n            (nextHydratableInstance = fiber))\n          : (nextHydratableInstance = tag))\n      : (nextHydratableInstance = hydrationParentFiber\n          ? getNextHydratable(fiber.stateNode.nextSibling)\n          : null);\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction upgradeHydrationErrorsToRecoverable() {\n  var queuedErrors = hydrationErrors;\n  null !== queuedErrors &&\n    (null === workInProgressRootRecoverableErrors\n      ? (workInProgressRootRecoverableErrors = queuedErrors)\n      : workInProgressRootRecoverableErrors.push.apply(\n          workInProgressRootRecoverableErrors,\n          queuedErrors\n        ),\n    (hydrationErrors = null));\n  return queuedErrors;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber$1 = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber$1 = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber$1, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  SuspenseActionException = Error(formatProdErrorMessage(542)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw (\n        ((thenableState = thenable.reason),\n        checkIfUseWrappedInAsyncCatch(thenableState),\n        thenableState)\n      );\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw (\n            ((thenableState = thenable.reason),\n            checkIfUseWrappedInAsyncCatch(thenableState),\n            thenableState)\n          );\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction checkIfUseWrappedInAsyncCatch(rejectedReason) {\n  if (\n    rejectedReason === SuspenseException ||\n    rejectedReason === SuspenseActionException\n  )\n    throw Error(formatProdErrorMessage(483));\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nvar currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter$1 = 0,\n  thenableState$1 = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter$1 = 0;\n  thenableState$1 = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\n    thenableIndexCounter$1 = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter$1 = localIdCounter = 0;\n  thenableState$1 = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nfunction createFunctionComponentUpdateQueue() {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n}\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  thenable = trackUsedThenable(thenableState$1, thenable, index);\n  index = currentlyRenderingFiber;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$32 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$32 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$32 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$32 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  var create = subscribeToStore.bind(null, fiber, hook, subscribe);\n  updateEffectImpl(2048, 8, create, [subscribe]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 124) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$38) {\n      onActionError(actionQueue, node, error$38);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  if (\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n  )\n    try {\n      var state = useThenable(currentStateHook);\n    } catch (x) {\n      if (x === SuspenseException) throw SuspenseActionException;\n      throw x;\n    }\n  else state = currentStateHook;\n  currentStateHook = updateWorkInProgressHook();\n  var actionQueue = currentStateHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== currentStateHook.memoizedState &&\n    ((currentlyRenderingFiber.flags |= 2048),\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      actionStateActionEffect.bind(null, actionQueue, action),\n      null\n    ));\n  return [state, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushSimpleEffect(tag, inst, create, createDeps) {\n  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };\n  inst = currentlyRenderingFiber.updateQueue;\n  null === inst &&\n    ((inst = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = inst));\n  create = inst.lastEffect;\n  null === create\n    ? (inst.lastEffect = tag.next = tag)\n    : ((createDeps = create.next),\n      (create.next = tag),\n      (tag.next = createDeps),\n      (inst.lastEffect = tag));\n  return tag;\n}\nfunction createEffectInstance() {\n  return { destroy: void 0, resource: void 0 };\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\n  var hook = mountWorkInProgressHook();\n  createDeps = void 0 === createDeps ? null : createDeps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushSimpleEffect(\n    1 | hookFlags,\n    createEffectInstance(),\n    create,\n    createDeps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\n    : ((currentlyRenderingFiber.flags |= fiberFlags),\n      (hook.memoizedState = pushSimpleEffect(\n        1 | hookFlags,\n        inst,\n        create,\n        deps\n      )));\n}\nfunction mountEffect(create, createDeps) {\n  mountEffectImpl(8390656, 8, create, createDeps);\n}\nfunction updateEffect(create, createDeps) {\n  updateEffectImpl(2048, 8, create, createDeps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$41 = enqueueUpdate(provider, fiber, lane);\n        null !== root$41 &&\n          (scheduleUpdateOnFiber(root$41, provider, lane),\n          entangleTransitions(root$41, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (null !== alternate && alternate === currentlyRenderingFiber)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194048)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n    readContext: readContext,\n    use: use,\n    useCallback: throwInvalidHookError,\n    useContext: throwInvalidHookError,\n    useEffect: throwInvalidHookError,\n    useImperativeHandle: throwInvalidHookError,\n    useLayoutEffect: throwInvalidHookError,\n    useInsertionEffect: throwInvalidHookError,\n    useMemo: throwInvalidHookError,\n    useReducer: throwInvalidHookError,\n    useRef: throwInvalidHookError,\n    useState: throwInvalidHookError,\n    useDebugValue: throwInvalidHookError,\n    useDeferredValue: throwInvalidHookError,\n    useTransition: throwInvalidHookError,\n    useSyncExternalStore: throwInvalidHookError,\n    useId: throwInvalidHookError,\n    useHostTransitionStatus: throwInvalidHookError,\n    useFormState: throwInvalidHookError,\n    useActionState: throwInvalidHookError,\n    useOptimistic: throwInvalidHookError,\n    useMemoCache: throwInvalidHookError,\n    useCacheRefresh: throwInvalidHookError\n  },\n  HooksDispatcherOnMount = {\n    readContext: readContext,\n    use: use,\n    useCallback: function (callback, deps) {\n      mountWorkInProgressHook().memoizedState = [\n        callback,\n        void 0 === deps ? null : deps\n      ];\n      return callback;\n    },\n    useContext: readContext,\n    useEffect: mountEffect,\n    useImperativeHandle: function (ref, create, deps) {\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      mountEffectImpl(\n        4194308,\n        4,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    },\n    useLayoutEffect: function (create, deps) {\n      return mountEffectImpl(4194308, 4, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      mountEffectImpl(4, 2, create, deps);\n    },\n    useMemo: function (nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var nextValue = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [nextValue, deps];\n      return nextValue;\n    },\n    useReducer: function (reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      if (void 0 !== init) {\n        var initialState = init(initialArg);\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            init(initialArg);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      } else initialState = initialArg;\n      hook.memoizedState = hook.baseState = initialState;\n      reducer = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = reducer;\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\n        null,\n        currentlyRenderingFiber,\n        reducer\n      );\n      return [hook.memoizedState, reducer];\n    },\n    useRef: function (initialValue) {\n      var hook = mountWorkInProgressHook();\n      initialValue = { current: initialValue };\n      return (hook.memoizedState = initialValue);\n    },\n    useState: function (initialState) {\n      initialState = mountStateImpl(initialState);\n      var queue = initialState.queue,\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\n      queue.dispatch = dispatch;\n      return [initialState.memoizedState, dispatch];\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = mountWorkInProgressHook();\n      return mountDeferredValueImpl(hook, value, initialValue);\n    },\n    useTransition: function () {\n      var stateHook = mountStateImpl(!1);\n      stateHook = startTransition.bind(\n        null,\n        currentlyRenderingFiber,\n        stateHook.queue,\n        !0,\n        !1\n      );\n      mountWorkInProgressHook().memoizedState = stateHook;\n      return [!1, stateHook];\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber,\n        hook = mountWorkInProgressHook();\n      if (isHydrating) {\n        if (void 0 === getServerSnapshot)\n          throw Error(formatProdErrorMessage(407));\n        getServerSnapshot = getServerSnapshot();\n      } else {\n        getServerSnapshot = getSnapshot();\n        if (null === workInProgressRoot)\n          throw Error(formatProdErrorMessage(349));\n        0 !== (workInProgressRootRenderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n      }\n      hook.memoizedState = getServerSnapshot;\n      var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n        subscribe\n      ]);\n      fiber.flags |= 2048;\n      pushSimpleEffect(\n        9,\n        createEffectInstance(),\n        updateStoreInstance.bind(\n          null,\n          fiber,\n          inst,\n          getServerSnapshot,\n          getSnapshot\n        ),\n        null\n      );\n      return getServerSnapshot;\n    },\n    useId: function () {\n      var hook = mountWorkInProgressHook(),\n        identifierPrefix = workInProgressRoot.identifierPrefix;\n      if (isHydrating) {\n        var JSCompiler_inline_result = treeContextOverflow;\n        var idWithLeadingBit = treeContextId;\n        JSCompiler_inline_result =\n          (\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n          ).toString(32) + JSCompiler_inline_result;\n        identifierPrefix =\n          \"\\u00ab\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n        JSCompiler_inline_result = localIdCounter++;\n        0 < JSCompiler_inline_result &&\n          (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n        identifierPrefix += \"\\u00bb\";\n      } else\n        (JSCompiler_inline_result = globalClientIdCounter++),\n          (identifierPrefix =\n            \"\\u00ab\" +\n            identifierPrefix +\n            \"r\" +\n            JSCompiler_inline_result.toString(32) +\n            \"\\u00bb\");\n      return (hook.memoizedState = identifierPrefix);\n    },\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: mountActionState,\n    useActionState: mountActionState,\n    useOptimistic: function (passthrough) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = hook.baseState = passthrough;\n      var queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: null,\n        lastRenderedState: null\n      };\n      hook.queue = queue;\n      hook = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !0,\n        queue\n      );\n      queue.dispatch = hook;\n      return [passthrough, hook];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: function () {\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n        null,\n        currentlyRenderingFiber\n      ));\n    }\n  },\n  HooksDispatcherOnUpdate = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: updateReducer,\n    useRef: updateRef,\n    useState: function () {\n      return updateReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return updateDeferredValueImpl(\n        hook,\n        currentHook.memoizedState,\n        value,\n        initialValue\n      );\n    },\n    useTransition: function () {\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: updateActionState,\n    useActionState: updateActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  HooksDispatcherOnRerender = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: rerenderReducer,\n    useRef: updateRef,\n    useState: function () {\n      return rerenderReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return null === currentHook\n        ? mountDeferredValueImpl(hook, value, initialValue)\n        : updateDeferredValueImpl(\n            hook,\n            currentHook.memoizedState,\n            value,\n            initialValue\n          );\n    },\n    useTransition: function () {\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: rerenderActionState,\n    useActionState: rerenderActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      if (null !== currentHook)\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n      hook.baseState = passthrough;\n      return [passthrough, hook.queue.dispatch];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  thenableState = null,\n  thenableIndexCounter = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 67108866), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 67108866;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 67108866);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException || x === SuspenseActionException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state ||\n          \"$?\" === state.data ||\n          isSuspenseInstanceFallback(state))\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$73 in Component)\n      void 0 === newProps[propName$73] &&\n        (newProps[propName$73] = Component[propName$73]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$74) {\n    setTimeout(function () {\n      throw e$74;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$75) {\n    setTimeout(function () {\n      throw e$75;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    prevState = null !== current ? current.memoizedState : null;\n  if (\"hidden\" === nextProps.mode) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (prevState = 0; null !== nextChildren; )\n          (prevState =\n            prevState | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = prevState & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 4194816);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 4194816;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0,\n  hydrationErrors: null\n};\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912,\n                hydrationErrors: null\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          isSuspenseInstanceFallback(nextInstance)\n            ? (workInProgress.lanes = 32)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      isSuspenseInstanceFallback(nextInstance))\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (\n        null !== JSCompiler_temp &&\n        ((nextProps = renderLanes & -renderLanes),\n        (nextProps =\n          0 !== (nextProps & 42)\n            ? 1\n            : getBumpedLaneForHydrationByLane(nextProps)),\n        (nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps),\n        0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n      )\n        throw (\n          ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n          enqueueConcurrentRenderForLane(current, nextProps),\n          scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n          SelectiveHydrationException)\n        );\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 192),\n          (workInProgress.child = current.child),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 65011712),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  offscreenProps = createFiberImplClass(22, offscreenProps, null, mode);\n  offscreenProps.lanes = 0;\n  offscreenProps.stateNode = {\n    _visibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null\n  };\n  return offscreenProps;\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        lazyComponent = workInProgress.pendingProps;\n        var prevState = workInProgress.memoizedState;\n        init = prevState.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        lazyComponent = nextState.cache;\n        pushProvider(workInProgress, CacheContext, lazyComponent);\n        lazyComponent !== prevState.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        lazyComponent = nextState.element;\n        if (prevState.isDehydrated)\n          if (\n            ((prevState = {\n              element: lazyComponent,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = prevState),\n            (workInProgress.memoizedState = prevState),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else if (lazyComponent !== init) {\n            init = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(init);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else {\n            current = workInProgress.stateNode.containerInfo;\n            switch (current.nodeType) {\n              case 9:\n                current = current.body;\n                break;\n              default:\n                current =\n                  \"HTML\" === current.nodeName\n                    ? current.ownerDocument.body\n                    : current;\n            }\n            nextHydratableInstance = getNextHydratable(current.firstChild);\n            hydrationParentFiber = workInProgress;\n            isHydrating = !0;\n            hydrationErrors = null;\n            rootOrSingletonContext = !0;\n            renderLanes = mountChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            );\n            for (workInProgress.child = renderLanes; renderLanes; )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n          }\n        else {\n          resetHydrationState();\n          if (lazyComponent === init) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(\n            current,\n            workInProgress,\n            lazyComponent,\n            renderLanes\n          );\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (init = nextHydratableInstance),\n          isSingletonScope(workInProgress.type)\n            ? ((previousHydratableOnEnteringScopedSingleton = init),\n              (nextHydratableInstance = getNextHydratable(\n                lazyComponent.firstChild\n              )))\n            : (nextHydratableInstance = init)),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        markRef(current, workInProgress),\n        null === current && (workInProgress.flags |= 4194304),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      prevState = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = prevState.children;\n      shouldSetTextContent(init, prevState)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 31:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        (renderLanes = workInProgress.mode),\n        (lazyComponent = {\n          mode: lazyComponent.mode,\n          children: lazyComponent.children\n        }),\n        null === current\n          ? ((renderLanes = mountWorkInProgressOffscreenFiber(\n              lazyComponent,\n              renderLanes\n            )),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes))\n          : ((renderLanes = createWorkInProgress(current.child, lazyComponent)),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes)),\n        workInProgress\n      );\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (prevState = createCache()),\n              (init.pooledCache = prevState),\n              prevState.refCount++,\n              null !== prevState && (init.pooledCacheLanes |= renderLanes),\n              (init = prevState)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (prevState = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = prevState.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194048) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$113 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$113 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$113\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$113.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags & 65011712),\n        (subtreeFlags |= child$114.flags & 65011712),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  else\n    for (child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags),\n        (subtreeFlags |= child$114.flags),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 31:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            upgradeHydrationErrorsToRecoverable());\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          (type = upgradeHydrationErrorsToRecoverable()),\n            null !== current &&\n              null !== current.memoizedState &&\n              (current.memoizedState.hydrationErrors = type),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$127 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$127 = newProps.memoizedState.cachePool.pool);\n        cache$127 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$127 = type.rendering;\n      if (null === cache$127)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$127 = findFirstSuspended(current);\n              if (null !== cache$127) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$127.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$127)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$127.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$127.sibling = workInProgress.child),\n            (workInProgress.child = cache$127))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$127)\n              : (workInProgress.child = cache$127),\n            (type.last = cache$127));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n    case 30:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,\n              destroy_ = destroy;\n            try {\n              destroy_();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = current.stateNode;\n          break;\n        case 30:\n          instanceToUse = current.stateNode;\n          break;\n        default:\n          instanceToUse = current.stateNode;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$143) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$143);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    (27 === fiber.tag && isSingletonScope(fiber.type)) ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\n\n    ) {\n      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? (9 === parent.nodeType\n            ? parent.body\n            : \"HTML\" === parent.nodeName\n              ? parent.ownerDocument.body\n              : parent\n          ).insertBefore(node, before)\n        : ((before =\n            9 === parent.nodeType\n              ? parent.body\n              : \"HTML\" === parent.nodeName\n                ? parent.ownerDocument.body\n                : parent),\n          before.appendChild(node),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (\n    4 !== tag &&\n    (27 === tag &&\n      isSingletonScope(node.type) &&\n      ((parent = node.stateNode), (before = null)),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (\n    4 !== tag &&\n    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nfunction commitHostSingletonAcquisition(finishedWork) {\n  var singleton = finishedWork.stateNode,\n    props = finishedWork.memoizedProps;\n  try {\n    for (\n      var type = finishedWork.type, attributes = singleton.attributes;\n      attributes.length;\n\n    )\n      singleton.removeAttributeNode(attributes[0]);\n    setInitialProperties(singleton, type, props);\n    singleton[internalInstanceKey] = finishedWork;\n    singleton[internalPropsKey] = props;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1024) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$142) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$142\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (\n        flags & 64 &&\n        ((finishedRoot = finishedWork.updateQueue), null !== finishedRoot)\n      ) {\n        current = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              current = finishedWork.child.stateNode;\n              break;\n            case 1:\n              current = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(finishedRoot, current);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 27:\n      null === current &&\n        flags & 4 &&\n        commitHostSingletonAcquisition(finishedWork);\n    case 26:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      flags & 64 &&\n        ((finishedRoot = finishedWork.memoizedState),\n        null !== finishedRoot &&\n          ((finishedRoot = finishedRoot.dehydrated),\n          null !== finishedRoot &&\n            ((finishedWork = retryDehydratedSuspenseBoundary.bind(\n              null,\n              finishedWork\n            )),\n            registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\n      break;\n    case 22:\n      flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!flags) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        prevProps = offscreenSubtreeIsHidden;\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = flags;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevProps;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      break;\n    case 30:\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      isSingletonScope(deletedFiber.type) &&\n        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      releaseSingletonInstance(deletedFiber.stateNode);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (9 === hostParent.nodeType\n              ? hostParent.body\n              : \"HTML\" === hostParent.nodeName\n                ? hostParent.ownerDocument.body\n                : hostParent\n            ).removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((finishedRoot = hostParent),\n            clearSuspenseBoundary(\n              9 === finishedRoot.nodeType\n                ? finishedRoot.body\n                : \"HTML\" === finishedRoot.nodeName\n                  ? finishedRoot.ownerDocument.body\n                  : finishedRoot,\n              deletedFiber.stateNode\n            ),\n            retryIfBlockedOn(finishedRoot))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n            if (isSingletonScope(parent.type)) {\n              hostParent = parent.stateNode;\n              hostParentIsContainer = !1;\n              break a;\n            }\n            break;\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href || \"\" === current.href\n                              ? null\n                              : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      null !== current &&\n        flags & 4 &&\n        commitHostUpdate(\n          finishedWork,\n          finishedWork.memoizedProps,\n          current.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      hoistableRoot = null !== finishedWork.memoizedState;\n      var wasHidden = null !== current && null !== current.memoizedState,\n        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 8192)\n        a: for (\n          root = finishedWork.stateNode,\n            root._visibility = hoistableRoot\n              ? root._visibility & -2\n              : root._visibility | 1,\n            hoistableRoot &&\n              (null === current ||\n                wasHidden ||\n                offscreenSubtreeIsHidden ||\n                offscreenSubtreeWasHidden ||\n                recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n            current = null,\n            root = finishedWork;\n          ;\n\n        ) {\n          if (5 === root.tag || 26 === root.tag) {\n            if (null === current) {\n              wasHidden = current = root;\n              try {\n                if (((currentResource = wasHidden.stateNode), hoistableRoot))\n                  (maybeNodes = currentResource.style),\n                    \"function\" === typeof maybeNodes.setProperty\n                      ? maybeNodes.setProperty(\"display\", \"none\", \"important\")\n                      : (maybeNodes.display = \"none\");\n                else {\n                  i = wasHidden.stateNode;\n                  var styleProp = wasHidden.memoizedProps.style,\n                    display =\n                      void 0 !== styleProp &&\n                      null !== styleProp &&\n                      styleProp.hasOwnProperty(\"display\")\n                        ? styleProp.display\n                        : null;\n                  i.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              wasHidden = root;\n              try {\n                wasHidden.stateNode.nodeValue = hoistableRoot\n                  ? \"\"\n                  : wasHidden.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 30:\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      for (\n        var hostParentFiber, parentFiber = finishedWork.return;\n        null !== parentFiber;\n\n      ) {\n        if (isHostParent(parentFiber)) {\n          hostParentFiber = parentFiber;\n          break;\n        }\n        parentFiber = parentFiber.return;\n      }\n      if (null == hostParentFiber) throw Error(formatProdErrorMessage(160));\n      switch (hostParentFiber.tag) {\n        case 27:\n          var parent = hostParentFiber.stateNode,\n            before = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before, parent);\n          break;\n        case 5:\n          var parent$144 = hostParentFiber.stateNode;\n          hostParentFiber.flags & 32 &&\n            (setTextContent(parent$144, \"\"), (hostParentFiber.flags &= -33));\n          var before$145 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before$145, parent$144);\n          break;\n        case 3:\n        case 4:\n          var parent$146 = hostParentFiber.stateNode.containerInfo,\n            before$147 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNodeIntoContainer(\n            finishedWork,\n            before$147,\n            parent$146\n          );\n          break;\n        default:\n          throw Error(formatProdErrorMessage(161));\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 27:\n        releaseSingletonInstance(finishedWork.stateNode);\n      case 26:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 30:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 27:\n        commitHostSingletonAcquisition(finishedWork);\n      case 26:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 30:\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 1:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 13:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      id = finishedWork.alternate;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 && commitOffscreenPassiveMountEffects(id, finishedWork);\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 2\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 2 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 2 &&\n          ((i._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  pendingEffectsStatus = 0,\n  pendingEffectsRoot = null,\n  pendingFinishedWork = null,\n  pendingEffectsLanes = 0,\n  pendingEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  pendingRecoverableErrors = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 124) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                (null === workInProgressRootRecoverableErrors\n                  ? (workInProgressRootRecoverableErrors = renderWasConcurrent)\n                  : workInProgressRootRecoverableErrors.push.apply(\n                      workInProgressRootRecoverableErrors,\n                      renderWasConcurrent\n                    ));\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        renderWasConcurrent = exitStatus;\n        switch (renderWasConcurrent) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194048) !== lanes) break;\n          case 6:\n            markRootSuspended(\n              shouldTimeSlice,\n              lanes,\n              workInProgressDeferredLane,\n              !workInProgressRootDidSkipSuspendedSiblings\n            );\n            break a;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        if (\n          (lanes & 62914560) === lanes &&\n          ((exitStatus = globalMostRecentFallbackTime + 300 - now()),\n          10 < exitStatus)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              renderWasConcurrent,\n              2,\n              -0,\n              0\n            ),\n            exitStatus\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          renderWasConcurrent,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  exitStatus,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  root.timeoutHandle = -1;\n  suspendedCommitReason = finishedWork.subtreeFlags;\n  if (\n    suspendedCommitReason & 8192 ||\n    16785408 === (suspendedCommitReason & 16785408)\n  )\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (suspendedCommitReason = waitForCommitToBeReady()),\n      null !== suspendedCommitReason)\n    ) {\n      root.cancelPendingCommit = suspendedCommitReason(\n        commitRoot.bind(\n          null,\n          root,\n          finishedWork,\n          lanes,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          exitStatus,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    finishedWork,\n    lanes,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$4 = 31 - clz32(lanes),\n      lane = 1 << index$4;\n    didAttemptEntireTree[index$4] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber$1 = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState = null),\n        (thenableIndexCounter = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$2 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$2;\n      lanes |= root[index$2];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException || thrownValue === SuspenseActionException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194048) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 9:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$167) {\n      handleThrow(root, thrownValue$167);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n          case 9:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              (2 !== workInProgressSuspendedReason &&\n                9 !== workInProgressSuspendedReason) ||\n                workInProgressRoot !== root ||\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrentByScheduler();\n      break;\n    } catch (thrownValue$169) {\n      handleThrow(root, thrownValue$169);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrentByScheduler() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState = null;\n  thenableIndexCounter = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason ||\n        9 === suspendedReason ||\n        3 === suspendedReason ||\n        6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  finishedWork,\n  lanes,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  root.cancelPendingCommit = null;\n  do flushPendingEffects();\n  while (0 !== pendingEffectsStatus);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  if (null !== finishedWork) {\n    if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n    didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;\n    didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\n    markRootFinished(\n      root,\n      lanes,\n      didIncludeRenderPhaseUpdate,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    );\n    root === workInProgressRoot &&\n      ((workInProgress = workInProgressRoot = null),\n      (workInProgressRootRenderLanes = 0));\n    pendingFinishedWork = finishedWork;\n    pendingEffectsRoot = root;\n    pendingEffectsLanes = lanes;\n    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\n    pendingPassiveTransitions = transitions;\n    pendingRecoverableErrors = recoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? ((root.callbackNode = null),\n        (root.callbackPriority = 0),\n        scheduleCallback$1(NormalPriority$1, function () {\n          flushPassiveEffects(!0);\n          return null;\n        }))\n      : ((root.callbackNode = null), (root.callbackPriority = 0));\n    recoverableErrors = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\n      recoverableErrors = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      transitions = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      spawnedLane = executionContext;\n      executionContext |= 4;\n      try {\n        commitBeforeMutationEffects(root, finishedWork, lanes);\n      } finally {\n        (executionContext = spawnedLane),\n          (ReactDOMSharedInternals.p = transitions),\n          (ReactSharedInternals.T = recoverableErrors);\n      }\n    }\n    pendingEffectsStatus = 1;\n    flushMutationEffects();\n    flushLayoutEffects();\n    flushSpawnedWork();\n  }\n}\nfunction flushMutationEffects() {\n  if (1 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {\n      rootMutationHasEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitMutationEffectsOnFiber(finishedWork, root);\n        var priorSelectionInformation = selectionInformation,\n          curFocusedElem = getActiveElementDeep(root.containerInfo),\n          priorFocusedElem = priorSelectionInformation.focusedElem,\n          priorSelectionRange = priorSelectionInformation.selectionRange;\n        if (\n          curFocusedElem !== priorFocusedElem &&\n          priorFocusedElem &&\n          priorFocusedElem.ownerDocument &&\n          containsNode(\n            priorFocusedElem.ownerDocument.documentElement,\n            priorFocusedElem\n          )\n        ) {\n          if (\n            null !== priorSelectionRange &&\n            hasSelectionCapabilities(priorFocusedElem)\n          ) {\n            var start = priorSelectionRange.start,\n              end = priorSelectionRange.end;\n            void 0 === end && (end = start);\n            if (\"selectionStart\" in priorFocusedElem)\n              (priorFocusedElem.selectionStart = start),\n                (priorFocusedElem.selectionEnd = Math.min(\n                  end,\n                  priorFocusedElem.value.length\n                ));\n            else {\n              var doc = priorFocusedElem.ownerDocument || document,\n                win = (doc && doc.defaultView) || window;\n              if (win.getSelection) {\n                var selection = win.getSelection(),\n                  length = priorFocusedElem.textContent.length,\n                  start$jscomp$0 = Math.min(priorSelectionRange.start, length),\n                  end$jscomp$0 =\n                    void 0 === priorSelectionRange.end\n                      ? start$jscomp$0\n                      : Math.min(priorSelectionRange.end, length);\n                !selection.extend &&\n                  start$jscomp$0 > end$jscomp$0 &&\n                  ((curFocusedElem = end$jscomp$0),\n                  (end$jscomp$0 = start$jscomp$0),\n                  (start$jscomp$0 = curFocusedElem));\n                var startMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    start$jscomp$0\n                  ),\n                  endMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    end$jscomp$0\n                  );\n                if (\n                  startMarker &&\n                  endMarker &&\n                  (1 !== selection.rangeCount ||\n                    selection.anchorNode !== startMarker.node ||\n                    selection.anchorOffset !== startMarker.offset ||\n                    selection.focusNode !== endMarker.node ||\n                    selection.focusOffset !== endMarker.offset)\n                ) {\n                  var range = doc.createRange();\n                  range.setStart(startMarker.node, startMarker.offset);\n                  selection.removeAllRanges();\n                  start$jscomp$0 > end$jscomp$0\n                    ? (selection.addRange(range),\n                      selection.extend(endMarker.node, endMarker.offset))\n                    : (range.setEnd(endMarker.node, endMarker.offset),\n                      selection.addRange(range));\n                }\n              }\n            }\n          }\n          doc = [];\n          for (\n            selection = priorFocusedElem;\n            (selection = selection.parentNode);\n\n          )\n            1 === selection.nodeType &&\n              doc.push({\n                element: selection,\n                left: selection.scrollLeft,\n                top: selection.scrollTop\n              });\n          \"function\" === typeof priorFocusedElem.focus &&\n            priorFocusedElem.focus();\n          for (\n            priorFocusedElem = 0;\n            priorFocusedElem < doc.length;\n            priorFocusedElem++\n          ) {\n            var info = doc[priorFocusedElem];\n            info.element.scrollLeft = info.left;\n            info.element.scrollTop = info.top;\n          }\n        }\n        _enabled = !!eventsEnabled;\n        selectionInformation = eventsEnabled = null;\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootMutationHasEffect);\n      }\n    }\n    root.current = finishedWork;\n    pendingEffectsStatus = 2;\n  }\n}\nfunction flushLayoutEffects() {\n  if (2 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\n    if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\n      rootHasLayoutEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork);\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootHasLayoutEffect);\n      }\n    }\n    pendingEffectsStatus = 3;\n  }\n}\nfunction flushSpawnedWork() {\n  if (4 === pendingEffectsStatus || 3 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    requestPaint();\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      lanes = pendingEffectsLanes,\n      recoverableErrors = pendingRecoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? (pendingEffectsStatus = 5)\n      : ((pendingEffectsStatus = 0),\n        (pendingFinishedWork = pendingEffectsRoot = null),\n        releaseRootPooledCache(root, root.pendingLanes));\n    var remainingLanes = root.pendingLanes;\n    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n    lanesToEventPriority(lanes);\n    finishedWork = finishedWork.stateNode;\n    if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n      try {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          finishedWork,\n          void 0,\n          128 === (finishedWork.current.flags & 128)\n        );\n      } catch (err) {}\n    if (null !== recoverableErrors) {\n      finishedWork = ReactSharedInternals.T;\n      remainingLanes = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      ReactSharedInternals.T = null;\n      try {\n        for (\n          var onRecoverableError = root.onRecoverableError, i = 0;\n          i < recoverableErrors.length;\n          i++\n        ) {\n          var recoverableError = recoverableErrors[i];\n          onRecoverableError(recoverableError.value, {\n            componentStack: recoverableError.stack\n          });\n        }\n      } finally {\n        (ReactSharedInternals.T = finishedWork),\n          (ReactDOMSharedInternals.p = remainingLanes);\n      }\n    }\n    0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\n    ensureRootIsScheduled(root);\n    remainingLanes = root.pendingLanes;\n    0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\n      ? root === rootWithNestedUpdates\n        ? nestedUpdateCount++\n        : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n      : (nestedUpdateCount = 0);\n    flushSyncWorkAcrossRoots_impl(0, !1);\n  }\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPendingEffects(wasDelayedCommit) {\n  flushMutationEffects();\n  flushLayoutEffects();\n  flushSpawnedWork();\n  return flushPassiveEffects(wasDelayedCommit);\n}\nfunction flushPassiveEffects() {\n  if (5 !== pendingEffectsStatus) return !1;\n  var root = pendingEffectsRoot,\n    remainingLanes = pendingEffectsRemainingLanes;\n  pendingEffectsRemainingLanes = 0;\n  var renderPriority = lanesToEventPriority(pendingEffectsLanes),\n    prevTransition = ReactSharedInternals.T,\n    previousPriority = ReactDOMSharedInternals.p;\n  try {\n    ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n    ReactSharedInternals.T = null;\n    renderPriority = pendingPassiveTransitions;\n    pendingPassiveTransitions = null;\n    var root$jscomp$0 = pendingEffectsRoot,\n      lanes = pendingEffectsLanes;\n    pendingEffectsStatus = 0;\n    pendingFinishedWork = pendingEffectsRoot = null;\n    pendingEffectsLanes = 0;\n    if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(331));\n    var prevExecutionContext = executionContext;\n    executionContext |= 4;\n    commitPassiveUnmountOnFiber(root$jscomp$0.current);\n    commitPassiveMountOnFiber(\n      root$jscomp$0,\n      root$jscomp$0.current,\n      lanes,\n      renderPriority\n    );\n    executionContext = prevExecutionContext;\n    flushSyncWorkAcrossRoots_impl(0, !1);\n    if (\n      injectedHook &&\n      \"function\" === typeof injectedHook.onPostCommitFiberRoot\n    )\n      try {\n        injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\n      } catch (err) {}\n    return !0;\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition),\n      releaseRootPooledCache(root, remainingLanes);\n  }\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$174 = firstScheduledRoot; null !== root$174; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$174.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$174.suspendedLanes,\n                pingedLanes = root$174.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326741\n                  ? (JSCompiler_inline_result & 201326741) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$174,\n                root$174 === workInProgressRoot ? JSCompiler_inline_result : 0,\n                null !== root$174.cancelPendingCommit ||\n                  -1 !== root$174.timeoutHandle\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$174, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n        root$174 = root$174.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInImmediateTask() {\n  processRootScheduleInMicrotask();\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$3 = 31 - clz32(lanes),\n      lane = 1 << index$3,\n      expirationTime = expirationTimes[index$3];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$3] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  if (0 !== pendingEffectsStatus && 5 !== pendingEffectsStatus)\n    return (root.callbackNode = null), (root.callbackPriority = 0), null;\n  var originalCallbackNode = root.callbackNode;\n  if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPendingEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateRootScheduleTask() {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(\n          ImmediatePriority,\n          processRootScheduleInImmediateTask\n        )\n      : processRootScheduleInMicrotask();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1528 = 0;\n  i$jscomp$inline_1528 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1528++\n) {\n  var eventName$jscomp$inline_1529 =\n      simpleEventPluginEvents[i$jscomp$inline_1528],\n    domEventName$jscomp$inline_1530 =\n      eventName$jscomp$inline_1529.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1531 =\n      eventName$jscomp$inline_1529[0].toUpperCase() +\n      eventName$jscomp$inline_1529.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1530,\n    \"on\" + capitalizedEvent$jscomp$inline_1531\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (container === targetContainer) break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (\n              (3 === grandTag || 4 === grandTag) &&\n              nodeTag.stateNode.containerInfo === targetContainer\n            )\n              return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    if (3 === targetFiber.tag) return listeners;\n    targetFiber = targetFiber.return;\n  }\n  return [];\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$188 = props[hasSrc];\n          if (null != propValue$188)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$188;\n                break;\n              case \"type\":\n                propValue = propValue$188;\n                break;\n              case \"checked\":\n                checked = propValue$188;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$188;\n                break;\n              case \"value\":\n                propKey = propValue$188;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$188;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$188)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$188, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$188 in props)\n          props.hasOwnProperty(propValue$188) &&\n            ((hasSrc = props[propValue$188]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$188,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$205 in nextProps) {\n        var propKey = nextProps[propKey$205];\n        lastProp = lastProps[propKey$205];\n        if (\n          nextProps.hasOwnProperty(propKey$205) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$205) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$205,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$205 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$205 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$205\n        ? updateOptions(domElement, !!lastProps, propKey$205, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$205 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$205 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$205, propKey);\n      return;\n    case \"option\":\n      for (var propKey$221 in lastProps)\n        if (\n          ((propKey$205 = lastProps[propKey$221]),\n          lastProps.hasOwnProperty(propKey$221) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$221))\n        )\n          switch (propKey$221) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$221,\n                null,\n                nextProps,\n                propKey$205\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$205 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$205 &&\n                \"function\" !== typeof propKey$205 &&\n                \"symbol\" !== typeof propKey$205;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$226 in lastProps)\n        (propKey$205 = lastProps[propKey$226]),\n          lastProps.hasOwnProperty(propKey$226) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$226) &&\n            setProp(domElement, tag, propKey$226, null, nextProps, propKey$205);\n      for (checked in nextProps)\n        if (\n          ((propKey$205 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$205)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$231 in lastProps)\n          (propKey$205 = lastProps[propKey$231]),\n            lastProps.hasOwnProperty(propKey$231) &&\n              void 0 !== propKey$205 &&\n              !nextProps.hasOwnProperty(propKey$231) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$231,\n                void 0,\n                nextProps,\n                propKey$205\n              );\n        for (defaultChecked in nextProps)\n          (propKey$205 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$205 === propKey ||\n              (void 0 === propKey$205 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$236 in lastProps)\n    (propKey$205 = lastProps[propKey$236]),\n      lastProps.hasOwnProperty(propKey$236) &&\n        null != propKey$205 &&\n        !nextProps.hasOwnProperty(propKey$236) &&\n        setProp(domElement, tag, propKey$236, null, nextProps, propKey$205);\n  for (lastProp in nextProps)\n    (propKey$205 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$205 === propKey ||\n        (null == propKey$205 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$205, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction isSingletonScope(type) {\n  return \"head\" === type;\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    possiblePreambleContribution = 0,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (\n          0 < possiblePreambleContribution &&\n          8 > possiblePreambleContribution\n        ) {\n          node = possiblePreambleContribution;\n          var ownerDocument = parentInstance.ownerDocument;\n          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);\n          node & 2 && releaseSingletonInstance(ownerDocument.body);\n          if (node & 4)\n            for (\n              node = ownerDocument.head,\n                releaseSingletonInstance(node),\n                ownerDocument = node.firstChild;\n              ownerDocument;\n\n            ) {\n              var nextNode$jscomp$0 = ownerDocument.nextSibling,\n                nodeName = ownerDocument.nodeName;\n              ownerDocument[internalHoistableMarker] ||\n                \"SCRIPT\" === nodeName ||\n                \"STYLE\" === nodeName ||\n                (\"LINK\" === nodeName &&\n                  \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\n                node.removeChild(ownerDocument);\n              ownerDocument = nextNode$jscomp$0;\n            }\n        }\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else\n        \"$\" === node || \"$?\" === node || \"$!\" === node\n          ? depth++\n          : (possiblePreambleContribution = node.charCodeAt(0) - 48);\n    else possiblePreambleContribution = 0;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href || \"\" === anyProps.href\n                ? null\n                : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return (\n    \"$!\" === instance.data ||\n    (\"$?\" === instance.data && \"complete\" === instance.ownerDocument.readyState)\n  );\n}\nfunction registerSuspenseInstanceRetry(instance, callback) {\n  var ownerDocument = instance.ownerDocument;\n  if (\"$?\" !== instance.data || \"complete\" === ownerDocument.readyState)\n    callback();\n  else {\n    var listener = function () {\n      callback();\n      ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\n    };\n    ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\n    instance._reactRetry = listener;\n  }\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nvar previousHydratableOnEnteringScopedSingleton = null;\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nfunction releaseSingletonInstance(instance) {\n  for (var attributes = instance.attributes; attributes.length; )\n    instance.removeAttributeNode(attributes[0]);\n  detachDeletedInstance(instance);\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : 9 === container.nodeType\n      ? container\n      : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$244 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$245 = styles$244.get(type);\n        resource$245 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$245 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$244.set(type, resource$245),\n          (styles$244 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$244._p &&\n            ((resource$245.instance = styles$244),\n            (resource$245.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$244 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$245.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$245;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$250 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$250)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$250),\n            markNodeAsHoistable(instance$250),\n            instance$250\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$250 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$250);\n        var linkInstance = instance$250;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$250, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$250, props.precedence, hoistableRoot);\n        return (resource.instance = instance$250);\n      case \"script\":\n        instance$250 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$250)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$250)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane();\n              lane = getBumpedLaneForHydrationByLane(lane);\n              var root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1785 = React.version;\nif (\n  \"19.1.0\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1785\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1785,\n      \"19.1.0\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2256 = {\n  bundleType: 0,\n  version: \"19.1.0\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  reconcilerVersion: \"19.1.0\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2257 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2257.isDisabled &&\n    hook$jscomp$inline_2257.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2257.inject(\n        internals$jscomp$inline_2256\n      )),\n        (injectedHook = hook$jscomp$inline_2257);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  options = isStrictMode;\n  initialChildren.current.lanes = options;\n  markRootUpdated$1(initialChildren, options);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, createDeps, update) {\n  var dispatcher = ReactSharedInternals.H;\n  if (\"function\" === typeof update)\n    throw Error(\n      \"useEffect CRUD overload is not enabled in this build of React.\"\n    );\n  return dispatcher.useEffect(create, createDeps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.1.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.1.0\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"6f746f1f\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb_app\"] = self[\"webpackChunkweb_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT:\n        \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    NOT_AVAILABLE: \"Not Available\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\n\nexport const HttpStatus = {\n    SUCCESS: 200,\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR: 400,\n    CLIENT_ERROR_RANGE_START: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    REQUEST_TIMEOUT: 408,\n    GONE: 410,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR: 500,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVICE_UNAVAILABLE: 503,\n    GATEWAY_TIMEOUT: 504,\n    SERVER_ERROR_RANGE_END: 599,\n    MULTI_SIDED_ERROR: 600,\n} as const;\nexport type HttpStatus = (typeof HttpStatus)[keyof typeof HttpStatus];\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\n\nexport const OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n\n/**\n * Request header names\n */\nexport const HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    CONTENT_LENGTH: \"Content-Length\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n} as const;\nexport type HeaderNames = (typeof HeaderNames)[keyof typeof HeaderNames];\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport const PersistentCacheKeys = {\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n} as const;\nexport type PersistentCacheKeys =\n    (typeof PersistentCacheKeys)[keyof typeof PersistentCacheKeys];\n\n/**\n * String constants related to AAD Authority\n */\nexport const AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n} as const;\nexport type AADAuthorityConstants =\n    (typeof AADAuthorityConstants)[keyof typeof AADAuthorityConstants];\n\n/**\n * Claims request keys\n */\nexport const ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n} as const;\nexport type ClaimsRequestKeys =\n    (typeof ClaimsRequestKeys)[keyof typeof ClaimsRequestKeys];\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n\n/**\n * Allowed values for response_type\n */\nexport const OAuthResponseType = {\n    CODE: \"code\",\n    IDTOKEN_TOKEN: \"id_token token\",\n    IDTOKEN_TOKEN_REFRESHTOKEN: \"id_token token refresh_token\",\n} as const;\nexport type OAuthResponseType =\n    (typeof OAuthResponseType)[keyof typeof OAuthResponseType];\n\n/**\n * allowed values for server response type\n * @deprecated Use ResponseMode instead\n */\nexport const ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n} as const;\nexport type ServerResponseType =\n    (typeof ServerResponseType)[keyof typeof ServerResponseType];\n\n/**\n * allowed values for response_mode\n */\nexport const ResponseMode = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n    FORM_POST: \"form_post\",\n} as const;\nexport type ResponseMode = (typeof ResponseMode)[keyof typeof ResponseMode];\n\n/**\n * allowed grant_type\n */\nexport const GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n} as const;\nexport type GrantType = (typeof GrantType)[keyof typeof GrantType];\n\n/**\n * Account types in Cache\n */\nexport const CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n} as const;\nexport type CacheAccountType =\n    (typeof CacheAccountType)[keyof typeof CacheAccountType];\n\n/**\n * Separators used in cache\n */\nexport const Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n} as const;\nexport type Separators = (typeof Separators)[keyof typeof Separators];\n\n/**\n * Credential Type stored in the cache\n */\nexport const CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n} as const;\nexport type CredentialType =\n    (typeof CredentialType)[keyof typeof CredentialType];\n\n/**\n * Combine all cache types\n */\nexport const CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n} as const;\nexport type CacheType = (typeof CacheType)[keyof typeof CacheType];\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\n\nexport const AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n} as const;\nexport type AuthorityMetadataSource =\n    (typeof AuthorityMetadataSource)[keyof typeof AuthorityMetadataSource];\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n\n/**\n * Type of the authentication request\n */\nexport const AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n} as const;\nexport type AuthenticationScheme =\n    (typeof AuthenticationScheme)[keyof typeof AuthenticationScheme];\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport const PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n} as const;\nexport type PasswordGrantConstants =\n    (typeof PasswordGrantConstants)[keyof typeof PasswordGrantConstants];\n\n/**\n * Region Discovery Sources\n */\nexport const RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n} as const;\nexport type RegionDiscoverySources =\n    (typeof RegionDiscoverySources)[keyof typeof RegionDiscoverySources];\n\n/**\n * Region Discovery Outcomes\n */\nexport const RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n} as const;\nexport type RegionDiscoveryOutcomes =\n    (typeof RegionDiscoveryOutcomes)[keyof typeof RegionDiscoveryOutcomes];\n\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nexport const CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n} as const;\nexport type CacheOutcome = (typeof CacheOutcome)[keyof typeof CacheOutcome];\n\nexport const JsonWebTokenTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n} as const;\nexport type JsonWebTokenTypes =\n    (typeof JsonWebTokenTypes)[keyof typeof JsonWebTokenTypes];\n\nexport const ONE_DAY_IN_MS = 86400000;\n\n// Token renewal offset default in seconds\nexport const DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\nexport const EncodingTypes = {\n    BASE64: \"base64\",\n    HEX: \"hex\",\n    UTF8: \"utf-8\",\n} as const;\nexport type EncodingTypes = (typeof EncodingTypes)[keyof typeof EncodingTypes];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const unexpectedError = \"unexpected_error\";\nexport const postRequestFailed = \"post_request_failed\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants.js\";\nimport * as AuthErrorCodes from \"./AuthErrorCodes.js\";\nexport { AuthErrorCodes };\n\nexport const AuthErrorMessages = {\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\n    [AuthErrorCodes.postRequestFailed]:\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: AuthErrorCodes.unexpectedError,\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\n    },\n    postRequestFailed: {\n        code: AuthErrorCodes.postRequestFailed,\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n}\n\nexport function createAuthError(\n    code: string,\n    additionalMessage?: string\n): AuthError {\n    return new AuthError(\n        code,\n        additionalMessage\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\n            : AuthErrorMessages[code]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const storageNotSupported = \"storage_not_supported\";\nexport const stubbedPublicClientApplicationCalled =\n    \"stubbed_public_client_application_called\";\nexport const inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common/browser\";\nimport * as BrowserConfigurationAuthErrorCodes from \"./BrowserConfigurationAuthErrorCodes.js\";\nexport { BrowserConfigurationAuthErrorCodes };\n\nexport const BrowserConfigurationAuthErrorMessages = {\n    [BrowserConfigurationAuthErrorCodes.storageNotSupported]:\n        \"Given storage configuration option was not supported.\",\n    [BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled]:\n        \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable]:\n        \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: BrowserConfigurationAuthErrorCodes.storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.storageNotSupported\n        ],\n    },\n    stubPcaInstanceCalled: {\n        code: BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes\n                .stubbedPublicClientApplicationCalled\n        ],\n    },\n    inMemRedirectUnavailable: {\n        code: BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\n\nexport function createBrowserConfigurationAuthError(\n    errorCode: string\n): BrowserConfigurationAuthError {\n    return new BrowserConfigurationAuthError(\n        errorCode,\n        BrowserConfigurationAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    AccountInfo,\n    Logger,\n    PerformanceCallbackFunction,\n} from \"@azure/msal-common/browser\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError.js\";\nimport { WrapperSKU } from \"../utils/BrowserConstants.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { EventCallbackFunction } from \"../event/EventMessage.js\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\nimport { EventType } from \"../event/EventType.js\";\n\nexport interface IPublicClientApplication {\n    // TODO: Make request mandatory in the next major version?\n    initialize(request?: InitializeApplicationRequest): Promise<void>;\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult>;\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult>;\n    addEventCallback(\n        callback: EventCallbackFunction,\n        eventTypes?: Array<EventType>\n    ): string | null;\n    removeEventCallback(callbackId: string): void;\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\n    removePerformanceCallback(callbackId: string): boolean;\n    enableAccountStorageEvents(): void;\n    disableAccountStorageEvents(): void;\n    getAccount(accountFilter: AccountFilter): AccountInfo | null;\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\n    getAccountByLocalId(localId: string): AccountInfo | null;\n    getAccountByUsername(userName: string): AccountInfo | null;\n    getAllAccounts(): AccountInfo[];\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Promise<void>;\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\n    getTokenCache(): ITokenCache;\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n    setActiveAccount(account: AccountInfo | null): void;\n    getActiveAccount(): AccountInfo | null;\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\n    setNavigationClient(navigationClient: INavigationClient): void;\n    /** @internal */\n    getConfiguration(): BrowserConfiguration;\n    hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void>;\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void>;\n}\n\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenSilent: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    getAllAccounts: () => {\n        return [];\n    },\n    getAccount: () => {\n        return null;\n    },\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\n        return null;\n    },\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    loginPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    loginRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logout: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logoutRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logoutPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    ssoSilent: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    getLogger: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    hydrateCache: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    clearCache: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common/browser\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport const PlatformAuthConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n    MICROSOFT_ENTRA_BROKERID: \"MicrosoftEntra\",\n    DOM_API_NAME: \"DOM API\",\n    PLATFORM_DOM_APIS: \"get-token-and-sign-out\",\n    PLATFORM_DOM_PROVIDER: \"PlatformAuthDOMHandler\",\n    PLATFORM_EXTENSION_PROVIDER: \"PlatformAuthExtensionHandler\",\n};\n\nexport const NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n} as const;\nexport type NativeExtensionMethod =\n    (typeof NativeExtensionMethod)[keyof typeof NativeExtensionMethod];\n\nexport const BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n} as const;\nexport type BrowserCacheLocation =\n    (typeof BrowserCacheLocation)[keyof typeof BrowserCacheLocation];\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport const HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n} as const;\nexport type HTTP_REQUEST_TYPE =\n    (typeof HTTP_REQUEST_TYPE)[keyof typeof HTTP_REQUEST_TYPE];\n\nexport const INTERACTION_TYPE = {\n    SIGNIN: \"signin\",\n    SIGNOUT: \"signout\",\n} as const;\nexport type INTERACTION_TYPE =\n    (typeof INTERACTION_TYPE)[keyof typeof INTERACTION_TYPE];\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport const TemporaryCacheKeys = {\n    ORIGIN_URI: \"request.origin\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    VERIFIER: \"code.verifier\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    NATIVE_REQUEST: \"request.native\",\n} as const;\nexport type TemporaryCacheKeys =\n    (typeof TemporaryCacheKeys)[keyof typeof TemporaryCacheKeys];\n\nexport const StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n    VERSION: \"msal.version\",\n} as const;\nexport type StaticCacheKeys =\n    (typeof StaticCacheKeys)[keyof typeof StaticCacheKeys];\n\n/**\n * Cache keys stored in-memory\n */\nexport const InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n} as const;\nexport type InMemoryCacheKeys =\n    (typeof InMemoryCacheKeys)[keyof typeof InMemoryCacheKeys];\n\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport const ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n} as const;\nexport type ApiId = (typeof ApiId)[keyof typeof ApiId];\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\",\n    None = \"none\",\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport const InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n} as const;\nexport type InteractionStatus =\n    (typeof InteractionStatus)[keyof typeof InteractionStatus];\n\nexport const DEFAULT_REQUEST: RedirectRequest | PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES,\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport const WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n} as const;\nexport type WrapperSKU = (typeof WrapperSKU)[keyof typeof WrapperSKU];\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n\nexport const CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0, // 0 is falsy, is equivalent to not passing in a CacheLookupPolicy\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n} as const;\nexport type CacheLookupPolicy =\n    (typeof CacheLookupPolicy)[keyof typeof CacheLookupPolicy];\n\nexport const iFrameRenewalPolicies: CacheLookupPolicy[] = [\n    CacheLookupPolicy.Default,\n    CacheLookupPolicy.Skip,\n    CacheLookupPolicy.RefreshTokenAndNetwork,\n];\n\nexport const LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\nexport const LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\n\nexport const BROWSER_PERF_ENABLED_KEY = \"msal.browser.performance.enabled\";\n\nexport const PLATFORM_AUTH_DOM_SUPPORT = \"msal.browser.platform.auth.dom\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { LoggerOptions } from \"../config/ClientConfiguration.js\";\nimport { Constants } from \"../utils/Constants.js\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel;\n    containsPii?: boolean;\n    context?: string;\n    correlationId?: string;\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace,\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(\n        loggerOptions: LoggerOptions,\n        packageName?: string,\n        packageVersion?: string\n    ) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions =\n            loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    private static createDefaultLoggerOptions(): LoggerOptions {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(\n        packageName: string,\n        packageVersion: string,\n        correlationId?: string\n    ): Logger {\n        return new Logger(\n            {\n                loggerCallback: this.localCallback,\n                piiLoggingEnabled: this.piiLoggingEnabled,\n                logLevel: this.level,\n                correlationId: correlationId || this.correlationId,\n            },\n            packageName,\n            packageVersion\n        );\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(\n        logMessage: string,\n        options: LoggerMessageOptions\n    ): void {\n        if (\n            options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)\n        ) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${\n            options.correlationId || this.correlationId || \"\"\n        }]`;\n\n        const log = `${logHeader} : ${this.packageName}@${\n            this.packageVersion\n        } : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(\n            options.logLevel,\n            log,\n            options.containsPii || false\n        );\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(\n        level: LogLevel,\n        message: string,\n        containsPii: boolean\n    ): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as React from \"react\";\nimport {\n    IPublicClientApplication,\n    stubbedPublicClientApplication,\n    Logger,\n    InteractionStatus,\n    AccountInfo,\n} from \"@azure/msal-browser\";\n\nexport interface IMsalContext {\n    instance: IPublicClientApplication;\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n    logger: Logger;\n}\n\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext: IMsalContext = {\n    instance: stubbedPublicClientApplication,\n    inProgress: InteractionStatus.None,\n    accounts: [],\n    logger: new Logger({}),\n};\n\nexport const MsalContext =\n    React.createContext<IMsalContext>(defaultMsalContext);\nexport const MsalConsumer = MsalContext.Consumer;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    ACTIVE_ACCOUNT_CHANGED: \"msal:activeAccountChanged\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n    BROKER_CONNECTION_ESTABLISHED: \"msal:brokerConnectionEstablished\",\n} as const;\nexport type EventType = (typeof EventType)[keyof typeof EventType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, AccountInfo } from \"@azure/msal-common/browser\";\nimport { EventType } from \"./EventType.js\";\nimport {\n    InteractionStatus,\n    InteractionType,\n} from \"../utils/BrowserConstants.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\n\nexport type EventMessage = {\n    eventType: EventType;\n    interactionType: InteractionType | null;\n    payload: EventPayload;\n    error: EventError;\n    timestamp: number;\n};\n\nexport type PopupEvent = {\n    popupWindow: Window;\n};\n\n/**\n * Payload for the BrokerConnectionEstablished event\n */\nexport type BrokerConnectionEvent = {\n    /**\n     * The origin of the broker that is connected to the client\n     */\n    pairwiseBrokerOrigin: string;\n};\n\nexport type EventPayload =\n    | AccountInfo\n    | PopupRequest\n    | RedirectRequest\n    | SilentRequest\n    | SsoSilentRequest\n    | EndSessionRequest\n    | AuthenticationResult\n    | PopupEvent\n    | BrokerConnectionEvent\n    | null;\n\nexport type EventError = AuthError | Error | null;\n\nexport type EventCallbackFunction = (message: EventMessage) => void;\n\nexport class EventMessageUtils {\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(\n        message: EventMessage,\n        currentStatus?: InteractionStatus\n    ): InteractionStatus | null {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (\n                    message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup\n                ) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (\n                    currentStatus &&\n                    currentStatus !== InteractionStatus.SsoSilent\n                ) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (\n                    currentStatus &&\n                    currentStatus !== InteractionStatus.Logout\n                ) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (\n                    currentStatus &&\n                    currentStatus !== InteractionStatus.HandleRedirect\n                ) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n            case EventType.RESTORE_FROM_BFCACHE:\n                if (\n                    message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup\n                ) {\n                    if (\n                        currentStatus &&\n                        currentStatus !== InteractionStatus.Login &&\n                        currentStatus !== InteractionStatus.AcquireToken\n                    ) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n            default:\n                break;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers.js\";\nimport { AccountInfo } from \"@azure/msal-browser\";\n\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\n\nexport function getChildrenOrFunction<T>(\n    children: React.ReactNode | FaaCFunction,\n    args: T\n): React.ReactNode {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n\n/*\n * Utility types\n * Reference: https://github.com/piotrwitek/utility-types\n */\nexport type SetDifference<A, B> = A extends B ? never : A;\nexport type SetComplement<A, A1 extends A> = SetDifference<A, A1>;\nexport type Subtract<T extends T1, T1 extends object> = Pick<\n    T,\n    SetComplement<keyof T, keyof T1>\n>;\n\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA\n * @param arrayB\n */\nexport function accountArraysAreEqual(\n    arrayA: Array<AccountIdentifiers>,\n    arrayB: Array<AccountIdentifiers>\n): boolean {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    const comparisonArray = [...arrayB];\n\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n\n        return (\n            elementA.homeAccountId === elementB.homeAccountId &&\n            elementA.localAccountId === elementB.localAccountId &&\n            elementA.username === elementB.username\n        );\n    });\n}\n\nexport function getAccountByIdentifiers(\n    allAccounts: AccountInfo[],\n    accountIdentifiers: AccountIdentifiers\n): AccountInfo | null {\n    if (\n        allAccounts.length > 0 &&\n        (accountIdentifiers.homeAccountId ||\n            accountIdentifiers.localAccountId ||\n            accountIdentifiers.username)\n    ) {\n        const matchedAccounts = allAccounts.filter((accountObj) => {\n            if (\n                accountIdentifiers.username &&\n                accountIdentifiers.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()\n            ) {\n                return false;\n            }\n            if (\n                accountIdentifiers.homeAccountId &&\n                accountIdentifiers.homeAccountId.toLowerCase() !==\n                    accountObj.homeAccountId.toLowerCase()\n            ) {\n                return false;\n            }\n            if (\n                accountIdentifiers.localAccountId &&\n                accountIdentifiers.localAccountId.toLowerCase() !==\n                    accountObj.localAccountId.toLowerCase()\n            ) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return matchedAccounts[0] || null;\n    } else {\n        return null;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-react\";\nexport const version = \"3.0.12\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, {\n    useEffect,\n    useReducer,\n    PropsWithChildren,\n    useMemo,\n} from \"react\";\nimport {\n    IPublicClientApplication,\n    EventMessage,\n    EventMessageUtils,\n    InteractionStatus,\n    Logger,\n    WrapperSKU,\n    AccountInfo,\n} from \"@azure/msal-browser\";\nimport { MsalContext, IMsalContext } from \"./MsalContext.js\";\nimport { accountArraysAreEqual } from \"./utils/utilities.js\";\nimport { name as SKU, version } from \"./packageMetadata.js\";\n\nexport type MsalProviderProps = PropsWithChildren<{\n    instance: IPublicClientApplication;\n}>;\n\ntype MsalState = {\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n};\n\nconst MsalProviderActionType = {\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\n    EVENT: \"EVENT\",\n} as const;\ntype MsalProviderActionType =\n    (typeof MsalProviderActionType)[keyof typeof MsalProviderActionType];\n\ntype MsalProviderReducerAction = {\n    type: MsalProviderActionType;\n    payload: {\n        logger: Logger;\n        instance: IPublicClientApplication;\n        message?: EventMessage;\n    };\n};\n\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState\n * @param action\n */\nconst reducer = (\n    previousState: MsalState,\n    action: MsalProviderReducerAction\n): MsalState => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === InteractionStatus.Startup) {\n                newInProgress = InteractionStatus.None;\n                payload.logger.info(\n                    \"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\"\n                );\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message as EventMessage;\n            const status = EventMessageUtils.getInteractionStatusFromEvent(\n                message,\n                previousState.inProgress\n            );\n            if (status) {\n                payload.logger.info(\n                    `MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`\n                );\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n\n    if (newInProgress === InteractionStatus.Startup) {\n        // Can't start checking accounts until initialization is complete\n        return previousState;\n    }\n\n    const currentAccounts = payload.instance.getAllAccounts();\n    if (\n        newInProgress !== previousState.inProgress &&\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)\n    ) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts,\n        };\n    } else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n        };\n    } else if (\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)\n    ) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts,\n        };\n    } else {\n        // Nothing changed\n        return previousState;\n    }\n};\n\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nexport function MsalProvider({\n    instance,\n    children,\n}: MsalProviderProps): React.ReactElement {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = useMemo(() => {\n        return instance.getLogger().clone(SKU, version);\n    }, [instance]);\n\n    const [state, updateState] = useReducer(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: InteractionStatus.Startup,\n            accounts: [],\n        };\n    });\n\n    useEffect(() => {\n        const callbackId = instance.addEventCallback(\n            (message: EventMessage) => {\n                updateState({\n                    payload: {\n                        instance,\n                        logger,\n                        message,\n                    },\n                    type: MsalProviderActionType.EVENT,\n                });\n            }\n        );\n        logger.verbose(\n            `MsalProvider - Registered event callback with id: ${callbackId}`\n        );\n\n        instance\n            .initialize()\n            .then(() => {\n                instance\n                    .handleRedirectPromise()\n                    .catch(() => {\n                        // Errors should be handled by listening to the LOGIN_FAILURE event\n                        return;\n                    })\n                    .finally(() => {\n                        /*\n                         * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                         * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                         */\n                        updateState({\n                            payload: {\n                                instance,\n                                logger,\n                            },\n                            type: MsalProviderActionType.UNBLOCK_INPROGRESS,\n                        });\n                    });\n            })\n            .catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            });\n\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(\n                    `MsalProvider - Removing event callback ${callbackId}`\n                );\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n\n    const contextValue: IMsalContext = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger,\n    };\n\n    return (\n        <MsalContext.Provider value={contextValue}>\n            {children}\n        </MsalContext.Provider>\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useContext } from \"react\";\nimport { IMsalContext, MsalContext } from \"../MsalContext.js\";\n\n/**\n * Returns Msal Context values\n */\nexport const useMsal = (): IMsalContext => useContext(MsalContext);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\nimport { IMsalContext } from \"../MsalContext.js\";\nimport { useMsal } from \"../hooks/useMsal.js\";\nimport { Subtract } from \"../utils/utilities.js\";\n\nexport type WithMsalProps = {\n    msalContext: IMsalContext;\n};\n\n/**\n * Higher order component wraps provided component with msal by injecting msal context values into the component's props\n * @param Component\n */\nexport const withMsal = <P extends WithMsalProps>(\n    Component: React.ComponentType<P>\n): React.FunctionComponent<Subtract<P, WithMsalProps>> => {\n    const ComponentWithMsal: React.FunctionComponent<\n        Subtract<P, WithMsalProps>\n    > = (props) => {\n        const msal = useMsal();\n        return <Component {...(props as P)} msalContext={msal} />;\n    };\n\n    const componentName =\n        Component.displayName || Component.name || \"Component\";\n    ComponentWithMsal.displayName = `withMsal(${componentName})`;\n\n    return ComponentWithMsal;\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport const ProtocolMode = {\n    /**\n     * Auth Code + PKCE with Entra ID (formerly AAD) specific optimizations and features\n     */\n    AAD: \"AAD\",\n    /**\n     * Auth Code + PKCE without Entra ID specific optimizations and features. For use only with non-Microsoft owned authorities.\n     * Support is limited for this mode.\n     */\n    OIDC: \"OIDC\",\n    /**\n     * Encrypted Authorize Response (EAR) with Entra ID specific optimizations and features\n     */\n    EAR: \"EAR\",\n} as const;\nexport type ProtocolMode = (typeof ProtocolMode)[keyof typeof ProtocolMode];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode.js\";\nimport { OIDCOptions } from \"./OIDCOptions.js\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration.js\";\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse.js\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    OIDCOptions?: OIDCOptions | null;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n    authority?: string;\n};\n\nexport type StaticAuthorityOptions = Partial<\n    Pick<AuthorityOptions, \"knownAuthorities\">\n> & {\n    canonicalAuthority?: string;\n    cloudDiscoveryMetadata?: CloudInstanceDiscoveryResponse;\n};\n\nexport const AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n} as const;\nexport type AzureCloudInstance =\n    (typeof AzureCloudInstance)[keyof typeof AzureCloudInstance];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const clientInfoDecodingError = \"client_info_decoding_error\";\nexport const clientInfoEmptyError = \"client_info_empty_error\";\nexport const tokenParsingError = \"token_parsing_error\";\nexport const nullOrEmptyToken = \"null_or_empty_token\";\nexport const endpointResolutionError = \"endpoints_resolution_error\";\nexport const networkError = \"network_error\";\nexport const openIdConfigError = \"openid_config_error\";\nexport const hashNotDeserialized = \"hash_not_deserialized\";\nexport const invalidState = \"invalid_state\";\nexport const stateMismatch = \"state_mismatch\";\nexport const stateNotFound = \"state_not_found\";\nexport const nonceMismatch = \"nonce_mismatch\";\nexport const authTimeNotFound = \"auth_time_not_found\";\nexport const maxAgeTranspired = \"max_age_transpired\";\nexport const multipleMatchingTokens = \"multiple_matching_tokens\";\nexport const multipleMatchingAccounts = \"multiple_matching_accounts\";\nexport const multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nexport const requestCannotBeMade = \"request_cannot_be_made\";\nexport const cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nexport const cannotAppendScopeSet = \"cannot_append_scopeset\";\nexport const emptyInputScopeSet = \"empty_input_scopeset\";\nexport const deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nexport const deviceCodeExpired = \"device_code_expired\";\nexport const deviceCodeUnknownError = \"device_code_unknown_error\";\nexport const noAccountInSilentRequest = \"no_account_in_silent_request\";\nexport const invalidCacheRecord = \"invalid_cache_record\";\nexport const invalidCacheEnvironment = \"invalid_cache_environment\";\nexport const noAccountFound = \"no_account_found\";\nexport const noCryptoObject = \"no_crypto_object\";\nexport const unexpectedCredentialType = \"unexpected_credential_type\";\nexport const invalidAssertion = \"invalid_assertion\";\nexport const invalidClientCredential = \"invalid_client_credential\";\nexport const tokenRefreshRequired = \"token_refresh_required\";\nexport const userTimeoutReached = \"user_timeout_reached\";\nexport const tokenClaimsCnfRequiredForSignedJwt =\n    \"token_claims_cnf_required_for_signedjwt\";\nexport const authorizationCodeMissingFromServerResponse =\n    \"authorization_code_missing_from_server_response\";\nexport const bindingKeyNotRemoved = \"binding_key_not_removed\";\nexport const endSessionEndpointNotSupported =\n    \"end_session_endpoint_not_supported\";\nexport const keyIdMissing = \"key_id_missing\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const userCanceled = \"user_canceled\";\nexport const missingTenantIdError = \"missing_tenant_id_error\";\nexport const methodNotImplemented = \"method_not_implemented\";\nexport const nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError.js\";\nimport * as ClientAuthErrorCodes from \"./ClientAuthErrorCodes.js\";\nexport { ClientAuthErrorCodes }; // Allow importing as \"ClientAuthErrorCodes\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\n\nexport const ClientAuthErrorMessages = {\n    [ClientAuthErrorCodes.clientInfoDecodingError]:\n        \"The client info could not be parsed/decoded correctly\",\n    [ClientAuthErrorCodes.clientInfoEmptyError]: \"The client info was empty\",\n    [ClientAuthErrorCodes.tokenParsingError]: \"Token cannot be parsed\",\n    [ClientAuthErrorCodes.nullOrEmptyToken]: \"The token is null or empty\",\n    [ClientAuthErrorCodes.endpointResolutionError]:\n        \"Endpoints cannot be resolved\",\n    [ClientAuthErrorCodes.networkError]: \"Network request failed\",\n    [ClientAuthErrorCodes.openIdConfigError]:\n        \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [ClientAuthErrorCodes.hashNotDeserialized]:\n        \"The hash parameters could not be deserialized\",\n    [ClientAuthErrorCodes.invalidState]: \"State was not the expected format\",\n    [ClientAuthErrorCodes.stateMismatch]: \"State mismatch error\",\n    [ClientAuthErrorCodes.stateNotFound]: \"State not found\",\n    [ClientAuthErrorCodes.nonceMismatch]: \"Nonce mismatch error\",\n    [ClientAuthErrorCodes.authTimeNotFound]:\n        \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [ClientAuthErrorCodes.maxAgeTranspired]:\n        \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [ClientAuthErrorCodes.multipleMatchingTokens]:\n        \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [ClientAuthErrorCodes.multipleMatchingAccounts]:\n        \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [ClientAuthErrorCodes.multipleMatchingAppMetadata]:\n        \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [ClientAuthErrorCodes.requestCannotBeMade]:\n        \"Token request cannot be made without authorization code or refresh token.\",\n    [ClientAuthErrorCodes.cannotRemoveEmptyScope]:\n        \"Cannot remove null or empty scope from ScopeSet\",\n    [ClientAuthErrorCodes.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [ClientAuthErrorCodes.emptyInputScopeSet]:\n        \"Empty input ScopeSet cannot be processed\",\n    [ClientAuthErrorCodes.deviceCodePollingCancelled]:\n        \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [ClientAuthErrorCodes.deviceCodeExpired]: \"Device code is expired.\",\n    [ClientAuthErrorCodes.deviceCodeUnknownError]:\n        \"Device code stopped polling for unknown reasons.\",\n    [ClientAuthErrorCodes.noAccountInSilentRequest]:\n        \"Please pass an account object, silent flow is not supported without account information\",\n    [ClientAuthErrorCodes.invalidCacheRecord]:\n        \"Cache record object was null or undefined.\",\n    [ClientAuthErrorCodes.invalidCacheEnvironment]:\n        \"Invalid environment when attempting to create cache entry\",\n    [ClientAuthErrorCodes.noAccountFound]:\n        \"No account found in cache for given key.\",\n    [ClientAuthErrorCodes.noCryptoObject]: \"No crypto object detected.\",\n    [ClientAuthErrorCodes.unexpectedCredentialType]:\n        \"Unexpected credential type.\",\n    [ClientAuthErrorCodes.invalidAssertion]:\n        \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [ClientAuthErrorCodes.invalidClientCredential]:\n        \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [ClientAuthErrorCodes.tokenRefreshRequired]:\n        \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [ClientAuthErrorCodes.userTimeoutReached]:\n        \"User defined timeout for device code polling reached\",\n    [ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt]:\n        \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse]:\n        \"Server response does not contain an authorization code to proceed\",\n    [ClientAuthErrorCodes.bindingKeyNotRemoved]:\n        \"Could not remove the credential's binding key from storage.\",\n    [ClientAuthErrorCodes.endSessionEndpointNotSupported]:\n        \"The provided authority does not support logout\",\n    [ClientAuthErrorCodes.keyIdMissing]:\n        \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [ClientAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [ClientAuthErrorCodes.userCanceled]: \"User cancelled the flow.\",\n    [ClientAuthErrorCodes.missingTenantIdError]:\n        \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [ClientAuthErrorCodes.methodNotImplemented]:\n        \"This method has not been implemented\",\n    [ClientAuthErrorCodes.nestedAppAuthBridgeDisabled]:\n        \"The nested app auth bridge is disabled\",\n};\n\n/**\n * String constants used by error codes and messages.\n * @deprecated Use ClientAuthErrorCodes instead\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: ClientAuthErrorCodes.clientInfoDecodingError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoDecodingError\n        ],\n    },\n    clientInfoEmptyError: {\n        code: ClientAuthErrorCodes.clientInfoEmptyError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoEmptyError\n        ],\n    },\n    tokenParsingError: {\n        code: ClientAuthErrorCodes.tokenParsingError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.tokenParsingError],\n    },\n    nullOrEmptyToken: {\n        code: ClientAuthErrorCodes.nullOrEmptyToken,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nullOrEmptyToken],\n    },\n    endpointResolutionError: {\n        code: ClientAuthErrorCodes.endpointResolutionError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endpointResolutionError\n        ],\n    },\n    networkError: {\n        code: ClientAuthErrorCodes.networkError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.networkError],\n    },\n    unableToGetOpenidConfigError: {\n        code: ClientAuthErrorCodes.openIdConfigError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.openIdConfigError],\n    },\n    hashNotDeserialized: {\n        code: ClientAuthErrorCodes.hashNotDeserialized,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.hashNotDeserialized],\n    },\n    invalidStateError: {\n        code: ClientAuthErrorCodes.invalidState,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidState],\n    },\n    stateMismatchError: {\n        code: ClientAuthErrorCodes.stateMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateMismatch],\n    },\n    stateNotFoundError: {\n        code: ClientAuthErrorCodes.stateNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateNotFound],\n    },\n    nonceMismatchError: {\n        code: ClientAuthErrorCodes.nonceMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nonceMismatch],\n    },\n    authTimeNotFoundError: {\n        code: ClientAuthErrorCodes.authTimeNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.authTimeNotFound],\n    },\n    maxAgeTranspired: {\n        code: ClientAuthErrorCodes.maxAgeTranspired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.maxAgeTranspired],\n    },\n    multipleMatchingTokens: {\n        code: ClientAuthErrorCodes.multipleMatchingTokens,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingTokens\n        ],\n    },\n    multipleMatchingAccounts: {\n        code: ClientAuthErrorCodes.multipleMatchingAccounts,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAccounts\n        ],\n    },\n    multipleMatchingAppMetadata: {\n        code: ClientAuthErrorCodes.multipleMatchingAppMetadata,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAppMetadata\n        ],\n    },\n    tokenRequestCannotBeMade: {\n        code: ClientAuthErrorCodes.requestCannotBeMade,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.requestCannotBeMade],\n    },\n    removeEmptyScopeError: {\n        code: ClientAuthErrorCodes.cannotRemoveEmptyScope,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotRemoveEmptyScope\n        ],\n    },\n    appendScopeSetError: {\n        code: ClientAuthErrorCodes.cannotAppendScopeSet,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotAppendScopeSet\n        ],\n    },\n    emptyInputScopeSetError: {\n        code: ClientAuthErrorCodes.emptyInputScopeSet,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.emptyInputScopeSet],\n    },\n    DeviceCodePollingCancelled: {\n        code: ClientAuthErrorCodes.deviceCodePollingCancelled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodePollingCancelled\n        ],\n    },\n    DeviceCodeExpired: {\n        code: ClientAuthErrorCodes.deviceCodeExpired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.deviceCodeExpired],\n    },\n    DeviceCodeUnknownError: {\n        code: ClientAuthErrorCodes.deviceCodeUnknownError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodeUnknownError\n        ],\n    },\n    NoAccountInSilentRequest: {\n        code: ClientAuthErrorCodes.noAccountInSilentRequest,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noAccountInSilentRequest\n        ],\n    },\n    invalidCacheRecord: {\n        code: ClientAuthErrorCodes.invalidCacheRecord,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidCacheRecord],\n    },\n    invalidCacheEnvironment: {\n        code: ClientAuthErrorCodes.invalidCacheEnvironment,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidCacheEnvironment\n        ],\n    },\n    noAccountFound: {\n        code: ClientAuthErrorCodes.noAccountFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noAccountFound],\n    },\n    noCryptoObj: {\n        code: ClientAuthErrorCodes.noCryptoObject,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noCryptoObject],\n    },\n    unexpectedCredentialType: {\n        code: ClientAuthErrorCodes.unexpectedCredentialType,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.unexpectedCredentialType\n        ],\n    },\n    invalidAssertion: {\n        code: ClientAuthErrorCodes.invalidAssertion,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidAssertion],\n    },\n    invalidClientCredential: {\n        code: ClientAuthErrorCodes.invalidClientCredential,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidClientCredential\n        ],\n    },\n    tokenRefreshRequired: {\n        code: ClientAuthErrorCodes.tokenRefreshRequired,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenRefreshRequired\n        ],\n    },\n    userTimeoutReached: {\n        code: ClientAuthErrorCodes.userTimeoutReached,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userTimeoutReached],\n    },\n    tokenClaimsRequired: {\n        code: ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n        ],\n    },\n    noAuthorizationCodeFromServer: {\n        code: ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n        ],\n    },\n    bindingKeyNotRemovedError: {\n        code: ClientAuthErrorCodes.bindingKeyNotRemoved,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.bindingKeyNotRemoved\n        ],\n    },\n    logoutNotSupported: {\n        code: ClientAuthErrorCodes.endSessionEndpointNotSupported,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endSessionEndpointNotSupported\n        ],\n    },\n    keyIdMissing: {\n        code: ClientAuthErrorCodes.keyIdMissing,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.keyIdMissing],\n    },\n    noNetworkConnectivity: {\n        code: ClientAuthErrorCodes.noNetworkConnectivity,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    userCanceledError: {\n        code: ClientAuthErrorCodes.userCanceled,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userCanceled],\n    },\n    missingTenantIdError: {\n        code: ClientAuthErrorCodes.missingTenantIdError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.missingTenantIdError\n        ],\n    },\n    nestedAppAuthBridgeDisabled: {\n        code: ClientAuthErrorCodes.nestedAppAuthBridgeDisabled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.nestedAppAuthBridgeDisabled\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n    constructor(errorCode: string, additionalMessage?: string) {\n        super(\n            errorCode,\n            additionalMessage\n                ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n                : ClientAuthErrorMessages[errorCode]\n        );\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\n\nexport function createClientAuthError(\n    errorCode: string,\n    additionalMessage?: string\n): ClientAuthError {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport type { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\nimport type { ShrOptions, SignedHttpRequest } from \"./SignedHttpRequest.js\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string;\n    challenge: string;\n};\n\nexport type SignedHttpRequestParameters = Pick<\n    BaseAuthRequest,\n    | \"resourceRequestMethod\"\n    | \"resourceRequestUri\"\n    | \"shrClaims\"\n    | \"shrNonce\"\n    | \"shrOptions\"\n> & {\n    correlationId?: string;\n};\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input\n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input\n     */\n    base64Decode(input: string): string;\n    /**\n     * base64 URL safe encoded string\n     */\n    base64UrlEncode(input: string): string;\n    /**\n     * Stringifies and base64Url encodes input public key\n     * @param inputKid\n     * @returns Base64Url encoded public key\n     */\n    encodeKid(inputKid: string): string;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /**\n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken\n     */\n    signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        shrOptions?: ShrOptions,\n        correlationId?: string\n    ): Promise<string>;\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    hashString(plainText: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Decode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Encode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64UrlEncode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    encodeKid: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async clearKeystore(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async signJwt(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async hashString(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-common\";\nexport const version = \"15.7.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims.js\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError.js\";\n\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nexport function extractTokenClaims(\n    encodedToken: string,\n    base64Decode: (input: string) => string\n): TokenClaims {\n    const jswPayload = getJWSPayload(encodedToken);\n\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded) as TokenClaims;\n    } catch (err) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n}\n\n/**\n * decode a JWT\n *\n * @param authToken\n */\nexport function getJWSPayload(authToken: string): string {\n    if (!authToken) {\n        throw createClientAuthError(ClientAuthErrorCodes.nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n\n    return matches[2];\n}\n\n/**\n * Determine if the token's max_age has transpired\n */\nexport function checkMaxAge(authTime: number, maxAge: number): void {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw createClientAuthError(ClientAuthErrorCodes.maxAgeTranspired);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility functions for managing date and time operations.\n */\n\n/**\n * return the current time in Unix time (seconds).\n */\nexport function nowSeconds(): number {\n    // Date.getTime() returns in milliseconds.\n    return Math.round(new Date().getTime() / 1000.0);\n}\n\n/**\n * Converts JS Date object to seconds\n * @param date Date\n */\nexport function toSecondsFromDate(date: Date): number {\n    // Convert date to seconds\n    return date.getTime() / 1000;\n}\n\n/**\n * Convert seconds to JS Date object. Seconds can be in a number or string format or undefined (will still return a date).\n * @param seconds\n */\nexport function toDateFromSeconds(seconds: number | string | undefined): Date {\n    if (seconds) {\n        return new Date(Number(seconds) * 1000);\n    }\n    return new Date();\n}\n\n/**\n * check if a token is expired based on given UTC time in seconds.\n * @param expiresOn\n */\nexport function isTokenExpired(expiresOn: string, offset: number): boolean {\n    // check for access token expiry\n    const expirationSec = Number(expiresOn) || 0;\n    const offsetCurrentTimeSec = nowSeconds() + offset;\n\n    // If current time + offset is greater than token expiration time, then token is expired.\n    return offsetCurrentTimeSec > expirationSec;\n}\n\n/**\n * If the current time is earlier than the time that a token was cached at, we must discard the token\n * i.e. The system clock was turned back after acquiring the cached token\n * @param cachedAt\n * @param offset\n */\nexport function wasClockTurnedBack(cachedAt: string): boolean {\n    const cachedAtSec = Number(cachedAt);\n\n    return cachedAtSec > nowSeconds();\n}\n\n/**\n * Waits for t number of milliseconds\n * @param t number\n * @param value T\n */\nexport function delay<T>(t: number, value?: T): Promise<T | void> {\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { extractTokenClaims } from \"../../account/AuthToken.js\";\nimport { TokenClaims } from \"../../account/TokenClaims.js\";\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata.js\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../../error/ClientAuthError.js\";\nimport {\n    APP_METADATA,\n    AUTHORITY_METADATA_CONSTANTS,\n    AuthenticationScheme,\n    CredentialType,\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n    ThrottlingConstants,\n} from \"../../utils/Constants.js\";\nimport * as TimeUtils from \"../../utils/TimeUtils.js\";\nimport { AccessTokenEntity } from \"../entities/AccessTokenEntity.js\";\nimport { AppMetadataEntity } from \"../entities/AppMetadataEntity.js\";\nimport { AuthorityMetadataEntity } from \"../entities/AuthorityMetadataEntity.js\";\nimport { CredentialEntity } from \"../entities/CredentialEntity.js\";\nimport { IdTokenEntity } from \"../entities/IdTokenEntity.js\";\nimport { RefreshTokenEntity } from \"../entities/RefreshTokenEntity.js\";\n\n/**\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\n * @param credentialEntity\n * @returns\n */\nexport function generateCredentialKey(\n    credentialEntity: CredentialEntity\n): string {\n    const credentialKey = [\n        generateAccountId(credentialEntity),\n        generateCredentialId(credentialEntity),\n        generateTarget(credentialEntity),\n        generateClaimsHash(credentialEntity),\n        generateScheme(credentialEntity),\n    ];\n\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Create IdTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nexport function createIdTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    idToken: string,\n    clientId: string,\n    tenantId: string\n): IdTokenEntity {\n    const idTokenEntity: IdTokenEntity = {\n        credentialType: CredentialType.ID_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: idToken,\n        realm: tenantId,\n    };\n\n    return idTokenEntity;\n}\n\n/**\n * Create AccessTokenEntity\n * @param homeAccountId\n * @param environment\n * @param accessToken\n * @param clientId\n * @param tenantId\n * @param scopes\n * @param expiresOn\n * @param extExpiresOn\n */\nexport function createAccessTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    accessToken: string,\n    clientId: string,\n    tenantId: string,\n    scopes: string,\n    expiresOn: number,\n    extExpiresOn: number,\n    base64Decode: (input: string) => string,\n    refreshOn?: number,\n    tokenType?: AuthenticationScheme,\n    userAssertionHash?: string,\n    keyId?: string,\n    requestedClaims?: string,\n    requestedClaimsHash?: string\n): AccessTokenEntity {\n    const atEntity: AccessTokenEntity = {\n        homeAccountId: homeAccountId,\n        credentialType: CredentialType.ACCESS_TOKEN,\n        secret: accessToken,\n        cachedAt: TimeUtils.nowSeconds().toString(),\n        expiresOn: expiresOn.toString(),\n        extendedExpiresOn: extExpiresOn.toString(),\n        environment: environment,\n        clientId: clientId,\n        realm: tenantId,\n        target: scopes,\n        tokenType: tokenType || AuthenticationScheme.BEARER,\n    };\n\n    if (userAssertionHash) {\n        atEntity.userAssertionHash = userAssertionHash;\n    }\n\n    if (refreshOn) {\n        atEntity.refreshOn = refreshOn.toString();\n    }\n\n    if (requestedClaims) {\n        atEntity.requestedClaims = requestedClaims;\n        atEntity.requestedClaimsHash = requestedClaimsHash;\n    }\n\n    /*\n     * Create Access Token With Auth Scheme instead of regular access token\n     * Cast to lower to handle \"bearer\" from ADFS\n     */\n    if (\n        atEntity.tokenType?.toLowerCase() !==\n        AuthenticationScheme.BEARER.toLowerCase()\n    ) {\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        switch (atEntity.tokenType) {\n            case AuthenticationScheme.POP:\n                // Make sure keyId is present and add it to credential\n                const tokenClaims: TokenClaims | null = extractTokenClaims(\n                    accessToken,\n                    base64Decode\n                );\n                if (!tokenClaims?.cnf?.kid) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n                    );\n                }\n                atEntity.keyId = tokenClaims.cnf.kid;\n                break;\n            case AuthenticationScheme.SSH:\n                atEntity.keyId = keyId;\n        }\n    }\n\n    return atEntity;\n}\n\n/**\n * Create RefreshTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nexport function createRefreshTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    refreshToken: string,\n    clientId: string,\n    familyId?: string,\n    userAssertionHash?: string,\n    expiresOn?: number\n): RefreshTokenEntity {\n    const rtEntity: RefreshTokenEntity = {\n        credentialType: CredentialType.REFRESH_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: refreshToken,\n    };\n\n    if (userAssertionHash) {\n        rtEntity.userAssertionHash = userAssertionHash;\n    }\n\n    if (familyId) {\n        rtEntity.familyId = familyId;\n    }\n\n    if (expiresOn) {\n        rtEntity.expiresOn = expiresOn.toString();\n    }\n\n    return rtEntity;\n}\n\nexport function isCredentialEntity(entity: object): boolean {\n    return (\n        entity.hasOwnProperty(\"homeAccountId\") &&\n        entity.hasOwnProperty(\"environment\") &&\n        entity.hasOwnProperty(\"credentialType\") &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"secret\")\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAccessTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity.hasOwnProperty(\"target\") &&\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\n            entity[\"credentialType\"] ===\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isIdTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isRefreshTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n    );\n}\n\n/**\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n */\nfunction generateAccountId(credentialEntity: CredentialEntity): string {\n    const accountId: Array<string> = [\n        credentialEntity.homeAccountId,\n        credentialEntity.environment,\n    ];\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n */\nfunction generateCredentialId(credentialEntity: CredentialEntity): string {\n    const clientOrFamilyId =\n        credentialEntity.credentialType === CredentialType.REFRESH_TOKEN\n            ? credentialEntity.familyId || credentialEntity.clientId\n            : credentialEntity.clientId;\n    const credentialId: Array<string> = [\n        credentialEntity.credentialType,\n        clientOrFamilyId,\n        credentialEntity.realm || \"\",\n    ];\n\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Generate target key component as per schema: <target>\n */\nfunction generateTarget(credentialEntity: CredentialEntity): string {\n    return (credentialEntity.target || \"\").toLowerCase();\n}\n\n/**\n * Generate requested claims key component as per schema: <requestedClaims>\n */\nfunction generateClaimsHash(credentialEntity: CredentialEntity): string {\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\n}\n\n/**\n * Generate scheme key componenet as per schema: <scheme>\n */\nfunction generateScheme(credentialEntity: CredentialEntity): string {\n    /*\n     * PoP Tokens and SSH certs include scheme in cache key\n     * Cast to lowercase to handle \"bearer\" from ADFS\n     */\n    return credentialEntity.tokenType &&\n        credentialEntity.tokenType.toLowerCase() !==\n            AuthenticationScheme.BEARER.toLowerCase()\n        ? credentialEntity.tokenType.toLowerCase()\n        : \"\";\n}\n\n/**\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\n * @param key\n * @param entity\n */\nexport function isServerTelemetryEntity(key: string, entity?: object): boolean {\n    const validateKey: boolean =\n        key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    let validateEntity: boolean = true;\n\n    if (entity) {\n        validateEntity =\n            entity.hasOwnProperty(\"failedRequests\") &&\n            entity.hasOwnProperty(\"errors\") &&\n            entity.hasOwnProperty(\"cacheHits\");\n    }\n\n    return validateKey && validateEntity;\n}\n\n/**\n * validates if a given cache entry is \"Throttling\", parses <key,value>\n * @param key\n * @param entity\n */\nexport function isThrottlingEntity(key: string, entity?: object): boolean {\n    let validateKey: boolean = false;\n    if (key) {\n        validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n\n    let validateEntity: boolean = true;\n    if (entity) {\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n\n    return validateKey && validateEntity;\n}\n\n/**\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n */\nexport function generateAppMetadataKey({\n    environment,\n    clientId,\n}: AppMetadataEntity): string {\n    const appMetaDataKeyArray: Array<string> = [\n        APP_METADATA,\n        environment,\n        clientId,\n    ];\n    return appMetaDataKeyArray\n        .join(Separators.CACHE_KEY_SEPARATOR)\n        .toLowerCase();\n}\n\n/*\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAppMetadataEntity(key: string, entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        key.indexOf(APP_METADATA) === 0 &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"environment\")\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAuthorityMetadataEntity(\n    key: string,\n    entity: object\n): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n        entity.hasOwnProperty(\"aliases\") &&\n        entity.hasOwnProperty(\"preferred_cache\") &&\n        entity.hasOwnProperty(\"preferred_network\") &&\n        entity.hasOwnProperty(\"canonical_authority\") &&\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\n        entity.hasOwnProperty(\"token_endpoint\") &&\n        entity.hasOwnProperty(\"issuer\") &&\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n        entity.hasOwnProperty(\"expiresAt\") &&\n        entity.hasOwnProperty(\"jwks_uri\")\n    );\n}\n\n/**\n * Reset the exiresAt value\n */\nexport function generateAuthorityMetadataExpiresAt(): number {\n    return (\n        TimeUtils.nowSeconds() +\n        AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS\n    );\n}\n\nexport function updateAuthorityEndpointMetadata(\n    authorityMetadata: AuthorityMetadataEntity,\n    updatedValues: OpenIdConfigResponse,\n    fromNetwork: boolean\n): void {\n    authorityMetadata.authorization_endpoint =\n        updatedValues.authorization_endpoint;\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\n    authorityMetadata.issuer = updatedValues.issuer;\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\n}\n\nexport function updateCloudDiscoveryMetadata(\n    authorityMetadata: AuthorityMetadataEntity,\n    updatedValues: CloudDiscoveryMetadata,\n    fromNetwork: boolean\n): void {\n    authorityMetadata.aliases = updatedValues.aliases;\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\n}\n\n/**\n * Returns whether or not the data needs to be refreshed\n */\nexport function isAuthorityMetadataExpired(\n    metadata: AuthorityMetadataEntity\n): boolean {\n    return metadata.expiresAt <= TimeUtils.nowSeconds();\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const redirectUriEmpty = \"redirect_uri_empty\";\nexport const claimsRequestParsingError = \"claims_request_parsing_error\";\nexport const authorityUriInsecure = \"authority_uri_insecure\";\nexport const urlParseError = \"url_parse_error\";\nexport const urlEmptyError = \"empty_url_error\";\nexport const emptyInputScopesError = \"empty_input_scopes_error\";\nexport const invalidPromptValue = \"invalid_prompt_value\";\nexport const invalidClaims = \"invalid_claims\";\nexport const tokenRequestEmpty = \"token_request_empty\";\nexport const logoutRequestEmpty = \"logout_request_empty\";\nexport const invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nexport const pkceParamsMissing = \"pkce_params_missing\";\nexport const invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nexport const invalidAuthorityMetadata = \"invalid_authority_metadata\";\nexport const untrustedAuthority = \"untrusted_authority\";\nexport const missingSshJwk = \"missing_ssh_jwk\";\nexport const missingSshKid = \"missing_ssh_kid\";\nexport const missingNonceAuthenticationHeader =\n    \"missing_nonce_authentication_header\";\nexport const invalidAuthenticationHeader = \"invalid_authentication_header\";\nexport const cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nexport const cannotAllowPlatformBroker = \"cannot_allow_platform_broker\";\nexport const authorityMismatch = \"authority_mismatch\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError.js\";\nimport * as ClientConfigurationErrorCodes from \"./ClientConfigurationErrorCodes.js\";\nexport { ClientConfigurationErrorCodes };\n\nexport const ClientConfigurationErrorMessages = {\n    [ClientConfigurationErrorCodes.redirectUriEmpty]:\n        \"A redirect URI is required for all calls, and none has been set.\",\n    [ClientConfigurationErrorCodes.claimsRequestParsingError]:\n        \"Could not parse the given claims request object.\",\n    [ClientConfigurationErrorCodes.authorityUriInsecure]:\n        \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [ClientConfigurationErrorCodes.urlParseError]:\n        \"URL could not be parsed into appropriate segments.\",\n    [ClientConfigurationErrorCodes.urlEmptyError]: \"URL was empty or null.\",\n    [ClientConfigurationErrorCodes.emptyInputScopesError]:\n        \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [ClientConfigurationErrorCodes.invalidPromptValue]:\n        \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [ClientConfigurationErrorCodes.invalidClaims]:\n        \"Given claims parameter must be a stringified JSON object.\",\n    [ClientConfigurationErrorCodes.tokenRequestEmpty]:\n        \"Token request was empty and not found in cache.\",\n    [ClientConfigurationErrorCodes.logoutRequestEmpty]:\n        \"The logout request was null or undefined.\",\n    [ClientConfigurationErrorCodes.invalidCodeChallengeMethod]:\n        'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [ClientConfigurationErrorCodes.pkceParamsMissing]:\n        \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata]:\n        \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [ClientConfigurationErrorCodes.invalidAuthorityMetadata]:\n        \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [ClientConfigurationErrorCodes.untrustedAuthority]:\n        \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [ClientConfigurationErrorCodes.missingSshJwk]:\n        \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingSshKid]:\n        \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingNonceAuthenticationHeader]:\n        \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [ClientConfigurationErrorCodes.invalidAuthenticationHeader]:\n        \"Invalid authentication header provided\",\n    [ClientConfigurationErrorCodes.cannotSetOIDCOptions]:\n        \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [ClientConfigurationErrorCodes.cannotAllowPlatformBroker]:\n        \"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.\",\n    [ClientConfigurationErrorCodes.authorityMismatch]:\n        \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use ClientConfigurationErrorCodes instead\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: ClientConfigurationErrorCodes.redirectUriEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.redirectUriEmpty\n        ],\n    },\n    claimsRequestParsingError: {\n        code: ClientConfigurationErrorCodes.claimsRequestParsingError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.claimsRequestParsingError\n        ],\n    },\n    authorityUriInsecure: {\n        code: ClientConfigurationErrorCodes.authorityUriInsecure,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityUriInsecure\n        ],\n    },\n    urlParseError: {\n        code: ClientConfigurationErrorCodes.urlParseError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlParseError\n        ],\n    },\n    urlEmptyError: {\n        code: ClientConfigurationErrorCodes.urlEmptyError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlEmptyError\n        ],\n    },\n    emptyScopesError: {\n        code: ClientConfigurationErrorCodes.emptyInputScopesError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.emptyInputScopesError\n        ],\n    },\n    invalidPrompt: {\n        code: ClientConfigurationErrorCodes.invalidPromptValue,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidPromptValue\n        ],\n    },\n    invalidClaimsRequest: {\n        code: ClientConfigurationErrorCodes.invalidClaims,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidClaims\n        ],\n    },\n    tokenRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.tokenRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.tokenRequestEmpty\n        ],\n    },\n    logoutRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.logoutRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.logoutRequestEmpty\n        ],\n    },\n    invalidCodeChallengeMethod: {\n        code: ClientConfigurationErrorCodes.invalidCodeChallengeMethod,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n        ],\n    },\n    invalidCodeChallengeParams: {\n        code: ClientConfigurationErrorCodes.pkceParamsMissing,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.pkceParamsMissing\n        ],\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n        ],\n    },\n    invalidAuthorityMetadata: {\n        code: ClientConfigurationErrorCodes.invalidAuthorityMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthorityMetadata\n        ],\n    },\n    untrustedAuthority: {\n        code: ClientConfigurationErrorCodes.untrustedAuthority,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.untrustedAuthority\n        ],\n    },\n    missingSshJwk: {\n        code: ClientConfigurationErrorCodes.missingSshJwk,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshJwk\n        ],\n    },\n    missingSshKid: {\n        code: ClientConfigurationErrorCodes.missingSshKid,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshKid\n        ],\n    },\n    missingNonceAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.missingNonceAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingNonceAuthenticationHeader\n        ],\n    },\n    invalidAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.invalidAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthenticationHeader\n        ],\n    },\n    cannotSetOIDCOptions: {\n        code: ClientConfigurationErrorCodes.cannotSetOIDCOptions,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotSetOIDCOptions\n        ],\n    },\n    cannotAllowPlatformBroker: {\n        code: ClientConfigurationErrorCodes.cannotAllowPlatformBroker,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotAllowPlatformBroker\n        ],\n    },\n    authorityMismatch: {\n        code: ClientConfigurationErrorCodes.authorityMismatch,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityMismatch\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\n\nexport function createClientConfigurationError(\n    errorCode: string\n): ClientConfigurationError {\n    return new ClientConfigurationError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (\n            str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length\n        );\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map((entry) => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex: RegExp = new RegExp(\n            pattern\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\*/g, \"[^ ]*\")\n                .replace(/\\?/g, \"\\\\?\")\n        );\n\n        return regex.test(input);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport { StringUtils } from \"../utils/StringUtils.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants.js\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n\n        // Check if scopes array has at least one member\n        if (!filteredInput || !filteredInput.length) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.emptyInputScopesError\n            );\n        }\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString: Array<string>): ScopeSet {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        } else {\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n\n        return scopeSet;\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (\n            this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope))\n        );\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotAppendScopeSet\n            );\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (!scope) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotRemoveEmptyScope\n            );\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) =>\n            unionScopes.add(scope.toLowerCase())\n        );\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError.js\";\nimport { Separators, Constants } from \"../utils/Constants.js\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string;\n    utid: string;\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(\n    rawClientInfo: string,\n    base64Decode: (input: string) => string\n): ClientInfo {\n    if (!rawClientInfo) {\n        throw createClientAuthError(ClientAuthErrorCodes.clientInfoEmptyError);\n    }\n\n    try {\n        const decodedClientInfo: string = base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nexport function buildClientInfoFromHomeAccountId(\n    homeAccountId: string\n): ClientInfo {\n    if (!homeAccountId) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n    const clientInfoParts: string[] = homeAccountId.split(\n        Separators.CLIENT_INFO_SEPARATOR,\n        2\n    );\n    return {\n        uid: clientInfoParts[0],\n        utid:\n            clientInfoParts.length < 2\n                ? Constants.EMPTY_STRING\n                : clientInfoParts[1],\n    };\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims.js\";\n/**\n * Account object with the following signature:\n * - homeAccountId          - Home account identifier for this account object\n * - environment            - Entity which issued the token represented by the domain of the issuer (e.g. login.microsoftonline.com)\n * - tenantId               - Full tenant or organizational id that this account belongs to\n * - username               - preferred_username claim of the id_token that represents this account\n * - localAccountId         - Local, tenant-specific account identifer for this account object, usually used in legacy cases\n * - name                   - Full name for the account, including given name and family name\n * - idToken                - raw ID token\n * - idTokenClaims          - Object contains claims from ID token\n * - nativeAccountId        - The user's native account ID\n * - tenantProfiles         - Map of tenant profile objects for each tenant that the account has authenticated with in the browser\n */\nexport type AccountInfo = {\n    homeAccountId: string;\n    environment: string;\n    tenantId: string;\n    username: string;\n    localAccountId: string;\n    name?: string;\n    idToken?: string;\n    idTokenClaims?: TokenClaims & {\n        [key: string]:\n            | string\n            | number\n            | string[]\n            | object\n            | undefined\n            | unknown;\n    };\n    nativeAccountId?: string;\n    authorityType?: string;\n    tenantProfiles?: Map<string, TenantProfile>;\n};\n\n/**\n * Account details that vary across tenants for the same user\n */\nexport type TenantProfile = Pick<\n    AccountInfo,\n    \"tenantId\" | \"localAccountId\" | \"name\"\n> & {\n    /**\n     * - isHomeTenant           - True if this is the home tenant profile of the account, false if it's a guest tenant profile\n     */\n    isHomeTenant?: boolean;\n};\n\nexport type ActiveAccountFilters = {\n    homeAccountId: string;\n    localAccountId: string;\n    tenantId?: string;\n};\n\n/**\n * Returns true if tenantId matches the utid portion of homeAccountId\n * @param tenantId\n * @param homeAccountId\n * @returns\n */\nexport function tenantIdMatchesHomeTenant(\n    tenantId?: string,\n    homeAccountId?: string\n): boolean {\n    return (\n        !!tenantId &&\n        !!homeAccountId &&\n        tenantId === homeAccountId.split(\".\")[1]\n    );\n}\n\n/**\n * Build tenant profile\n * @param homeAccountId - Home account identifier for this account object\n * @param localAccountId - Local account identifer for this account object\n * @param tenantId - Full tenant or organizational id that this account belongs to\n * @param idTokenClaims - Claims from the ID token\n * @returns\n */\nexport function buildTenantProfile(\n    homeAccountId: string,\n    localAccountId: string,\n    tenantId: string,\n    idTokenClaims?: TokenClaims\n): TenantProfile {\n    if (idTokenClaims) {\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\n\n        /**\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\n         */\n        const tenantId = tid || tfp || acr || \"\";\n\n        return {\n            tenantId: tenantId,\n            localAccountId: oid || sub || \"\",\n            name: name,\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n        };\n    } else {\n        return {\n            tenantId,\n            localAccountId,\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n        };\n    }\n}\n\n/**\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\n * @param baseAccountInfo\n * @param idTokenClaims\n * @returns\n */\nexport function updateAccountTenantProfileData(\n    baseAccountInfo: AccountInfo,\n    tenantProfile?: TenantProfile,\n    idTokenClaims?: TokenClaims,\n    idTokenSecret?: string\n): AccountInfo {\n    let updatedAccountInfo = baseAccountInfo;\n    // Tenant Profile overrides passed in account info\n    if (tenantProfile) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\n    }\n\n    // ID token claims override passed in account info and tenant profile\n    if (idTokenClaims) {\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...claimsSourcedTenantProfile } =\n            buildTenantProfile(\n                baseAccountInfo.homeAccountId,\n                baseAccountInfo.localAccountId,\n                baseAccountInfo.tenantId,\n                idTokenClaims\n            );\n\n        updatedAccountInfo = {\n            ...updatedAccountInfo,\n            ...claimsSourcedTenantProfile,\n            idTokenClaims: idTokenClaims,\n            idToken: idTokenSecret,\n        };\n\n        return updatedAccountInfo;\n    }\n\n    return updatedAccountInfo;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport const AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n} as const;\nexport type AuthorityType = (typeof AuthorityType)[keyof typeof AuthorityType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Type which describes Id Token claims known by MSAL.\n */\nexport type TokenClaims = {\n    /**\n     * Audience\n     */\n    aud?: string;\n    /**\n     * Issuer\n     */\n    iss?: string;\n    /**\n     * Issued at\n     */\n    iat?: number;\n    /**\n     * Not valid before\n     */\n    nbf?: number;\n    /**\n     * Immutable object identifier, this ID uniquely identifies the user across applications\n     */\n    oid?: string;\n    /**\n     * Immutable subject identifier, this is a pairwise identifier - it is unique to a particular application ID\n     */\n    sub?: string;\n    /**\n     * Users' tenant or '9188040d-6c67-4c5b-b112-36a304b66dad' for personal accounts.\n     */\n    tid?: string;\n    /**\n     * Trusted Framework Policy (B2C) The name of the policy that was used to acquire the ID token.\n     */\n    tfp?: string;\n    /**\n     * Authentication Context Class Reference (B2C) Used only with older policies.\n     */\n    acr?: string;\n    ver?: string;\n    upn?: string;\n    preferred_username?: string;\n    login_hint?: string;\n    emails?: string[];\n    name?: string;\n    nonce?: string;\n    /**\n     * Expiration\n     */\n    exp?: number;\n    home_oid?: string;\n    sid?: string;\n    cloud_instance_host_name?: string;\n    cnf?: {\n        kid: string;\n    };\n    x5c_ca?: string[];\n    ts?: number;\n    at?: string;\n    u?: string;\n    p?: string;\n    m?: string;\n    roles?: string[];\n    amr?: string[];\n    idp?: string;\n    auth_time?: number;\n    /**\n     * \tRegion of the resource tenant\n     */\n    tenant_region_scope?: string;\n    tenant_region_sub_scope?: string;\n};\n\n/**\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\n * Downcased to match the realm case-insensitive comparison requirements\n * @param idTokenClaims\n * @returns\n */\nexport function getTenantIdFromIdTokenClaims(\n    idTokenClaims?: TokenClaims\n): string | null {\n    if (idTokenClaims) {\n        const tenantId =\n            idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\n        return tenantId || null;\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CacheAccountType, Separators } from \"../../utils/Constants.js\";\nimport type { Authority } from \"../../authority/Authority.js\";\nimport { ICrypto } from \"../../crypto/ICrypto.js\";\nimport { ClientInfo, buildClientInfo } from \"../../account/ClientInfo.js\";\nimport {\n    AccountInfo,\n    TenantProfile,\n    buildTenantProfile,\n} from \"../../account/AccountInfo.js\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../../error/ClientAuthError.js\";\nimport { AuthorityType } from \"../../authority/AuthorityType.js\";\nimport { Logger } from \"../../logger/Logger.js\";\nimport {\n    TokenClaims,\n    getTenantIdFromIdTokenClaims,\n} from \"../../account/TokenClaims.js\";\nimport { ProtocolMode } from \"../../authority/ProtocolMode.js\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      nativeAccountId: Account identifier on the native device\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\n * }\n * @internal\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    clientInfo?: string;\n    name?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string;\n    nativeAccountId?: string;\n    tenantProfiles?: Array<TenantProfile>;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n            // Deserialize tenant profiles array into a Map\n            tenantProfiles: new Map(\n                (this.tenantProfiles || []).map((tenantProfile) => {\n                    return [tenantProfile.tenantId, tenantProfile];\n                })\n            ),\n        };\n    }\n\n    /**\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\n     */\n    isSingleTenant(): boolean {\n        return !this.tenantProfiles;\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || \"\",\n            homeTenantId || accountInterface.tenantId || \"\",\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(\n        accountDetails: {\n            homeAccountId: string;\n            idTokenClaims?: TokenClaims;\n            clientInfo?: string;\n            cloudGraphHostName?: string;\n            msGraphHost?: string;\n            environment?: string;\n            nativeAccountId?: string;\n            tenantProfiles?: Array<TenantProfile>;\n        },\n        authority: Authority,\n        base64Decode?: (input: string) => string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        if (authority.authorityType === AuthorityType.Adfs) {\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n        } else if (authority.protocolMode === ProtocolMode.OIDC) {\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        } else {\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        }\n\n        let clientInfo: ClientInfo | undefined;\n\n        if (accountDetails.clientInfo && base64Decode) {\n            clientInfo = buildClientInfo(\n                accountDetails.clientInfo,\n                base64Decode\n            );\n        }\n\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n\n        const env =\n            accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            clientInfo?.utid ||\n            getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) ||\n            \"\";\n\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            clientInfo?.uid ||\n            accountDetails.idTokenClaims?.oid ||\n            accountDetails.idTokenClaims?.sub ||\n            \"\";\n\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername =\n            accountDetails.idTokenClaims?.preferred_username ||\n            accountDetails.idTokenClaims?.upn;\n        const email = accountDetails.idTokenClaims?.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n\n        account.username = preferredUsername || email || \"\";\n        account.name = accountDetails.idTokenClaims?.name || \"\";\n\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n\n        if (accountDetails.tenantProfiles) {\n            account.tenantProfiles = accountDetails.tenantProfiles;\n        } else {\n            const tenantProfile = buildTenantProfile(\n                accountDetails.homeAccountId,\n                account.localAccountId,\n                account.realm,\n                accountDetails.idTokenClaims\n            );\n            account.tenantProfiles = [tenantProfile];\n        }\n\n        return account;\n    }\n\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(\n        accountInfo: AccountInfo,\n        cloudGraphHostName?: string,\n        msGraphHost?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType =\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n        // Serialize tenant profiles map into an array\n        account.tenantProfiles = Array.from(\n            accountInfo.tenantProfiles?.values() || []\n        );\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(\n        serverClientInfo: string,\n        authType: AuthorityType,\n        logger: Logger,\n        cryptoObj: ICrypto,\n        idTokenClaims?: TokenClaims\n    ): string {\n        // since ADFS/DSTS do not have tid and does not set client_info\n        if (\n            !(\n                authType === AuthorityType.Adfs ||\n                authType === AuthorityType.Dsts\n            )\n        ) {\n            // for cases where there is clientInfo\n            if (serverClientInfo) {\n                try {\n                    const clientInfo = buildClientInfo(\n                        serverClientInfo,\n                        cryptoObj.base64Decode\n                    );\n                    if (clientInfo.uid && clientInfo.utid) {\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\n                    }\n                } catch (e) {}\n            }\n            logger.warning(\"No client info in response\");\n        }\n\n        // default to \"sub\" claim\n        return idTokenClaims?.sub || \"\";\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(\n        accountA: AccountInfo | null,\n        accountB: AccountInfo | null,\n        compareClaims?: boolean\n    ): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims ||\n                {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                accountAClaims.nonce === accountBClaims.nonce;\n        }\n\n        return (\n            accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizeResponse } from \"../response/AuthorizeResponse.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { StringDict } from \"./MsalTypes.js\";\n\n/**\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\n * @param hashString\n */\nexport function stripLeadingHashOrQuery(responseString: string): string {\n    if (responseString.startsWith(\"#/\")) {\n        return responseString.substring(2);\n    } else if (\n        responseString.startsWith(\"#\") ||\n        responseString.startsWith(\"?\")\n    ) {\n        return responseString.substring(1);\n    }\n\n    return responseString;\n}\n\n/**\n * Returns URL hash as server auth code response object.\n */\nexport function getDeserializedResponse(\n    responseString: string\n): AuthorizeResponse | null {\n    // Check if given hash is empty\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\n        return null;\n    }\n    try {\n        // Strip the # or ? symbol if present\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: AuthorizeResponse = Object.fromEntries(\n            new URLSearchParams(normalizedResponse)\n        );\n\n        // Check for known response properties\n        if (\n            deserializedHash.code ||\n            deserializedHash.ear_jwe ||\n            deserializedHash.error ||\n            deserializedHash.error_description ||\n            deserializedHash.state\n        ) {\n            return deserializedHash;\n        }\n    } catch (e) {\n        throw createClientAuthError(ClientAuthErrorCodes.hashNotDeserialized);\n    }\n\n    return null;\n}\n\n/**\n * Utility to create a URL from the params map\n */\nexport function mapToQueryString(\n    parameters: Map<string, string>,\n    encodeExtraParams: boolean = true,\n    extraQueryParameters?: StringDict\n): string {\n    const queryParameterArray: Array<string> = new Array<string>();\n\n    parameters.forEach((value, key) => {\n        if (\n            !encodeExtraParams &&\n            extraQueryParameters &&\n            key in extraQueryParameters\n        ) {\n            queryParameterArray.push(`${key}=${value}`);\n        } else {\n            queryParameterArray.push(`${key}=${encodeURIComponent(value)}`);\n        }\n    });\n\n    return queryParameterArray.join(\"&\");\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport { StringUtils } from \"../utils/StringUtils.js\";\nimport { IUri } from \"./IUri.js\";\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants.js\";\nimport * as UrlUtils from \"../utils/UrlUtils.js\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n\n    constructor(url: string) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlEmptyError\n            );\n        }\n\n        if (!url.includes(\"#\")) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if uri is insecure.\n        if (\n            !components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\"\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityUriInsecure\n            );\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (!queryString) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (\n            tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)\n        ) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\n            \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n        );\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (\n            urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")\n        ) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(\n                0,\n                urlComponents.QueryString.length - 1\n            );\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return (\n                baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl\n            );\n        }\n\n        return relativeUrl;\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(\n            urlObject.Protocol +\n                \"//\" +\n                urlObject.HostNameAndPort +\n                \"/\" +\n                urlObject.PathSegments.join(\"/\")\n        );\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     * @deprecated This API will be removed in a future version\n     */\n    static hashContainsKnownProperties(response: string): boolean {\n        return !!UrlUtils.getDeserializedResponse(response);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger.js\";\nimport { UrlString } from \"../url/UrlString.js\";\nimport { AuthorityMetadataSource } from \"../utils/Constants.js\";\nimport { StaticAuthorityOptions } from \"./AuthorityOptions.js\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata.js\";\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse.js\";\nimport { OpenIdConfigResponse } from \"./OpenIdConfigResponse.js\";\n\ntype RawMetadata = {\n    endpointMetadata: { [key: string]: OpenIdConfigResponse };\n    instanceDiscoveryMetadata: CloudInstanceDiscoveryResponse;\n};\n\nexport const rawMetdataJSON: RawMetadata = {\n    endpointMetadata: {\n        \"login.microsoftonline.com\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri:\n                \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\n        },\n        \"login.chinacloudapi.cn\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\n        },\n        \"login.microsoftonline.us\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri:\n                \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        tenant_discovery_endpoint:\n            \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\n        metadata: [\n            {\n                preferred_network: \"login.microsoftonline.com\",\n                preferred_cache: \"login.windows.net\",\n                aliases: [\n                    \"login.microsoftonline.com\",\n                    \"login.windows.net\",\n                    \"login.microsoft.com\",\n                    \"sts.windows.net\",\n                ],\n            },\n            {\n                preferred_network: \"login.partner.microsoftonline.cn\",\n                preferred_cache: \"login.partner.microsoftonline.cn\",\n                aliases: [\n                    \"login.partner.microsoftonline.cn\",\n                    \"login.chinacloudapi.cn\",\n                ],\n            },\n            {\n                preferred_network: \"login.microsoftonline.de\",\n                preferred_cache: \"login.microsoftonline.de\",\n                aliases: [\"login.microsoftonline.de\"],\n            },\n            {\n                preferred_network: \"login.microsoftonline.us\",\n                preferred_cache: \"login.microsoftonline.us\",\n                aliases: [\n                    \"login.microsoftonline.us\",\n                    \"login.usgovcloudapi.net\",\n                ],\n            },\n            {\n                preferred_network: \"login-us.microsoftonline.com\",\n                preferred_cache: \"login-us.microsoftonline.com\",\n                aliases: [\"login-us.microsoftonline.com\"],\n            },\n        ],\n    },\n};\n\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\nexport const InstanceDiscoveryMetadata =\n    rawMetdataJSON.instanceDiscoveryMetadata;\n\nexport const InstanceDiscoveryMetadataAliases: Set<String> = new Set();\nInstanceDiscoveryMetadata.metadata.forEach(\n    (metadataEntry: CloudDiscoveryMetadata) => {\n        metadataEntry.aliases.forEach((alias: string) => {\n            InstanceDiscoveryMetadataAliases.add(alias);\n        });\n    }\n);\n\n/**\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\n * @param staticAuthorityOptions\n * @param logger\n * @returns\n */\nexport function getAliasesFromStaticSources(\n    staticAuthorityOptions: StaticAuthorityOptions,\n    logger?: Logger\n): string[] {\n    let staticAliases: string[] | undefined;\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\n    if (canonicalAuthority) {\n        const authorityHost = new UrlString(\n            canonicalAuthority\n        ).getUrlComponents().HostNameAndPort;\n        staticAliases =\n            getAliasesFromMetadata(\n                authorityHost,\n                staticAuthorityOptions.cloudDiscoveryMetadata?.metadata,\n                AuthorityMetadataSource.CONFIG,\n                logger\n            ) ||\n            getAliasesFromMetadata(\n                authorityHost,\n                InstanceDiscoveryMetadata.metadata,\n                AuthorityMetadataSource.HARDCODED_VALUES,\n                logger\n            ) ||\n            staticAuthorityOptions.knownAuthorities;\n    }\n\n    return staticAliases || [];\n}\n\n/**\n * Returns aliases for from the raw cloud discovery metadata passed in\n * @param authorityHost\n * @param rawCloudDiscoveryMetadata\n * @returns\n */\nexport function getAliasesFromMetadata(\n    authorityHost?: string,\n    cloudDiscoveryMetadata?: CloudDiscoveryMetadata[],\n    source?: AuthorityMetadataSource,\n    logger?: Logger\n): string[] | null {\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\n    if (authorityHost && cloudDiscoveryMetadata) {\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n            cloudDiscoveryMetadata,\n            authorityHost\n        );\n\n        if (metadata) {\n            logger?.trace(\n                `getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`\n            );\n            return metadata.aliases;\n        } else {\n            logger?.trace(\n                `getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`\n            );\n        }\n    }\n\n    return null;\n}\n\n/**\n * Get cloud discovery metadata for common authorities\n */\nexport function getCloudDiscoveryMetadataFromHardcodedValues(\n    authorityHost: string\n): CloudDiscoveryMetadata | null {\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n        InstanceDiscoveryMetadata.metadata,\n        authorityHost\n    );\n    return metadata;\n}\n\n/**\n * Searches instance discovery network response for the entry that contains the host in the aliases list\n * @param response\n * @param authority\n */\nexport function getCloudDiscoveryMetadataFromNetworkResponse(\n    response: CloudDiscoveryMetadata[],\n    authorityHost: string\n): CloudDiscoveryMetadata | null {\n    for (let i = 0; i < response.length; i++) {\n        const metadata = response[i];\n        if (metadata.aliases.includes(authorityHost)) {\n            return metadata;\n        }\n    }\n\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\nexport const cacheUnknownErrorCode = \"cache_error_unknown\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as CacheErrorCodes from \"./CacheErrorCodes.js\";\nexport { CacheErrorCodes };\n\nexport const CacheErrorMessages = {\n    [CacheErrorCodes.cacheQuotaExceededErrorCode]:\n        \"Exceeded cache storage capacity.\",\n    [CacheErrorCodes.cacheUnknownErrorCode]:\n        \"Unexpected error occurred when using cache storage.\",\n};\n\n/**\n * Error thrown when there is an error with the cache\n */\nexport class CacheError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    constructor(errorCode: string, errorMessage?: string) {\n        const message =\n            errorMessage ||\n            (CacheErrorMessages[errorCode]\n                ? CacheErrorMessages[errorCode]\n                : CacheErrorMessages[CacheErrorCodes.cacheUnknownErrorCode]);\n\n        super(`${errorCode}: ${message}`);\n        Object.setPrototypeOf(this, CacheError.prototype);\n\n        this.name = \"CacheError\";\n        this.errorCode = errorCode;\n        this.errorMessage = message;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    CredentialFilter,\n    ValidCredentialType,\n    AppMetadataFilter,\n    AppMetadataCache,\n    TokenKeys,\n    TenantProfileFilter,\n} from \"./utils/CacheTypes.js\";\nimport { CacheRecord } from \"./entities/CacheRecord.js\";\nimport {\n    CredentialType,\n    APP_METADATA,\n    THE_FAMILY_ID,\n    AUTHORITY_METADATA_CONSTANTS,\n    AuthenticationScheme,\n    Separators,\n} from \"../utils/Constants.js\";\nimport { CredentialEntity } from \"./entities/CredentialEntity.js\";\nimport { generateCredentialKey } from \"./utils/CacheHelpers.js\";\nimport { ScopeSet } from \"../request/ScopeSet.js\";\nimport { AccountEntity } from \"./entities/AccountEntity.js\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity.js\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity.js\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity.js\";\nimport { ICacheManager } from \"./interface/ICacheManager.js\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError.js\";\nimport {\n    AccountInfo,\n    TenantProfile,\n    updateAccountTenantProfileData,\n} from \"../account/AccountInfo.js\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity.js\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity.js\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity.js\";\nimport { extractTokenClaims } from \"../account/AuthToken.js\";\nimport { ICrypto } from \"../crypto/ICrypto.js\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity.js\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\nimport { Logger } from \"../logger/Logger.js\";\nimport { name, version } from \"../packageMetadata.js\";\nimport { StoreInCache } from \"../request/StoreInCache.js\";\nimport { getAliasesFromStaticSources } from \"../authority/AuthorityMetadata.js\";\nimport { StaticAuthorityOptions } from \"../authority/AuthorityOptions.js\";\nimport { TokenClaims } from \"../account/TokenClaims.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { CacheError, CacheErrorCodes } from \"../error/CacheError.js\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n    // Instance of logger for functions defined in the msal-common layer\n    private commonLogger: Logger;\n    private staticAuthorityOptions?: StaticAuthorityOptions;\n\n    constructor(\n        clientId: string,\n        cryptoImpl: ICrypto,\n        logger: Logger,\n        staticAuthorityOptions?: StaticAuthorityOptions\n    ) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(name, version);\n        this.staticAuthorityOptions = staticAuthorityOptions;\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(\n        accountKey: string,\n        logger?: Logger\n    ): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     * @param correlationId\n     */\n    abstract setAccount(\n        account: AccountEntity,\n        correlationId: string\n    ): Promise<void>;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     * @param correlationId\n     */\n    abstract setIdTokenCredential(\n        idToken: IdTokenEntity,\n        correlationId: string\n    ): Promise<void>;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(\n        accessTokenKey: string\n    ): AccessTokenEntity | null;\n\n    /**\n     * set accessToken entity to the platform cache\n     * @param accessToken\n     * @param correlationId\n     */\n    abstract setAccessTokenCredential(\n        accessToken: AccessTokenEntity,\n        correlationId: string\n    ): Promise<void>;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null;\n\n    /**\n     * set refreshToken entity to the platform cache\n     * @param refreshToken\n     * @param correlationId\n     */\n    abstract setRefreshTokenCredential(\n        refreshToken: RefreshTokenEntity,\n        correlationId: string\n    ): Promise<void>;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     *\n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(\n        key: string,\n        value: AuthorityMetadataEntity\n    ): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(\n        throttlingCacheKey: string\n    ): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string): void;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which retrieves all account keys from the cache\n     */\n    abstract getAccountKeys(): string[];\n\n    /**\n     * Function which retrieves all token keys from the cache\n     */\n    abstract getTokenKeys(): TokenKeys;\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return this.buildTenantProfiles(\n            this.getAccountsFilteredBy(accountFilter || {}),\n            accountFilter\n        );\n    }\n\n    /**\n     * Gets first tenanted AccountInfo object found based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter: AccountFilter): AccountInfo | null {\n        const allAccounts = this.getAllAccounts(accountFilter);\n        if (allAccounts.length > 1) {\n            // If one or more accounts are found, prioritize accounts that have an ID token\n            const sortedAccounts = allAccounts.sort((account) => {\n                return account.idTokenClaims ? -1 : 1;\n            });\n            return sortedAccounts[0];\n        } else if (allAccounts.length === 1) {\n            // If only one account is found, return it regardless of whether a matching ID token was found\n            return allAccounts[0];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns a single matching\n     * @param accountFilter\n     * @returns\n     */\n    getBaseAccountInfo(accountFilter: AccountFilter): AccountInfo | null {\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\n        if (accountEntities.length > 0) {\n            return accountEntities[0].getAccountInfo();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\n     * and builds the account info objects from the matching ID token's claims\n     * @param cachedAccounts\n     * @param accountFilter\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\n     */\n    private buildTenantProfiles(\n        cachedAccounts: AccountEntity[],\n        accountFilter?: AccountFilter\n    ): AccountInfo[] {\n        return cachedAccounts.flatMap((accountEntity) => {\n            return this.getTenantProfilesFromAccountEntity(\n                accountEntity,\n                accountFilter?.tenantId,\n                accountFilter\n            );\n        });\n    }\n\n    private getTenantedAccountInfoByFilter(\n        accountInfo: AccountInfo,\n        tokenKeys: TokenKeys,\n        tenantProfile: TenantProfile,\n        tenantProfileFilter?: TenantProfileFilter\n    ): AccountInfo | null {\n        let tenantedAccountInfo: AccountInfo | null = null;\n        let idTokenClaims: TokenClaims | undefined;\n\n        if (tenantProfileFilter) {\n            if (\n                !this.tenantProfileMatchesFilter(\n                    tenantProfile,\n                    tenantProfileFilter\n                )\n            ) {\n                return null;\n            }\n        }\n\n        const idToken = this.getIdToken(\n            accountInfo,\n            tokenKeys,\n            tenantProfile.tenantId\n        );\n\n        if (idToken) {\n            idTokenClaims = extractTokenClaims(\n                idToken.secret,\n                this.cryptoImpl.base64Decode\n            );\n\n            if (\n                !this.idTokenClaimsMatchTenantProfileFilter(\n                    idTokenClaims,\n                    tenantProfileFilter\n                )\n            ) {\n                // ID token sourced claims don't match so this tenant profile is not a match\n                return null;\n            }\n        }\n\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\n        tenantedAccountInfo = updateAccountTenantProfileData(\n            accountInfo,\n            tenantProfile,\n            idTokenClaims,\n            idToken?.secret\n        );\n\n        return tenantedAccountInfo;\n    }\n\n    private getTenantProfilesFromAccountEntity(\n        accountEntity: AccountEntity,\n        targetTenantId?: string,\n        tenantProfileFilter?: TenantProfileFilter\n    ): AccountInfo[] {\n        const accountInfo = accountEntity.getAccountInfo();\n        let searchTenantProfiles: Map<string, TenantProfile> =\n            accountInfo.tenantProfiles || new Map<string, TenantProfile>();\n        const tokenKeys = this.getTokenKeys();\n\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\n        if (targetTenantId) {\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\n            if (tenantProfile) {\n                // Reduce search field to just this tenant profile\n                searchTenantProfiles = new Map<string, TenantProfile>([\n                    [targetTenantId, tenantProfile],\n                ]);\n            } else {\n                // No tenant profile for search tenant ID, return empty array\n                return [];\n            }\n        }\n\n        const matchingTenantProfiles: AccountInfo[] = [];\n        searchTenantProfiles.forEach((tenantProfile: TenantProfile) => {\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(\n                accountInfo,\n                tokenKeys,\n                tenantProfile,\n                tenantProfileFilter\n            );\n            if (tenantedAccountInfo) {\n                matchingTenantProfiles.push(tenantedAccountInfo);\n            }\n        });\n\n        return matchingTenantProfiles;\n    }\n\n    private tenantProfileMatchesFilter(\n        tenantProfile: TenantProfile,\n        tenantProfileFilter: TenantProfileFilter\n    ): boolean {\n        if (\n            !!tenantProfileFilter.localAccountId &&\n            !this.matchLocalAccountIdFromTenantProfile(\n                tenantProfile,\n                tenantProfileFilter.localAccountId\n            )\n        ) {\n            return false;\n        }\n\n        if (\n            !!tenantProfileFilter.name &&\n            !(tenantProfile.name === tenantProfileFilter.name)\n        ) {\n            return false;\n        }\n\n        if (\n            tenantProfileFilter.isHomeTenant !== undefined &&\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private idTokenClaimsMatchTenantProfileFilter(\n        idTokenClaims: TokenClaims,\n        tenantProfileFilter?: TenantProfileFilter\n    ): boolean {\n        // Tenant Profile filtering\n        if (tenantProfileFilter) {\n            if (\n                !!tenantProfileFilter.localAccountId &&\n                !this.matchLocalAccountIdFromTokenClaims(\n                    idTokenClaims,\n                    tenantProfileFilter.localAccountId\n                )\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.loginHint &&\n                !this.matchLoginHintFromTokenClaims(\n                    idTokenClaims,\n                    tenantProfileFilter.loginHint\n                )\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.username &&\n                !this.matchUsername(\n                    idTokenClaims.preferred_username,\n                    tenantProfileFilter.username\n                )\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.name &&\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.sid &&\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord {CacheRecord}\n     * @param storeInCache {?StoreInCache}\n     * @param correlationId {?string} correlation id\n     */\n    async saveCacheRecord(\n        cacheRecord: CacheRecord,\n        correlationId: string,\n        storeInCache?: StoreInCache\n    ): Promise<void> {\n        if (!cacheRecord) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheRecord\n            );\n        }\n\n        try {\n            if (!!cacheRecord.account) {\n                await this.setAccount(cacheRecord.account, correlationId);\n            }\n\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n                await this.setIdTokenCredential(\n                    cacheRecord.idToken,\n                    correlationId\n                );\n            }\n\n            if (\n                !!cacheRecord.accessToken &&\n                storeInCache?.accessToken !== false\n            ) {\n                await this.saveAccessToken(\n                    cacheRecord.accessToken,\n                    correlationId\n                );\n            }\n\n            if (\n                !!cacheRecord.refreshToken &&\n                storeInCache?.refreshToken !== false\n            ) {\n                await this.setRefreshTokenCredential(\n                    cacheRecord.refreshToken,\n                    correlationId\n                );\n            }\n\n            if (!!cacheRecord.appMetadata) {\n                this.setAppMetadata(cacheRecord.appMetadata);\n            }\n        } catch (e: unknown) {\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\n            if (e instanceof Error) {\n                this.commonLogger?.errorPii(\n                    `CacheManager.saveCacheRecord: ${e.message}`,\n                    correlationId\n                );\n\n                if (\n                    e.name === \"QuotaExceededError\" ||\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\n                    e.message.includes(\"exceeded the quota\")\n                ) {\n                    this.commonLogger?.error(\n                        `CacheManager.saveCacheRecord: exceeded storage quota`,\n                        correlationId\n                    );\n                    throw new CacheError(\n                        CacheErrorCodes.cacheQuotaExceededErrorCode\n                    );\n                } else {\n                    throw new CacheError(e.name, e.message);\n                }\n            } else {\n                this.commonLogger?.errorPii(\n                    `CacheManager.saveCacheRecord: ${e}`,\n                    correlationId\n                );\n                throw new CacheError(CacheErrorCodes.cacheUnknownErrorCode);\n            }\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(\n        credential: AccessTokenEntity,\n        correlationId: string\n    ): Promise<void> {\n        const accessTokenFilter: CredentialFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = ScopeSet.fromString(credential.target);\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (\n                !this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)\n            ) {\n                return;\n            }\n\n            const tokenEntity = this.getAccessTokenCredential(key);\n\n            if (\n                tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)\n            ) {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        await this.setAccessTokenCredential(credential, correlationId);\n    }\n\n    /**\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter: AccountFilter): AccountEntity[] {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts: AccountEntity[] = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n\n            const entity: AccountEntity | null = this.getAccount(\n                cacheKey,\n                this.commonLogger\n            );\n\n            // Match base account fields\n\n            if (!entity) {\n                return;\n            }\n\n            if (\n                !!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.username &&\n                !this.matchUsername(entity.username, accountFilter.username)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(\n                    entity,\n                    accountFilter.nativeAccountId\n                )\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)\n            ) {\n                return;\n            }\n\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\n            const tenantProfileFilter: TenantProfileFilter = {\n                localAccountId: accountFilter?.localAccountId,\n                name: accountFilter?.name,\n            };\n\n            const matchingTenantProfiles = entity.tenantProfiles?.filter(\n                (tenantProfile: TenantProfile) => {\n                    return this.tenantProfileMatchesFilter(\n                        tenantProfile,\n                        tenantProfileFilter\n                    );\n                }\n            );\n\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\n                return;\n            }\n\n            matchingAccounts.push(entity);\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(\n        key: string,\n        homeAccountId?: string,\n        tenantId?: string\n    ): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        if (\n            homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())\n        ) {\n            return false;\n        }\n\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n\n        // Do not check environment as aliasing can cause false negatives\n\n        return true;\n    }\n\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key: string): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (\n            lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n            ) === -1 &&\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1\n        ) {\n            return false;\n        }\n\n        if (\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1\n        ) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\n            if (\n                lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1\n            ) {\n                return false;\n            }\n        } else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(\n        entity: ValidCredentialType,\n        filter: CredentialFilter\n    ): boolean {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n\n        if (\n            !!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)\n        ) {\n            return false;\n        }\n\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (\n            typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)\n        ) {\n            return false;\n        }\n\n        if (\n            !!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)\n        ) {\n            return false;\n        }\n\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n\n        if (\n            !!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)\n        ) {\n            return false;\n        }\n\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n\n        // Access Token with Auth Scheme specific matching\n        if (\n            entity.credentialType ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n        ) {\n            if (\n                !!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)\n            ) {\n                return false;\n            }\n\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (\n                !!filter.environment &&\n                !this.matchEnvironment(entity, filter.environment)\n            ) {\n                return;\n            }\n\n            if (\n                !!filter.clientId &&\n                !this.matchClientId(entity, filter.clientId)\n            ) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (\n                !this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1\n            ) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n        });\n\n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<void> {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts: Array<Promise<void>> = [];\n\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n\n        await Promise.all(removedAccounts);\n    }\n\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<void> {\n        const account = this.getAccount(accountKey, this.commonLogger);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<void> {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<void>> = [];\n\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n\n        await Promise.all(removedCredentials);\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (\n            credential.credentialType.toLowerCase() ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n        ) {\n            if (credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity =\n                    credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw createClientAuthError(\n                            ClientAuthErrorCodes.bindingKeyNotRemoved\n                        );\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string =\n            AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey, this.commonLogger);\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param tokenKeys {?TokenKeys}\n     * @param targetRealm {?string}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getIdToken(\n        account: AccountInfo,\n        tokenKeys?: TokenKeys,\n        targetRealm?: string,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): IdTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: targetRealm,\n        };\n\n        const idTokenMap: Map<string, IdTokenEntity> = this.getIdTokensByFilter(\n            idTokenFilter,\n            tokenKeys\n        );\n\n        const numIdTokens = idTokenMap.size;\n\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        } else if (numIdTokens > 1) {\n            let tokensToBeRemoved: Map<string, IdTokenEntity> = idTokenMap;\n            // Multiple tenant profiles and no tenant specified, pick home account\n            if (!targetRealm) {\n                const homeIdTokenMap: Map<string, IdTokenEntity> = new Map<\n                    string,\n                    IdTokenEntity\n                >();\n                idTokenMap.forEach((idToken, key) => {\n                    if (idToken.realm === account.tenantId) {\n                        homeIdTokenMap.set(key, idToken);\n                    }\n                });\n                const numHomeIdTokens = homeIdTokenMap.size;\n                if (numHomeIdTokens < 1) {\n                    this.commonLogger.info(\n                        \"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\"\n                    );\n                    return idTokenMap.values().next().value;\n                } else if (numHomeIdTokens === 1) {\n                    this.commonLogger.info(\n                        \"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\"\n                    );\n                    return homeIdTokenMap.values().next().value;\n                } else {\n                    // Multiple ID tokens for home tenant profile, remove all and return null\n                    tokensToBeRemoved = homeIdTokenMap;\n                }\n            }\n            // Multiple tokens for a single tenant profile, remove all and return null\n            this.commonLogger.info(\n                \"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\"\n            );\n            tokensToBeRemoved.forEach((idToken, key) => {\n                this.removeIdToken(key);\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields(\n                    { multiMatchedID: idTokenMap.size },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\n        return idTokenMap.values().next().value;\n    }\n\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(\n        filter: CredentialFilter,\n        tokenKeys?: TokenKeys\n    ): Map<string, IdTokenEntity> {\n        const idTokenKeys =\n            (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n\n        const idTokens: Map<string, IdTokenEntity> = new Map<\n            string,\n            IdTokenEntity\n        >();\n        idTokenKeys.forEach((key) => {\n            if (\n                !this.idTokenKeyMatchesFilter(key, {\n                    clientId: this.clientId,\n                    ...filter,\n                })\n            ) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.set(key, idToken);\n            }\n        });\n\n        return idTokens;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param request {BaseAuthRequest}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getAccessToken(\n        account: AccountInfo,\n        request: BaseAuthRequest,\n        tokenKeys?: TokenKeys,\n        targetRealm?: string,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): AccessTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\n        const authScheme =\n            request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType =\n            authScheme &&\n            authScheme.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n                ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n                : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: targetRealm || account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n\n        const accessTokenKeys =\n            (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens: AccessTokenEntity[] = [];\n\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (\n                this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)\n            ) {\n                const accessToken = this.getAccessTokenCredential(key);\n\n                // Validate value\n                if (\n                    accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)\n                ) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - No token found\"\n            );\n            return null;\n        } else if (numAccessTokens > 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - Multiple access tokens found, clearing them\"\n            );\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken(generateCredentialKey(accessToken));\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields(\n                    { multiMatchedAT: accessTokens.length },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getAccessToken - Returning access token\"\n        );\n        return accessTokens[0];\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter,\n        keyMustContainAllScopes: boolean\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n\n        if (\n            filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (\n                    keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                } else if (\n                    !keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter: CredentialFilter): AccessTokenEntity[] {\n        const tokenKeys = this.getTokenKeys();\n\n        const accessTokens: AccessTokenEntity[] = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n\n            const accessToken = this.getAccessTokenCredential(key);\n            if (\n                accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)\n            ) {\n                accessTokens.push(accessToken);\n            }\n        });\n\n        return accessTokens;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param account {AccountInfo}\n     * @param familyRT {boolean}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getRefreshToken(\n        account: AccountInfo,\n        familyRT: boolean,\n        tokenKeys?: TokenKeys,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): RefreshTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n\n        const refreshTokenKeys =\n            (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens: RefreshTokenEntity[] = [];\n\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (\n                    refreshToken &&\n                    this.credentialMatchesFilter(\n                        refreshToken,\n                        refreshTokenFilter\n                    )\n                ) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getRefreshToken - No refresh token found.\"\n            );\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\n            performanceClient.addFields(\n                { multiMatchedRT: numRefreshTokens },\n                correlationId\n            );\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getRefreshToken - returning refresh token\"\n        );\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        // If familyId is used, clientId is not in the key\n        if (\n            !filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n\n        const appMetadata: AppMetadataCache =\n            this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(\n            appMetadata\n        ).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.multipleMatchingAppMetadata\n            );\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(\n        entity: AccountEntity | CredentialEntity,\n        homeAccountId: string\n    ): boolean {\n        return !!(\n            typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId\n        );\n    }\n\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    private matchLocalAccountIdFromTokenClaims(\n        tokenClaims: TokenClaims,\n        localAccountId: string\n    ): boolean {\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\n        return localAccountId === idTokenLocalAccountId;\n    }\n\n    private matchLocalAccountIdFromTenantProfile(\n        tenantProfile: TenantProfile,\n        localAccountId: string\n    ): boolean {\n        return tenantProfile.localAccountId === localAccountId;\n    }\n\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    private matchName(claims: TokenClaims, name: string): boolean {\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\n    }\n\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    private matchUsername(\n        cachedUsername?: string,\n        filterUsername?: string\n    ): boolean {\n        return !!(\n            cachedUsername &&\n            typeof cachedUsername === \"string\" &&\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchUserAssertionHash(\n        entity: CredentialEntity,\n        userAssertionHash: string\n    ): boolean {\n        return !!(\n            entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash\n        );\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(\n        entity: AccountEntity | CredentialEntity | AppMetadataEntity,\n        environment: string\n    ): boolean {\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\n        if (this.staticAuthorityOptions) {\n            const staticAliases = getAliasesFromStaticSources(\n                this.staticAuthorityOptions,\n                this.commonLogger\n            );\n            if (\n                staticAliases.includes(environment) &&\n                staticAliases.includes(entity.environment)\n            ) {\n                return true;\n            }\n        }\n\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (\n            cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(\n        entity: CredentialEntity,\n        credentialType: string\n    ): boolean {\n        return (\n            entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(\n        entity: CredentialEntity | AppMetadataEntity,\n        clientId: string\n    ): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(\n        entity: CredentialEntity | AppMetadataEntity,\n        familyId: string\n    ): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(\n        entity: AccountEntity | CredentialEntity,\n        realm: string\n    ): boolean {\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\n    }\n\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    private matchNativeAccountId(\n        entity: AccountEntity,\n        nativeAccountId: string\n    ): boolean {\n        return !!(\n            entity.nativeAccountId && nativeAccountId === entity.nativeAccountId\n        );\n    }\n\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    private matchLoginHintFromTokenClaims(\n        tokenClaims: TokenClaims,\n        loginHint: string\n    ): boolean {\n        if (tokenClaims.login_hint === loginHint) {\n            return true;\n        }\n\n        if (tokenClaims.preferred_username === loginHint) {\n            return true;\n        }\n\n        if (tokenClaims.upn === loginHint) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Helper to match sid\n     * @param entity\n     * @param sid\n     * @returns true if the sid claim is present and matches the filter\n     */\n    private matchSid(idTokenClaims: TokenClaims, sid: string): boolean {\n        return idTokenClaims.sid === sid;\n    }\n\n    private matchAuthorityType(\n        entity: AccountEntity,\n        authorityType: string\n    ): boolean {\n        return !!(\n            entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase()\n        );\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: ScopeSet): boolean {\n        const isNotAccessTokenCredential =\n            entity.credentialType !== CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n\n        return entityScopeSet.containsScopeSet(target);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchTokenType(\n        entity: CredentialEntity,\n        tokenType: AuthenticationScheme\n    ): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param keyId\n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\n/** @internal */\nexport class DefaultStorageClass extends CacheManager {\n    async setAccount(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccount(): AccountEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    async setIdTokenCredential(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    async setAccessTokenCredential(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    async setRefreshTokenCredential(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAppMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setServerTelemetry(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAuthorityMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setThrottlingCache(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    removeItem(): boolean {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccountKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getTokenKeys(): TokenKeys {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule.js\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto.js\";\nimport { ILoggerCallback, Logger, LogLevel } from \"../logger/Logger.js\";\nimport {\n    Constants,\n    DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n} from \"../utils/Constants.js\";\nimport { version } from \"../packageMetadata.js\";\nimport type { Authority } from \"../authority/Authority.js\";\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions.js\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager.js\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager.js\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin.js\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache.js\";\nimport { ClientCredentials } from \"../account/ClientCredentials.js\";\nimport { ProtocolMode } from \"../authority/ProtocolMode.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - telemetry                  - Telemetry options and data\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n * @internal\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions;\n    systemOptions?: SystemOptions;\n    loggerOptions?: LoggerOptions;\n    cacheOptions?: CacheOptions;\n    storageInterface?: CacheManager;\n    networkInterface?: INetworkModule;\n    cryptoInterface?: ICrypto;\n    clientCredentials?: ClientCredentials;\n    libraryInfo?: LibraryInfo;\n    telemetry?: TelemetryOptions;\n    serverTelemetryManager?: ServerTelemetryManager | null;\n    persistencePlugin?: ICachePlugin | null;\n    serializableCache?: ISerializableTokenCache | null;\n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>;\n    systemOptions: Required<SystemOptions>;\n    loggerOptions: Required<LoggerOptions>;\n    cacheOptions: Required<CacheOptions>;\n    storageInterface: CacheManager;\n    networkInterface: INetworkModule;\n    cryptoInterface: Required<ICrypto>;\n    libraryInfo: LibraryInfo;\n    telemetry: Required<TelemetryOptions>;\n    serverTelemetryManager: ServerTelemetryManager | null;\n    clientCredentials: ClientCredentials;\n    persistencePlugin: ICachePlugin | null;\n    serializableCache: ISerializableTokenCache | null;\n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n * - skipAuthorityMetadataCache  - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\n * - instanceAware               - A flag of whether the STS will send back additional parameters to specify where the tokens should be retrieved from.\n * - redirectUri                 - The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n * - encodeExtraQueryParams      - A flag to choose whether to encode the extra query parameters or not. Defaults to false.\n * @internal\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    redirectUri: string;\n    clientCapabilities?: Array<string>;\n    azureCloudOptions?: AzureCloudOptions;\n    skipAuthorityMetadataCache?: boolean;\n    instanceAware?: boolean;\n    /**\n     * @deprecated This flag is deprecated and will be removed in the next major version where all extra query params will be encoded by default.\n     */\n    encodeExtraQueryParams?: boolean;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback;\n    piiLoggingEnabled?: boolean;\n    logLevel?: LogLevel;\n    correlationId?: string;\n};\n\n/**\n *  Use this to configure credential cache preferences in the ClientConfiguration object\n *\n * - claimsBasedCachingEnabled   - Sets whether tokens should be cached based on the claims hash. Default is false.\n */\nexport type CacheOptions = {\n    /**\n     * @deprecated claimsBasedCachingEnabled is deprecated and will be removed in the next major version.\n     */\n    claimsBasedCachingEnabled?: boolean;\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string;\n    version: string;\n    cpu: string;\n    os: string;\n};\n\n/**\n * AzureCloudInstance specific options\n *\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\n * - tenant                         - provision to provide the tenant info\n */\nexport type AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance;\n    tenant?: string;\n};\n\nexport type TelemetryOptions = {\n    application: ApplicationTelemetry;\n};\n\n/**\n * Telemetry information sent on request\n * - appName: Unique string name of an application\n * - appVersion: Version of the application using MSAL\n */\nexport type ApplicationTelemetry = {\n    appName: string;\n    appVersion: string;\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n    claimsBasedCachingEnabled: false,\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\n\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\n};\n\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration({\n    authOptions: userAuthOptions,\n    systemOptions: userSystemOptions,\n    loggerOptions: userLoggerOption,\n    cacheOptions: userCacheOptions,\n    storageInterface: storageImplementation,\n    networkInterface: networkImplementation,\n    cryptoInterface: cryptoImplementation,\n    clientCredentials: clientCredentials,\n    libraryInfo: libraryInfo,\n    telemetry: telemetry,\n    serverTelemetryManager: serverTelemetryManager,\n    persistencePlugin: persistencePlugin,\n    serializableCache: serializableCache,\n}: ClientConfiguration): CommonClientConfiguration {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface:\n            storageImplementation ||\n            new DefaultStorageClass(\n                userAuthOptions.clientId,\n                DEFAULT_CRYPTO_IMPLEMENTATION,\n                new Logger(loggerOptions)\n            ),\n        networkInterface:\n            networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        instanceAware: false,\n        encodeExtraQueryParams: false,\n        ...authOptions,\n    };\n}\n\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nexport function isOidcProtocolMode(config: ClientConfiguration): boolean {\n    return (\n        config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { NetworkResponse } from \"./NetworkResponse.js\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>;\n    body?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions,\n        timeout?: number\n    ): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n\n    /**\n     * acquireTokenPreRedirect (msal-browser).\n     * First part of the redirect flow.\n     * Used to acquire a new access token interactively through redirects.\n     */\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\n\n    /**\n     * acquireTokenRedirect (msal-browser).\n     * Second part of the redirect flow.\n     * Used to acquire a new access token interactively through redirects.\n     */\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\", // Time spent waiting for a concurrent iframe to complete\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority:\n        \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    NetworkClientSendPostRequestAsync: \"networkClientSendPostRequestAsync\",\n    RefreshTokenClientExecutePostToTokenEndpoint:\n        \"refreshTokenClientExecutePostToTokenEndpoint\",\n    AuthorizationCodeClientExecutePostToTokenEndpoint:\n        \"authorizationCodeClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest:\n        \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken:\n        \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken:\n        \"refreshTokenClientAcquireTokenByRefreshToken\",\n\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody:\n        \"refreshTokenClientCreateTokenRequestBody\",\n\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\n    SilentFlowClientGenerateResultFromCacheRecord:\n        \"silentFlowClientGenerateResultFromCacheRecord\",\n\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n\n    InitializeClientApplication: \"initializeClientApplication\",\n\n    InitializeCache: \"initializeCache\",\n\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\n\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient:\n        \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration:\n        \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest:\n        \"standardInteractionClientInitializeAuthorizationRequest\",\n\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n    GetStandardParams: \"getStandardParams\",\n\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponse: \"handleCodeResponse\",\n    HandleResponseEar: \"handleResponseEar\",\n    HandleResponsePlatformBroker: \"handleResponsePlatformBroker\",\n    HandleResponseCode: \"handleResponseCode\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    DeserializeResponse: \"deserializeResponse\",\n\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance:\n        \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityResolveEndpointsFromLocalSources:\n        \"authorityResolveEndpointsFromLocalSources\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork:\n        \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata:\n        \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork:\n        \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation:\n        \"authorityUpdateMetadataWithRegionalInformation\",\n\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement:\n        \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\n\n    UpdateCloudDiscoveryMetadataMeasurement:\n        \"updateCloudDiscoveryMetadataMeasurement\",\n\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n\n    RemoveHiddenIframe: \"removeHiddenIframe\",\n\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\n    ImportExistingCache: \"importExistingCache\",\n    SetUserData: \"setUserData\",\n    LocalStorageUpdated: \"localStorageUpdated\",\n\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n    GenerateHKDF: \"generateHKDF\",\n    GenerateBaseKey: \"generateBaseKey\",\n    Base64Decode: \"base64Decode\",\n    UrlEncodeArr: \"urlEncodeArr\",\n    Encrypt: \"encrypt\",\n    Decrypt: \"decrypt\",\n    GenerateEarKey: \"generateEarKey\",\n    DecryptEarResponse: \"decryptEarResponse\",\n} as const;\nexport type PerformanceEvents =\n    (typeof PerformanceEvents)[keyof typeof PerformanceEvents];\n\nexport const PerformanceEventAbbreviations: ReadonlyMap<string, string> =\n    new Map([\n        [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\n        [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\n        [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\n        [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\n        [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\n        [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\n        [\n            PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n            \"CryptoGetPKThumb\",\n        ],\n        [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\n        [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\n        [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\n        [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\n        [PerformanceEvents.SsoSilent, \"SsoSlt\"],\n        [\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            \"StdIntClientGetDiscAuth\",\n        ],\n        [\n            PerformanceEvents.FetchAccountIdWithNativeBroker,\n            \"FetchAccIdWithNtvBroker\",\n        ],\n        [\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            \"NtvIntClientAT\",\n        ],\n        [\n            PerformanceEvents.BaseClientCreateTokenRequestHeaders,\n            \"BaseClientCreateTReqHead\",\n        ],\n        [\n            PerformanceEvents.NetworkClientSendPostRequestAsync,\n            \"NetClientSendPost\",\n        ],\n        [\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\n            \"RTClientExecPost\",\n        ],\n        [\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\n            \"AuthCodeClientExecPost\",\n        ],\n        [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\n        [\n            PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\n            \"ATByRTInBroker\",\n        ],\n        [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\n        [\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            \"RTClientExecTReq\",\n        ],\n        [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\n        [\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            \"RTClientATWithCachedRT\",\n        ],\n        [\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            \"RTClientATByRT\",\n        ],\n        [\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            \"RTClientCreateTReqBody\",\n        ],\n        [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\n        [\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\n            \"SltFlowClientATCached\",\n        ],\n        [\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n            \"SltFlowClientGenResFromCache\",\n        ],\n        [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\n        [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\n        [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\n        [\n            PerformanceEvents.InitializeClientApplication,\n            \"InitClientApplication\",\n        ],\n        [PerformanceEvents.InitializeCache, \"InitCache\"],\n        [PerformanceEvents.ImportExistingCache, \"importCache\"],\n        [PerformanceEvents.SetUserData, \"setUserData\"],\n        [PerformanceEvents.LocalStorageUpdated, \"localStorageUpdated\"],\n        [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\n        [\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            \"SHandlerInitAuthReq\",\n        ],\n        [\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            \"SltHandlerMonitorIframeForHash\",\n        ],\n        [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\n        [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\n\n        [\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            \"StdIntClientCreateAuthCodeClient\",\n        ],\n        [\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            \"StdIntClientGetClientConf\",\n        ],\n        [\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            \"StdIntClientInitAuthReq\",\n        ],\n\n        [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\n\n        [\n            PerformanceEvents.HandleCodeResponseFromServer,\n            \"HandleCodeResFromServer\",\n        ],\n        [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\n        [PerformanceEvents.HandleResponseEar, \"HandleRespEar\"],\n        [PerformanceEvents.HandleResponseCode, \"HandleRespCode\"],\n        [\n            PerformanceEvents.HandleResponsePlatformBroker,\n            \"HandleRespPlatBroker\",\n        ],\n        [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\n\n        [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\n        [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\n        [\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            \"AuthClientCreateTReqBody\",\n        ],\n        [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\n        [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\n        [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\n        [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\n        [\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            \"AuthFactCreateDiscInst\",\n        ],\n        [\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            \"AuthResolveEndpointsAsync\",\n        ],\n        [\n            PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\n            \"AuthResolveEndpointsFromLocal\",\n        ],\n        [\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            \"AuthGetCDMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            \"AuthUpdCDMeta\",\n        ],\n        [\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            \"AuthUpdCDMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            \"AuthUpdEndpointMeta\",\n        ],\n        [\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n            \"AuthUpdMetaWithRegInfo\",\n        ],\n        [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\n        [\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n            \"RegDiscGetRegFromIMDS\",\n        ],\n        [\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n            \"RegDiscGetCurrentVer\",\n        ],\n        [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\n        [\n            PerformanceEvents.GetEndpointMetadataFromNetwork,\n            \"GetEndpointMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\n            \"GetCDMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.HandleRedirectPromiseMeasurement,\n            \"HandleRedirectPromise\",\n        ],\n        [\n            PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\n            \"HandleNtvRedirectPromise\",\n        ],\n        [\n            PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\n            \"UpdateCDMeta\",\n        ],\n        [\n            PerformanceEvents.UsernamePasswordClientAcquireToken,\n            \"UserPassClientAT\",\n        ],\n        [\n            PerformanceEvents.NativeMessageHandlerHandshake,\n            \"NtvMsgHandlerHandshake\",\n        ],\n        [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\n        [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\n        [\n            PerformanceEvents.ClearTokensAndKeysWithClaims,\n            \"ClearTAndKeysWithClaims\",\n        ],\n        [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\n        [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\n        [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\n        [\n            PerformanceEvents.GenerateCodeChallengeFromVerifier,\n            \"GenCodeChallengeFromVerifier\",\n        ],\n        [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\n        [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\n        [PerformanceEvents.GenerateHKDF, \"genHKDF\"],\n        [PerformanceEvents.GenerateBaseKey, \"genBaseKey\"],\n        [PerformanceEvents.Base64Decode, \"b64Decode\"],\n        [PerformanceEvents.UrlEncodeArr, \"urlEncArr\"],\n        [PerformanceEvents.Encrypt, \"encrypt\"],\n        [PerformanceEvents.Decrypt, \"decrypt\"],\n        [PerformanceEvents.GenerateEarKey, \"genEarKey\"],\n        [PerformanceEvents.DecryptEarResponse, \"decryptEarResp\"],\n    ]);\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n} as const;\nexport type PerformanceEventStatus =\n    (typeof PerformanceEventStatus)[keyof typeof PerformanceEventStatus];\n\nexport type SubMeasurement = {\n    name: string;\n    startTimeMs: number;\n};\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string;\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus;\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string;\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string;\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string;\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null;\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null;\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null;\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number;\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null;\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string;\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string;\n\n    /**\n     * Server error number\n     */\n    serverErrorNo?: string;\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string;\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string;\n\n    /**\n     * Version of the library used last. Used to track upgrades and downgrades\n     */\n    previousLibraryVersion?: string;\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean;\n\n    /**\n     * Request ID returned from the response\n     *\n     * @type {?string}\n     */\n    requestId?: string;\n\n    /**\n     * Cache lookup policy\n     *\n     * @type {?number}\n     */\n    cacheLookupPolicy?: number | undefined;\n\n    /**\n     * Cache Outcome\n     * @type {?number}\n     */\n    cacheOutcome?: number;\n\n    /**\n     * Amount of time spent in the JS queue in milliseconds.\n     *\n     * @type {?number}\n     */\n    queuedTimeMs?: number;\n\n    /**\n     * Sub-measurements for internal use. To be deleted before flushing.\n     */\n    incompleteSubMeasurements?: Map<string, SubMeasurement>;\n\n    visibilityChangeCount?: number;\n    incompleteSubsCount?: number;\n\n    /**\n     * CorrelationId of the in progress iframe request that was awaited\n     */\n    awaitIframeCorrelationId?: string;\n    /**\n     * Amount of times queued in the JS event queue.\n     *\n     * @type {?number}\n     */\n    queuedCount?: number;\n    /**\n     * Amount of manually completed queue events.\n     *\n     * @type {?number}\n     */\n    queuedManuallyCompletedCount?: number;\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number;\n\n    /**\n     *\n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number;\n\n    /**\n     *\n     * Size of the refresh token\n     *\n     * @type {number}\n     */\n\n    refreshTokenSize?: number | undefined;\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string;\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string;\n\n    /**\n     * The following are fields that may be emitted in native broker scenarios\n     */\n    extensionId?: string;\n    extensionVersion?: string;\n    matsBrokerVersion?: string;\n    matsAccountJoinOnStart?: string;\n    matsAccountJoinOnEnd?: string;\n    matsDeviceJoin?: string;\n    matsPromptBehavior?: string;\n    matsApiErrorCode?: number;\n    matsUiVisible?: boolean;\n    matsSilentCode?: number;\n    matsSilentBiSubCode?: number;\n    matsSilentMessage?: string;\n    matsSilentStatus?: number;\n    matsHttpStatus?: number;\n    matsHttpEventCount?: number;\n\n    /**\n     * Http POST metadata\n     */\n    httpVerToken?: string;\n    httpStatus?: number;\n    contentTypeHeader?: string;\n    contentLengthHeader?: string;\n\n    /**\n     * Platform broker fields\n     */\n    allowPlatformBroker?: boolean;\n    extensionInstalled?: boolean;\n    extensionHandshakeTimeoutMs?: number;\n    extensionHandshakeTimedOut?: boolean;\n\n    /**\n     * Nested App Auth Fields\n     */\n    nestedAppAuthRequest?: boolean;\n\n    /**\n     * Multiple matched access/id/refresh tokens in the cache\n     */\n    multiMatchedAT?: number;\n    multiMatchedID?: number;\n    multiMatchedRT?: number;\n\n    errorName?: string;\n    errorStack?: string[];\n\n    // Event context as JSON string\n    context?: string;\n\n    // Number of tokens in the cache to be reported when cache quota is exceeded\n    cacheRtCount?: number;\n    cacheIdCount?: number;\n    cacheAtCount?: number;\n\n    // Scenario id to track custom user prompts\n    scenarioId?: string;\n\n    accountType?: \"AAD\" | \"MSA\" | \"B2C\";\n\n    /**\n     * Server error that triggers a request retry\n     *\n     * @type {string}\n     */\n    retryError?: string;\n\n    embeddedClientId?: string;\n    embeddedRedirectUri?: string;\n\n    isAsyncPopup?: boolean;\n\n    rtExpiresOnMs?: number;\n\n    sidFromClaims?: boolean;\n    sidFromRequest?: boolean;\n    loginHintFromRequest?: boolean;\n    loginHintFromUpn?: boolean;\n    loginHintFromClaim?: boolean;\n    domainHintFromRequest?: boolean;\n\n    prompt?: string;\n\n    usePreGeneratedPkce?: boolean;\n\n    // Number of MSAL JS instances in the frame\n    msalInstanceCount?: number;\n    // Number of MSAL JS instances using the same client id in the frame\n    sameClientIdInstanceCount?: number;\n};\n\nexport type PerformanceEventContext = {\n    dur?: number;\n    err?: string;\n    subErr?: string;\n    fail?: number;\n};\n\nexport type PerformanceEventStackedContext = PerformanceEventContext & {\n    name?: string;\n    childErr?: string;\n};\n\nexport const IntFields: ReadonlySet<string> = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n    \"multiMatchedAT\",\n    \"multiMatchedID\",\n    \"multiMatchedRT\",\n    \"unencryptedCacheCount\",\n    \"encryptedCacheExpiredCount\",\n]);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IPerformanceClient,\n    InProgressPerformanceEvent,\n} from \"./IPerformanceClient.js\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement.js\";\nimport {\n    PerformanceEvent,\n    PerformanceEventStatus,\n} from \"./PerformanceEvent.js\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    startMeasurement(): void {\n        return;\n    }\n    endMeasurement(): void {\n        return;\n    }\n    flushMeasurement(): number | null {\n        return null;\n    }\n}\n\nexport class StubPerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n\n    startMeasurement(\n        measureName: string,\n        correlationId?: string | undefined\n    ): InProgressPerformanceEvent {\n        return {\n            end: () => null,\n            discard: () => {},\n            add: () => {},\n            increment: () => {},\n            event: {\n                eventId: this.generateId(),\n                status: PerformanceEventStatus.InProgress,\n                authority: \"\",\n                libraryName: \"\",\n                libraryVersion: \"\",\n                clientId: \"\",\n                name: measureName,\n                startTimeMs: Date.now(),\n                correlationId: correlationId || \"\",\n            },\n            measurement: new StubPerformanceMeasurement(),\n        };\n    }\n\n    startPerformanceMeasurement(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n    calculateQueuedTime(): number {\n        return 0;\n    }\n\n    addQueueMeasurement(): void {\n        return;\n    }\n\n    setPreQueueTime(): void {\n        return;\n    }\n\n    endMeasurement(): PerformanceEvent | null {\n        return null;\n    }\n\n    discardMeasurements(): void {\n        return;\n    }\n\n    removePerformanceCallback(): boolean {\n        return true;\n    }\n\n    addPerformanceCallback(): string {\n        return \"\";\n    }\n\n    emitEvents(): void {\n        return;\n    }\n\n    addFields(): void {\n        return;\n    }\n\n    incrementFields(): void {\n        return;\n    }\n\n    cacheEventByCorrelationId(): void {\n        return;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient.js\";\nimport { NavigationOptions } from \"./NavigationOptions.js\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    private static defaultNavigateWindow(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url); // CodeQL [SM03712] Application owner controls the URL. User can't change it.\n        } else {\n            window.location.assign(url); // CodeQL [SM03712] Application owner controls the URL. User can't change it.\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError.js\";\n\n/**\n * Represents network related errors\n */\nexport class NetworkError extends AuthError {\n    error: AuthError;\n    httpStatus?: number;\n    responseHeaders?: Record<string, string>;\n\n    constructor(\n        error: AuthError,\n        httpStatus?: number,\n        responseHeaders?: Record<string, string>\n    ) {\n        super(error.errorCode, error.errorMessage, error.subError);\n\n        Object.setPrototypeOf(this, NetworkError.prototype);\n        this.name = \"NetworkError\";\n        this.error = error;\n        this.httpStatus = httpStatus;\n        this.responseHeaders = responseHeaders;\n    }\n}\n\n/**\n * Creates NetworkError object for a failed network request\n * @param error - Error to be thrown back to the caller\n * @param httpStatus - Status code of the network request\n * @param responseHeaders - Response headers of the network request, when available\n * @returns NetworkError object\n */\nexport function createNetworkError(\n    error: AuthError,\n    httpStatus?: number,\n    responseHeaders?: Record<string, string>,\n    additionalError?: Error\n): NetworkError {\n    error.errorMessage = `${error.errorMessage}, additionalErrorInfo: error.name:${additionalError?.name}, error.message:${additionalError?.message}`;\n    return new NetworkError(error, httpStatus, responseHeaders);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const pkceNotCreated = \"pkce_not_created\";\nexport const earJwkEmpty = \"ear_jwk_empty\";\nexport const earJweEmpty = \"ear_jwe_empty\";\nexport const cryptoNonExistent = \"crypto_nonexistent\";\nexport const emptyNavigateUri = \"empty_navigate_uri\";\nexport const hashEmptyError = \"hash_empty_error\";\nexport const noStateInHash = \"no_state_in_hash\";\nexport const hashDoesNotContainKnownProperties =\n    \"hash_does_not_contain_known_properties\";\nexport const unableToParseState = \"unable_to_parse_state\";\nexport const stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\nexport const interactionInProgress = \"interaction_in_progress\";\nexport const popupWindowError = \"popup_window_error\";\nexport const emptyWindowError = \"empty_window_error\";\nexport const userCancelled = \"user_cancelled\";\nexport const monitorPopupTimeout = \"monitor_popup_timeout\";\nexport const monitorWindowTimeout = \"monitor_window_timeout\";\nexport const redirectInIframe = \"redirect_in_iframe\";\nexport const blockIframeReload = \"block_iframe_reload\";\nexport const blockNestedPopups = \"block_nested_popups\";\nexport const iframeClosedPrematurely = \"iframe_closed_prematurely\";\nexport const silentLogoutUnsupported = \"silent_logout_unsupported\";\nexport const noAccountError = \"no_account_error\";\nexport const silentPromptValueError = \"silent_prompt_value_error\";\nexport const noTokenRequestCacheError = \"no_token_request_cache_error\";\nexport const unableToParseTokenRequestCacheError =\n    \"unable_to_parse_token_request_cache_error\";\nexport const authRequestNotSetError = \"auth_request_not_set_error\";\nexport const invalidCacheType = \"invalid_cache_type\";\nexport const nonBrowserEnvironment = \"non_browser_environment\";\nexport const databaseNotOpen = \"database_not_open\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const postRequestFailed = \"post_request_failed\";\nexport const getRequestFailed = \"get_request_failed\";\nexport const failedToParseResponse = \"failed_to_parse_response\";\nexport const unableToLoadToken = \"unable_to_load_token\";\nexport const cryptoKeyNotFound = \"crypto_key_not_found\";\nexport const authCodeRequired = \"auth_code_required\";\nexport const authCodeOrNativeAccountIdRequired =\n    \"auth_code_or_nativeAccountId_required\";\nexport const spaCodeAndNativeAccountIdPresent =\n    \"spa_code_and_nativeAccountId_present\";\nexport const databaseUnavailable = \"database_unavailable\";\nexport const unableToAcquireTokenFromNativePlatform =\n    \"unable_to_acquire_token_from_native_platform\";\nexport const nativeHandshakeTimeout = \"native_handshake_timeout\";\nexport const nativeExtensionNotInstalled = \"native_extension_not_installed\";\nexport const nativeConnectionNotEstablished =\n    \"native_connection_not_established\";\nexport const uninitializedPublicClientApplication =\n    \"uninitialized_public_client_application\";\nexport const nativePromptNotSupported = \"native_prompt_not_supported\";\nexport const invalidBase64String = \"invalid_base64_string\";\nexport const invalidPopTokenRequest = \"invalid_pop_token_request\";\nexport const failedToBuildHeaders = \"failed_to_build_headers\";\nexport const failedToParseHeaders = \"failed_to_parse_headers\";\nexport const failedToDecryptEarResponse = \"failed_to_decrypt_ear_response\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common/browser\";\nimport * as BrowserAuthErrorCodes from \"./BrowserAuthErrorCodes.js\";\nexport { BrowserAuthErrorCodes }; // Allow importing as \"BrowserAuthErrorCodes\"\n\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessages = {\n    [BrowserAuthErrorCodes.pkceNotCreated]:\n        \"The PKCE code challenge and verifier could not be generated.\",\n    [BrowserAuthErrorCodes.earJwkEmpty]:\n        \"No EAR encryption key provided. This is unexpected.\",\n    [BrowserAuthErrorCodes.earJweEmpty]:\n        \"Server response does not contain ear_jwe property. This is unexpected.\",\n    [BrowserAuthErrorCodes.cryptoNonExistent]:\n        \"The crypto object or function is not available.\",\n    [BrowserAuthErrorCodes.emptyNavigateUri]:\n        \"Navigation URI is empty. Please check stack trace for more info.\",\n    [BrowserAuthErrorCodes.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\n    [BrowserAuthErrorCodes.noStateInHash]:\n        \"Hash does not contain state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.unableToParseState]:\n        \"Unable to parse state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.stateInteractionTypeMismatch]:\n        \"Hash contains state but the interaction type does not match the caller.\",\n    [BrowserAuthErrorCodes.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\n    [BrowserAuthErrorCodes.popupWindowError]:\n        \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    [BrowserAuthErrorCodes.emptyWindowError]:\n        \"window.open returned null or undefined window object.\",\n    [BrowserAuthErrorCodes.userCancelled]: \"User cancelled the flow.\",\n    [BrowserAuthErrorCodes.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.redirectInIframe]:\n        \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    [BrowserAuthErrorCodes.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.blockNestedPopups]:\n        \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    [BrowserAuthErrorCodes.iframeClosedPrematurely]:\n        \"The iframe being monitored was closed prematurely.\",\n    [BrowserAuthErrorCodes.silentLogoutUnsupported]:\n        \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    [BrowserAuthErrorCodes.noAccountError]:\n        \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    [BrowserAuthErrorCodes.silentPromptValueError]:\n        \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    [BrowserAuthErrorCodes.noTokenRequestCacheError]:\n        \"No token request found in cache.\",\n    [BrowserAuthErrorCodes.unableToParseTokenRequestCacheError]:\n        \"The cached token request could not be parsed.\",\n    [BrowserAuthErrorCodes.authRequestNotSetError]:\n        \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    [BrowserAuthErrorCodes.invalidCacheType]: \"Invalid cache type\",\n    [BrowserAuthErrorCodes.nonBrowserEnvironment]:\n        \"Login and token requests are not supported in non-browser environments.\",\n    [BrowserAuthErrorCodes.databaseNotOpen]: \"Database is not open!\",\n    [BrowserAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [BrowserAuthErrorCodes.postRequestFailed]:\n        \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    [BrowserAuthErrorCodes.getRequestFailed]:\n        \"Network request failed. Please check the network trace to determine root cause.\",\n    [BrowserAuthErrorCodes.failedToParseResponse]:\n        \"Failed to parse network response. Check network trace.\",\n    [BrowserAuthErrorCodes.unableToLoadToken]: \"Error loading token to cache.\",\n    [BrowserAuthErrorCodes.cryptoKeyNotFound]:\n        \"Cryptographic Key or Keypair not found in browser storage.\",\n    [BrowserAuthErrorCodes.authCodeRequired]:\n        \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    [BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired]:\n        \"An authorization code or nativeAccountId must be provided to this flow.\",\n    [BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent]:\n        \"Request cannot contain both spa code and native account id.\",\n    [BrowserAuthErrorCodes.databaseUnavailable]:\n        \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    [BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativeHandshakeTimeout]:\n        \"Timed out while attempting to establish connection to browser extension\",\n    [BrowserAuthErrorCodes.nativeExtensionNotInstalled]:\n        \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    [BrowserAuthErrorCodes.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativePromptNotSupported]:\n        \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    [BrowserAuthErrorCodes.invalidBase64String]:\n        \"Invalid base64 encoded string.\",\n    [BrowserAuthErrorCodes.invalidPopTokenRequest]:\n        \"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.\",\n    [BrowserAuthErrorCodes.failedToBuildHeaders]:\n        \"Failed to build request headers object.\",\n    [BrowserAuthErrorCodes.failedToParseHeaders]:\n        \"Failed to parse response headers\",\n    [BrowserAuthErrorCodes.failedToDecryptEarResponse]:\n        \"Failed to decrypt ear response\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use exported BrowserAuthErrorCodes instead.\n * In your app you can do :\n * ```\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\n * ```\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: BrowserAuthErrorCodes.pkceNotCreated,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.pkceNotCreated],\n    },\n    cryptoDoesNotExist: {\n        code: BrowserAuthErrorCodes.cryptoNonExistent,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoNonExistent],\n    },\n    emptyNavigateUriError: {\n        code: BrowserAuthErrorCodes.emptyNavigateUri,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyNavigateUri],\n    },\n    hashEmptyError: {\n        code: BrowserAuthErrorCodes.hashEmptyError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.hashEmptyError],\n    },\n    hashDoesNotContainStateError: {\n        code: BrowserAuthErrorCodes.noStateInHash,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noStateInHash],\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: BrowserAuthErrorCodes.hashDoesNotContainKnownProperties,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n        ],\n    },\n    unableToParseStateError: {\n        code: BrowserAuthErrorCodes.unableToParseState,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseState\n        ],\n    },\n    stateInteractionTypeMismatchError: {\n        code: BrowserAuthErrorCodes.stateInteractionTypeMismatch,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        ],\n    },\n    interactionInProgress: {\n        code: BrowserAuthErrorCodes.interactionInProgress,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.interactionInProgress\n        ],\n    },\n    popupWindowError: {\n        code: BrowserAuthErrorCodes.popupWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.popupWindowError],\n    },\n    emptyWindowError: {\n        code: BrowserAuthErrorCodes.emptyWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyWindowError],\n    },\n    userCancelledError: {\n        code: BrowserAuthErrorCodes.userCancelled,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.userCancelled],\n    },\n    monitorPopupTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorPopupTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorPopupTimeout\n        ],\n    },\n    monitorIframeTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorWindowTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorWindowTimeout\n        ],\n    },\n    redirectInIframeError: {\n        code: BrowserAuthErrorCodes.redirectInIframe,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.redirectInIframe],\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: BrowserAuthErrorCodes.blockIframeReload,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockIframeReload],\n    },\n    blockAcquireTokenInPopupsError: {\n        code: BrowserAuthErrorCodes.blockNestedPopups,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockNestedPopups],\n    },\n    iframeClosedPrematurelyError: {\n        code: BrowserAuthErrorCodes.iframeClosedPrematurely,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.iframeClosedPrematurely\n        ],\n    },\n    silentLogoutUnsupportedError: {\n        code: BrowserAuthErrorCodes.silentLogoutUnsupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentLogoutUnsupported\n        ],\n    },\n    noAccountError: {\n        code: BrowserAuthErrorCodes.noAccountError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noAccountError],\n    },\n    silentPromptValueError: {\n        code: BrowserAuthErrorCodes.silentPromptValueError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentPromptValueError\n        ],\n    },\n    noTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.noTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noTokenRequestCacheError\n        ],\n    },\n    unableToParseTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.unableToParseTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n        ],\n    },\n    authRequestNotSet: {\n        code: BrowserAuthErrorCodes.authRequestNotSetError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authRequestNotSetError\n        ],\n    },\n    invalidCacheType: {\n        code: BrowserAuthErrorCodes.invalidCacheType,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.invalidCacheType],\n    },\n    notInBrowserEnvironment: {\n        code: BrowserAuthErrorCodes.nonBrowserEnvironment,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        ],\n    },\n    databaseNotOpen: {\n        code: BrowserAuthErrorCodes.databaseNotOpen,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.databaseNotOpen],\n    },\n    noNetworkConnectivity: {\n        code: BrowserAuthErrorCodes.noNetworkConnectivity,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    postRequestFailed: {\n        code: BrowserAuthErrorCodes.postRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.postRequestFailed],\n    },\n    getRequestFailed: {\n        code: BrowserAuthErrorCodes.getRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.getRequestFailed],\n    },\n    failedToParseNetworkResponse: {\n        code: BrowserAuthErrorCodes.failedToParseResponse,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.failedToParseResponse\n        ],\n    },\n    unableToLoadTokenError: {\n        code: BrowserAuthErrorCodes.unableToLoadToken,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.unableToLoadToken],\n    },\n    signingKeyNotFoundInStorage: {\n        code: BrowserAuthErrorCodes.cryptoKeyNotFound,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoKeyNotFound],\n    },\n    authCodeRequired: {\n        code: BrowserAuthErrorCodes.authCodeRequired,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.authCodeRequired],\n    },\n    authCodeOrNativeAccountRequired: {\n        code: BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n        ],\n    },\n    spaCodeAndNativeAccountPresent: {\n        code: BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n        ],\n    },\n    databaseUnavailable: {\n        code: BrowserAuthErrorCodes.databaseUnavailable,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.databaseUnavailable\n        ],\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n        ],\n    },\n    nativeHandshakeTimeout: {\n        code: BrowserAuthErrorCodes.nativeHandshakeTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeHandshakeTimeout\n        ],\n    },\n    nativeExtensionNotInstalled: {\n        code: BrowserAuthErrorCodes.nativeExtensionNotInstalled,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeExtensionNotInstalled\n        ],\n    },\n    nativeConnectionNotEstablished: {\n        code: BrowserAuthErrorCodes.nativeConnectionNotEstablished,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeConnectionNotEstablished\n        ],\n    },\n    uninitializedPublicClientApplication: {\n        code: BrowserAuthErrorCodes.uninitializedPublicClientApplication,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        ],\n    },\n    nativePromptNotSupported: {\n        code: BrowserAuthErrorCodes.nativePromptNotSupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativePromptNotSupported\n        ],\n    },\n    invalidBase64StringError: {\n        code: BrowserAuthErrorCodes.invalidBase64String,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.invalidBase64String\n        ],\n    },\n    invalidPopTokenRequest: {\n        code: BrowserAuthErrorCodes.invalidPopTokenRequest,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.invalidPopTokenRequest\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n    constructor(errorCode: string, subError?: string) {\n        super(errorCode, BrowserAuthErrorMessages[errorCode], subError);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n}\n\nexport function createBrowserAuthError(\n    errorCode: string,\n    subError?: string\n): BrowserAuthError {\n    return new BrowserAuthError(errorCode, subError);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    INetworkModule,\n    NetworkRequestOptions,\n    NetworkResponse,\n    createNetworkError,\n} from \"@azure/msal-common/browser\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants.js\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        let response: Response;\n        let responseHeaders: Record<string, string> = {};\n        let responseStatus = 0;\n        const reqHeaders = getFetchHeaders(options);\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: reqHeaders,\n            });\n        } catch (e) {\n            throw createNetworkError(\n                createBrowserAuthError(\n                    window.navigator.onLine\n                        ? BrowserAuthErrorCodes.getRequestFailed\n                        : BrowserAuthErrorCodes.noNetworkConnectivity\n                ),\n                undefined,\n                undefined,\n                e as Error\n            );\n        }\n\n        responseHeaders = getHeaderDict(response.headers);\n        try {\n            responseStatus = response.status;\n            return {\n                headers: responseHeaders,\n                body: (await response.json()) as T,\n                status: responseStatus,\n            };\n        } catch (e) {\n            throw createNetworkError(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.failedToParseResponse\n                ),\n                responseStatus,\n                responseHeaders,\n                e as Error\n            );\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || \"\";\n        const reqHeaders = getFetchHeaders(options);\n\n        let response: Response;\n        let responseStatus = 0;\n        let responseHeaders: Record<string, string> = {};\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: reqHeaders,\n                body: reqBody,\n            });\n        } catch (e) {\n            throw createNetworkError(\n                createBrowserAuthError(\n                    window.navigator.onLine\n                        ? BrowserAuthErrorCodes.postRequestFailed\n                        : BrowserAuthErrorCodes.noNetworkConnectivity\n                ),\n                undefined,\n                undefined,\n                e as Error\n            );\n        }\n\n        responseHeaders = getHeaderDict(response.headers);\n        try {\n            responseStatus = response.status;\n            return {\n                headers: responseHeaders,\n                body: (await response.json()) as T,\n                status: responseStatus,\n            };\n        } catch (e) {\n            throw createNetworkError(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.failedToParseResponse\n                ),\n                responseStatus,\n                responseHeaders,\n                e as Error\n            );\n        }\n    }\n}\n\n/**\n * Get Fetch API Headers object from string map\n * @param inputHeaders\n */\nfunction getFetchHeaders(options?: NetworkRequestOptions): Headers {\n    try {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.entries(optionsHeaders).forEach(([key, value]) => {\n            headers.append(key, value);\n        });\n        return headers;\n    } catch (e) {\n        throw createNetworkError(\n            createBrowserAuthError(BrowserAuthErrorCodes.failedToBuildHeaders),\n            undefined,\n            undefined,\n            e as Error\n        );\n    }\n}\n\n/**\n * Returns object representing response headers\n * @param headers\n * @returns\n */\nfunction getHeaderDict(headers: Headers): Record<string, string> {\n    try {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    } catch (e) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.failedToParseHeaders\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nexport function urlEncode(input: string): string {\n    return encodeURIComponent(\n        base64Encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n    );\n}\n\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nexport function urlEncodeArr(inputArr: Uint8Array): string {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nexport function base64Encode(input: string): string {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes: Uint8Array): string {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\n        \"\"\n    );\n    return btoa(binString);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError.js\";\n\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\n\n/**\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\n * @param input\n */\nexport function base64Decode(input: string): string {\n    return new TextDecoder().decode(base64DecToArr(input));\n}\n\n/**\n * Decodes base64 into Uint8Array\n * @param base64String\n */\nexport function base64DecToArr(base64String: string): Uint8Array {\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (encodedString.length % 4) {\n        case 0:\n            break;\n        case 2:\n            encodedString += \"==\";\n            break;\n        case 3:\n            encodedString += \"=\";\n            break;\n        default:\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.invalidBase64String\n            );\n    }\n    const binString = atob(encodedString);\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport {\n    IPerformanceClient,\n    PerformanceEvents,\n} from \"@azure/msal-common/browser\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants.js\";\nimport { base64Encode, urlEncodeArr } from \"../encode/Base64Encode.js\";\nimport { base64Decode, base64DecToArr } from \"../encode/Base64Decode.js\";\n\n/**\n * This file defines functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\n\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// Algorithms\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\nconst AES_GCM = \"AES-GCM\";\nconst HKDF = \"HKDF\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n// UUID hex digits\nconst UUID_CHARS = \"0123456789abcdef\";\n// Array to store UINT32 random value\nconst UINT32_ARR = new Uint32Array(1);\n\n// Key Format\nconst RAW = \"raw\";\n// Key Usages\nconst ENCRYPT = \"encrypt\";\nconst DECRYPT = \"decrypt\";\nconst DERIVE_KEY = \"deriveKey\";\n\n// Suberror\nconst SUBTLE_SUBERROR = \"crypto_subtle_undefined\";\n\nconst keygenAlgorithmOptions: RsaHashedKeyGenParams = {\n    name: PKCS1_V15_KEYGEN_ALG,\n    hash: S256_HASH_ALG,\n    modulusLength: MODULUS_LENGTH,\n    publicExponent: PUBLIC_EXPONENT,\n};\n\n/**\n * Check whether browser crypto is available.\n */\nexport function validateCryptoAvailable(\n    skipValidateSubtleCrypto: boolean\n): void {\n    if (!window) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        );\n    }\n    if (!window.crypto) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.cryptoNonExistent);\n    }\n    if (!skipValidateSubtleCrypto && !window.crypto.subtle) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.cryptoNonExistent,\n            SUBTLE_SUBERROR\n        );\n    }\n}\n\n/**\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n * @param dataString {string} data string\n * @param performanceClient {?IPerformanceClient}\n * @param correlationId {?string} correlation id\n */\nexport async function sha256Digest(\n    dataString: string,\n    performanceClient?: IPerformanceClient,\n    correlationId?: string\n): Promise<ArrayBuffer> {\n    performanceClient?.addQueueMeasurement(\n        PerformanceEvents.Sha256Digest,\n        correlationId\n    );\n    const encoder = new TextEncoder();\n    const data = encoder.encode(dataString);\n    return window.crypto.subtle.digest(\n        S256_HASH_ALG,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n\n/**\n * Populates buffer with cryptographically random values.\n * @param dataBuffer\n */\nexport function getRandomValues(dataBuffer: Uint8Array): Uint8Array {\n    return window.crypto.getRandomValues(dataBuffer);\n}\n\n/**\n * Returns random Uint32 value.\n * @returns {number}\n */\nfunction getRandomUint32(): number {\n    window.crypto.getRandomValues(UINT32_ARR);\n    return UINT32_ARR[0];\n}\n\n/**\n * Creates a UUID v7 from the current timestamp.\n * Implementation relies on the system clock to guarantee increasing order of generated identifiers.\n * @returns {number}\n */\nexport function createNewGuid(): string {\n    const currentTimestamp = Date.now();\n    const baseRand = getRandomUint32() * 0x400 + (getRandomUint32() & 0x3ff);\n\n    // Result byte array\n    const bytes = new Uint8Array(16);\n    // A 12-bit `rand_a` field value\n    const randA = Math.trunc(baseRand / 2 ** 30);\n    // The higher 30 bits of 62-bit `rand_b` field value\n    const randBHi = baseRand & (2 ** 30 - 1);\n    // The lower 32 bits of 62-bit `rand_b` field value\n    const randBLo = getRandomUint32();\n\n    bytes[0] = currentTimestamp / 2 ** 40;\n    bytes[1] = currentTimestamp / 2 ** 32;\n    bytes[2] = currentTimestamp / 2 ** 24;\n    bytes[3] = currentTimestamp / 2 ** 16;\n    bytes[4] = currentTimestamp / 2 ** 8;\n    bytes[5] = currentTimestamp;\n    bytes[6] = 0x70 | (randA >>> 8);\n    bytes[7] = randA;\n    bytes[8] = 0x80 | (randBHi >>> 24);\n    bytes[9] = randBHi >>> 16;\n    bytes[10] = randBHi >>> 8;\n    bytes[11] = randBHi;\n    bytes[12] = randBLo >>> 24;\n    bytes[13] = randBLo >>> 16;\n    bytes[14] = randBLo >>> 8;\n    bytes[15] = randBLo;\n\n    let text = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        text += UUID_CHARS.charAt(bytes[i] >>> 4);\n        text += UUID_CHARS.charAt(bytes[i] & 0xf);\n        if (i === 3 || i === 5 || i === 7 || i === 9) {\n            text += \"-\";\n        }\n    }\n    return text;\n}\n\n/**\n * Generates a keypair based on current keygen algorithm config.\n * @param extractable\n * @param usages\n */\nexport async function generateKeyPair(\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKeyPair> {\n    return window.crypto.subtle.generateKey(\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKeyPair>;\n}\n\n/**\n * Export key as Json Web Key (JWK)\n * @param key\n */\nexport async function exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n    return window.crypto.subtle.exportKey(\n        KEY_FORMAT_JWK,\n        key\n    ) as Promise<JsonWebKey>;\n}\n\n/**\n * Imports key as Json Web Key (JWK), can set extractable and usages.\n * @param key\n * @param extractable\n * @param usages\n */\nexport async function importJwk(\n    key: JsonWebKey,\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKey> {\n    return window.crypto.subtle.importKey(\n        KEY_FORMAT_JWK,\n        key,\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKey>;\n}\n\n/**\n * Signs given data with given key\n * @param key\n * @param data\n */\nexport async function sign(\n    key: CryptoKey,\n    data: ArrayBuffer\n): Promise<ArrayBuffer> {\n    return window.crypto.subtle.sign(\n        keygenAlgorithmOptions,\n        key,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n\n/**\n * Generates Base64 encoded jwk used in the Encrypted Authorize Response (EAR) flow\n */\nexport async function generateEarKey(): Promise<string> {\n    const key = await generateBaseKey();\n    const keyStr = urlEncodeArr(new Uint8Array(key));\n\n    const jwk = {\n        alg: \"dir\",\n        kty: \"oct\",\n        k: keyStr,\n    };\n\n    return base64Encode(JSON.stringify(jwk));\n}\n\n/**\n * Parses earJwk for encryption key and returns CryptoKey object\n * @param earJwk\n * @returns\n */\nexport async function importEarKey(earJwk: string): Promise<CryptoKey> {\n    const b64DecodedJwk = base64Decode(earJwk);\n    const jwkJson = JSON.parse(b64DecodedJwk);\n    const rawKey = jwkJson.k;\n    const keyBuffer = base64DecToArr(rawKey);\n\n    return window.crypto.subtle.importKey(RAW, keyBuffer, AES_GCM, false, [\n        DECRYPT,\n    ]);\n}\n\n/**\n * Decrypt ear_jwe response returned in the Encrypted Authorize Response (EAR) flow\n * @param earJwk\n * @param earJwe\n * @returns\n */\nexport async function decryptEarResponse(\n    earJwk: string,\n    earJwe: string\n): Promise<string> {\n    const earJweParts = earJwe.split(\".\");\n    if (earJweParts.length !== 5) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.failedToDecryptEarResponse,\n            \"jwe_length\"\n        );\n    }\n\n    const key = await importEarKey(earJwk).catch(() => {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.failedToDecryptEarResponse,\n            \"import_key\"\n        );\n    });\n\n    try {\n        const header = new TextEncoder().encode(earJweParts[0]);\n        const iv = base64DecToArr(earJweParts[2]);\n        const ciphertext = base64DecToArr(earJweParts[3]);\n        const tag = base64DecToArr(earJweParts[4]);\n        const tagLengthBits = tag.byteLength * 8;\n\n        // Concat ciphertext and tag\n        const encryptedData = new Uint8Array(ciphertext.length + tag.length);\n        encryptedData.set(ciphertext);\n        encryptedData.set(tag, ciphertext.length);\n\n        const decryptedData = await window.crypto.subtle.decrypt(\n            {\n                name: AES_GCM,\n                iv: iv,\n                tagLength: tagLengthBits,\n                additionalData: header,\n            },\n            key,\n            encryptedData\n        );\n\n        return new TextDecoder().decode(decryptedData);\n    } catch (e) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.failedToDecryptEarResponse,\n            \"decrypt\"\n        );\n    }\n}\n\n/**\n * Generates symmetric base encryption key. This may be stored as all encryption/decryption keys will be derived from this one.\n */\nexport async function generateBaseKey(): Promise<ArrayBuffer> {\n    const key = await window.crypto.subtle.generateKey(\n        {\n            name: AES_GCM,\n            length: 256,\n        },\n        true,\n        [ENCRYPT, DECRYPT]\n    );\n    return window.crypto.subtle.exportKey(RAW, key);\n}\n\n/**\n * Returns the raw key to be passed into the key derivation function\n * @param baseKey\n * @returns\n */\nexport async function generateHKDF(baseKey: ArrayBuffer): Promise<CryptoKey> {\n    return window.crypto.subtle.importKey(RAW, baseKey, HKDF, false, [\n        DERIVE_KEY,\n    ]);\n}\n\n/**\n * Given a base key and a nonce generates a derived key to be used in encryption and decryption.\n * Note: every time we encrypt a new key is derived\n * @param baseKey\n * @param nonce\n * @returns\n */\nasync function deriveKey(\n    baseKey: CryptoKey,\n    nonce: ArrayBuffer,\n    context: string\n): Promise<CryptoKey> {\n    return window.crypto.subtle.deriveKey(\n        {\n            name: HKDF,\n            salt: nonce,\n            hash: S256_HASH_ALG,\n            info: new TextEncoder().encode(context),\n        },\n        baseKey,\n        { name: AES_GCM, length: 256 },\n        false,\n        [ENCRYPT, DECRYPT]\n    );\n}\n\n/**\n * Encrypt the given data given a base key. Returns encrypted data and a nonce that must be provided during decryption\n * @param key\n * @param rawData\n */\nexport async function encrypt(\n    baseKey: CryptoKey,\n    rawData: string,\n    context: string\n): Promise<{ data: string; nonce: string }> {\n    const encodedData = new TextEncoder().encode(rawData);\n    // The nonce must never be reused with a given key.\n    const nonce = window.crypto.getRandomValues(new Uint8Array(16));\n    const derivedKey = await deriveKey(baseKey, nonce, context);\n    const encryptedData = await window.crypto.subtle.encrypt(\n        {\n            name: AES_GCM,\n            iv: new Uint8Array(12), // New key is derived for every encrypt so we don't need a new nonce\n        },\n        derivedKey,\n        encodedData\n    );\n\n    return {\n        data: urlEncodeArr(new Uint8Array(encryptedData)),\n        nonce: urlEncodeArr(nonce),\n    };\n}\n\n/**\n * Decrypt data with the given key and nonce\n * @param key\n * @param nonce\n * @param encryptedData\n * @returns\n */\nexport async function decrypt(\n    baseKey: CryptoKey,\n    nonce: string,\n    context: string,\n    encryptedData: string\n): Promise<string> {\n    const encodedData = base64DecToArr(encryptedData);\n    const derivedKey = await deriveKey(baseKey, base64DecToArr(nonce), context);\n    const decryptedData = await window.crypto.subtle.decrypt(\n        {\n            name: AES_GCM,\n            iv: new Uint8Array(12), // New key is derived for every encrypt so we don't need a new nonce\n        },\n        derivedKey,\n        encodedData\n    );\n\n    return new TextDecoder().decode(decryptedData);\n}\n\n/**\n * Returns the SHA-256 hash of an input string\n * @param plainText\n */\nexport async function hashString(plainText: string): Promise<string> {\n    const hashBuffer: ArrayBuffer = await sha256Digest(plainText);\n    const hashBytes = new Uint8Array(hashBuffer);\n    return urlEncodeArr(hashBytes);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString, invoke, invokeAsync } from \"@azure/msal-common/browser\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { BrowserConstants, BrowserCacheLocation } from \"./BrowserConstants.js\";\nimport * as BrowserCrypto from \"../crypto/BrowserCrypto.js\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError.js\";\nimport type { BrowserConfiguration } from \"../config/Configuration.js\";\n\n/**\n * Clears hash from window url.\n */\nexport function clearHash(contentWindow: Window): void {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = \"\";\n    if (typeof contentWindow.history.replaceState === \"function\") {\n        // Full removes \"#\" from url\n        contentWindow.history.replaceState(\n            null,\n            \"\",\n            `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`\n        );\n    }\n}\n\n/**\n * Replaces current hash with hash from provided url\n */\nexport function replaceHash(url: string): void {\n    const urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n}\n\n/**\n * Returns boolean of whether the current window is in an iframe or not.\n */\nexport function isInIframe(): boolean {\n    return window.parent !== window;\n}\n\n/**\n * Returns boolean of whether or not the current window is a popup opened by msal\n */\nexport function isInPopup(): boolean {\n    return (\n        typeof window !== \"undefined\" &&\n        !!window.opener &&\n        window.opener !== window &&\n        typeof window.name === \"string\" &&\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0\n    );\n}\n\n// #endregion\n\n/**\n * Returns current window URL as redirect uri\n */\nexport function getCurrentUri(): string {\n    return typeof window !== \"undefined\" && window.location\n        ? window.location.href.split(\"?\")[0].split(\"#\")[0]\n        : \"\";\n}\n\n/**\n * Gets the homepage url for the current window location.\n */\nexport function getHomepage(): string {\n    const currentUrl = new UrlString(window.location.href);\n    const urlComponents = currentUrl.getUrlComponents();\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n}\n\n/**\n * Throws error if we have completed an auth and are\n * attempting another auth request inside an iframe.\n */\nexport function blockReloadInHiddenIframes(): void {\n    const isResponseHash = UrlString.hashContainsKnownProperties(\n        window.location.hash\n    );\n    // return an error if called from the hidden iframe created by the msal js silent calls\n    if (isResponseHash && isInIframe()) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockIframeReload);\n    }\n}\n\n/**\n * Block redirect operations in iframes unless explicitly allowed\n * @param interactionType Interaction type for the request\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n */\nexport function blockRedirectInIframe(allowRedirectInIframe: boolean): void {\n    if (isInIframe() && !allowRedirectInIframe) {\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n        throw createBrowserAuthError(BrowserAuthErrorCodes.redirectInIframe);\n    }\n}\n\n/**\n * Block redirectUri loaded in popup from calling AcquireToken APIs\n */\nexport function blockAcquireTokenInPopups(): void {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (isInPopup()) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockNestedPopups);\n    }\n}\n\n/**\n * Throws error if token requests are made in non-browser environment\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\n */\nexport function blockNonBrowserEnvironment(): void {\n    if (typeof window === \"undefined\") {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        );\n    }\n}\n\n/**\n * Throws error if initialize hasn't been called\n * @param initialized\n */\nexport function blockAPICallsBeforeInitialize(initialized: boolean): void {\n    if (!initialized) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        );\n    }\n}\n\n/**\n * Helper to validate app environment before making an auth request\n * @param initialized\n */\nexport function preflightCheck(initialized: boolean): void {\n    // Block request if not in browser environment\n    blockNonBrowserEnvironment();\n\n    // Block auth requests inside a hidden iframe\n    blockReloadInHiddenIframes();\n\n    // Block redirectUri opened in a popup from calling MSAL APIs\n    blockAcquireTokenInPopups();\n\n    // Block token acquisition before initialize has been called\n    blockAPICallsBeforeInitialize(initialized);\n}\n\n/**\n * Helper to validate app enviornment before making redirect request\n * @param initialized\n * @param config\n */\nexport function redirectPreflightCheck(\n    initialized: boolean,\n    config: BrowserConfiguration\n): void {\n    preflightCheck(initialized);\n    blockRedirectInIframe(config.system.allowRedirectInIframe);\n    // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n    if (\n        config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\n        !config.cache.storeAuthStateInCookie\n    ) {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        );\n    }\n}\n\n/**\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\n * @returns\n */\nexport function preconnect(authority: string): void {\n    const link = document.createElement(\"link\");\n    link.rel = \"preconnect\";\n    link.href = new URL(authority).origin;\n    link.crossOrigin = \"anonymous\";\n    document.head.appendChild(link);\n\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\n    window.setTimeout(() => {\n        try {\n            document.head.removeChild(link);\n        } catch {}\n    }, 10000); // 10s Timeout\n}\n\n/**\n * Wrapper function that creates a UUID v7 from the current timestamp.\n * @returns {string}\n */\nexport function createGuid(): string {\n    return BrowserCrypto.createNewGuid();\n}\n\nexport { invoke };\nexport { invokeAsync };\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SystemOptions,\n    LoggerOptions,\n    INetworkModule,\n    DEFAULT_SYSTEM_OPTIONS,\n    Constants,\n    ProtocolMode,\n    OIDCOptions,\n    ServerResponseType,\n    LogLevel,\n    StubbedNetworkModule,\n    AzureCloudInstance,\n    AzureCloudOptions,\n    ApplicationTelemetry,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    IPerformanceClient,\n    StubPerformanceClient,\n    Logger,\n} from \"@azure/msal-common/browser\";\nimport {\n    BrowserCacheLocation,\n    BrowserConstants,\n} from \"../utils/BrowserConstants.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { NavigationClient } from \"../navigation/NavigationClient.js\";\nimport { FetchClient } from \"../network/FetchClient.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 10000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n */\nexport type BrowserAuthOptions = {\n    /**\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n     */\n    clientId: string;\n    /**\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n     */\n    authority?: string;\n    /**\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\n     */\n    knownAuthorities?: Array<string>;\n    /**\n     * A string containing the cloud discovery response. Used in AAD scenarios.\n     */\n    cloudDiscoveryMetadata?: string;\n    /**\n     * A string containing the .well-known/openid-configuration endpoint response\n     */\n    authorityMetadata?: string;\n    /**\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n     */\n    redirectUri?: string;\n    /**\n     * The redirect URI where the window navigates after a successful logout.\n     */\n    postLogoutRedirectUri?: string | null;\n    /**\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n     */\n    navigateToLoginRequestUrl?: boolean;\n    /**\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n     */\n    clientCapabilities?: Array<string>;\n    /**\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n     */\n    protocolMode?: ProtocolMode;\n    /**\n     * Enum that configures options for the OIDC protocol mode.\n     */\n    OIDCOptions?: OIDCOptions;\n    /**\n     * Enum that represents the Azure Cloud to use.\n     */\n    azureCloudOptions?: AzureCloudOptions;\n    /**\n     * Flag of whether to use the local metadata cache\n     */\n    skipAuthorityMetadataCache?: boolean;\n    /**\n     * App supports nested app auth or not; defaults to\n     *\n     * @deprecated This flag is deprecated and will be removed in the next major version. createNestablePublicClientApplication should be used instead.\n     */\n    supportsNestedAppAuth?: boolean;\n    /**\n     * Callback that will be passed the url that MSAL will navigate to in redirect flows. Returning false in the callback will stop navigation.\n     */\n    onRedirectNavigate?: (url: string) => boolean | void;\n    /**\n     * Flag of whether the STS will send back additional parameters to specify where the tokens should be retrieved from.\n     */\n    instanceAware?: boolean;\n    /**\n     * Flag of whether to encode query parameters\n     * @deprecated This flag is deprecated and will be removed in the next major version where all extra query params will be encoded by default.\n     */\n    encodeExtraQueryParams?: boolean;\n};\n\n/** @internal */\nexport type InternalAuthOptions = Omit<\n    Required<BrowserAuthOptions>,\n    \"onRedirectNavigate\"\n> & {\n    OIDCOptions: Required<OIDCOptions>;\n    onRedirectNavigate?: (url: string) => boolean | void;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n */\nexport type CacheOptions = {\n    /**\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    cacheLocation?: BrowserCacheLocation | string;\n    /**\n     * Used to specify the temporaryCacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     * @deprecated This option is deprecated and will be removed in the next major version.\n     */\n    temporaryCacheLocation?: BrowserCacheLocation | string;\n    /**\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n     * @deprecated This option is deprecated and will be removed in the next major version.\n     */\n    storeAuthStateInCookie?: boolean;\n    /**\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to true.\n     * @deprecated This option will be removed in the next major version and all cookies set will include the Secure attribute.\n     */\n    secureCookies?: boolean;\n    /**\n     * If set, MSAL will attempt to migrate cache entries from older versions on initialization. By default this flag is set to true if cacheLocation is localStorage, otherwise false.\n     * @deprecated This option is deprecated and will be removed in the next major version.\n     */\n    cacheMigrationEnabled?: boolean;\n    /**\n     * Flag that determines whether access tokens are stored based on requested claims\n     * @deprecated This option is deprecated and will be removed in the next major version.\n     */\n    claimsBasedCachingEnabled?: boolean;\n};\n\nexport type BrowserSystemOptions = SystemOptions & {\n    /**\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\n     */\n    loggerOptions?: LoggerOptions;\n    /**\n     * Network interface implementation\n     */\n    networkClient?: INetworkModule;\n    /**\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\n     */\n    navigationClient?: INavigationClient;\n    /**\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n     */\n    windowHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n     */\n    iframeHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe or popup\n     */\n    loadFrameTimeout?: number;\n    /**\n     * Maximum time the library should wait for a frame to load\n     * @deprecated This was previously needed for older browsers which are no longer supported by MSAL.js. This option will be removed in the next major version\n     */\n    navigateFrameWait?: number;\n    /**\n     * Time to wait for redirection to occur before resolving promise\n     */\n    redirectNavigationTimeout?: number;\n    /**\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n     */\n    asyncPopups?: boolean;\n    /**\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n     */\n    allowRedirectInIframe?: boolean;\n    /**\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows, MacBroker on Mac)\n     */\n    allowPlatformBroker?: boolean;\n    /**\n     * Sets the timeout for waiting for the native broker handshake to resolve\n     */\n    nativeBrokerHandshakeTimeout?: number;\n    /**\n     * Sets the interval length in milliseconds for polling the location attribute in popup windows (default is 30ms)\n     */\n    pollIntervalMilliseconds?: number;\n};\n\n/**\n * Telemetry Options\n */\nexport type BrowserTelemetryOptions = {\n    /**\n     * Telemetry information sent on request\n     * - appName: Unique string name of an application\n     * - appVersion: Version of the application using MSAL\n     */\n    application?: ApplicationTelemetry;\n\n    client?: IPerformanceClient;\n};\n\n/**\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\n */\nexport type Configuration = {\n    /**\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n     */\n    auth: BrowserAuthOptions;\n    /**\n     * This is where you configure cache location and whether to store cache in cookies\n     */\n    cache?: CacheOptions;\n    /**\n     * This is where you can configure the network client, logger, token renewal offset\n     */\n    system?: BrowserSystemOptions;\n    /**\n     * This is where you can configure telemetry data and options\n     */\n    telemetry?: BrowserTelemetryOptions;\n};\n\n/** @internal */\nexport type BrowserConfiguration = {\n    auth: InternalAuthOptions;\n    cache: Required<CacheOptions>;\n    system: Required<BrowserSystemOptions>;\n    telemetry: Required<BrowserTelemetryOptions>;\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration(\n    {\n        auth: userInputAuth,\n        cache: userInputCache,\n        system: userInputSystem,\n        telemetry: userInputTelemetry,\n    }: Configuration,\n    isBrowserEnvironment: boolean\n): BrowserConfiguration {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: InternalAuthOptions = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri:\n            typeof window !== \"undefined\" ? BrowserUtils.getCurrentUri() : \"\",\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                Constants.OPENID_SCOPE,\n                Constants.PROFILE_SCOPE,\n                Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n        supportsNestedAppAuth: false,\n        instanceAware: false,\n        encodeExtraQueryParams: false,\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled:\n            userInputCache &&\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\n                ? true\n                : false,\n        claimsBasedCachingEnabled: false,\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {\n            // allow users to not set logger call back\n        },\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? new FetchClient()\n            : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowPlatformBroker: false,\n        nativeBrokerHandshakeTimeout:\n            userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n\n    const providedSystemOptions: Required<BrowserSystemOptions> = {\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING,\n        },\n        client: new StubPerformanceClient(),\n    };\n\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (\n        userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions\n    ) {\n        const logger = new Logger(providedSystemOptions.loggerOptions);\n        logger.warning(\n            JSON.stringify(\n                createClientConfigurationError(\n                    ClientConfigurationErrorCodes.cannotSetOIDCOptions\n                )\n            )\n        );\n    }\n\n    // Throw an error if user has set allowPlatformBroker to true with OIDC protocol mode\n    if (\n        userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode === ProtocolMode.OIDC &&\n        providedSystemOptions?.allowPlatformBroker\n    ) {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.cannotAllowPlatformBroker\n        );\n    }\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: providedSystemOptions,\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n\n    return overlayedConfig;\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"4.13.1\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger, LogLevel } from \"@azure/msal-common/browser\";\nimport {\n    BrowserConfiguration,\n    buildConfiguration,\n    Configuration,\n} from \"../config/Configuration.js\";\nimport { version, name } from \"../packageMetadata.js\";\nimport {\n    BrowserCacheLocation,\n    LOG_LEVEL_CACHE_KEY,\n    LOG_PII_CACHE_KEY,\n} from \"../utils/BrowserConstants.js\";\n\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nexport abstract class BaseOperatingContext {\n    protected logger: Logger;\n    protected config: BrowserConfiguration;\n    protected available: boolean;\n    protected browserEnvironment: boolean;\n\n    protected static loggerCallback(level: LogLevel, message: string): void {\n        switch (level) {\n            case LogLevel.Error:\n                // eslint-disable-next-line no-console\n                console.error(message);\n                return;\n            case LogLevel.Info:\n                // eslint-disable-next-line no-console\n                console.info(message);\n                return;\n            case LogLevel.Verbose:\n                // eslint-disable-next-line no-console\n                console.debug(message);\n                return;\n            case LogLevel.Warning:\n                // eslint-disable-next-line no-console\n                console.warn(message);\n                return;\n            default:\n                // eslint-disable-next-line no-console\n                console.log(message);\n                return;\n        }\n    }\n\n    constructor(config: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n        this.config = buildConfiguration(config, this.browserEnvironment);\n\n        let sessionStorage: Storage | undefined;\n        try {\n            sessionStorage = window[BrowserCacheLocation.SessionStorage];\n            // Mute errors if it's a non-browser environment or cookies are blocked.\n        } catch (e) {}\n\n        const logLevelKey = sessionStorage?.getItem(LOG_LEVEL_CACHE_KEY);\n        const piiLoggingKey = sessionStorage\n            ?.getItem(LOG_PII_CACHE_KEY)\n            ?.toLowerCase();\n\n        const piiLoggingEnabled =\n            piiLoggingKey === \"true\"\n                ? true\n                : piiLoggingKey === \"false\"\n                ? false\n                : undefined;\n        const loggerOptions = { ...this.config.system.loggerOptions };\n\n        const logLevel =\n            logLevelKey && Object.keys(LogLevel).includes(logLevelKey)\n                ? LogLevel[logLevelKey]\n                : undefined;\n        if (logLevel) {\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\n            loggerOptions.logLevel = logLevel;\n        }\n        if (piiLoggingEnabled !== undefined) {\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\n        }\n\n        this.logger = new Logger(loggerOptions, name, version);\n        this.available = false;\n    }\n\n    /**\n     * returns the name of the module containing the API controller associated with this operating context\n     */\n    abstract getModuleName(): string;\n\n    /**\n     * returns the string identifier of this operating context\n     */\n    abstract getId(): string;\n\n    /**\n     * returns a boolean indicating whether this operating context is present\n     */\n    abstract initialize(): Promise<boolean>;\n\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    isAvailable(): boolean {\n        return this.available;\n    }\n\n    isBrowserEnvironment(): boolean {\n        return this.browserEnvironment;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseOperatingContext } from \"./BaseOperatingContext.js\";\n\nexport class StandardOperatingContext extends BaseOperatingContext {\n    /*\n     * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n     * containing the implementation for this operating context\n     */\n    static readonly MODULE_NAME: string = \"\";\n\n    /**\n     * Unique identifier for the operating context\n     */\n    static readonly ID: string = \"StandardOperatingContext\";\n\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName(): string {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId(): string {\n        return StandardOperatingContext.ID;\n    }\n\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize(): Promise<boolean> {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const missingKidError = \"missing_kid_error\";\nexport const missingAlgError = \"missing_alg_error\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError.js\";\nimport * as JoseHeaderErrorCodes from \"./JoseHeaderErrorCodes.js\";\nexport { JoseHeaderErrorCodes };\n\nexport const JoseHeaderErrorMessages = {\n    [JoseHeaderErrorCodes.missingKidError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    [JoseHeaderErrorCodes.missingAlgError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n}\n\n/** Returns JoseHeaderError object */\nexport function createJoseHeaderError(code: string): JoseHeaderError {\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    JoseHeaderErrorCodes,\n    createJoseHeaderError,\n} from \"../error/JoseHeaderError.js\";\nimport { JsonWebTokenTypes } from \"../utils/Constants.js\";\n\nexport type JoseHeaderOptions = {\n    typ?: JsonWebTokenTypes;\n    alg?: string;\n    kid?: string;\n};\n\n/** @internal */\nexport class JoseHeader {\n    public typ?: JsonWebTokenTypes;\n    public alg?: string;\n    public kid?: string;\n\n    constructor(options: JoseHeaderOptions) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingKidError);\n        }\n\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingAlgError);\n        }\n\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonWebTokenTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n\n        return JSON.stringify(shrHeader);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport {\n    DB_NAME,\n    DB_TABLE_NAME,\n    DB_VERSION,\n} from \"../utils/BrowserConstants.js\";\nimport { IAsyncStorage } from \"./IAsyncStorage.js\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase | undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\n                \"upgradeneeded\",\n                (e: IDBVersionChangeEvent) => {\n                    const event = e as IDBOpenOnUpgradeNeededEvent;\n                    event.target.result.createObjectStore(this.tableName);\n                }\n            );\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () =>\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseUnavailable\n                    )\n                )\n            );\n        });\n    }\n\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection(): void {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n\n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGet.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGetKeys.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        // Check if database being deleted exists\n\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            const id = setTimeout(() => reject(false), 200); // Reject if events aren't raised within 200ms\n            deleteDbRequest.addEventListener(\"success\", () => {\n                clearTimeout(id);\n                return resolve(true);\n            });\n            deleteDbRequest.addEventListener(\"blocked\", () => {\n                clearTimeout(id);\n                return resolve(true);\n            });\n            deleteDbRequest.addEventListener(\"error\", () => {\n                clearTimeout(id);\n                return reject(false);\n            });\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage.js\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    async initialize(): Promise<void> {\n        // Memory storage does not require initialization\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    getUserData(key: string): T | null {\n        return this.getItem(key);\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    async setUserData(key: string, value: T): Promise<void> {\n        this.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear(): void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common/browser\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { DatabaseStorage } from \"./DatabaseStorage.js\";\nimport { IAsyncStorage } from \"./IAsyncStorage.js\";\nimport { MemoryStorage } from \"./MemoryStorage.js\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n\n    constructor(logger: Logger) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (\n            error instanceof BrowserAuthError &&\n            error.errorCode === BrowserAuthErrorCodes.databaseUnavailable\n        ) {\n            this.logger.error(\n                \"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n            );\n        } else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\n                    \"Queried item not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\n                    \"In-memory cache is empty, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\n                    \"Key not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory(): void {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore deleted`);\n    }\n\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent(): Promise<boolean> {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n\n            return dbDeleted;\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    IPerformanceClient,\n    JoseHeader,\n    Logger,\n    PerformanceEvents,\n    ShrOptions,\n    SignedHttpRequest,\n    SignedHttpRequestParameters,\n} from \"@azure/msal-common/browser\";\nimport {\n    base64Encode,\n    urlEncode,\n    urlEncodeArr,\n} from \"../encode/Base64Encode.js\";\nimport { base64Decode } from \"../encode/Base64Decode.js\";\nimport * as BrowserCrypto from \"./BrowserCrypto.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { AsyncMemoryStorage } from \"../cache/AsyncMemoryStorage.js\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey;\n    privateKey: CryptoKey;\n    requestMethod?: string;\n    requestUri?: string;\n};\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n    private logger: Logger;\n\n    /**\n     * CryptoOps can be used in contexts outside a PCA instance,\n     * meaning there won't be a performance manager available.\n     */\n    private performanceClient: IPerformanceClient | undefined;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: AsyncMemoryStorage<CachedKeyPair>;\n\n    constructor(\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        skipValidateSubtleCrypto?: boolean\n    ) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        BrowserCrypto.validateCryptoAvailable(\n            skipValidateSubtleCrypto ?? false\n        );\n        this.cache = new AsyncMemoryStorage<CachedKeyPair>(this.logger);\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return BrowserCrypto.createNewGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input: string): string {\n        return base64Encode(input);\n    }\n\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input: string): string {\n        return base64Decode(input);\n    }\n\n    /**\n     * Encodes input string to base64 URL safe string.\n     * @param input\n     */\n    base64UrlEncode(input: string): string {\n        return urlEncode(input);\n    }\n\n    /**\n     * Stringifies and base64Url encodes input public key\n     * @param inputKid\n     * @returns Base64Url encoded public key\n     */\n    encodeKid(inputKid: string): string {\n        return this.base64UrlEncode(JSON.stringify({ kid: inputKid }));\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        const publicKeyThumbMeasurement =\n            this.performanceClient?.startMeasurement(\n                PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n                request.correlationId\n            );\n\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await BrowserCrypto.generateKeyPair(\n            CryptoOps.EXTRACTABLE,\n            CryptoOps.POP_KEY_USAGES\n        );\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.publicKey\n        );\n\n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n\n        const publicJwkString: string =\n            getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.privateKey\n        );\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey =\n            await BrowserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.removeItem(kid);\n        const keyFound = await this.cache.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        // Delete in-memory keystores\n        this.cache.clearInMemory();\n\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.cache.clearPersistent();\n            return true;\n        } catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(\n                    `Clearing keystore failed with error: ${e.message}`\n                );\n            } else {\n                this.logger.error(\n                    \"Clearing keystore failed with unknown error\"\n                );\n            }\n\n            return false;\n        }\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        shrOptions?: ShrOptions,\n        correlationId?: string\n    ): Promise<string> {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(\n            PerformanceEvents.CryptoOptsSignJwt,\n            correlationId\n        );\n        const cachedKeyPair = await this.cache.getItem(kid);\n\n        if (!cachedKeyPair) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.cryptoKeyNotFound\n            );\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await BrowserCrypto.exportJwk(\n            cachedKeyPair.publicKey\n        );\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({\n            ...shrOptions?.header,\n            alg: publicKeyJwk.alg,\n            kid: encodedKeyIdThumbprint,\n        });\n\n        const encodedShrHeader = urlEncode(shrHeader);\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n\n        // Sign token\n        const encoder = new TextEncoder();\n        const tokenBuffer = encoder.encode(tokenString);\n        const signatureBuffer = await BrowserCrypto.sign(\n            cachedKeyPair.privateKey,\n            tokenBuffer\n        );\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n\n        return signedJwt;\n    }\n\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText: string): Promise<string> {\n        return BrowserCrypto.hashString(plainText);\n    }\n}\n\nfunction getSortedObjectString(obj: object): string {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\n\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invoke = <T extends Array<any>, U>(\n    callback: (...args: T) => U,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): U => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        if (correlationId) {\n            // Track number of times this API is called in a single request\n            const eventCount = eventName + \"CallCount\";\n            telemetryClient?.incrementFields(\n                { [eventCount]: 1 },\n                correlationId\n            );\n        }\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        } catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            } catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end(\n                {\n                    success: false,\n                },\n                e\n            );\n            throw e;\n        }\n    };\n};\n\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invokeAsync = <T extends Array<any>, U>(\n    callback: (...args: T) => Promise<U>,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): Promise<U> => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        if (correlationId) {\n            // Track number of times this API is called in a single request\n            const eventCount = eventName + \"CallCount\";\n            telemetryClient?.incrementFields(\n                { [eventCount]: 1 },\n                correlationId\n            );\n        }\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n                logger.trace(`Returning result from ${eventName}`);\n                inProgressEvent?.end({\n                    success: true,\n                });\n                return response;\n            })\n            .catch((e) => {\n                logger.trace(`Error occurred in ${eventName}`);\n                try {\n                    logger.trace(JSON.stringify(e));\n                } catch (e) {\n                    logger.trace(\"Unable to print error message.\");\n                }\n                inProgressEvent?.end(\n                    {\n                        success: false,\n                    },\n                    e\n                );\n                throw e;\n            });\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule.js\";\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse.js\";\nimport {\n    Constants,\n    HttpStatus,\n    RegionDiscoverySources,\n} from \"../utils/Constants.js\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata.js\";\nimport { ImdsOptions } from \"./ImdsOptions.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\nimport { Logger } from \"../logger/Logger.js\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Logger\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // CorrelationId\n    protected correlationId: string | undefined;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS: ImdsOptions = {\n        headers: {\n            Metadata: \"true\",\n        },\n    };\n\n    constructor(\n        networkInterface: INetworkModule,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    public async detectRegion(\n        environmentRegion: string | undefined,\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryDetectRegion,\n            this.correlationId\n        );\n\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n\n            try {\n                const localIMDSVersionResponse = await invokeAsync(\n                    this.getRegionFromIMDS.bind(this),\n                    PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status === HttpStatus.SUCCESS) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        RegionDiscoverySources.IMDS;\n                }\n\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (\n                    localIMDSVersionResponse.status === HttpStatus.BAD_REQUEST\n                ) {\n                    const currentIMDSVersion = await invokeAsync(\n                        this.getCurrentVersion.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await invokeAsync(\n                        this.getRegionFromIMDS.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(currentIMDSVersion, options);\n                    if (\n                        currentIMDSVersionResponse.status === HttpStatus.SUCCESS\n                    ) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        } else {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(\n        version: string,\n        options: ImdsOptions\n    ): Promise<NetworkResponse<string>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n            this.correlationId\n        );\n        return this.networkInterface.sendGetRequestAsync<string>(\n            `${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`,\n            options,\n            Constants.IMDS_TIMEOUT\n        );\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(\n        options: ImdsOptions\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n            this.correlationId\n        );\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(\n                    `${Constants.IMDS_ENDPOINT}?format=json`,\n                    options\n                );\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (\n                response.status === HttpStatus.BAD_REQUEST &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0\n            ) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType.js\";\nimport {\n    isOpenIdConfigResponse,\n    OpenIdConfigResponse,\n} from \"./OpenIdConfigResponse.js\";\nimport { UrlString } from \"../url/UrlString.js\";\nimport { IUri } from \"../url/IUri.js\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError.js\";\nimport { INetworkModule } from \"../network/INetworkModule.js\";\nimport {\n    AADAuthorityConstants,\n    AuthorityMetadataSource,\n    Constants,\n    RegionDiscoveryOutcomes,\n} from \"../utils/Constants.js\";\nimport {\n    EndpointMetadata,\n    getCloudDiscoveryMetadataFromHardcodedValues,\n    getCloudDiscoveryMetadataFromNetworkResponse,\n    InstanceDiscoveryMetadataAliases,\n} from \"./AuthorityMetadata.js\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport { ProtocolMode } from \"./ProtocolMode.js\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager.js\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity.js\";\nimport {\n    AuthorityOptions,\n    AzureCloudInstance,\n    StaticAuthorityOptions,\n} from \"./AuthorityOptions.js\";\nimport {\n    CloudInstanceDiscoveryResponse,\n    isCloudInstanceDiscoveryResponse,\n} from \"./CloudInstanceDiscoveryResponse.js\";\nimport {\n    CloudInstanceDiscoveryErrorResponse,\n    isCloudInstanceDiscoveryErrorResponse,\n} from \"./CloudInstanceDiscoveryErrorResponse.js\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata.js\";\nimport { RegionDiscovery } from \"./RegionDiscovery.js\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata.js\";\nimport { ImdsOptions } from \"./ImdsOptions.js\";\nimport type { AzureCloudOptions } from \"../config/ClientConfiguration.js\";\nimport { Logger } from \"../logger/Logger.js\";\nimport { AuthError } from \"../error/AuthError.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers.js\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nexport class Authority {\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n    // Logger object\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // Correlation Id\n    protected correlationId: string;\n    // Indicates if the authority is fake, for the purpose of a Managed Identity Application\n    private managedIdentity: boolean;\n    // Reserved tenant domain names that will not be replaced with tenant id\n    private static reservedTenantDomains: Set<string> = new Set([\n        \"{tenant}\",\n        \"{tenantid}\",\n        AADAuthorityConstants.COMMON,\n        AADAuthorityConstants.CONSUMERS,\n        AADAuthorityConstants.ORGANIZATIONS,\n    ]);\n\n    constructor(\n        authority: string,\n        networkInterface: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        correlationId: string,\n        performanceClient?: IPerformanceClient,\n        managedIdentity?: boolean\n    ) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.managedIdentity = managedIdentity || false;\n        this.regionDiscovery = new RegionDiscovery(\n            networkInterface,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        );\n    }\n\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private getAuthorityType(authorityUri: IUri): AuthorityType {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            return AuthorityType.Ciam;\n        }\n\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case Constants.ADFS:\n                    return AuthorityType.Adfs;\n                case Constants.DSTS:\n                    return AuthorityType.Dsts;\n                default:\n                    break;\n            }\n        }\n        return AuthorityType.Default;\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(\n                this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\")\n            );\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.endSessionEndpointNotSupported\n                );\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Jwks_uri for token signing keys\n     */\n    public get jwksUri(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private canReplaceTenant(authorityUri: IUri): boolean {\n        return (\n            authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(\n                authorityUri.PathSegments[0]\n            ) &&\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\n            this.protocolMode !== ProtocolMode.OIDC\n        );\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(\n            this.metadata.canonical_authority\n        );\n        const cachedAuthorityUrlComponents =\n            cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts =\n            this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (\n                index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)\n            ) {\n                const tenantId = new UrlString(\n                    this.metadata.authorization_endpoint\n                ).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(\n                        `Replacing tenant domain name ${cachedPart} with id ${tenantId}`\n                    );\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(\n                    `/${cachedPart}/`,\n                    `/${currentPart}/`\n                );\n            }\n        });\n\n        return this.replaceTenant(endpoint);\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (\n            this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === AuthorityType.Adfs ||\n            (this.protocolMode === ProtocolMode.OIDC &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))\n        ) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whether or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            this.correlationId\n        );\n\n        const metadataEntity = this.getCurrentMetadataEntity();\n\n        const cloudDiscoverySource = await invokeAsync(\n            this.updateCloudDiscoveryMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(\n            this.hostnameAndPort,\n            metadataEntity.preferred_network\n        );\n        const endpointSource = await invokeAsync(\n            this.updateEndpointMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\n            source: endpointSource,\n        });\n        this.performanceClient?.addFields(\n            {\n                cloudDiscoverySource: cloudDiscoverySource,\n                authorityEndpointSource: endpointSource,\n            },\n            this.correlationId\n        );\n    }\n\n    /**\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\n     * from the configured canonical authority\n     * @returns\n     */\n    private getCurrentMetadataEntity(): AuthorityMetadataEntity {\n        let metadataEntity: AuthorityMetadataEntity | null =\n            this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n\n        if (!metadataEntity) {\n            metadataEntity = {\n                aliases: [],\n                preferred_cache: this.hostnameAndPort,\n                preferred_network: this.hostnameAndPort,\n                canonical_authority: this.canonicalAuthority,\n                authorization_endpoint: \"\",\n                token_endpoint: \"\",\n                end_session_endpoint: \"\",\n                issuer: \"\",\n                aliasesFromNetwork: false,\n                endpointsFromNetwork: false,\n                expiresAt: CacheHelpers.generateAuthorityMetadataExpiresAt(),\n                jwks_uri: \"\",\n            };\n        }\n        return metadataEntity;\n    }\n\n    /**\n     * Updates cached metadata based on metadata source and sets the instance's metadata\n     * property to the same value\n     * @param metadataEntity\n     * @param cloudDiscoverySource\n     * @param endpointMetadataResult\n     */\n    private updateCachedMetadata(\n        metadataEntity: AuthorityMetadataEntity,\n        cloudDiscoverySource: AuthorityMetadataSource | null,\n        endpointMetadataResult: {\n            source: AuthorityMetadataSource;\n            metadata?: OpenIdConfigResponse;\n        } | null\n    ): void {\n        if (\n            cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE\n        ) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.expiresAt =\n                CacheHelpers.generateAuthorityMetadataExpiresAt();\n            metadataEntity.canonical_authority = this.canonicalAuthority;\n        }\n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(\n            metadataEntity.preferred_cache\n        );\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    private async updateEndpointMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.correlationId\n        );\n\n        const localMetadata =\n            this.updateEndpointMetadataFromLocalSources(metadataEntity);\n\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\n        if (localMetadata) {\n            if (\n                localMetadata.source ===\n                AuthorityMetadataSource.HARDCODED_VALUES\n            ) {\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (\n                    this.authorityOptions.azureRegionConfiguration?.azureRegion\n                ) {\n                    if (localMetadata.metadata) {\n                        const hardcodedMetadata = await invokeAsync(\n                            this.updateMetadataWithRegionalInformation.bind(\n                                this\n                            ),\n                            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                            this.logger,\n                            this.performanceClient,\n                            this.correlationId\n                        )(localMetadata.metadata);\n                        CacheHelpers.updateAuthorityEndpointMetadata(\n                            metadataEntity,\n                            hardcodedMetadata,\n                            false\n                        );\n                        metadataEntity.canonical_authority =\n                            this.canonicalAuthority;\n                    }\n                }\n            }\n            return localMetadata.source;\n        }\n\n        // Get metadata from network if local sources aren't available\n        let metadata = await invokeAsync(\n            this.getEndpointMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await invokeAsync(\n                    this.updateMetadataWithRegionalInformation.bind(this),\n                    PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(metadata);\n            }\n\n            CacheHelpers.updateAuthorityEndpointMetadata(\n                metadataEntity,\n                metadata,\n                true\n            );\n            return AuthorityMetadataSource.NETWORK;\n        } else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw createClientAuthError(\n                ClientAuthErrorCodes.openIdConfigError,\n                this.defaultOpenIdConfigurationEndpoint\n            );\n        }\n    }\n\n    /**\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\n     * response if the source is hardcoded metadata\n     * @param metadataEntity\n     * @returns\n     */\n    private updateEndpointMetadataFromLocalSources(\n        metadataEntity: AuthorityMetadataEntity\n    ): {\n        source: AuthorityMetadataSource;\n        metadata?: OpenIdConfigResponse;\n    } | null {\n        this.logger.verbose(\n            \"Attempting to get endpoint metadata from authority configuration\"\n        );\n        const configMetadata = this.getEndpointMetadataFromConfig();\n        if (configMetadata) {\n            this.logger.verbose(\n                \"Found endpoint metadata in authority configuration\"\n            );\n            CacheHelpers.updateAuthorityEndpointMetadata(\n                metadataEntity,\n                configMetadata,\n                false\n            );\n            return {\n                source: AuthorityMetadataSource.CONFIG,\n            };\n        }\n\n        this.logger.verbose(\n            \"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\"\n        );\n\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                CacheHelpers.updateAuthorityEndpointMetadata(\n                    metadataEntity,\n                    hardcodedMetadata,\n                    false\n                );\n                return {\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\n                    metadata: hardcodedMetadata,\n                };\n            } else {\n                this.logger.verbose(\n                    \"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\"\n                );\n            }\n        }\n\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired =\n            CacheHelpers.isAuthorityMetadataExpired(metadataEntity);\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return { source: AuthorityMetadataSource.CACHE };\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(\n        metadataEntity: AuthorityMetadataEntity\n    ): boolean {\n        const cachedAuthorityUrl = new UrlString(\n            metadataEntity.canonical_authority\n        );\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n\n        return (\n            cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length\n        );\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(\n                    this.authorityOptions.authorityMetadata\n                ) as OpenIdConfigResponse;\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidAuthorityMetadata\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.correlationId\n        );\n\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        const openIdConfigurationEndpoint =\n            this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(\n            `Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`\n        );\n\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(\n                    openIdConfigurationEndpoint,\n                    options\n                );\n            const isValidResponse = isOpenIdConfigResponse(response.body);\n            if (isValidResponse) {\n                return response.body;\n            } else {\n                this.logger.verbose(\n                    `Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`\n                );\n                return null;\n            }\n        } catch (e) {\n            this.logger.verbose(\n                `Authority.getEndpointMetadataFromNetwork: ${e}`\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\n        if (this.hostnameAndPort in EndpointMetadata) {\n            return EndpointMetadata[this.hostnameAndPort];\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    private async updateMetadataWithRegionalInformation(\n        metadata: OpenIdConfigResponse\n    ): Promise<OpenIdConfigResponse> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n            this.correlationId\n        );\n\n        const userConfiguredAzureRegion =\n            this.authorityOptions.azureRegionConfiguration?.azureRegion;\n\n        if (userConfiguredAzureRegion) {\n            if (\n                userConfiguredAzureRegion !==\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\n            ) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    userConfiguredAzureRegion\n                );\n            }\n\n            const autodetectedRegionName = await invokeAsync(\n                this.regionDiscovery.detectRegion.bind(this.regionDiscovery),\n                PerformanceEvents.RegionDiscoveryDetectRegion,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                this.authorityOptions.azureRegionConfiguration\n                    ?.environmentRegion,\n                this.regionDiscoveryMetadata\n            );\n\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    autodetectedRegionName\n                );\n            }\n\n            this.regionDiscoveryMetadata.region_outcome =\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n\n        return metadata;\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    private async updateCloudDiscoveryMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.correlationId\n        );\n        const localMetadataSource =\n            this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\n        if (localMetadataSource) {\n            return localMetadataSource;\n        }\n\n        // Fallback to network as metadata source\n        const metadata = await invokeAsync(\n            this.getCloudDiscoveryMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n\n        if (metadata) {\n            CacheHelpers.updateCloudDiscoveryMetadata(\n                metadataEntity,\n                metadata,\n                true\n            );\n            return AuthorityMetadataSource.NETWORK;\n        }\n\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.untrustedAuthority\n        );\n    }\n\n    private updateCloudDiscoveryMetadataFromLocalSources(\n        metadataEntity: AuthorityMetadataEntity\n    ): AuthorityMetadataSource | null {\n        this.logger.verbose(\n            \"Attempting to get cloud discovery metadata  from authority configuration\"\n        );\n        this.logger.verbosePii(\n            `Known Authorities: ${\n                this.authorityOptions.knownAuthorities ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Authority Metadata: ${\n                this.authorityOptions.authorityMetadata ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Canonical Authority: ${\n                metadataEntity.canonical_authority || Constants.NOT_APPLICABLE\n            }`\n        );\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\n                \"Found cloud discovery metadata in authority configuration\"\n            );\n            CacheHelpers.updateCloudDiscoveryMetadata(\n                metadataEntity,\n                metadata,\n                false\n            );\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\n            \"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\"\n        );\n\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                getCloudDiscoveryMetadataFromHardcodedValues(\n                    this.hostnameAndPort\n                );\n            if (hardcodedMetadata) {\n                this.logger.verbose(\n                    \"Found cloud discovery metadata from hardcoded values.\"\n                );\n                CacheHelpers.updateCloudDiscoveryMetadata(\n                    metadataEntity,\n                    hardcodedMetadata,\n                    false\n                );\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n\n            this.logger.verbose(\n                \"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        }\n\n        const metadataEntityExpired =\n            CacheHelpers.isAuthorityMetadataExpired(metadataEntity);\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === AuthorityType.Ciam) {\n            this.logger.verbose(\n                \"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\n                \"The cloud discovery metadata has been provided as a network response, in the config.\"\n            );\n            try {\n                this.logger.verbose(\n                    \"Attempting to parse the cloud discovery metadata.\"\n                );\n                const parsedResponse = JSON.parse(\n                    this.authorityOptions.cloudDiscoveryMetadata\n                ) as CloudInstanceDiscoveryResponse;\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n                    parsedResponse.metadata,\n                    this.hostnameAndPort\n                );\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\n                        \"There is returnable metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                    return metadata;\n                } else {\n                    this.logger.verbose(\n                        \"There is no metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                }\n            } catch (e) {\n                this.logger.verbose(\n                    \"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\"\n                );\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n                );\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\n                \"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.correlationId\n        );\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse\n            >(instanceDiscoveryEndpoint, options);\n            let typedResponseBody:\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse;\n            let metadata: Array<CloudDiscoveryMetadata>;\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryResponse;\n                metadata = typedResponseBody.metadata;\n\n                this.logger.verbosePii(\n                    `tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`\n                );\n            } else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\n                this.logger.warning(\n                    `A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`\n                );\n\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryErrorResponse;\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\n                    this.logger.error(\n                        \"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\"\n                    );\n                    return null;\n                }\n\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`\n                );\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`\n                );\n\n                this.logger.warning(\n                    \"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\"\n                );\n                metadata = [];\n            } else {\n                this.logger.error(\n                    \"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\"\n                );\n                return null;\n            }\n\n            this.logger.verbose(\n                \"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            match = getCloudDiscoveryMetadataFromNetworkResponse(\n                metadata,\n                this.hostnameAndPort\n            );\n        } catch (error) {\n            if (error instanceof AuthError) {\n                this.logger.error(\n                    `There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`\n                );\n            } else {\n                const typedError = error as Error;\n                this.logger.error(\n                    `A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`\n                );\n            }\n\n            return null;\n        }\n\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\n                \"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            this.logger.verbose(\n                \"Creating custom Authority for custom domain scenario.\"\n            );\n\n            match = Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n        return match;\n    }\n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter(\n            (authority) => {\n                return (\n                    authority &&\n                    UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                        this.hostnameAndPort\n                );\n            }\n        );\n        return matches.length > 0;\n    }\n\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(\n        authorityString: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): string {\n        let authorityAzureCloudInstance;\n\n        if (\n            azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None\n        ) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(\n        host: string\n    ): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if (this.managedIdentity) {\n            return Constants.DEFAULT_AUTHORITY_HOST;\n        } else if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host: string): boolean {\n        return InstanceDiscoveryMetadataAliases.has(host);\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(\n        host: string,\n        region: string,\n        queryString?: string\n    ): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(\n        metadata: OpenIdConfigResponse,\n        azureRegion: string\n    ): OpenIdConfigResponse {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.authorization_endpoint,\n                azureRegion\n            );\n\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.token_endpoint,\n                azureRegion\n            );\n\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(\n                    regionalMetadata.end_session_endpoint,\n                    azureRegion\n                );\n        }\n\n        return regionalMetadata;\n    }\n\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority: string): string {\n        let ciamAuthority = authority;\n        const authorityUrl = new UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n\n        // check if transformation is needed\n        if (\n            authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(\n                Constants.CIAM_AUTH_URL\n            )\n        ) {\n            const tenantIdOrDomain =\n                authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n\n        return ciamAuthority;\n    }\n}\n\n/**\n * Extract tenantId from authority\n */\nexport function getTenantFromAuthorityString(\n    authority: string\n): string | undefined {\n    const authorityUrl = new UrlString(authority);\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\n    /**\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\n     *\n     * Note that we may not have any path segments in certain OIDC scenarios.\n     */\n    const tenantId =\n        authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\n\n    switch (tenantId) {\n        case AADAuthorityConstants.COMMON:\n        case AADAuthorityConstants.ORGANIZATIONS:\n        case AADAuthorityConstants.CONSUMERS:\n            return undefined;\n        default:\n            return tenantId;\n    }\n}\n\nexport function formatAuthorityUri(authorityUri: string): string {\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\n        ? authorityUri\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\n}\n\nexport function buildStaticAuthorityOptions(\n    authOptions: Partial<AuthorityOptions>\n): StaticAuthorityOptions {\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\n    let cloudDiscoveryMetadata: CloudInstanceDiscoveryResponse | undefined =\n        undefined;\n    if (rawCloudDiscoveryMetadata) {\n        try {\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n            );\n        }\n    }\n    return {\n        canonicalAuthority: authOptions.authority\n            ? formatAuthorityUri(authOptions.authority)\n            : undefined,\n        knownAuthorities: authOptions.knownAuthorities,\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    jwks_uri: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata.js\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryErrorResponse = {\n    error: String;\n    error_description: String;\n    error_codes?: Array<Number>;\n    timestamp?: String;\n    trace_id?: String;\n    correlation_id?: String;\n    error_uri?: String;\n};\n\nexport function isCloudInstanceDiscoveryErrorResponse(\n    response: object\n): boolean {\n    return (\n        response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Codes defined by MSAL\nexport const noTokensFound = \"no_tokens_found\";\nexport const nativeAccountUnavailable = \"native_account_unavailable\";\nexport const refreshTokenExpired = \"refresh_token_expired\";\n\n// Codes potentially returned by server\nexport const interactionRequired = \"interaction_required\";\nexport const consentRequired = \"consent_required\";\nexport const loginRequired = \"login_required\";\nexport const badToken = \"bad_token\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants.js\";\nimport { AuthError } from \"./AuthError.js\";\nimport * as InteractionRequiredAuthErrorCodes from \"./InteractionRequiredAuthErrorCodes.js\";\nexport { InteractionRequiredAuthErrorCodes };\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    InteractionRequiredAuthErrorCodes.interactionRequired,\n    InteractionRequiredAuthErrorCodes.consentRequired,\n    InteractionRequiredAuthErrorCodes.loginRequired,\n    InteractionRequiredAuthErrorCodes.badToken,\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n    \"bad_token\",\n];\n\nconst InteractionRequiredAuthErrorMessages = {\n    [InteractionRequiredAuthErrorCodes.noTokensFound]:\n        \"No refresh token found in the cache. Please sign-in.\",\n    [InteractionRequiredAuthErrorCodes.nativeAccountUnavailable]:\n        \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n    [InteractionRequiredAuthErrorCodes.refreshTokenExpired]:\n        \"Refresh token has expired.\",\n    [InteractionRequiredAuthErrorCodes.badToken]:\n        \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\n};\n\n/**\n * Interaction required errors defined by the SDK\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: InteractionRequiredAuthErrorCodes.noTokensFound,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.noTokensFound\n        ],\n    },\n    native_account_unavailable: {\n        code: InteractionRequiredAuthErrorCodes.nativeAccountUnavailable,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n        ],\n    },\n    bad_token: {\n        code: InteractionRequiredAuthErrorCodes.badToken,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.badToken\n        ],\n    },\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n    /**\n     * The time the error occured at\n     */\n    timestamp: string;\n\n    /**\n     * TraceId associated with the error\n     */\n    traceId: string;\n\n    /**\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\n     *\n     * A string with extra claims needed for the token request to succeed\n     * web site: redirect the user to the authorization page and set the extra claims\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\n     * desktop application or browser context: include the claims when acquiring the token interactively\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\n     */\n    claims: string;\n\n    /**\n     * Server error number;\n     */\n    readonly errorNo?: string;\n\n    constructor(\n        errorCode?: string,\n        errorMessage?: string,\n        subError?: string,\n        timestamp?: string,\n        traceId?: string,\n        correlationId?: string,\n        claims?: string,\n        errorNo?: string\n    ) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n        this.errorNo = errorNo;\n    }\n}\n\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nexport function isInteractionRequiredError(\n    errorCode?: string,\n    errorString?: string,\n    subError?: string\n): boolean {\n    const isInteractionRequiredErrorCode =\n        !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError =\n        !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc =\n        !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n    return (\n        isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError\n    );\n}\n\n/**\n * Creates an InteractionRequiredAuthError\n */\nexport function createInteractionRequiredAuthError(\n    errorCode: string\n): InteractionRequiredAuthError {\n    return new InteractionRequiredAuthError(\n        errorCode,\n        InteractionRequiredAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ShrOptions } from \"../crypto/SignedHttpRequest.js\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\nimport { AuthenticationScheme } from \"../utils/Constants.js\";\n\n/**\n * Type representing a unique request thumbprint.\n */\nexport type RequestThumbprint = {\n    clientId: string;\n    authority: string;\n    scopes: Array<string>;\n    homeAccountIdentifier?: string;\n    claims?: string;\n    authenticationScheme?: AuthenticationScheme;\n    resourceRequestMethod?: string;\n    resourceRequestUri?: string;\n    shrClaims?: string;\n    sshKid?: string;\n    shrOptions?: ShrOptions;\n    embeddedClientId?: string;\n};\n\nexport function getRequestThumbprint(\n    clientId: string,\n    request: BaseAuthRequest,\n    homeAccountId?: string\n): RequestThumbprint {\n    return {\n        clientId: clientId,\n        authority: request.authority,\n        scopes: request.scopes,\n        homeAccountIdentifier: homeAccountId,\n        claims: request.claims,\n        authenticationScheme: request.authenticationScheme,\n        resourceRequestMethod: request.resourceRequestMethod,\n        resourceRequestUri: request.resourceRequestUri,\n        shrClaims: request.shrClaims,\n        sshKid: request.sshKid,\n        embeddedClientId:\n            request.embeddedClientId || request.tokenBodyParameters?.clientId,\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"@azure/msal-common/browser\";\nimport { IWindowStorage } from \"./IWindowStorage.js\";\n\n// Cookie life calculation (hours * minutes * seconds * ms)\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\nexport const SameSiteOptions = {\n    Lax: \"Lax\",\n    None: \"None\",\n} as const;\nexport type SameSiteOptions =\n    (typeof SameSiteOptions)[keyof typeof SameSiteOptions];\n\nexport class CookieStorage implements IWindowStorage<string> {\n    initialize(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    getItem(key: string): string | null {\n        const name = `${encodeURIComponent(key)}`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            const cookie = cookieList[i];\n            const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\n            const value = rest.join(\"=\");\n\n            if (key === name) {\n                return value;\n            }\n        }\n        return \"\";\n    }\n\n    getUserData(): string | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n\n    setItem(\n        key: string,\n        value: string,\n        cookieLifeDays?: number,\n        secure: boolean = true,\n        sameSite: SameSiteOptions = SameSiteOptions.Lax\n    ): void {\n        let cookieStr = `${encodeURIComponent(key)}=${encodeURIComponent(\n            value\n        )};path=/;SameSite=${sameSite};`;\n\n        if (cookieLifeDays) {\n            const expireTime = getCookieExpirationTime(cookieLifeDays);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (secure || sameSite === SameSiteOptions.None) {\n            // SameSite None requires Secure flag\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    async setUserData(): Promise<void> {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    }\n\n    removeItem(key: string): void {\n        // Setting expiration to -1 removes it\n        this.setItem(key, \"\", -1);\n    }\n\n    getKeys(): string[] {\n        const cookieList = document.cookie.split(\";\");\n        const keys: Array<string> = [];\n        cookieList.forEach((cookie) => {\n            const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\n            keys.push(cookieParts[0]);\n        });\n\n        return keys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.getKeys().includes(key);\n    }\n}\n\n/**\n * Get cookie expiration time\n * @param cookieLifeDays\n */\nexport function getCookieExpirationTime(cookieLifeDays: number): string {\n    const today = new Date();\n    const expr = new Date(\n        today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER\n    );\n    return expr.toUTCString();\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenKeys } from \"@azure/msal-common/browser\";\nimport { StaticCacheKeys } from \"../utils/BrowserConstants.js\";\nimport { IWindowStorage } from \"./IWindowStorage.js\";\n\n/**\n * Returns a list of cache keys for all known accounts\n * @param storage\n * @returns\n */\nexport function getAccountKeys(storage: IWindowStorage<string>): Array<string> {\n    const accountKeys = storage.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n    if (accountKeys) {\n        return JSON.parse(accountKeys);\n    }\n\n    return [];\n}\n\n/**\n * Returns a list of cache keys for all known tokens\n * @param clientId\n * @param storage\n * @returns\n */\nexport function getTokenKeys(\n    clientId: string,\n    storage: IWindowStorage<string>\n): TokenKeys {\n    const item = storage.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${clientId}`);\n    if (item) {\n        const tokenKeys = JSON.parse(item);\n        if (\n            tokenKeys &&\n            tokenKeys.hasOwnProperty(\"idToken\") &&\n            tokenKeys.hasOwnProperty(\"accessToken\") &&\n            tokenKeys.hasOwnProperty(\"refreshToken\")\n        ) {\n            return tokenKeys as TokenKeys;\n        }\n    }\n\n    return {\n        idToken: [],\n        accessToken: [],\n        refreshToken: [],\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    TokenKeys,\n    IPerformanceClient,\n    invokeAsync,\n    PerformanceEvents,\n    Logger,\n    invoke,\n} from \"@azure/msal-common/browser\";\nimport {\n    createNewGuid,\n    decrypt,\n    encrypt,\n    generateBaseKey,\n    generateHKDF,\n} from \"../crypto/BrowserCrypto.js\";\nimport { base64DecToArr } from \"../encode/Base64Decode.js\";\nimport { urlEncodeArr } from \"../encode/Base64Encode.js\";\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError.js\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError.js\";\nimport { CookieStorage, SameSiteOptions } from \"./CookieStorage.js\";\nimport { IWindowStorage } from \"./IWindowStorage.js\";\nimport { MemoryStorage } from \"./MemoryStorage.js\";\nimport { getAccountKeys, getTokenKeys } from \"./CacheHelpers.js\";\nimport { StaticCacheKeys } from \"../utils/BrowserConstants.js\";\n\nconst ENCRYPTION_KEY = \"msal.cache.encryption\";\nconst BROADCAST_CHANNEL_NAME = \"msal.broadcast.cache\";\n\ntype EncryptionCookie = {\n    id: string;\n    key: CryptoKey;\n};\n\ntype EncryptedData = {\n    id: string;\n    nonce: string;\n    data: string;\n};\n\nexport class LocalStorage implements IWindowStorage<string> {\n    private clientId: string;\n    private initialized: boolean;\n    private memoryStorage: MemoryStorage<string>;\n    private performanceClient: IPerformanceClient;\n    private logger: Logger;\n    private encryptionCookie?: EncryptionCookie;\n    private broadcast: BroadcastChannel;\n\n    constructor(\n        clientId: string,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        if (!window.localStorage) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\n            );\n        }\n        this.memoryStorage = new MemoryStorage<string>();\n        this.initialized = false;\n        this.clientId = clientId;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.broadcast = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\n    }\n\n    async initialize(correlationId: string): Promise<void> {\n        const cookies = new CookieStorage();\n        const cookieString = cookies.getItem(ENCRYPTION_KEY);\n        let parsedCookie = { key: \"\", id: \"\" };\n        if (cookieString) {\n            try {\n                parsedCookie = JSON.parse(cookieString);\n            } catch (e) {}\n        }\n        if (parsedCookie.key && parsedCookie.id) {\n            // Encryption key already exists, import\n            const baseKey = invoke(\n                base64DecToArr,\n                PerformanceEvents.Base64Decode,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(parsedCookie.key);\n            this.encryptionCookie = {\n                id: parsedCookie.id,\n                key: await invokeAsync(\n                    generateHKDF,\n                    PerformanceEvents.GenerateHKDF,\n                    this.logger,\n                    this.performanceClient,\n                    correlationId\n                )(baseKey),\n            };\n            await invokeAsync(\n                this.importExistingCache.bind(this),\n                PerformanceEvents.ImportExistingCache,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(correlationId);\n        } else {\n            // Encryption key doesn't exist or is invalid, generate a new one and clear existing cache\n            this.clear();\n            const id = createNewGuid();\n            const baseKey = await invokeAsync(\n                generateBaseKey,\n                PerformanceEvents.GenerateBaseKey,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )();\n            const keyStr = invoke(\n                urlEncodeArr,\n                PerformanceEvents.UrlEncodeArr,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(new Uint8Array(baseKey));\n            this.encryptionCookie = {\n                id: id,\n                key: await invokeAsync(\n                    generateHKDF,\n                    PerformanceEvents.GenerateHKDF,\n                    this.logger,\n                    this.performanceClient,\n                    correlationId\n                )(baseKey),\n            };\n\n            const cookieData = {\n                id: id,\n                key: keyStr,\n            };\n\n            cookies.setItem(\n                ENCRYPTION_KEY,\n                JSON.stringify(cookieData),\n                0, // Expiration - 0 means cookie will be cleared at the end of the browser session\n                true, // Secure flag\n                SameSiteOptions.None // SameSite must be None to support iframed apps\n            );\n        }\n\n        // Register listener for cache updates in other tabs\n        this.broadcast.addEventListener(\"message\", this.updateCache.bind(this));\n\n        this.initialized = true;\n    }\n\n    getItem(key: string): string | null {\n        return window.localStorage.getItem(key);\n    }\n\n    getUserData(key: string): string | null {\n        if (!this.initialized) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.uninitializedPublicClientApplication\n            );\n        }\n        return this.memoryStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        window.localStorage.setItem(key, value);\n    }\n\n    async setUserData(\n        key: string,\n        value: string,\n        correlationId: string\n    ): Promise<void> {\n        if (!this.initialized || !this.encryptionCookie) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.uninitializedPublicClientApplication\n            );\n        }\n\n        const { data, nonce } = await invokeAsync(\n            encrypt,\n            PerformanceEvents.Encrypt,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(this.encryptionCookie.key, value, this.getContext(key));\n        const encryptedData: EncryptedData = {\n            id: this.encryptionCookie.id,\n            nonce: nonce,\n            data: data,\n        };\n\n        this.memoryStorage.setItem(key, value);\n        this.setItem(key, JSON.stringify(encryptedData));\n\n        // Notify other frames to update their in-memory cache\n        this.broadcast.postMessage({\n            key: key,\n            value: value,\n            context: this.getContext(key),\n        });\n    }\n\n    removeItem(key: string): void {\n        if (this.memoryStorage.containsKey(key)) {\n            this.memoryStorage.removeItem(key);\n            this.broadcast.postMessage({\n                key: key,\n                value: null,\n                context: this.getContext(key),\n            });\n        }\n        window.localStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(window.localStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return window.localStorage.hasOwnProperty(key);\n    }\n\n    /**\n     * Removes all known MSAL keys from the cache\n     */\n    clear(): void {\n        // Removes all remaining MSAL cache items\n        this.memoryStorage.clear();\n\n        const accountKeys = getAccountKeys(this);\n        accountKeys.forEach((key) => this.removeItem(key));\n        const tokenKeys = getTokenKeys(this.clientId, this);\n        tokenKeys.idToken.forEach((key) => this.removeItem(key));\n        tokenKeys.accessToken.forEach((key) => this.removeItem(key));\n        tokenKeys.refreshToken.forEach((key) => this.removeItem(key));\n\n        // Clean up anything left\n        this.getKeys().forEach((cacheKey: string) => {\n            if (\n                cacheKey.startsWith(Constants.CACHE_PREFIX) ||\n                cacheKey.indexOf(this.clientId) !== -1\n            ) {\n                this.removeItem(cacheKey);\n            }\n        });\n    }\n\n    /**\n     * Helper to decrypt all known MSAL keys in localStorage and save them to inMemory storage\n     * @returns\n     */\n    private async importExistingCache(correlationId: string): Promise<void> {\n        if (!this.encryptionCookie) {\n            return;\n        }\n\n        let accountKeys = getAccountKeys(this);\n        accountKeys = await this.importArray(accountKeys, correlationId);\n        // Write valid account keys back to map\n        this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n\n        const tokenKeys: TokenKeys = getTokenKeys(this.clientId, this);\n        tokenKeys.idToken = await this.importArray(\n            tokenKeys.idToken,\n            correlationId\n        );\n        tokenKeys.accessToken = await this.importArray(\n            tokenKeys.accessToken,\n            correlationId\n        );\n        tokenKeys.refreshToken = await this.importArray(\n            tokenKeys.refreshToken,\n            correlationId\n        );\n        // Write valid token keys back to map\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * Helper to decrypt and save cache entries\n     * @param key\n     * @returns\n     */\n    private async getItemFromEncryptedCache(\n        key: string,\n        correlationId: string\n    ): Promise<string | null> {\n        if (!this.encryptionCookie) {\n            return null;\n        }\n\n        const rawCache = this.getItem(key);\n        if (!rawCache) {\n            return null;\n        }\n\n        let encObj: EncryptedData;\n        try {\n            encObj = JSON.parse(rawCache);\n        } catch (e) {\n            // Not a valid encrypted object, remove\n            return null;\n        }\n\n        if (!encObj.id || !encObj.nonce || !encObj.data) {\n            // Data is not encrypted, likely from old version of MSAL. It must be removed because we don't know how old it is.\n            this.performanceClient.incrementFields(\n                { unencryptedCacheCount: 1 },\n                correlationId\n            );\n            return null;\n        }\n\n        if (encObj.id !== this.encryptionCookie.id) {\n            // Data was encrypted with a different key. It must be removed because it is from a previous session.\n            this.performanceClient.incrementFields(\n                { encryptedCacheExpiredCount: 1 },\n                correlationId\n            );\n            return null;\n        }\n\n        return invokeAsync(\n            decrypt,\n            PerformanceEvents.Decrypt,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            this.encryptionCookie.key,\n            encObj.nonce,\n            this.getContext(key),\n            encObj.data\n        );\n    }\n\n    /**\n     * Helper to decrypt and save an array of cache keys\n     * @param arr\n     * @returns Array of keys successfully imported\n     */\n    private async importArray(\n        arr: Array<string>,\n        correlationId: string\n    ): Promise<Array<string>> {\n        const importedArr: Array<string> = [];\n        const promiseArr: Array<Promise<void>> = [];\n        arr.forEach((key) => {\n            const promise = this.getItemFromEncryptedCache(\n                key,\n                correlationId\n            ).then((value) => {\n                if (value) {\n                    this.memoryStorage.setItem(key, value);\n                    importedArr.push(key);\n                } else {\n                    // If value is empty, unencrypted or expired remove\n                    this.removeItem(key);\n                }\n            });\n            promiseArr.push(promise);\n        });\n\n        await Promise.all(promiseArr);\n        return importedArr;\n    }\n\n    /**\n     * Gets encryption context for a given cache entry. This is clientId for app specific entries, empty string for shared entries\n     * @param key\n     * @returns\n     */\n    private getContext(key: string): string {\n        let context = \"\";\n        if (key.includes(this.clientId)) {\n            context = this.clientId; // Used to bind encryption key to this appId\n        }\n\n        return context;\n    }\n\n    private updateCache(event: MessageEvent): void {\n        this.logger.trace(\"Updating internal cache from broadcast event\");\n        const perfMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.LocalStorageUpdated\n        );\n        perfMeasurement.add({ isBackground: true });\n\n        const { key, value, context } = event.data;\n        if (!key) {\n            this.logger.error(\"Broadcast event missing key\");\n            perfMeasurement.end({ success: false, errorCode: \"noKey\" });\n            return;\n        }\n\n        if (context && context !== this.clientId) {\n            this.logger.trace(\n                `Ignoring broadcast event from clientId: ${context}`\n            );\n            perfMeasurement.end({\n                success: false,\n                errorCode: \"contextMismatch\",\n            });\n            return;\n        }\n\n        if (!value) {\n            this.memoryStorage.removeItem(key);\n            this.logger.verbose(\"Removed item from internal cache\");\n        } else {\n            this.memoryStorage.setItem(key, value);\n            this.logger.verbose(\"Updated item in internal cache\");\n        }\n        perfMeasurement.end({ success: true });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError.js\";\nimport { IWindowStorage } from \"./IWindowStorage.js\";\n\nexport class SessionStorage implements IWindowStorage<string> {\n    constructor() {\n        if (!window.sessionStorage) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\n            );\n        }\n    }\n\n    async initialize(): Promise<void> {\n        // Session storage does not require initialization\n    }\n\n    getItem(key: string): string | null {\n        return window.sessionStorage.getItem(key);\n    }\n\n    getUserData(key: string): string | null {\n        return this.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        window.sessionStorage.setItem(key, value);\n    }\n\n    async setUserData(key: string, value: string): Promise<void> {\n        this.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        window.sessionStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(window.sessionStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return window.sessionStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccessTokenEntity,\n    AccountEntity,\n    AccountInfo,\n    ActiveAccountFilters,\n    AppMetadataEntity,\n    AuthenticationScheme,\n    AuthorityMetadataEntity,\n    CacheError,\n    CacheHelpers,\n    CacheManager,\n    CacheRecord,\n    ClientAuthErrorCodes,\n    CommonAuthorizationUrlRequest,\n    Constants,\n    createClientAuthError,\n    CredentialType,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    ICrypto,\n    IdTokenEntity,\n    invokeAsync,\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n    PersistentCacheKeys,\n    RefreshTokenEntity,\n    ServerTelemetryEntity,\n    StaticAuthorityOptions,\n    StoreInCache,\n    StringUtils,\n    ThrottlingEntity,\n    TimeUtils,\n    TokenKeys,\n} from \"@azure/msal-common/browser\";\nimport { CacheOptions } from \"../config/Configuration.js\";\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError.js\";\nimport {\n    BrowserCacheLocation,\n    InMemoryCacheKeys,\n    INTERACTION_TYPE,\n    StaticCacheKeys,\n    TemporaryCacheKeys,\n} from \"../utils/BrowserConstants.js\";\nimport { LocalStorage } from \"./LocalStorage.js\";\nimport { SessionStorage } from \"./SessionStorage.js\";\nimport { MemoryStorage } from \"./MemoryStorage.js\";\nimport { IWindowStorage } from \"./IWindowStorage.js\";\nimport { PlatformAuthRequest } from \"../broker/nativeBroker/PlatformAuthRequest.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { base64Decode } from \"../encode/Base64Decode.js\";\nimport { base64Encode } from \"../encode/Base64Encode.js\";\nimport { CookieStorage } from \"./CookieStorage.js\";\nimport { getAccountKeys, getTokenKeys } from \"./CacheHelpers.js\";\nimport { EventType } from \"../event/EventType.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { clearHash } from \"../utils/BrowserUtils.js\";\nimport { version } from \"../packageMetadata.js\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n    // Cache configuration, either set by user or default values.\n    protected cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    protected browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    protected internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    protected temporaryCacheStorage: IWindowStorage<string>;\n    // Cookie storage\n    protected cookieStorage: CookieStorage;\n    // Logger instance\n    protected logger: Logger;\n    // Telemetry perf client\n    protected performanceClient: IPerformanceClient;\n    // Event Handler\n    private eventHandler: EventHandler;\n\n    constructor(\n        clientId: string,\n        cacheConfig: Required<CacheOptions>,\n        cryptoImpl: ICrypto,\n        logger: Logger,\n        performanceClient: IPerformanceClient,\n        eventHandler: EventHandler,\n        staticAuthorityOptions?: StaticAuthorityOptions\n    ) {\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = getStorageImplementation(\n            clientId,\n            cacheConfig.cacheLocation,\n            logger,\n            performanceClient\n        );\n        this.temporaryCacheStorage = getStorageImplementation(\n            clientId,\n            cacheConfig.temporaryCacheLocation,\n            logger,\n            performanceClient\n        );\n        this.cookieStorage = new CookieStorage();\n\n        this.performanceClient = performanceClient;\n        this.eventHandler = eventHandler;\n    }\n\n    async initialize(correlationId: string): Promise<void> {\n        await this.browserStorage.initialize(correlationId);\n        this.trackVersionChanges(correlationId);\n    }\n\n    /**\n     * Tracks upgrades and downgrades for telemetry and debugging purposes\n     */\n    private trackVersionChanges(correlationId: string): void {\n        const previousVersion = this.browserStorage.getItem(\n            StaticCacheKeys.VERSION\n        );\n        if (previousVersion) {\n            this.logger.info(\n                `MSAL.js was last initialized by version: ${previousVersion}`\n            );\n            this.performanceClient.addFields(\n                { previousLibraryVersion: previousVersion },\n                correlationId\n            );\n        }\n\n        if (previousVersion !== version) {\n            this.browserStorage.setItem(StaticCacheKeys.VERSION, version);\n        }\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    protected validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * Reads account from cache, deserializes it into an account entity and returns it.\n     * If account is not found from the key, returns null and removes key from map.\n     * @param accountKey\n     * @returns\n     */\n    getAccount(accountKey: string): AccountEntity | null {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const serializedAccount = this.browserStorage.getUserData(accountKey);\n        if (!serializedAccount) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(\n            new AccountEntity(),\n            parsedAccount\n        );\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    async setAccount(\n        account: AccountEntity,\n        correlationId: string\n    ): Promise<void> {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        await invokeAsync(\n            this.browserStorage.setUserData.bind(this.browserStorage),\n            PerformanceEvents.SetUserData,\n            this.logger,\n            this.performanceClient\n        )(key, JSON.stringify(account), correlationId);\n        const wasAdded = this.addAccountKeyToMap(key);\n\n        /**\n         * @deprecated - Remove this in next major version in favor of more consistent LOGIN event\n         */\n        if (\n            this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage &&\n            wasAdded\n        ) {\n            this.eventHandler.emitEvent(\n                EventType.ACCOUNT_ADDED,\n                undefined,\n                account.getAccountInfo()\n            );\n        }\n    }\n\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys(): Array<string> {\n        return getAccountKeys(this.browserStorage);\n    }\n\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key: string): boolean {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.addAccountKeyToMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.browserStorage.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key added\"\n            );\n            return true;\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key already exists in map\"\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.browserStorage.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap account key removed\"\n            );\n        } else {\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\"\n            );\n        }\n    }\n\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key: string): Promise<void> {\n        void super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<void> {\n        await super.removeAccountContext(account);\n\n        /**\n         * @deprecated - Remove this in next major version in favor of more consistent LOGOUT event\n         */\n        if (\n            this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage\n        ) {\n            this.eventHandler.emitEvent(\n                EventType.ACCOUNT_REMOVED,\n                undefined,\n                account.getAccountInfo()\n            );\n        }\n    }\n\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        void super.removeAccessToken(key);\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys(): TokenKeys {\n        return getTokenKeys(this.clientId, this.browserStorage);\n    }\n\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - idToken added to map\"\n                    );\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - accessToken added to map\"\n                    );\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - refreshToken added to map\"\n                    );\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.browserStorage.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`\n                );\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken removed from map\"\n                    );\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`\n                );\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken removed from map\"\n                    );\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`\n                );\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken removed from map\"\n                    );\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.browserStorage.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.browserStorage.getUserData(idTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !CacheHelpers.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getIdTokenCredential: cache hit\"\n        );\n        return parsedIdToken as IdTokenEntity;\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    async setIdTokenCredential(\n        idToken: IdTokenEntity,\n        correlationId: string\n    ): Promise<void> {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = CacheHelpers.generateCredentialKey(idToken);\n\n        await invokeAsync(\n            this.browserStorage.setUserData.bind(this.browserStorage),\n            PerformanceEvents.SetUserData,\n            this.logger,\n            this.performanceClient\n        )(idTokenKey, JSON.stringify(idToken), correlationId);\n\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.browserStorage.getUserData(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (\n            !parsedAccessToken ||\n            !CacheHelpers.isAccessTokenEntity(parsedAccessToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getAccessTokenCredential: cache hit\"\n        );\n        return parsedAccessToken as AccessTokenEntity;\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    async setAccessTokenCredential(\n        accessToken: AccessTokenEntity,\n        correlationId: string\n    ): Promise<void> {\n        this.logger.trace(\n            \"BrowserCacheManager.setAccessTokenCredential called\"\n        );\n        const accessTokenKey = CacheHelpers.generateCredentialKey(accessToken);\n        await invokeAsync(\n            this.browserStorage.setUserData.bind(this.browserStorage),\n            PerformanceEvents.SetUserData,\n            this.logger,\n            this.performanceClient\n        )(accessTokenKey, JSON.stringify(accessToken), correlationId);\n\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null {\n        const value = this.browserStorage.getUserData(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (\n            !parsedRefreshToken ||\n            !CacheHelpers.isRefreshTokenEntity(parsedRefreshToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getRefreshTokenCredential: cache hit\"\n        );\n        return parsedRefreshToken as RefreshTokenEntity;\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    async setRefreshTokenCredential(\n        refreshToken: RefreshTokenEntity,\n        correlationId: string\n    ): Promise<void> {\n        this.logger.trace(\n            \"BrowserCacheManager.setRefreshTokenCredential called\"\n        );\n        const refreshTokenKey =\n            CacheHelpers.generateCredentialKey(refreshToken);\n        await invokeAsync(\n            this.browserStorage.setUserData.bind(this.browserStorage),\n            PerformanceEvents.SetUserData,\n            this.logger,\n            this.performanceClient\n        )(refreshTokenKey, JSON.stringify(refreshToken), correlationId);\n\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.browserStorage.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            !parsedMetadata ||\n            !CacheHelpers.isAppMetadataEntity(appMetadataKey, parsedMetadata)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return parsedMetadata as AppMetadataEntity;\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = CacheHelpers.generateAppMetadataKey(appMetadata);\n        this.browserStorage.setItem(\n            appMetadataKey,\n            JSON.stringify(appMetadata)\n        );\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null {\n        const value = this.browserStorage.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedEntity = this.validateAndParseJson(value);\n        if (\n            !parsedEntity ||\n            !CacheHelpers.isServerTelemetryEntity(\n                serverTelemetryKey,\n                parsedEntity\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return parsedEntity as ServerTelemetryEntity;\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.browserStorage.setItem(\n            serverTelemetryKey,\n            JSON.stringify(serverTelemetry)\n        );\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string): AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            parsedMetadata &&\n            CacheHelpers.isAuthorityMetadataEntity(key, parsedMetadata)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: cache hit\"\n            );\n            return parsedMetadata as AuthorityMetadataEntity;\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(\n            InMemoryCacheKeys.WRAPPER_VER,\n            wrapperVersion\n        );\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\n            Constants.EMPTY_STRING;\n        const version =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\n            Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountKeyFilters = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountValueFilters = this.browserStorage.getItem(\n            activeAccountKeyFilters\n        );\n        if (!activeAccountValueFilters) {\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: No active account filters found\"\n            );\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(\n            activeAccountValueFilters\n        ) as AccountInfo;\n        if (activeAccountValueObj) {\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: Active account filters schema found\"\n            );\n            return this.getAccountInfoFilteredBy({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId,\n                tenantId: activeAccountValueObj.tenantId,\n            });\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getActiveAccount: No active account found\"\n        );\n        return null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountKey = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue: ActiveAccountFilters = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n                tenantId: account.tenantId,\n            };\n            this.browserStorage.setItem(\n                activeAccountKey,\n                JSON.stringify(activeAccountValue)\n            );\n        } else {\n            this.logger.verbose(\n                \"setActiveAccount: No account passed, active account not set\"\n            );\n            this.browserStorage.removeItem(activeAccountKey);\n        }\n        this.eventHandler.emitEvent(EventType.ACTIVE_ACCOUNT_CHANGED);\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.browserStorage.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (\n            !parsedThrottlingCache ||\n            !CacheHelpers.isThrottlingEntity(\n                throttlingCacheKey,\n                parsedThrottlingCache\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return parsedThrottlingCache as ThrottlingEntity;\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.browserStorage.setItem(\n            throttlingCacheKey,\n            JSON.stringify(throttlingCache)\n        );\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.cookieStorage.getItem(key);\n            if (itemCookie) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\"\n                );\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (\n                this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage\n            ) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\n                        \"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\"\n                    );\n                    return item;\n                }\n            }\n            this.logger.trace(\n                \"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\"\n            );\n            return null;\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\"\n        );\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(\n        cacheKey: string,\n        value: string,\n        generateKey?: boolean\n    ): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\"\n            );\n            this.cookieStorage.setItem(\n                key,\n                value,\n                undefined,\n                this.cacheConfig.secureCookies\n            );\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * @param key\n     */\n    removeItem(key: string): void {\n        this.browserStorage.removeItem(key);\n    }\n\n    /**\n     * Removes the temporary cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeTemporaryItem(key: string): void {\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\"\n            );\n            this.cookieStorage.removeItem(key);\n        }\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return this.browserStorage.getKeys();\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Remove temp storage first to make sure any cookies are cleared\n        this.temporaryCacheStorage.getKeys().forEach((cacheKey: string) => {\n            if (\n                cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                cacheKey.indexOf(this.clientId) !== -1\n            ) {\n                this.removeTemporaryItem(cacheKey);\n            }\n        });\n\n        // Removes all remaining MSAL cache items\n        this.browserStorage.getKeys().forEach((cacheKey: string) => {\n            if (\n                cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                cacheKey.indexOf(this.clientId) !== -1\n            ) {\n                this.browserStorage.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Clears all access tokes that have claims prior to saving the current one\n     * @param performanceClient {IPerformanceClient}\n     * @param correlationId {string} correlation id\n     * @returns\n     */\n    async clearTokensAndKeysWithClaims(\n        performanceClient: IPerformanceClient,\n        correlationId: string\n    ): Promise<void> {\n        performanceClient.addQueueMeasurement(\n            PerformanceEvents.ClearTokensAndKeysWithClaims,\n            correlationId\n        );\n\n        const tokenKeys = this.getTokenKeys();\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key: string) => {\n            // if the access token has claims in its key, remove the token key and the token\n            const credential = this.getAccessTokenCredential(key);\n            if (\n                credential?.requestedClaimsHash &&\n                key.includes(credential.requestedClaimsHash.toLowerCase())\n            ) {\n                removedAccessTokens.push(this.removeAccessToken(key));\n            }\n        });\n        await Promise.all(removedAccessTokens);\n\n        // warn if any access tokens are removed\n        if (removedAccessTokens.length > 0) {\n            this.logger.warning(\n                `${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`\n            );\n        }\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.VERIFIER)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.URL_HASH)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST)\n        );\n        this.setInteractionInProgress(false);\n    }\n\n    cacheAuthorizeRequest(\n        authCodeRequest: CommonAuthorizationUrlRequest,\n        codeVerifier?: string\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.cacheAuthorizeRequest called\");\n\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            encodedValue,\n            true\n        );\n\n        if (codeVerifier) {\n            const encodedVerifier = base64Encode(codeVerifier);\n            this.setTemporaryCache(\n                TemporaryCacheKeys.VERIFIER,\n                encodedVerifier,\n                true\n            );\n        }\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(): [CommonAuthorizationUrlRequest, string] {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            true\n        );\n        if (!encodedTokenRequest) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noTokenRequestCacheError\n            );\n        }\n        const encodedVerifier = this.getTemporaryCache(\n            TemporaryCacheKeys.VERIFIER,\n            true\n        );\n\n        let parsedRequest: CommonAuthorizationUrlRequest;\n        let verifier = \"\";\n        try {\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\n            if (encodedVerifier) {\n                verifier = base64Decode(encodedVerifier);\n            }\n        } catch (e) {\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\n            this.logger.error(\n                `Parsing cached token request threw with error: ${e}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n            );\n        }\n\n        return [parsedRequest, verifier];\n    }\n\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest(): PlatformAuthRequest | null {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            true\n        );\n        if (!cachedRequest) {\n            this.logger.trace(\n                \"BrowserCacheManager.getCachedNativeRequest: No cached native request found\"\n            );\n            return null;\n        }\n\n        const parsedRequest = this.validateAndParseJson(\n            cachedRequest\n        ) as PlatformAuthRequest;\n        if (!parsedRequest) {\n            this.logger.error(\n                \"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\"\n            );\n            return null;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress()?.clientId;\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): {\n        clientId: string;\n        type: INTERACTION_TYPE;\n    } | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        const value = this.getTemporaryCache(key, false);\n        try {\n            return value ? JSON.parse(value) : null;\n        } catch (e) {\n            // Remove interaction and other temp keys if interaction status can't be parsed\n            this.logger.error(\n                `Cannot parse interaction status. Removing temporary cache items and clearing url hash. Retrying interaction should fix the error`\n            );\n            this.removeTemporaryItem(key);\n            this.resetRequestCache();\n            clearHash(window);\n            return null;\n        }\n    }\n\n    setInteractionInProgress(\n        inProgress: boolean,\n        type: INTERACTION_TYPE = INTERACTION_TYPE.SIGNIN\n    ): void {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.interactionInProgress\n                );\n            } else {\n                // No interaction is in progress\n                this.setTemporaryCache(\n                    key,\n                    JSON.stringify({ clientId: this.clientId, type }),\n                    false\n                );\n            }\n        } else if (\n            !inProgress &&\n            this.getInteractionInProgress()?.clientId === this.clientId\n        ) {\n            this.removeTemporaryItem(key);\n        }\n    }\n\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\n            result.account?.homeAccountId,\n            result.account?.environment,\n            result.idToken,\n            this.clientId,\n            result.tenantId\n        );\n\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n\n        /**\n         * meta data for cache stores time in seconds from epoch\n         * AuthenticationResult returns expiresOn and extExpiresOn in milliseconds (as a Date object which is in ms)\n         * We need to map these for the cache when building tokens from AuthenticationResult\n         *\n         * The next MSAL VFuture should map these both to same value if possible\n         */\n\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\n            result.account?.homeAccountId,\n            result.account.environment,\n            result.accessToken,\n            this.clientId,\n            result.tenantId,\n            result.scopes.join(\" \"),\n            // Access token expiresOn stored in seconds, converting from AuthenticationResult expiresOn stored as Date\n            result.expiresOn\n                ? TimeUtils.toSecondsFromDate(result.expiresOn)\n                : 0,\n            result.extExpiresOn\n                ? TimeUtils.toSecondsFromDate(result.extExpiresOn)\n                : 0,\n            base64Decode,\n            undefined, // refreshOn\n            result.tokenType as AuthenticationScheme,\n            undefined, // userAssertionHash\n            request.sshKid,\n            request.claims,\n            claimsHash\n        );\n\n        const cacheRecord = {\n            idToken: idTokenEntity,\n            accessToken: accessTokenEntity,\n        };\n        return this.saveCacheRecord(cacheRecord, result.correlationId);\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord {CacheRecord}\n     * @param storeInCache {?StoreInCache}\n     * @param correlationId {?string} correlation id\n     */\n    async saveCacheRecord(\n        cacheRecord: CacheRecord,\n        correlationId: string,\n        storeInCache?: StoreInCache\n    ): Promise<void> {\n        try {\n            await super.saveCacheRecord(\n                cacheRecord,\n                correlationId,\n                storeInCache\n            );\n        } catch (e) {\n            if (\n                e instanceof CacheError &&\n                this.performanceClient &&\n                correlationId\n            ) {\n                try {\n                    const tokenKeys = this.getTokenKeys();\n\n                    this.performanceClient.addFields(\n                        {\n                            cacheRtCount: tokenKeys.refreshToken.length,\n                            cacheIdCount: tokenKeys.idToken.length,\n                            cacheAtCount: tokenKeys.accessToken.length,\n                        },\n                        correlationId\n                    );\n                } catch (e) {}\n            }\n\n            throw e;\n        }\n    }\n}\n\n/**\n * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n * @param cacheLocation\n */\nfunction getStorageImplementation(\n    clientId: string,\n    cacheLocation: BrowserCacheLocation | string,\n    logger: Logger,\n    performanceClient: IPerformanceClient\n): IWindowStorage<string> {\n    try {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n                return new LocalStorage(clientId, logger, performanceClient);\n            case BrowserCacheLocation.SessionStorage:\n                return new SessionStorage();\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n    } catch (e) {\n        logger.error(e as string);\n    }\n\n    return new MemoryStorage();\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (\n    clientId: string,\n    logger: Logger,\n    performanceClient: IPerformanceClient,\n    eventHandler: EventHandler\n): BrowserCacheManager => {\n    const cacheOptions: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(\n        clientId,\n        cacheOptions,\n        DEFAULT_CRYPTO_IMPLEMENTATION,\n        logger,\n        performanceClient,\n        eventHandler\n    );\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common/browser\";\nimport { InteractionType } from \"../utils/BrowserConstants.js\";\nimport {\n    EventCallbackFunction,\n    EventError,\n    EventMessage,\n    EventPayload,\n} from \"./EventMessage.js\";\nimport { EventType } from \"./EventType.js\";\nimport { createGuid } from \"../utils/BrowserUtils.js\";\n\nconst BROADCAST_CHANNEL_NAME = \"msal.broadcast.event\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<\n        string,\n        [EventCallbackFunction, Array<EventType>]\n    >;\n    private logger: Logger;\n    private broadcastChannel?: BroadcastChannel;\n\n    constructor(logger?: Logger) {\n        this.eventCallbacks = new Map();\n        this.logger = logger || new Logger({});\n        if (typeof BroadcastChannel !== \"undefined\") {\n            this.broadcastChannel = new BroadcastChannel(\n                BROADCAST_CHANNEL_NAME\n            );\n        }\n        this.invokeCrossTabCallbacks = this.invokeCrossTabCallbacks.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback - callback to be invoked when an event is raised\n     * @param eventTypes - list of events that this callback will be invoked for, if not provided callback will be invoked for all events\n     * @param callbackId - Identifier for the callback, used to locate and remove the callback when no longer required\n     */\n    addEventCallback(\n        callback: EventCallbackFunction,\n        eventTypes?: Array<EventType>,\n        callbackId?: string\n    ): string | null {\n        if (typeof window !== \"undefined\") {\n            const id = callbackId || createGuid();\n            if (this.eventCallbacks.has(id)) {\n                this.logger.error(\n                    `Event callback with id: ${id} is already registered. Please provide a unique id or remove the existing callback and try again.`\n                );\n                return null;\n            }\n            this.eventCallbacks.set(id, [callback, eventTypes || []]);\n            this.logger.verbose(`Event callback registered with id: ${id}`);\n\n            return id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(\n        eventType: EventType,\n        interactionType?: InteractionType,\n        payload?: EventPayload,\n        error?: EventError\n    ): void {\n        const message: EventMessage = {\n            eventType: eventType,\n            interactionType: interactionType || null,\n            payload: payload || null,\n            error: error || null,\n            timestamp: Date.now(),\n        };\n\n        switch (eventType) {\n            case EventType.ACCOUNT_ADDED:\n            case EventType.ACCOUNT_REMOVED:\n            case EventType.ACTIVE_ACCOUNT_CHANGED:\n                // Send event to other open tabs / MSAL instances on same domain\n                this.broadcastChannel?.postMessage(message);\n                break;\n            default:\n                // Emit event to callbacks registered in this instance\n                this.invokeCallbacks(message);\n                break;\n        }\n    }\n\n    /**\n     * Invoke registered callbacks\n     * @param message\n     */\n    private invokeCallbacks(message: EventMessage): void {\n        this.eventCallbacks.forEach(\n            (\n                [callback, eventTypes]: [\n                    EventCallbackFunction,\n                    Array<EventType>\n                ],\n                callbackId: string\n            ) => {\n                if (\n                    eventTypes.length === 0 ||\n                    eventTypes.includes(message.eventType)\n                ) {\n                    this.logger.verbose(\n                        `Emitting event to callback ${callbackId}: ${message.eventType}`\n                    );\n                    callback.apply(null, [message]);\n                }\n            }\n        );\n    }\n\n    /**\n     * Wrapper around invokeCallbacks to handle broadcast events received from other tabs/instances\n     * @param event\n     */\n    private invokeCrossTabCallbacks(event: MessageEvent): void {\n        const message = event.data as EventMessage;\n        this.invokeCallbacks(message);\n    }\n\n    /**\n     * Listen for events broadcasted from other tabs/instances\n     */\n    subscribeCrossTab(): void {\n        this.broadcastChannel?.addEventListener(\n            \"message\",\n            this.invokeCrossTabCallbacks\n        );\n    }\n\n    /**\n     * Unsubscribe from broadcast events\n     */\n    unsubscribeCrossTab(): void {\n        this.broadcastChannel?.removeEventListener(\n            \"message\",\n            this.invokeCrossTabCallbacks\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string;\n    type: CcsCredentialType;\n};\n\nexport const CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n} as const;\nexport type CcsCredentialType =\n    (typeof CcsCredentialType)[keyof typeof CcsCredentialType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const CLIENT_ID = \"client_id\";\nexport const REDIRECT_URI = \"redirect_uri\";\nexport const RESPONSE_TYPE = \"response_type\";\nexport const RESPONSE_MODE = \"response_mode\";\nexport const GRANT_TYPE = \"grant_type\";\nexport const CLAIMS = \"claims\";\nexport const SCOPE = \"scope\";\nexport const ERROR = \"error\";\nexport const ERROR_DESCRIPTION = \"error_description\";\nexport const ACCESS_TOKEN = \"access_token\";\nexport const ID_TOKEN = \"id_token\";\nexport const REFRESH_TOKEN = \"refresh_token\";\nexport const EXPIRES_IN = \"expires_in\";\nexport const REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\nexport const STATE = \"state\";\nexport const NONCE = \"nonce\";\nexport const PROMPT = \"prompt\";\nexport const SESSION_STATE = \"session_state\";\nexport const CLIENT_INFO = \"client_info\";\nexport const CODE = \"code\";\nexport const CODE_CHALLENGE = \"code_challenge\";\nexport const CODE_CHALLENGE_METHOD = \"code_challenge_method\";\nexport const CODE_VERIFIER = \"code_verifier\";\nexport const CLIENT_REQUEST_ID = \"client-request-id\";\nexport const X_CLIENT_SKU = \"x-client-SKU\";\nexport const X_CLIENT_VER = \"x-client-VER\";\nexport const X_CLIENT_OS = \"x-client-OS\";\nexport const X_CLIENT_CPU = \"x-client-CPU\";\nexport const X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\nexport const X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\nexport const X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\nexport const X_APP_NAME = \"x-app-name\";\nexport const X_APP_VER = \"x-app-ver\";\nexport const POST_LOGOUT_URI = \"post_logout_redirect_uri\";\nexport const ID_TOKEN_HINT = \"id_token_hint\";\nexport const DEVICE_CODE = \"device_code\";\nexport const CLIENT_SECRET = \"client_secret\";\nexport const CLIENT_ASSERTION = \"client_assertion\";\nexport const CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\nexport const TOKEN_TYPE = \"token_type\";\nexport const REQ_CNF = \"req_cnf\";\nexport const OBO_ASSERTION = \"assertion\";\nexport const REQUESTED_TOKEN_USE = \"requested_token_use\";\nexport const ON_BEHALF_OF = \"on_behalf_of\";\nexport const FOCI = \"foci\";\nexport const CCS_HEADER = \"X-AnchorMailbox\";\nexport const RETURN_SPA_CODE = \"return_spa_code\";\nexport const NATIVE_BROKER = \"nativebroker\";\nexport const LOGOUT_HINT = \"logout_hint\";\nexport const SID = \"sid\";\nexport const LOGIN_HINT = \"login_hint\";\nexport const DOMAIN_HINT = \"domain_hint\";\nexport const X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\nexport const BROKER_CLIENT_ID = \"brk_client_id\";\nexport const BROKER_REDIRECT_URI = \"brk_redirect_uri\";\nexport const INSTANCE_AWARE = \"instance_aware\";\nexport const EAR_JWK = \"ear_jwk\";\nexport const EAR_JWE_CRYPTO = \"ear_jwe_crypto\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ResponseMode,\n    CLIENT_INFO,\n    AuthenticationScheme,\n    ClaimsRequestKeys,\n    PasswordGrantConstants,\n    OIDC_DEFAULT_SCOPES,\n    ThrottlingConstants,\n    HeaderNames,\n    OAuthResponseType,\n} from \"../utils/Constants.js\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\nimport { ScopeSet } from \"./ScopeSet.js\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport { StringDict } from \"../utils/MsalTypes.js\";\nimport {\n    ApplicationTelemetry,\n    LibraryInfo,\n} from \"../config/ClientConfiguration.js\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager.js\";\nimport { ClientInfo } from \"../account/ClientInfo.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\n\nexport function instrumentBrokerParams(\n    parameters: Map<string, string>,\n    correlationId?: string,\n    performanceClient?: IPerformanceClient\n): void {\n    if (!correlationId) {\n        return;\n    }\n\n    const clientId = parameters.get(AADServerParamKeys.CLIENT_ID);\n    if (clientId && parameters.has(AADServerParamKeys.BROKER_CLIENT_ID)) {\n        performanceClient?.addFields(\n            {\n                embeddedClientId: clientId,\n                embeddedRedirectUri: parameters.get(\n                    AADServerParamKeys.REDIRECT_URI\n                ),\n            },\n            correlationId\n        );\n    }\n}\n\n/**\n * Add the given response_type\n * @param parameters\n * @param responseType\n */\nexport function addResponseType(\n    parameters: Map<string, string>,\n    responseType: OAuthResponseType\n): void {\n    parameters.set(AADServerParamKeys.RESPONSE_TYPE, responseType);\n}\n\n/**\n * add response_mode. defaults to query.\n * @param responseMode\n */\nexport function addResponseMode(\n    parameters: Map<string, string>,\n    responseMode?: ResponseMode\n): void {\n    parameters.set(\n        AADServerParamKeys.RESPONSE_MODE,\n        responseMode ? responseMode : ResponseMode.QUERY\n    );\n}\n\n/**\n * Add flag to indicate STS should attempt to use WAM if available\n */\nexport function addNativeBroker(parameters: Map<string, string>): void {\n    parameters.set(AADServerParamKeys.NATIVE_BROKER, \"1\");\n}\n\n/**\n * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n * @param scopeSet\n * @param addOidcScopes\n */\nexport function addScopes(\n    parameters: Map<string, string>,\n    scopes: string[],\n    addOidcScopes: boolean = true,\n    defaultScopes: Array<string> = OIDC_DEFAULT_SCOPES\n): void {\n    // Always add openid to the scopes when adding OIDC scopes\n    if (\n        addOidcScopes &&\n        !defaultScopes.includes(\"openid\") &&\n        !scopes.includes(\"openid\")\n    ) {\n        defaultScopes.push(\"openid\");\n    }\n    const requestScopes = addOidcScopes\n        ? [...(scopes || []), ...defaultScopes]\n        : scopes || [];\n    const scopeSet = new ScopeSet(requestScopes);\n    parameters.set(AADServerParamKeys.SCOPE, scopeSet.printScopes());\n}\n\n/**\n * add clientId\n * @param clientId\n */\nexport function addClientId(\n    parameters: Map<string, string>,\n    clientId: string\n): void {\n    parameters.set(AADServerParamKeys.CLIENT_ID, clientId);\n}\n\n/**\n * add redirect_uri\n * @param redirectUri\n */\nexport function addRedirectUri(\n    parameters: Map<string, string>,\n    redirectUri: string\n): void {\n    parameters.set(AADServerParamKeys.REDIRECT_URI, redirectUri);\n}\n\n/**\n * add post logout redirectUri\n * @param redirectUri\n */\nexport function addPostLogoutRedirectUri(\n    parameters: Map<string, string>,\n    redirectUri: string\n): void {\n    parameters.set(AADServerParamKeys.POST_LOGOUT_URI, redirectUri);\n}\n\n/**\n * add id_token_hint to logout request\n * @param idTokenHint\n */\nexport function addIdTokenHint(\n    parameters: Map<string, string>,\n    idTokenHint: string\n): void {\n    parameters.set(AADServerParamKeys.ID_TOKEN_HINT, idTokenHint);\n}\n\n/**\n * add domain_hint\n * @param domainHint\n */\nexport function addDomainHint(\n    parameters: Map<string, string>,\n    domainHint: string\n): void {\n    parameters.set(AADServerParamKeys.DOMAIN_HINT, domainHint);\n}\n\n/**\n * add login_hint\n * @param loginHint\n */\nexport function addLoginHint(\n    parameters: Map<string, string>,\n    loginHint: string\n): void {\n    parameters.set(AADServerParamKeys.LOGIN_HINT, loginHint);\n}\n\n/**\n * Adds the CCS (Cache Credential Service) query parameter for login_hint\n * @param loginHint\n */\nexport function addCcsUpn(\n    parameters: Map<string, string>,\n    loginHint: string\n): void {\n    parameters.set(HeaderNames.CCS_HEADER, `UPN:${loginHint}`);\n}\n\n/**\n * Adds the CCS (Cache Credential Service) query parameter for account object\n * @param loginHint\n */\nexport function addCcsOid(\n    parameters: Map<string, string>,\n    clientInfo: ClientInfo\n): void {\n    parameters.set(\n        HeaderNames.CCS_HEADER,\n        `Oid:${clientInfo.uid}@${clientInfo.utid}`\n    );\n}\n\n/**\n * add sid\n * @param sid\n */\nexport function addSid(parameters: Map<string, string>, sid: string): void {\n    parameters.set(AADServerParamKeys.SID, sid);\n}\n\n/**\n * add claims\n * @param claims\n */\nexport function addClaims(\n    parameters: Map<string, string>,\n    claims?: string,\n    clientCapabilities?: Array<string>\n): void {\n    const mergedClaims = addClientCapabilitiesToClaims(\n        claims,\n        clientCapabilities\n    );\n    try {\n        JSON.parse(mergedClaims);\n    } catch (e) {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.invalidClaims\n        );\n    }\n    parameters.set(AADServerParamKeys.CLAIMS, mergedClaims);\n}\n\n/**\n * add correlationId\n * @param correlationId\n */\nexport function addCorrelationId(\n    parameters: Map<string, string>,\n    correlationId: string\n): void {\n    parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, correlationId);\n}\n\n/**\n * add library info query params\n * @param libraryInfo\n */\nexport function addLibraryInfo(\n    parameters: Map<string, string>,\n    libraryInfo: LibraryInfo\n): void {\n    // Telemetry Info\n    parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n    parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n    if (libraryInfo.os) {\n        parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n    }\n    if (libraryInfo.cpu) {\n        parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n    }\n}\n\n/**\n * Add client telemetry parameters\n * @param appTelemetry\n */\nexport function addApplicationTelemetry(\n    parameters: Map<string, string>,\n    appTelemetry: ApplicationTelemetry\n): void {\n    if (appTelemetry?.appName) {\n        parameters.set(AADServerParamKeys.X_APP_NAME, appTelemetry.appName);\n    }\n\n    if (appTelemetry?.appVersion) {\n        parameters.set(AADServerParamKeys.X_APP_VER, appTelemetry.appVersion);\n    }\n}\n\n/**\n * add prompt\n * @param prompt\n */\nexport function addPrompt(\n    parameters: Map<string, string>,\n    prompt: string\n): void {\n    parameters.set(AADServerParamKeys.PROMPT, prompt);\n}\n\n/**\n * add state\n * @param state\n */\nexport function addState(parameters: Map<string, string>, state: string): void {\n    if (state) {\n        parameters.set(AADServerParamKeys.STATE, state);\n    }\n}\n\n/**\n * add nonce\n * @param nonce\n */\nexport function addNonce(parameters: Map<string, string>, nonce: string): void {\n    parameters.set(AADServerParamKeys.NONCE, nonce);\n}\n\n/**\n * add code_challenge and code_challenge_method\n * - throw if either of them are not passed\n * @param codeChallenge\n * @param codeChallengeMethod\n */\nexport function addCodeChallengeParams(\n    parameters: Map<string, string>,\n    codeChallenge?: string,\n    codeChallengeMethod?: string\n): void {\n    if (codeChallenge && codeChallengeMethod) {\n        parameters.set(AADServerParamKeys.CODE_CHALLENGE, codeChallenge);\n        parameters.set(\n            AADServerParamKeys.CODE_CHALLENGE_METHOD,\n            codeChallengeMethod\n        );\n    } else {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.pkceParamsMissing\n        );\n    }\n}\n\n/**\n * add the `authorization_code` passed by the user to exchange for a token\n * @param code\n */\nexport function addAuthorizationCode(\n    parameters: Map<string, string>,\n    code: string\n): void {\n    parameters.set(AADServerParamKeys.CODE, code);\n}\n\n/**\n * add the `authorization_code` passed by the user to exchange for a token\n * @param code\n */\nexport function addDeviceCode(\n    parameters: Map<string, string>,\n    code: string\n): void {\n    parameters.set(AADServerParamKeys.DEVICE_CODE, code);\n}\n\n/**\n * add the `refreshToken` passed by the user\n * @param refreshToken\n */\nexport function addRefreshToken(\n    parameters: Map<string, string>,\n    refreshToken: string\n): void {\n    parameters.set(AADServerParamKeys.REFRESH_TOKEN, refreshToken);\n}\n\n/**\n * add the `code_verifier` passed by the user to exchange for a token\n * @param codeVerifier\n */\nexport function addCodeVerifier(\n    parameters: Map<string, string>,\n    codeVerifier: string\n): void {\n    parameters.set(AADServerParamKeys.CODE_VERIFIER, codeVerifier);\n}\n\n/**\n * add client_secret\n * @param clientSecret\n */\nexport function addClientSecret(\n    parameters: Map<string, string>,\n    clientSecret: string\n): void {\n    parameters.set(AADServerParamKeys.CLIENT_SECRET, clientSecret);\n}\n\n/**\n * add clientAssertion for confidential client flows\n * @param clientAssertion\n */\nexport function addClientAssertion(\n    parameters: Map<string, string>,\n    clientAssertion: string\n): void {\n    if (clientAssertion) {\n        parameters.set(AADServerParamKeys.CLIENT_ASSERTION, clientAssertion);\n    }\n}\n\n/**\n * add clientAssertionType for confidential client flows\n * @param clientAssertionType\n */\nexport function addClientAssertionType(\n    parameters: Map<string, string>,\n    clientAssertionType: string\n): void {\n    if (clientAssertionType) {\n        parameters.set(\n            AADServerParamKeys.CLIENT_ASSERTION_TYPE,\n            clientAssertionType\n        );\n    }\n}\n\n/**\n * add OBO assertion for confidential client flows\n * @param clientAssertion\n */\nexport function addOboAssertion(\n    parameters: Map<string, string>,\n    oboAssertion: string\n): void {\n    parameters.set(AADServerParamKeys.OBO_ASSERTION, oboAssertion);\n}\n\n/**\n * add grant type\n * @param grantType\n */\nexport function addRequestTokenUse(\n    parameters: Map<string, string>,\n    tokenUse: string\n): void {\n    parameters.set(AADServerParamKeys.REQUESTED_TOKEN_USE, tokenUse);\n}\n\n/**\n * add grant type\n * @param grantType\n */\nexport function addGrantType(\n    parameters: Map<string, string>,\n    grantType: string\n): void {\n    parameters.set(AADServerParamKeys.GRANT_TYPE, grantType);\n}\n\n/**\n * add client info\n *\n */\nexport function addClientInfo(parameters: Map<string, string>): void {\n    parameters.set(CLIENT_INFO, \"1\");\n}\n\nexport function addInstanceAware(parameters: Map<string, string>): void {\n    if (!parameters.has(AADServerParamKeys.INSTANCE_AWARE)) {\n        parameters.set(AADServerParamKeys.INSTANCE_AWARE, \"true\");\n    }\n}\n\n/**\n * add extraQueryParams\n * @param eQParams\n */\nexport function addExtraQueryParameters(\n    parameters: Map<string, string>,\n    eQParams: StringDict\n): void {\n    Object.entries(eQParams).forEach(([key, value]) => {\n        if (!parameters.has(key) && value) {\n            parameters.set(key, value);\n        }\n    });\n}\n\nexport function addClientCapabilitiesToClaims(\n    claims?: string,\n    clientCapabilities?: Array<string>\n): string {\n    let mergedClaims: object;\n\n    // Parse provided claims into JSON object or initialize empty object\n    if (!claims) {\n        mergedClaims = {};\n    } else {\n        try {\n            mergedClaims = JSON.parse(claims);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidClaims\n            );\n        }\n    }\n\n    if (clientCapabilities && clientCapabilities.length > 0) {\n        if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\n            // Add access_token key to claims object\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n        }\n\n        // Add xms_cc claim with provided clientCapabilities to access_token key\n        mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] =\n            {\n                values: clientCapabilities,\n            };\n    }\n\n    return JSON.stringify(mergedClaims);\n}\n\n/**\n * adds `username` for Password Grant flow\n * @param username\n */\nexport function addUsername(\n    parameters: Map<string, string>,\n    username: string\n): void {\n    parameters.set(PasswordGrantConstants.username, username);\n}\n\n/**\n * adds `password` for Password Grant flow\n * @param password\n */\nexport function addPassword(\n    parameters: Map<string, string>,\n    password: string\n): void {\n    parameters.set(PasswordGrantConstants.password, password);\n}\n\n/**\n * add pop_jwk to query params\n * @param cnfString\n */\nexport function addPopToken(\n    parameters: Map<string, string>,\n    cnfString: string\n): void {\n    if (cnfString) {\n        parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.POP);\n        parameters.set(AADServerParamKeys.REQ_CNF, cnfString);\n    }\n}\n\n/**\n * add SSH JWK and key ID to query params\n */\nexport function addSshJwk(\n    parameters: Map<string, string>,\n    sshJwkString: string\n): void {\n    if (sshJwkString) {\n        parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.SSH);\n        parameters.set(AADServerParamKeys.REQ_CNF, sshJwkString);\n    }\n}\n\n/**\n * add server telemetry fields\n * @param serverTelemetryManager\n */\nexport function addServerTelemetry(\n    parameters: Map<string, string>,\n    serverTelemetryManager: ServerTelemetryManager\n): void {\n    parameters.set(\n        AADServerParamKeys.X_CLIENT_CURR_TELEM,\n        serverTelemetryManager.generateCurrentRequestHeaderValue()\n    );\n    parameters.set(\n        AADServerParamKeys.X_CLIENT_LAST_TELEM,\n        serverTelemetryManager.generateLastRequestHeaderValue()\n    );\n}\n\n/**\n * Adds parameter that indicates to the server that throttling is supported\n */\nexport function addThrottling(parameters: Map<string, string>): void {\n    parameters.set(\n        AADServerParamKeys.X_MS_LIB_CAPABILITY,\n        ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE\n    );\n}\n\n/**\n * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n */\nexport function addLogoutHint(\n    parameters: Map<string, string>,\n    logoutHint: string\n): void {\n    parameters.set(AADServerParamKeys.LOGOUT_HINT, logoutHint);\n}\n\nexport function addBrokerParameters(\n    parameters: Map<string, string>,\n    brokerClientId: string,\n    brokerRedirectUri: string\n): void {\n    if (!parameters.has(AADServerParamKeys.BROKER_CLIENT_ID)) {\n        parameters.set(AADServerParamKeys.BROKER_CLIENT_ID, brokerClientId);\n    }\n    if (!parameters.has(AADServerParamKeys.BROKER_REDIRECT_URI)) {\n        parameters.set(\n            AADServerParamKeys.BROKER_REDIRECT_URI,\n            brokerRedirectUri\n        );\n    }\n}\n\n/**\n * Add EAR (Encrypted Authorize Response) request parameters\n * @param parameters\n * @param jwk\n */\nexport function addEARParameters(\n    parameters: Map<string, string>,\n    jwk: string\n): void {\n    parameters.set(AADServerParamKeys.EAR_JWK, encodeURIComponent(jwk));\n\n    // ear_jwe_crypto will always have value: {\"alg\":\"dir\",\"enc\":\"A256GCM\"} so we can hardcode this\n    const jweCryptoB64Encoded = \"eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0\";\n    parameters.set(AADServerParamKeys.EAR_JWE_CRYPTO, jweCryptoB64Encoded);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority, formatAuthorityUri } from \"./Authority.js\";\nimport { INetworkModule } from \"../network/INetworkModule.js\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError.js\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager.js\";\nimport { AuthorityOptions } from \"./AuthorityOptions.js\";\nimport { Logger } from \"../logger/Logger.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\n\n/**\n * Create an authority object of the correct type based on the url\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n *\n * Also performs endpoint discovery.\n *\n * @param authorityUri\n * @param networkClient\n * @param protocolMode\n * @internal\n */\nexport async function createDiscoveredInstance(\n    authorityUri: string,\n    networkClient: INetworkModule,\n    cacheManager: ICacheManager,\n    authorityOptions: AuthorityOptions,\n    logger: Logger,\n    correlationId: string,\n    performanceClient?: IPerformanceClient\n): Promise<Authority> {\n    performanceClient?.addQueueMeasurement(\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n        correlationId\n    );\n    const authorityUriFinal = Authority.transformCIAMAuthority(\n        formatAuthorityUri(authorityUri)\n    );\n\n    // Initialize authority and perform discovery endpoint check.\n    const acquireTokenAuthority: Authority = new Authority(\n        authorityUriFinal,\n        networkClient,\n        cacheManager,\n        authorityOptions,\n        logger,\n        correlationId,\n        performanceClient\n    );\n\n    try {\n        await invokeAsync(\n            acquireTokenAuthority.resolveEndpointsAsync.bind(\n                acquireTokenAuthority\n            ),\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            logger,\n            performanceClient,\n            correlationId\n        )();\n        return acquireTokenAuthority;\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.endpointResolutionError\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError.js\";\n\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nexport class ServerError extends AuthError {\n    /**\n     * Server error number;\n     */\n    readonly errorNo?: string;\n\n    /**\n     * Http status number;\n     */\n    readonly status?: number;\n\n    constructor(\n        errorCode?: string,\n        errorMessage?: string,\n        subError?: string,\n        errorNo?: string,\n        status?: number\n    ) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n        this.errorNo = errorNo;\n        this.status = status;\n\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkResponse.js\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\nimport {\n    HeaderNames,\n    ThrottlingConstants,\n    Constants,\n} from \"../utils/Constants.js\";\nimport { CacheManager } from \"../cache/CacheManager.js\";\nimport { ServerError } from \"../error/ServerError.js\";\nimport {\n    getRequestThumbprint,\n    RequestThumbprint,\n} from \"./RequestThumbprint.js\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity.js\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\n\n/** @internal */\nexport class ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(\n            thumbprint\n        )}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint\n    ): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new ServerError(\n                value.errorCodes?.join(\" \") || Constants.EMPTY_STRING,\n                value.errorMessage,\n                value.subError\n            );\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint,\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): void {\n        if (\n            ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)\n        ) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(\n                    parseInt(response.headers[HeaderNames.RETRY_AFTER])\n                ),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        return (\n            response.status === 429 ||\n            (response.status >= 500 && response.status < 600)\n        );\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        if (response.headers) {\n            return (\n                response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300)\n            );\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(\n            Math.min(\n                currentSeconds +\n                    (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n                currentSeconds +\n                    ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n            ) * 1000\n        );\n    }\n\n    static removeThrottle(\n        cacheManager: CacheManager,\n        clientId: string,\n        request: BaseAuthRequest,\n        homeAccountIdentifier?: string\n    ): void {\n        const thumbprint = getRequestThumbprint(\n            clientId,\n            request,\n            homeAccountIdentifier\n        );\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    buildClientConfiguration,\n    CommonClientConfiguration,\n} from \"../config/ClientConfiguration.js\";\nimport {\n    INetworkModule,\n    NetworkRequestOptions,\n} from \"../network/INetworkModule.js\";\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\nimport { ICrypto } from \"../crypto/ICrypto.js\";\nimport { Authority } from \"../authority/Authority.js\";\nimport { Logger } from \"../logger/Logger.js\";\nimport { Constants, HeaderNames } from \"../utils/Constants.js\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\nimport { CacheManager } from \"../cache/CacheManager.js\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager.js\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint.js\";\nimport { version, name } from \"../packageMetadata.js\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential.js\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport * as RequestParameterBuilder from \"../request/RequestParameterBuilder.js\";\nimport * as UrlUtils from \"../utils/UrlUtils.js\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\nimport { createDiscoveredInstance } from \"../authority/AuthorityFactory.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { ThrottlingUtils } from \"../network/ThrottlingUtils.js\";\nimport { AuthError } from \"../error/AuthError.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { NetworkError } from \"../error/NetworkError.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Default authority object\n    public authority: Authority;\n\n    // Performance telemetry client\n    protected performanceClient?: IPerformanceClient;\n\n    protected constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(\n        ccsCred?: CcsCredential\n    ): Record<string, string> {\n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        headers[\n                            HeaderNames.CCS_HEADER\n                        ] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[\n                        HeaderNames.CCS_HEADER\n                    ] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(\n        tokenEndpoint: string,\n        queryString: string,\n        headers: Record<string, string>,\n        thumbprint: RequestThumbprint,\n        correlationId: string,\n        queuedEvent?: string\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        if (queuedEvent) {\n            this.performanceClient?.addQueueMeasurement(\n                queuedEvent,\n                correlationId\n            );\n        }\n\n        const response =\n            await this.sendPostRequest<ServerAuthorizationTokenResponse>(\n                thumbprint,\n                tokenEndpoint,\n                { body: queryString, headers: headers },\n                correlationId\n            );\n\n        if (\n            this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429\n        ) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint - Request thumbprint for throttling\n     * @param tokenEndpoint - Endpoint to make the POST to\n     * @param options - Body and Headers to include on the POST request\n     * @param correlationId - CorrelationId for telemetry\n     */\n    async sendPostRequest<T extends ServerAuthorizationTokenResponse>(\n        thumbprint: RequestThumbprint,\n        tokenEndpoint: string,\n        options: NetworkRequestOptions,\n        correlationId: string\n    ): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await invokeAsync(\n                this.networkClient.sendPostRequestAsync.bind(\n                    this.networkClient\n                )<T>,\n                PerformanceEvents.NetworkClientSendPostRequestAsync,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(tokenEndpoint, options);\n            const responseHeaders = response.headers || {};\n            this.performanceClient?.addFields(\n                {\n                    refreshTokenSize: response.body.refresh_token?.length || 0,\n                    httpVerToken:\n                        responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || \"\",\n                    requestId:\n                        responseHeaders[HeaderNames.X_MS_REQUEST_ID] || \"\",\n                },\n                correlationId\n            );\n        } catch (e) {\n            if (e instanceof NetworkError) {\n                const responseHeaders = e.responseHeaders;\n                if (responseHeaders) {\n                    this.performanceClient?.addFields(\n                        {\n                            httpVerToken:\n                                responseHeaders[\n                                    HeaderNames.X_MS_HTTP_VERSION\n                                ] || \"\",\n                            requestId:\n                                responseHeaders[HeaderNames.X_MS_REQUEST_ID] ||\n                                \"\",\n                            contentTypeHeader:\n                                responseHeaders[HeaderNames.CONTENT_TYPE] ||\n                                undefined,\n                            contentLengthHeader:\n                                responseHeaders[HeaderNames.CONTENT_LENGTH] ||\n                                undefined,\n                            httpStatus: e.httpStatus,\n                        },\n                        correlationId\n                    );\n                }\n                throw e.error;\n            }\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw createClientAuthError(ClientAuthErrorCodes.networkError);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    async updateAuthority(\n        cloudInstanceHostname: string,\n        correlationId: string\n    ): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.UpdateTokenEndpointAuthority,\n            correlationId\n        );\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\n        const cloudInstanceAuthority = await createDiscoveredInstance(\n            cloudInstanceAuthorityUri,\n            this.networkClient,\n            this.cacheManager,\n            this.authority.options,\n            this.logger,\n            correlationId,\n            this.performanceClient\n        );\n        this.authority = cloudInstanceAuthority;\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request: BaseAuthRequest): string {\n        const parameters = new Map<string, string>();\n\n        if (request.embeddedClientId) {\n            RequestParameterBuilder.addBrokerParameters(\n                parameters,\n                this.config.authOptions.clientId,\n                this.config.authOptions.redirectUri\n            );\n        }\n\n        if (request.tokenQueryParameters) {\n            RequestParameterBuilder.addExtraQueryParameters(\n                parameters,\n                request.tokenQueryParameters\n            );\n        }\n\n        RequestParameterBuilder.addCorrelationId(\n            parameters,\n            request.correlationId\n        );\n\n        RequestParameterBuilder.instrumentBrokerParams(\n            parameters,\n            request.correlationId,\n            this.performanceClient\n        );\n        return UrlUtils.mapToQueryString(parameters);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"./Constants.js\";\nimport { ICrypto } from \"../crypto/ICrypto.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string;\n    meta?: Record<string, string>;\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string;\n    libraryState: LibraryStateObject;\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(\n        cryptoObj: ICrypto,\n        userState?: string,\n        meta?: Record<string, string>\n    ): string {\n        const libraryState = ProtocolUtils.generateLibraryState(\n            cryptoObj,\n            meta\n        );\n        return userState\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(\n        cryptoObj: ICrypto,\n        meta?: Record<string, string>\n    ): string {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid(),\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(\n        cryptoObj: ICrypto,\n        state: string\n    ): RequestStateObject {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        if (!state) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState =\n                splitState.length > 1\n                    ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\n                    : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(\n                libraryStateString\n            ) as LibraryStateObject;\n            return {\n                userRequestState: userState || Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        } catch (e) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto.js\";\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\nimport { UrlString } from \"../url/UrlString.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\nimport { Logger } from \"../logger/Logger.js\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nexport type ReqCnfData = {\n    kid: string;\n    reqCnfString: string;\n};\n\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n} as const;\nexport type KeyLocation = (typeof KeyLocation)[keyof typeof KeyLocation];\n\n/** @internal */\nexport class PopTokenGenerator {\n    private cryptoUtils: ICrypto;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(cryptoUtils: ICrypto, performanceClient?: IPerformanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(\n        request: SignedHttpRequestParameters,\n        logger: Logger\n    ): Promise<ReqCnfData> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateCnf,\n            request.correlationId\n        );\n\n        const reqCnf = await invokeAsync(\n            this.generateKid.bind(this),\n            PerformanceEvents.PopTokenGenerateCnf,\n            logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const reqCnfString: string = this.cryptoUtils.base64UrlEncode(\n            JSON.stringify(reqCnf)\n        );\n\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n        };\n    }\n\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateKid,\n            request.correlationId\n        );\n\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(\n            request\n        );\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(\n        accessToken: string,\n        keyId: string,\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        return this.signPayload(accessToken, keyId, request);\n    }\n\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(\n        payload: string,\n        keyId: string,\n        request: SignedHttpRequestParameters,\n        claims?: object\n    ): Promise<string> {\n        // Deconstruct request to extract SHR parameters\n        const {\n            resourceRequestMethod,\n            resourceRequestUri,\n            shrClaims,\n            shrNonce,\n            shrOptions,\n        } = request;\n\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return this.cryptoUtils.signJwt(\n            {\n                at: payload,\n                ts: TimeUtils.nowSeconds(),\n                m: resourceRequestMethod?.toUpperCase(),\n                u: resourceUrlComponents?.HostNameAndPort,\n                nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n                p: resourceUrlComponents?.AbsolutePath,\n                q: resourceUrlComponents?.QueryString\n                    ? [[], resourceUrlComponents.QueryString]\n                    : undefined,\n                client_claims: shrClaims || undefined,\n                ...claims,\n            },\n            keyId,\n            shrOptions,\n            request.correlationId\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache.js\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse.js\";\nimport { ICrypto } from \"../crypto/ICrypto.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { Logger } from \"../logger/Logger.js\";\nimport { ServerError } from \"../error/ServerError.js\";\nimport { ScopeSet } from \"../request/ScopeSet.js\";\nimport { AuthenticationResult } from \"./AuthenticationResult.js\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity.js\";\nimport { Authority } from \"../authority/Authority.js\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity.js\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity.js\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity.js\";\nimport {\n    InteractionRequiredAuthError,\n    isInteractionRequiredError,\n} from \"../error/InteractionRequiredAuthError.js\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord.js\";\nimport { CacheManager } from \"../cache/CacheManager.js\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils.js\";\nimport {\n    AuthenticationScheme,\n    Constants,\n    THE_FAMILY_ID,\n    HttpStatus,\n} from \"../utils/Constants.js\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator.js\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity.js\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin.js\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext.js\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache.js\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload.js\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken.js\";\nimport {\n    TokenClaims,\n    getTenantIdFromIdTokenClaims,\n} from \"../account/TokenClaims.js\";\nimport {\n    AccountInfo,\n    buildTenantProfile,\n    updateAccountTenantProfileData,\n} from \"../account/AccountInfo.js\";\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers.js\";\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\n\n/**\n * Class that handles response parsing.\n * @internal\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(\n        clientId: string,\n        cacheStorage: CacheManager,\n        cryptoObj: ICrypto,\n        logger: Logger,\n        serializableCache: ISerializableTokenCache | null,\n        persistencePlugin: ICachePlugin | null,\n        performanceClient?: IPerformanceClient\n    ) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(\n        serverResponse: ServerAuthorizationTokenResponse,\n        refreshAccessToken?: boolean\n    ): void {\n        // Check for error\n        if (\n            serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror\n        ) {\n            const errString = `Error(s): ${\n                serverResponse.error_codes || Constants.NOT_AVAILABLE\n            } - Timestamp: ${\n                serverResponse.timestamp || Constants.NOT_AVAILABLE\n            } - Description: ${\n                serverResponse.error_description || Constants.NOT_AVAILABLE\n            } - Correlation ID: ${\n                serverResponse.correlation_id || Constants.NOT_AVAILABLE\n            } - Trace ID: ${\n                serverResponse.trace_id || Constants.NOT_AVAILABLE\n            }`;\n            const serverErrorNo = serverResponse.error_codes?.length\n                ? serverResponse.error_codes[0]\n                : undefined;\n            const serverError = new ServerError(\n                serverResponse.error,\n                errString,\n                serverResponse.suberror,\n                serverErrorNo,\n                serverResponse.status\n            );\n\n            // check if 500 error\n            if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            } else if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n\n            if (\n                isInteractionRequiredError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror,\n                    serverResponse.timestamp || Constants.EMPTY_STRING,\n                    serverResponse.trace_id || Constants.EMPTY_STRING,\n                    serverResponse.correlation_id || Constants.EMPTY_STRING,\n                    serverResponse.claims || Constants.EMPTY_STRING,\n                    serverErrorNo\n                );\n            }\n\n            throw serverError;\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        userAssertionHash?: string,\n        handlingRefreshTokenResponse?: boolean,\n        forceCacheRefreshTokenResponse?: boolean,\n        serverRequestId?: string\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.HandleServerTokenResponse,\n            serverTokenResponse.correlation_id\n        );\n\n        // create an idToken object (not entity)\n        let idTokenClaims: TokenClaims | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = extractTokenClaims(\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.cryptoObj.base64Decode\n            );\n\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.nonceMismatch\n                    );\n                }\n            }\n\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.authTimeNotFound\n                    );\n                }\n\n                checkMaxAge(authTime, request.maxAge);\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            serverTokenResponse.client_info || Constants.EMPTY_STRING,\n            authority.authorityType,\n            this.logger,\n            this.cryptoObj,\n            idTokenClaims\n        );\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(\n                this.cryptoObj,\n                authCodePayload.state\n            );\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(\n            serverTokenResponse,\n            authority,\n            reqTimestamp,\n            request,\n            idTokenClaims,\n            userAssertionHash,\n            authCodePayload\n        );\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling beforeCacheAccess\"\n                );\n                cacheContext = new TokenCacheContext(\n                    this.serializableCache,\n                    true\n                );\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (\n                handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account\n            ) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\n                        \"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\"\n                    );\n                    return await ResponseHandler.generateAuthenticationResult(\n                        this.cryptoObj,\n                        authority,\n                        cacheRecord,\n                        false,\n                        request,\n                        idTokenClaims,\n                        requestStateObj,\n                        undefined,\n                        serverRequestId\n                    );\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(\n                cacheRecord,\n                request.correlationId,\n                request.storeInCache\n            );\n        } finally {\n            if (\n                this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext\n            ) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling afterCacheAccess\"\n                );\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n\n        return ResponseHandler.generateAuthenticationResult(\n            this.cryptoObj,\n            authority,\n            cacheRecord,\n            false,\n            request,\n            idTokenClaims,\n            requestStateObj,\n            serverTokenResponse,\n            serverRequestId\n        );\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        userAssertionHash?: string,\n        authCodePayload?: AuthorizationCodePayload\n    ): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = CacheHelpers.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token,\n                this.clientId,\n                claimsTenantId || \"\"\n            );\n\n            cachedAccount = buildAccountToCache(\n                this.cacheStorage,\n                authority,\n                this.homeAccountIdentifier,\n                this.cryptoObj.base64Decode,\n                idTokenClaims,\n                serverTokenResponse.client_info,\n                env,\n                claimsTenantId,\n                authCodePayload,\n                undefined, // nativeAccountId\n                this.logger\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? ScopeSet.fromString(serverTokenResponse.scope)\n                : new ScopeSet(request.scopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number =\n                (typeof serverTokenResponse.expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.expires_in, 10)\n                    : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number =\n                (typeof serverTokenResponse.ext_expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                    : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined =\n                (typeof serverTokenResponse.refresh_in === \"string\"\n                    ? parseInt(serverTokenResponse.refresh_in, 10)\n                    : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds =\n                tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds =\n                refreshIn && refreshIn > 0\n                    ? reqTimestamp + refreshIn\n                    : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = CacheHelpers.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token,\n                this.clientId,\n                claimsTenantId || authority.tenant || \"\",\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj.base64Decode,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                userAssertionHash,\n                serverTokenResponse.key_id,\n                request.claims,\n                request.requestedClaimsHash\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (serverTokenResponse.refresh_token) {\n            let rtExpiresOn: number | undefined;\n            if (serverTokenResponse.refresh_token_expires_in) {\n                const rtExpiresIn: number =\n                    typeof serverTokenResponse.refresh_token_expires_in ===\n                    \"string\"\n                        ? parseInt(\n                              serverTokenResponse.refresh_token_expires_in,\n                              10\n                          )\n                        : serverTokenResponse.refresh_token_expires_in;\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\n            }\n            cachedRefreshToken = CacheHelpers.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token,\n                this.clientId,\n                serverTokenResponse.foci,\n                userAssertionHash,\n                rtExpiresOn\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = {\n                clientId: this.clientId,\n                environment: env,\n                familyId: serverTokenResponse.foci,\n            };\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto,\n        authority: Authority,\n        cacheRecord: CacheRecord,\n        fromTokenCache: boolean,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        requestState?: RequestStateObject,\n        serverTokenResponse?: ServerAuthorizationTokenResponse,\n        requestId?: string\n    ): Promise<AuthenticationResult> {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let refreshOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            /*\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\n             * the token will be returned unsigned\n             */\n            if (\n                cacheRecord.accessToken.tokenType ===\n                    AuthenticationScheme.POP &&\n                !request.popKid\n            ) {\n                const popTokenGenerator: PopTokenGenerator =\n                    new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n\n                if (!keyId) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.keyIdMissing\n                    );\n                }\n\n                accessToken = await popTokenGenerator.signPopToken(\n                    secret,\n                    keyId,\n                    request\n                );\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            // Access token expiresOn cached in seconds, converting to Date for AuthenticationResult\n            expiresOn = TimeUtils.toDateFromSeconds(\n                cacheRecord.accessToken.expiresOn\n            );\n            extExpiresOn = TimeUtils.toDateFromSeconds(\n                cacheRecord.accessToken.extendedExpiresOn\n            );\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = TimeUtils.toDateFromSeconds(\n                    cacheRecord.accessToken.refreshOn\n                );\n            }\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\n                    ? THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n\n        const accountInfo: AccountInfo | null = cacheRecord.account\n            ? updateAccountTenantProfileData(\n                  cacheRecord.account.getAccountInfo(),\n                  undefined, // tenantProfile optional\n                  idTokenClaims,\n                  cacheRecord.idToken?.secret\n              )\n            : null;\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountInfo,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType:\n                cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : Constants.EMPTY_STRING,\n            cloudGraphHostName:\n                cacheRecord.account?.cloudGraphHostName ||\n                Constants.EMPTY_STRING,\n            msGraphHost:\n                cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\n\nexport function buildAccountToCache(\n    cacheStorage: CacheManager,\n    authority: Authority,\n    homeAccountId: string,\n    base64Decode: (input: string) => string,\n    idTokenClaims?: TokenClaims,\n    clientInfo?: string,\n    environment?: string,\n    claimsTenantId?: string | null,\n    authCodePayload?: AuthorizationCodePayload,\n    nativeAccountId?: string,\n    logger?: Logger\n): AccountEntity {\n    logger?.verbose(\"setCachedAccount called\");\n\n    // Check if base account is already cached\n    const accountKeys = cacheStorage.getAccountKeys();\n    const baseAccountKey = accountKeys.find((accountKey: string) => {\n        return accountKey.startsWith(homeAccountId);\n    });\n\n    let cachedAccount: AccountEntity | null = null;\n    if (baseAccountKey) {\n        cachedAccount = cacheStorage.getAccount(baseAccountKey);\n    }\n\n    const baseAccount =\n        cachedAccount ||\n        AccountEntity.createAccount(\n            {\n                homeAccountId,\n                idTokenClaims,\n                clientInfo,\n                environment,\n                cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n                msGraphHost: authCodePayload?.msgraph_host,\n                nativeAccountId: nativeAccountId,\n            },\n            authority,\n            base64Decode\n        );\n\n    const tenantProfiles = baseAccount.tenantProfiles || [];\n    const tenantId = claimsTenantId || baseAccount.realm;\n    if (\n        tenantId &&\n        !tenantProfiles.find((tenantProfile) => {\n            return tenantProfile.tenantId === tenantId;\n        })\n    ) {\n        const newTenantProfile = buildTenantProfile(\n            homeAccountId,\n            baseAccount.localAccountId,\n            tenantId,\n            idTokenClaims\n        );\n        tenantProfiles.push(newTenantProfile);\n    }\n    baseAccount.tenantProfiles = tenantProfiles;\n\n    return baseAccount;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport { PromptValue, CodeChallengeMethodValues } from \"../utils/Constants.js\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string): void {\n        if (!redirectUri) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.redirectUriEmpty\n            );\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string): void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidPromptValue\n            );\n        }\n    }\n\n    static validateClaims(claims: string): void {\n        try {\n            JSON.parse(claims);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidClaims\n            );\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string): void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256,\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n            );\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAssertionCallback,\n    ClientAssertionConfig,\n} from \"../account/ClientCredentials.js\";\n\nexport async function getClientAssertion(\n    clientAssertion: string | ClientAssertionCallback,\n    clientId: string,\n    tokenEndpoint?: string\n): Promise<string> {\n    if (typeof clientAssertion === \"string\") {\n        return clientAssertion;\n    } else {\n        const config: ClientAssertionConfig = {\n            clientId: clientId,\n            tokenEndpoint: tokenEndpoint,\n        };\n        return clientAssertion(config);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient.js\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest.js\";\nimport { Authority } from \"../authority/Authority.js\";\nimport * as RequestParameterBuilder from \"../request/RequestParameterBuilder.js\";\nimport * as UrlUtils from \"../utils/UrlUtils.js\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    Separators,\n    HeaderNames,\n} from \"../utils/Constants.js\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration.js\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\nimport { ResponseHandler } from \"../response/ResponseHandler.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { StringUtils } from \"../utils/StringUtils.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { UrlString } from \"../url/UrlString.js\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest.js\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator.js\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload.js\";\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\nimport {\n    buildClientInfoFromHomeAccountId,\n    buildClientInfo,\n} from \"../account/ClientInfo.js\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential.js\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport { RequestValidator } from \"../request/RequestValidator.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\nimport { ClientAssertion } from \"../account/ClientCredentials.js\";\nimport { getClientAssertion } from \"../utils/ClientAssertionUtils.js\";\nimport { getRequestThumbprint } from \"../network/RequestThumbprint.js\";\n\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nexport class AuthorizationCodeClient extends BaseClient {\n    // Flag to indicate if client is for hybrid spa auth code redemption\n    protected includeRedirectUri: boolean = true;\n    private oidcDefaultScopes;\n\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(\n        request: CommonAuthorizationCodeRequest,\n        authCodePayload?: AuthorizationCodePayload\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientAcquireToken,\n            request.correlationId\n        );\n\n        if (!request.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.requestCannotBeMade\n            );\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authority, request);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin,\n            this.performanceClient\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            authCodePayload,\n            undefined,\n            undefined,\n            undefined,\n            requestId\n        );\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.logoutRequestEmpty\n            );\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI\n        return UrlString.appendQueryString(\n            this.authority.endSessionEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(\n        authority: Authority,\n        request: CommonAuthorizationCodeRequest\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils.base64Decode\n                );\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            ccsCredential || request.ccsCredential\n        );\n\n        const thumbprint = getRequestThumbprint(\n            this.config.authOptions.clientId,\n            request\n        );\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            endpoint,\n            requestBody,\n            headers,\n            thumbprint,\n            request.correlationId,\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint\n        );\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonAuthorizationCodeRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const parameters = new Map<string, string>();\n\n        RequestParameterBuilder.addClientId(\n            parameters,\n            request.embeddedClientId ||\n                request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        } else {\n            // Validate and include redirect uri\n            RequestParameterBuilder.addRedirectUri(\n                parameters,\n                request.redirectUri\n            );\n        }\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        RequestParameterBuilder.addScopes(\n            parameters,\n            request.scopes,\n            true,\n            this.oidcDefaultScopes\n        );\n\n        // add code: user set, not validated\n        RequestParameterBuilder.addAuthorizationCode(parameters, request.code);\n\n        // Add library metadata\n        RequestParameterBuilder.addLibraryInfo(\n            parameters,\n            this.config.libraryInfo\n        );\n        RequestParameterBuilder.addApplicationTelemetry(\n            parameters,\n            this.config.telemetry.application\n        );\n        RequestParameterBuilder.addThrottling(parameters);\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            RequestParameterBuilder.addServerTelemetry(\n                parameters,\n                this.serverTelemetryManager\n            );\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            RequestParameterBuilder.addCodeVerifier(\n                parameters,\n                request.codeVerifier\n            );\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            RequestParameterBuilder.addClientSecret(\n                parameters,\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion: ClientAssertion =\n                this.config.clientCredentials.clientAssertion;\n\n            RequestParameterBuilder.addClientAssertion(\n                parameters,\n                await getClientAssertion(\n                    clientAssertion.assertion,\n                    this.config.authOptions.clientId,\n                    request.resourceRequestUri\n                )\n            );\n            RequestParameterBuilder.addClientAssertionType(\n                parameters,\n                clientAssertion.assertionType\n            );\n        }\n\n        RequestParameterBuilder.addGrantType(\n            parameters,\n            GrantType.AUTHORIZATION_CODE_GRANT\n        );\n        RequestParameterBuilder.addClientInfo(parameters);\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, this.logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            } else {\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n            }\n\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            RequestParameterBuilder.addPopToken(parameters, reqCnfData);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                RequestParameterBuilder.addSshJwk(parameters, request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            RequestParameterBuilder.addClaims(\n                parameters,\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils.base64Decode\n                );\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        RequestParameterBuilder.addCcsOid(\n                            parameters,\n                            clientInfo\n                        );\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    RequestParameterBuilder.addCcsUpn(\n                        parameters,\n                        ccsCred.credential\n                    );\n                    break;\n            }\n        }\n\n        if (request.embeddedClientId) {\n            RequestParameterBuilder.addBrokerParameters(\n                parameters,\n                this.config.authOptions.clientId,\n                this.config.authOptions.redirectUri\n            );\n        }\n\n        if (request.tokenBodyParameters) {\n            RequestParameterBuilder.addExtraQueryParameters(\n                parameters,\n                request.tokenBodyParameters\n            );\n        }\n\n        // Add hybrid spa parameters if not already provided\n        if (\n            request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[\n                    AADServerParamKeys.RETURN_SPA_CODE\n                ])\n        ) {\n            RequestParameterBuilder.addExtraQueryParameters(parameters, {\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n\n        RequestParameterBuilder.instrumentBrokerParams(\n            parameters,\n            request.correlationId,\n            this.performanceClient\n        );\n        return UrlUtils.mapToQueryString(parameters);\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(\n        request: CommonEndSessionRequest\n    ): string {\n        const parameters = new Map<string, string>();\n\n        if (request.postLogoutRedirectUri) {\n            RequestParameterBuilder.addPostLogoutRedirectUri(\n                parameters,\n                request.postLogoutRedirectUri\n            );\n        }\n\n        if (request.correlationId) {\n            RequestParameterBuilder.addCorrelationId(\n                parameters,\n                request.correlationId\n            );\n        }\n\n        if (request.idTokenHint) {\n            RequestParameterBuilder.addIdTokenHint(\n                parameters,\n                request.idTokenHint\n            );\n        }\n\n        if (request.state) {\n            RequestParameterBuilder.addState(parameters, request.state);\n        }\n\n        if (request.logoutHint) {\n            RequestParameterBuilder.addLogoutHint(\n                parameters,\n                request.logoutHint\n            );\n        }\n\n        if (request.extraQueryParameters) {\n            RequestParameterBuilder.addExtraQueryParameters(\n                parameters,\n                request.extraQueryParameters\n            );\n        }\n\n        if (this.config.authOptions.instanceAware) {\n            RequestParameterBuilder.addInstanceAware(parameters);\n        }\n\n        return UrlUtils.mapToQueryString(\n            parameters,\n            this.config.authOptions.encodeExtraQueryParams,\n            request.extraQueryParameters\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n    CacheOutcome,\n    Constants,\n    RegionDiscoverySources,\n    RegionDiscoveryOutcomes,\n} from \"../../utils/Constants.js\";\nimport { CacheManager } from \"../../cache/CacheManager.js\";\nimport { AuthError } from \"../../error/AuthError.js\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest.js\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity.js\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata.js\";\n\nconst skuGroupSeparator = \",\";\nconst skuValueSeparator = \"|\";\n\ntype SkuParams = {\n    libraryName?: string;\n    libraryVersion?: string;\n    extensionName?: string;\n    extensionVersion?: string;\n    skus?: string;\n};\n\nfunction makeExtraSkuString(params: SkuParams): string {\n    const {\n        skus,\n        libraryName,\n        libraryVersion,\n        extensionName,\n        extensionVersion,\n    } = params;\n    const skuMap: Map<number, (string | undefined)[]> = new Map([\n        [0, [libraryName, libraryVersion]],\n        [2, [extensionName, extensionVersion]],\n    ]);\n    let skuArr: string[] = [];\n\n    if (skus?.length) {\n        skuArr = skus.split(skuGroupSeparator);\n\n        // Ignore invalid input sku param\n        if (skuArr.length < 4) {\n            return skus;\n        }\n    } else {\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\n    }\n\n    skuMap.forEach((value, key) => {\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\n            setSku({\n                skuArr,\n                index: key,\n                skuName: value[0],\n                skuVersion: value[1],\n            });\n        }\n    });\n\n    return skuArr.join(skuGroupSeparator);\n}\n\nfunction setSku(params: {\n    skuArr: string[];\n    index: number;\n    skuName: string;\n    skuVersion: string;\n}): void {\n    const { skuArr, index, skuName, skuVersion } = params;\n    if (index >= skuArr.length) {\n        return;\n    }\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\n}\n\n/** @internal */\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n    constructor(\n        telemetryRequest: ServerTelemetryRequest,\n        cacheManager: CacheManager\n    ) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey =\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\n            Separators.CACHE_KEY_SEPARATOR +\n            telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\n        if (nativeBrokerErrorCode?.length) {\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\n        }\n        const platformFields = platformFieldsArr.join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow =\n            maxErrors < errorCount\n                ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n                : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: unknown): void {\n        const lastRequests = this.getLastRequests();\n        if (\n            lastRequests.errors.length >=\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS\n        ) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                } else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                } else {\n                    lastRequests.errors.push(error.toString());\n                }\n            } else {\n                lastRequests.errors.push(error.toString());\n            }\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = {\n            failedRequests: [],\n            errors: [],\n            cacheHits: 0,\n        };\n        const lastRequests = this.cacheManager.getServerTelemetry(\n            this.telemetryCacheKey\n        ) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed =\n            ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity: ServerTelemetryEntity = {\n                failedRequests: lastRequests.failedRequests.slice(\n                    numErrorsFlushed * 2\n                ), // failedRequests contains 2 items for each error\n                errors: lastRequests.errors.slice(numErrorsFlushed),\n                cacheHits: 0,\n            };\n\n            this.cacheManager.setServerTelemetry(\n                this.telemetryCacheKey,\n                serverTelemEntity\n            );\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(\n        serverTelemetryEntity: ServerTelemetryEntity\n    ): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId =\n                serverTelemetryEntity.failedRequests[2 * i] ||\n                Constants.EMPTY_STRING;\n            const correlationId =\n                serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                Constants.EMPTY_STRING;\n            const errorCode =\n                serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                correlationId.toString().length +\n                errorCode.length +\n                3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(\n            this.regionOutcome || Constants.EMPTY_STRING\n        );\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n\n    setNativeBrokerErrorCode(errorCode: string): void {\n        const lastRequests = this.getLastRequests();\n        lastRequests.nativeBrokerErrorCode = errorCode;\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n    }\n\n    getNativeBrokerErrorCode(): string | undefined {\n        return this.getLastRequests().nativeBrokerErrorCode;\n    }\n\n    clearNativeBrokerErrorCode(): void {\n        const lastRequests = this.getLastRequests();\n        delete lastRequests.nativeBrokerErrorCode;\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n    }\n\n    static makeExtraSkuString(params: SkuParams): string {\n        return makeExtraSkuString(params);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    INetworkModule,\n    Logger,\n    AccountInfo,\n    AccountEntity,\n    UrlString,\n    ServerTelemetryManager,\n    ServerTelemetryRequest,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    Authority,\n    AuthorityOptions,\n    AuthorityFactory,\n    IPerformanceClient,\n    PerformanceEvents,\n    AzureCloudOptions,\n    invokeAsync,\n    StringDict,\n} from \"@azure/msal-common/browser\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { version } from \"../packageMetadata.js\";\nimport { BrowserConstants } from \"../utils/BrowserConstants.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\nexport abstract class BaseInteractionClient {\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected navigationClient: INavigationClient;\n    protected platformAuthProvider: IPlatformAuthHandler | undefined;\n    protected correlationId: string;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        platformAuthProvider?: IPlatformAuthHandler,\n        correlationId?: string\n    ) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.platformAuthProvider = platformAuthProvider;\n        this.correlationId = correlationId || createNewGuid();\n        this.logger = logger.clone(\n            BrowserConstants.MSAL_SKU,\n            version,\n            this.correlationId\n        );\n        this.performanceClient = performanceClient;\n    }\n\n    abstract acquireToken(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult | void>;\n\n    abstract logout(\n        request: EndSessionRequest | ClearCacheRequest | undefined\n    ): Promise<void>;\n\n    protected async clearCacheOnLogout(\n        account?: AccountInfo | null\n    ): Promise<void> {\n        if (account) {\n            if (\n                AccountEntity.accountInfoIsEqual(\n                    account,\n                    this.browserStorage.getActiveAccount(),\n                    false\n                )\n            ) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(\n                    AccountEntity.generateAccountCacheKey(account)\n                );\n                this.logger.verbose(\n                    \"Cleared cache items belonging to the account provided in the logout request.\"\n                );\n            } catch (error) {\n                this.logger.error(\n                    \"Account provided in logout request was not found. Local cache unchanged.\"\n                );\n            }\n        } else {\n            try {\n                this.logger.verbose(\n                    \"No account provided in logout request, clearing all cache items.\",\n                    this.correlationId\n                );\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            } catch (e) {\n                this.logger.error(\n                    \"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\"\n                );\n            }\n        }\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri;\n        return UrlString.getAbsoluteUrl(\n            redirectUri,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(\n        apiId: number,\n        forceRefresh?: boolean\n    ): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n\n        return new ServerTelemetryManager(\n            telemetryPayload,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param params {\n     *         requestAuthority?: string;\n     *         requestAzureCloudOptions?: AzureCloudOptions;\n     *         requestExtraQueryParameters?: StringDict;\n     *         account?: AccountInfo;\n     *        }\n     */\n    protected async getDiscoveredAuthority(params: {\n        requestAuthority?: string;\n        requestAzureCloudOptions?: AzureCloudOptions;\n        requestExtraQueryParameters?: StringDict;\n        account?: AccountInfo;\n    }): Promise<Authority> {\n        const { account } = params;\n        const instanceAwareEQ =\n            params.requestExtraQueryParameters &&\n            params.requestExtraQueryParameters.hasOwnProperty(\"instance_aware\")\n                ? params.requestExtraQueryParameters[\"instance_aware\"]\n                : undefined;\n\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.correlationId\n        );\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache:\n                this.config.auth.skipAuthorityMetadataCache,\n        };\n\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const resolvedAuthority =\n            params.requestAuthority || this.config.auth.authority;\n        const resolvedInstanceAware = instanceAwareEQ?.length\n            ? instanceAwareEQ === \"true\"\n            : this.config.auth.instanceAware;\n\n        const userAuthority =\n            account && resolvedInstanceAware\n                ? this.config.auth.authority.replace(\n                      UrlString.getDomainFromUrl(resolvedAuthority),\n                      account.environment\n                  )\n                : resolvedAuthority;\n\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority(\n            userAuthority,\n            params.requestAzureCloudOptions ||\n                this.config.auth.azureCloudOptions\n        );\n        const discoveredAuthority = await invokeAsync(\n            AuthorityFactory.createDiscoveredInstance,\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            builtAuthority,\n            this.config.system.networkClient,\n            this.browserStorage,\n            authorityOptions,\n            this.logger,\n            this.correlationId,\n            this.performanceClient\n        );\n\n        if (account && !discoveredAuthority.isAlias(account.environment)) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityMismatch\n            );\n        }\n\n        return discoveredAuthority;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountInfo,\n    AuthenticationScheme,\n    BaseAuthRequest,\n    ClientConfigurationErrorCodes,\n    CommonSilentFlowRequest,\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n    StringUtils,\n    createClientConfigurationError,\n    invokeAsync,\n} from \"@azure/msal-common/browser\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { SilentRequest } from \"./SilentRequest.js\";\nimport { hashString } from \"../crypto/BrowserCrypto.js\";\n\n/**\n * Initializer function for all request APIs\n * @param request\n */\nexport async function initializeBaseRequest(\n    request: Partial<BaseAuthRequest> & { correlationId: string },\n    config: BrowserConfiguration,\n    performanceClient: IPerformanceClient,\n    logger: Logger\n): Promise<BaseAuthRequest> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.InitializeBaseRequest,\n        request.correlationId\n    );\n    const authority = request.authority || config.auth.authority;\n\n    const scopes = [...((request && request.scopes) || [])];\n\n    const validatedRequest: BaseAuthRequest = {\n        ...request,\n        correlationId: request.correlationId,\n        authority,\n        scopes,\n    };\n\n    // Set authenticationScheme to BEARER if not explicitly set in the request\n    if (!validatedRequest.authenticationScheme) {\n        validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n        logger.verbose(\n            'Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request'\n        );\n    } else {\n        if (\n            validatedRequest.authenticationScheme === AuthenticationScheme.SSH\n        ) {\n            if (!request.sshJwk) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n            if (!request.sshKid) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshKid\n                );\n            }\n        }\n        logger.verbose(\n            `Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`\n        );\n    }\n\n    // Set requested claims hash if claims-based caching is enabled and claims were requested\n    if (\n        config.cache.claimsBasedCachingEnabled &&\n        request.claims &&\n        // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n        !StringUtils.isEmptyObj(request.claims)\n    ) {\n        validatedRequest.requestedClaimsHash = await hashString(request.claims);\n    }\n\n    return validatedRequest;\n}\n\nexport async function initializeSilentRequest(\n    request: SilentRequest & { correlationId: string },\n    account: AccountInfo,\n    config: BrowserConfiguration,\n    performanceClient: IPerformanceClient,\n    logger: Logger\n): Promise<CommonSilentFlowRequest> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.InitializeSilentRequest,\n        request.correlationId\n    );\n\n    const baseRequest = await invokeAsync(\n        initializeBaseRequest,\n        PerformanceEvents.InitializeBaseRequest,\n        logger,\n        performanceClient,\n        request.correlationId\n    )(request, config, performanceClient, logger);\n    return {\n        ...request,\n        ...baseRequest,\n        account: account,\n        forceRefresh: request.forceRefresh || false,\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ServerTelemetryManager,\n    Constants,\n    AuthorizationCodeClient,\n    ClientConfiguration,\n    UrlString,\n    CommonEndSessionRequest,\n    ProtocolUtils,\n    ResponseMode,\n    IdTokenClaims,\n    AccountInfo,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n    BaseAuthRequest,\n    StringDict,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient.js\";\nimport {\n    BrowserConstants,\n    InteractionType,\n} from \"../utils/BrowserConstants.js\";\nimport { version } from \"../packageMetadata.js\";\nimport { BrowserStateObject } from \"../utils/BrowserProtocolUtils.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto.js\";\nimport { initializeBaseRequest } from \"../request/RequestHelpers.js\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(\n        logoutRequest?: EndSessionRequest\n    ): CommonEndSessionRequest {\n        this.logger.verbose(\n            \"initializeLogoutRequest called\",\n            logoutRequest?.correlationId\n        );\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.correlationId || createNewGuid(),\n            ...logoutRequest,\n        };\n\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(\n                        logoutRequest.account\n                    );\n                    if (logoutHint) {\n                        this.logger.verbose(\n                            \"Setting logoutHint to login_hint ID Token Claim value for the account provided\"\n                        );\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                } else {\n                    this.logger.verbose(\n                        \"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\"\n                    );\n                }\n            } else {\n                this.logger.verbose(\n                    \"logoutHint has already been set in logoutRequest\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"logoutHint will not be set since no logout request was configured\"\n            );\n        }\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to uri set on logout request\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        logoutRequest.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\n                    \"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\",\n                    validLogoutRequest.correlationId\n                );\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to configured uri\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        this.config.auth.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to current page\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        BrowserUtils.getCurrentUri(),\n                        BrowserUtils.getCurrentUri()\n                    );\n            }\n        } else {\n            this.logger.verbose(\n                \"postLogoutRedirectUri passed as null, not setting post logout redirect uri\",\n                validLogoutRequest.correlationId\n            );\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    protected getLogoutHintFromIdTokenClaims(\n        account: AccountInfo\n    ): string | null {\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            } else {\n                this.logger.verbose(\n                    \"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\"\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param params {\n     *         serverTelemetryManager: ServerTelemetryManager;\n     *         authorityUrl?: string;\n     *         requestAzureCloudOptions?: AzureCloudOptions;\n     *         requestExtraQueryParameters?: StringDict;\n     *         account?: AccountInfo;\n     *        }\n     */\n    protected async createAuthCodeClient(params: {\n        serverTelemetryManager: ServerTelemetryManager;\n        requestAuthority?: string;\n        requestAzureCloudOptions?: AzureCloudOptions;\n        requestExtraQueryParameters?: StringDict;\n        account?: AccountInfo;\n    }): Promise<AuthorizationCodeClient> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.correlationId\n        );\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(params);\n\n        return new AuthorizationCodeClient(\n            clientConfig,\n            this.performanceClient\n        );\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param params {\n     *         serverTelemetryManager: ServerTelemetryManager;\n     *         requestAuthority?: string;\n     *         requestAzureCloudOptions?: AzureCloudOptions;\n     *         requestExtraQueryParameters?: boolean;\n     *         account?: AccountInfo;\n     *        }\n     */\n    protected async getClientConfiguration(params: {\n        serverTelemetryManager: ServerTelemetryManager;\n        requestAuthority?: string;\n        requestAzureCloudOptions?: AzureCloudOptions;\n        requestExtraQueryParameters?: StringDict;\n        account?: AccountInfo;\n    }): Promise<ClientConfiguration> {\n        const {\n            serverTelemetryManager,\n            requestAuthority,\n            requestAzureCloudOptions,\n            requestExtraQueryParameters,\n            account,\n        } = params;\n\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.correlationId\n        );\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )({\n            requestAuthority,\n            requestAzureCloudOptions,\n            requestExtraQueryParameters,\n            account,\n        });\n        const logger = this.config.system.loggerOptions;\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n                redirectUri: this.config.auth.redirectUri,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds:\n                    this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled:\n                    this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected async initializeAuthorizationRequest(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        interactionType: InteractionType\n    ): Promise<CommonAuthorizationUrlRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.correlationId\n        );\n\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType,\n        };\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state) || Constants.EMPTY_STRING,\n            browserState\n        );\n\n        const baseRequest: BaseAuthRequest = await invokeAsync(\n            initializeBaseRequest,\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            { ...request, correlationId: this.correlationId },\n            this.config,\n            this.performanceClient,\n            this.logger\n        );\n\n        const validatedRequest: CommonAuthorizationUrlRequest = {\n            ...baseRequest,\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType as ResponseMode,\n        };\n\n        // Skip active account lookup if either login hint or session id is set\n        if (request.loginHint || request.sid) {\n            return validatedRequest;\n        }\n\n        const account =\n            request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\n                \"Setting validated request account\",\n                this.correlationId\n            );\n            this.logger.verbosePii(\n                `Setting validated request account: ${account.homeAccountId}`,\n                this.correlationId\n            );\n            validatedRequest.account = account;\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    AuthorizeResponse,\n    UrlUtils,\n} from \"@azure/msal-common/browser\";\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError.js\";\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils.js\";\nimport { InteractionType } from \"../utils/BrowserConstants.js\";\n\nexport function deserializeResponse(\n    responseString: string,\n    responseLocation: string,\n    logger: Logger\n): AuthorizeResponse {\n    // Deserialize hash fragment response parameters.\n    const serverParams = UrlUtils.getDeserializedResponse(responseString);\n    if (!serverParams) {\n        if (!UrlUtils.stripLeadingHashOrQuery(responseString)) {\n            // Hash or Query string is empty\n            logger.error(\n                `The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`\n            );\n            throw createBrowserAuthError(BrowserAuthErrorCodes.hashEmptyError);\n        } else {\n            logger.error(\n                `A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`\n            );\n            logger.errorPii(\n                `The ${responseLocation} detected is: ${responseString}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n            );\n        }\n    }\n    return serverParams;\n}\n\n/**\n * Returns the interaction type that the response object belongs to\n */\nexport function validateInteractionType(\n    response: AuthorizeResponse,\n    browserCrypto: ICrypto,\n    interactionType: InteractionType\n): void {\n    if (!response.state) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n    }\n\n    const platformStateObj = extractBrowserRequestState(\n        browserCrypto,\n        response.state\n    );\n    if (!platformStateObj) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.unableToParseState);\n    }\n\n    if (platformStateObj.interactionType !== interactionType) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants.js\";\nimport {\n    ICrypto,\n    RequestStateObject,\n    ProtocolUtils,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"@azure/msal-common/browser\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType;\n};\n\n/**\n * Extracts the BrowserStateObject from the state string.\n * @param browserCrypto\n * @param state\n */\nexport function extractBrowserRequestState(\n    browserCrypto: ICrypto,\n    state: string\n): BrowserStateObject | null {\n    if (!state) {\n        return null;\n    }\n\n    try {\n        const requestStateObj: RequestStateObject =\n            ProtocolUtils.parseRequestState(browserCrypto, state);\n        return requestStateObj.libraryState.meta as BrowserStateObject;\n    } catch (e) {\n        throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest.js\";\nimport * as RequestParameterBuilder from \"../request/RequestParameterBuilder.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\nimport { AuthOptions } from \"../config/ClientConfiguration.js\";\nimport { PromptValue } from \"../utils/Constants.js\";\nimport { AccountInfo } from \"../account/AccountInfo.js\";\nimport { Logger } from \"../logger/Logger.js\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo.js\";\nimport { Authority } from \"../authority/Authority.js\";\nimport { mapToQueryString } from \"../utils/UrlUtils.js\";\nimport { UrlString } from \"../url/UrlString.js\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload.js\";\nimport { AuthorizeResponse } from \"../response/AuthorizeResponse.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport {\n    InteractionRequiredAuthError,\n    isInteractionRequiredError,\n} from \"../error/InteractionRequiredAuthError.js\";\nimport { ServerError } from \"../error/ServerError.js\";\nimport { StringDict } from \"../utils/MsalTypes.js\";\n\n/**\n * Returns map of parameters that are applicable to all calls to /authorize whether using PKCE or EAR\n * @param config\n * @param request\n * @param logger\n * @param performanceClient\n * @returns\n */\nexport function getStandardAuthorizeRequestParameters(\n    authOptions: AuthOptions,\n    request: CommonAuthorizationUrlRequest,\n    logger: Logger,\n    performanceClient?: IPerformanceClient\n): Map<string, string> {\n    // generate the correlationId if not set by the user and add\n    const correlationId = request.correlationId;\n\n    const parameters = new Map<string, string>();\n\n    RequestParameterBuilder.addClientId(\n        parameters,\n        request.embeddedClientId ||\n            request.extraQueryParameters?.[AADServerParamKeys.CLIENT_ID] ||\n            authOptions.clientId\n    );\n\n    const requestScopes = [\n        ...(request.scopes || []),\n        ...(request.extraScopesToConsent || []),\n    ];\n    RequestParameterBuilder.addScopes(\n        parameters,\n        requestScopes,\n        true,\n        authOptions.authority.options.OIDCOptions?.defaultScopes\n    );\n\n    RequestParameterBuilder.addRedirectUri(parameters, request.redirectUri);\n\n    RequestParameterBuilder.addCorrelationId(parameters, correlationId);\n\n    // add response_mode. If not passed in it defaults to query.\n    RequestParameterBuilder.addResponseMode(parameters, request.responseMode);\n\n    // add client_info=1\n    RequestParameterBuilder.addClientInfo(parameters);\n\n    if (request.prompt) {\n        RequestParameterBuilder.addPrompt(parameters, request.prompt);\n        performanceClient?.addFields({ prompt: request.prompt }, correlationId);\n    }\n\n    if (request.domainHint) {\n        RequestParameterBuilder.addDomainHint(parameters, request.domainHint);\n        performanceClient?.addFields(\n            { domainHintFromRequest: true },\n            correlationId\n        );\n    }\n\n    // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n    if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n        // AAD will throw if prompt=select_account is passed with an account hint\n        if (request.sid && request.prompt === PromptValue.NONE) {\n            // SessionID is only used in silent calls\n            logger.verbose(\n                \"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\"\n            );\n            RequestParameterBuilder.addSid(parameters, request.sid);\n            performanceClient?.addFields(\n                { sidFromRequest: true },\n                correlationId\n            );\n        } else if (request.account) {\n            const accountSid = extractAccountSid(request.account);\n            let accountLoginHintClaim = extractLoginHint(request.account);\n\n            if (accountLoginHintClaim && request.domainHint) {\n                logger.warning(\n                    `AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`\n                );\n                accountLoginHintClaim = null;\n            }\n\n            // If login_hint claim is present, use it over sid/username\n            if (accountLoginHintClaim) {\n                logger.verbose(\n                    \"createAuthCodeUrlQueryString: login_hint claim present on account\"\n                );\n                RequestParameterBuilder.addLoginHint(\n                    parameters,\n                    accountLoginHintClaim\n                );\n                performanceClient?.addFields(\n                    { loginHintFromClaim: true },\n                    correlationId\n                );\n                try {\n                    const clientInfo = buildClientInfoFromHomeAccountId(\n                        request.account.homeAccountId\n                    );\n                    RequestParameterBuilder.addCcsOid(parameters, clientInfo);\n                } catch (e) {\n                    logger.verbose(\n                        \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                    );\n                }\n            } else if (accountSid && request.prompt === PromptValue.NONE) {\n                /*\n                 * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                 * SessionId is only used in silent calls\n                 */\n                logger.verbose(\n                    \"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\"\n                );\n                RequestParameterBuilder.addSid(parameters, accountSid);\n                performanceClient?.addFields(\n                    { sidFromClaim: true },\n                    correlationId\n                );\n                try {\n                    const clientInfo = buildClientInfoFromHomeAccountId(\n                        request.account.homeAccountId\n                    );\n                    RequestParameterBuilder.addCcsOid(parameters, clientInfo);\n                } catch (e) {\n                    logger.verbose(\n                        \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                    );\n                }\n            } else if (request.loginHint) {\n                logger.verbose(\n                    \"createAuthCodeUrlQueryString: Adding login_hint from request\"\n                );\n                RequestParameterBuilder.addLoginHint(\n                    parameters,\n                    request.loginHint\n                );\n                RequestParameterBuilder.addCcsUpn(\n                    parameters,\n                    request.loginHint\n                );\n                performanceClient?.addFields(\n                    { loginHintFromRequest: true },\n                    correlationId\n                );\n            } else if (request.account.username) {\n                // Fallback to account username if provided\n                logger.verbose(\n                    \"createAuthCodeUrlQueryString: Adding login_hint from account\"\n                );\n                RequestParameterBuilder.addLoginHint(\n                    parameters,\n                    request.account.username\n                );\n                performanceClient?.addFields(\n                    { loginHintFromUpn: true },\n                    correlationId\n                );\n                try {\n                    const clientInfo = buildClientInfoFromHomeAccountId(\n                        request.account.homeAccountId\n                    );\n                    RequestParameterBuilder.addCcsOid(parameters, clientInfo);\n                } catch (e) {\n                    logger.verbose(\n                        \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                    );\n                }\n            }\n        } else if (request.loginHint) {\n            logger.verbose(\n                \"createAuthCodeUrlQueryString: No account, adding login_hint from request\"\n            );\n            RequestParameterBuilder.addLoginHint(parameters, request.loginHint);\n            RequestParameterBuilder.addCcsUpn(parameters, request.loginHint);\n            performanceClient?.addFields(\n                { loginHintFromRequest: true },\n                correlationId\n            );\n        }\n    } else {\n        logger.verbose(\n            \"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\"\n        );\n    }\n\n    if (request.nonce) {\n        RequestParameterBuilder.addNonce(parameters, request.nonce);\n    }\n\n    if (request.state) {\n        RequestParameterBuilder.addState(parameters, request.state);\n    }\n\n    if (\n        request.claims ||\n        (authOptions.clientCapabilities &&\n            authOptions.clientCapabilities.length > 0)\n    ) {\n        RequestParameterBuilder.addClaims(\n            parameters,\n            request.claims,\n            authOptions.clientCapabilities\n        );\n    }\n\n    if (request.embeddedClientId) {\n        RequestParameterBuilder.addBrokerParameters(\n            parameters,\n            authOptions.clientId,\n            authOptions.redirectUri\n        );\n    }\n\n    // If extraQueryParameters includes instance_aware its value will be added when extraQueryParameters are added\n    if (\n        authOptions.instanceAware &&\n        (!request.extraQueryParameters ||\n            !Object.keys(request.extraQueryParameters).includes(\n                AADServerParamKeys.INSTANCE_AWARE\n            ))\n    ) {\n        RequestParameterBuilder.addInstanceAware(parameters);\n    }\n\n    return parameters;\n}\n\n/**\n * Returns authorize endpoint with given request parameters in the query string\n * @param authority\n * @param requestParameters\n * @returns\n */\nexport function getAuthorizeUrl(\n    authority: Authority,\n    requestParameters: Map<string, string>,\n    encodeParams?: boolean,\n    extraQueryParameters?: StringDict | undefined\n): string {\n    const queryString = mapToQueryString(\n        requestParameters,\n        encodeParams,\n        extraQueryParameters\n    );\n    return UrlString.appendQueryString(\n        authority.authorizationEndpoint,\n        queryString\n    );\n}\n\n/**\n * Handles the hash fragment response from public client code request. Returns a code response used by\n * the client to exchange for a token in acquireToken.\n * @param serverParams\n * @param cachedState\n */\nexport function getAuthorizationCodePayload(\n    serverParams: AuthorizeResponse,\n    cachedState: string\n): AuthorizationCodePayload {\n    // Get code response\n    validateAuthorizationResponse(serverParams, cachedState);\n\n    // throw when there is no auth code in the response\n    if (!serverParams.code) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n        );\n    }\n\n    return serverParams as AuthorizationCodePayload;\n}\n\n/**\n * Function which validates server authorization code response.\n * @param serverResponseHash\n * @param requestState\n */\nexport function validateAuthorizationResponse(\n    serverResponse: AuthorizeResponse,\n    requestState: string\n): void {\n    if (!serverResponse.state || !requestState) {\n        throw serverResponse.state\n            ? createClientAuthError(\n                  ClientAuthErrorCodes.stateNotFound,\n                  \"Cached State\"\n              )\n            : createClientAuthError(\n                  ClientAuthErrorCodes.stateNotFound,\n                  \"Server State\"\n              );\n    }\n\n    let decodedServerResponseState: string;\n    let decodedRequestState: string;\n\n    try {\n        decodedServerResponseState = decodeURIComponent(serverResponse.state);\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.invalidState,\n            serverResponse.state\n        );\n    }\n\n    try {\n        decodedRequestState = decodeURIComponent(requestState);\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.invalidState,\n            serverResponse.state\n        );\n    }\n\n    if (decodedServerResponseState !== decodedRequestState) {\n        throw createClientAuthError(ClientAuthErrorCodes.stateMismatch);\n    }\n\n    // Check for error\n    if (\n        serverResponse.error ||\n        serverResponse.error_description ||\n        serverResponse.suberror\n    ) {\n        const serverErrorNo = parseServerErrorNo(serverResponse);\n        if (\n            isInteractionRequiredError(\n                serverResponse.error,\n                serverResponse.error_description,\n                serverResponse.suberror\n            )\n        ) {\n            throw new InteractionRequiredAuthError(\n                serverResponse.error || \"\",\n                serverResponse.error_description,\n                serverResponse.suberror,\n                serverResponse.timestamp || \"\",\n                serverResponse.trace_id || \"\",\n                serverResponse.correlation_id || \"\",\n                serverResponse.claims || \"\",\n                serverErrorNo\n            );\n        }\n\n        throw new ServerError(\n            serverResponse.error || \"\",\n            serverResponse.error_description,\n            serverResponse.suberror,\n            serverErrorNo\n        );\n    }\n}\n\n/**\n * Get server error No from the error_uri\n * @param serverResponse\n * @returns\n */\nfunction parseServerErrorNo(\n    serverResponse: AuthorizeResponse\n): string | undefined {\n    const errorCodePrefix = \"code=\";\n    const errorCodePrefixIndex =\n        serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\n        ? serverResponse.error_uri?.substring(\n              errorCodePrefixIndex + errorCodePrefix.length\n          )\n        : undefined;\n}\n\n/**\n * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n * @param account\n */\nfunction extractAccountSid(account: AccountInfo): string | null {\n    return account.idTokenClaims?.sid || null;\n}\n\nfunction extractLoginHint(account: AccountInfo): string | null {\n    return account.idTokenClaims?.login_hint || null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodePayload,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    CcsCredential,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    CcsCredentialType,\n    AuthorizeResponse,\n    AuthorizeProtocol,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\n\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport class InteractionHandler {\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected logger: Logger;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponse(\n        response: AuthorizeResponse,\n        request: CommonAuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponse,\n            request.correlationId\n        );\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = AuthorizeProtocol.getAuthorizationCodePayload(\n                response,\n                request.state\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        return invokeAsync(\n            this.handleCodeResponseFromServer.bind(this),\n            PerformanceEvents.HandleCodeResponseFromServer,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(authCodeResponse, request);\n    }\n\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(\n        authCodeResponse: AuthorizationCodePayload,\n        request: CommonAuthorizationUrlRequest,\n        validateNonce: boolean = true\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponseFromServer,\n            request.correlationId\n        );\n        this.logger.trace(\n            \"InteractionHandler.handleCodeResponseFromServer called\"\n        );\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(\n                this.authModule.updateAuthority.bind(this.authModule),\n                PerformanceEvents.UpdateTokenEndpointAuthority,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authCodeResponse.cloud_instance_host_name, request.correlationId);\n        }\n\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\n            authCodeResponse.nonce = request.nonce || undefined;\n        }\n\n        authCodeResponse.state = request.state;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const ccsCred = this.createCcsCredentials(request);\n            if (ccsCred) {\n                this.authCodeRequest.ccsCredential = ccsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await invokeAsync(\n            this.authModule.acquireToken.bind(this.authModule),\n            PerformanceEvents.AuthClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authCodeRequest, authCodeResponse)) as AuthenticationResult;\n        return tokenResponse;\n    }\n\n    /**\n     * Build ccs creds if available\n     */\n    protected createCcsCredentials(\n        request: CommonAuthorizationUrlRequest\n    ): CcsCredential | null {\n        if (request.account) {\n            return {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n        } else if (request.loginHint) {\n            return {\n                credential: request.loginHint,\n                type: CcsCredentialType.UPN,\n            };\n        }\n\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const contentError = \"ContentError\";\nexport const userSwitch = \"user_switch\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthError,\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"@azure/msal-common/browser\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"./BrowserAuthError.js\";\n\nimport * as NativeAuthErrorCodes from \"./NativeAuthErrorCodes.js\";\nimport * as NativeStatusCodes from \"../broker/nativeBroker/NativeStatusCodes.js\";\nexport { NativeAuthErrorCodes };\n\nexport type OSError = {\n    error?: number;\n    protocol_error?: string;\n    properties?: object;\n    status?: string;\n    retryable?: boolean;\n};\n\nconst INVALID_METHOD_ERROR = -2147186943;\n\nexport const NativeAuthErrorMessages = {\n    [NativeAuthErrorCodes.userSwitch]:\n        \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description?: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n}\n\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nexport function isFatalNativeAuthError(error: NativeAuthError): boolean {\n    if (\n        error.ext &&\n        error.ext.status &&\n        (error.ext.status === NativeStatusCodes.PERSISTENT_ERROR ||\n            error.ext.status === NativeStatusCodes.DISABLED)\n    ) {\n        return true;\n    }\n\n    if (\n        error.ext &&\n        error.ext.error &&\n        error.ext.error === INVALID_METHOD_ERROR\n    ) {\n        return true;\n    }\n\n    switch (error.errorCode) {\n        case NativeAuthErrorCodes.contentError:\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nexport function createNativeAuthError(\n    code: string,\n    description?: string,\n    ext?: OSError\n): AuthError {\n    if (ext && ext.status) {\n        switch (ext.status) {\n            case NativeStatusCodes.ACCOUNT_UNAVAILABLE:\n                return createInteractionRequiredAuthError(\n                    InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n                );\n            case NativeStatusCodes.USER_INTERACTION_REQUIRED:\n                return new InteractionRequiredAuthError(code, description);\n            case NativeStatusCodes.USER_CANCEL:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            case NativeStatusCodes.NO_NETWORK:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n        }\n    }\n\n    return new NativeAuthError(\n        code,\n        NativeAuthErrorMessages[code] || description,\n        ext\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Status Codes that can be thrown by WAM\nexport const USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\nexport const USER_CANCEL = \"USER_CANCEL\";\nexport const NO_NETWORK = \"NO_NETWORK\";\nexport const TRANSIENT_ERROR = \"TRANSIENT_ERROR\";\nexport const PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\nexport const DISABLED = \"DISABLED\";\nexport const ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient.js\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration.js\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { ResponseHandler } from \"../response/ResponseHandler.js\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord.js\";\nimport { CacheOutcome } from \"../utils/Constants.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { StringUtils } from \"../utils/StringUtils.js\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken.js\";\nimport { TokenClaims } from \"../account/TokenClaims.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\nimport { getTenantFromAuthorityString } from \"../authority/Authority.js\";\n\n/** @internal */\nexport class SilentFlowClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(\n        request: CommonSilentFlowRequest\n    ): Promise<[AuthenticationResult, CacheOutcome]> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\n            request.correlationId\n        );\n        let lastCacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n        if (\n            request.forceRefresh ||\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n                !StringUtils.isEmptyObj(request.claims))\n        ) {\n            // Must refresh due to present force_refresh flag.\n            this.setCacheOutcome(\n                CacheOutcome.FORCE_REFRESH_OR_CLAIMS,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        const requestTenantId =\n            request.account.tenantId ||\n            getTenantFromAuthorityString(request.authority);\n        const tokenKeys = this.cacheManager.getTokenKeys();\n        const cachedAccessToken = this.cacheManager.getAccessToken(\n            request.account,\n            request,\n            tokenKeys,\n            requestTenantId,\n            this.performanceClient,\n            request.correlationId\n        );\n\n        if (!cachedAccessToken) {\n            // must refresh due to non-existent access_token\n            this.setCacheOutcome(\n                CacheOutcome.NO_CACHED_ACCESS_TOKEN,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            TimeUtils.wasClockTurnedBack(cachedAccessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(\n                cachedAccessToken.expiresOn,\n                this.config.systemOptions.tokenRenewalOffsetSeconds\n            )\n        ) {\n            // must refresh due to the expires_in value\n            this.setCacheOutcome(\n                CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            cachedAccessToken.refreshOn &&\n            TimeUtils.isTokenExpired(cachedAccessToken.refreshOn, 0)\n        ) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\n\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n\n        const environment =\n            request.authority || this.authority.getPreferredCache();\n        const cacheRecord: CacheRecord = {\n            account: this.cacheManager.readAccountFromCache(request.account),\n            accessToken: cachedAccessToken,\n            idToken: this.cacheManager.getIdToken(\n                request.account,\n                tokenKeys,\n                requestTenantId,\n                this.performanceClient,\n                request.correlationId\n            ),\n            refreshToken: null,\n            appMetadata:\n                this.cacheManager.readAppMetadataFromCache(environment),\n        };\n\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return [\n            await invokeAsync(\n                this.generateResultFromCacheRecord.bind(this),\n                PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n\n    private setCacheOutcome(\n        cacheOutcome: CacheOutcome,\n        correlationId: string\n    ): void {\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\n        this.performanceClient?.addFields(\n            {\n                cacheOutcome: cacheOutcome,\n            },\n            correlationId\n        );\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\n            this.logger.info(\n                `Token refresh is required due to cache outcome: ${cacheOutcome}`\n            );\n        }\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(\n        cacheRecord: CacheRecord,\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n            request.correlationId\n        );\n        let idTokenClaims: TokenClaims | undefined;\n        if (cacheRecord.idToken) {\n            idTokenClaims = extractTokenClaims(\n                cacheRecord.idToken.secret,\n                this.config.cryptoInterface.base64Decode\n            );\n        }\n\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.authTimeNotFound\n                );\n            }\n\n            checkMaxAge(authTime, request.maxAge);\n        }\n\n        return ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenClaims\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\nimport {\n    CommonSilentFlowRequest,\n    SilentFlowClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common/browser\";\nimport { ApiId } from \"../utils/BrowserConstants.js\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(\n        silentRequest: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentCacheClientAcquireToken,\n            silentRequest.correlationId\n        );\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )({\n            serverTelemetryManager,\n            requestAuthority: silentRequest.authority,\n            requestAzureCloudOptions: silentRequest.azureCloudOptions,\n            account: silentRequest.account,\n        });\n        const silentAuthClient = new SilentFlowClient(\n            clientConfig,\n            this.performanceClient\n        );\n        this.logger.verbose(\"Silent auth client created\");\n\n        try {\n            const response = await invokeAsync(\n                silentAuthClient.acquireCachedToken.bind(silentAuthClient),\n                PerformanceEvents.SilentFlowClientAcquireCachedToken,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentRequest);\n            const authResponse = response[0] as AuthenticationResult;\n\n            this.performanceClient.addFields(\n                {\n                    fromCache: true,\n                },\n                silentRequest.correlationId\n            );\n            return authResponse;\n        } catch (error) {\n            if (\n                error instanceof BrowserAuthError &&\n                error.errorCode === BrowserAuthErrorCodes.cryptoKeyNotFound\n            ) {\n                this.logger.verbose(\n                    \"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\"\n                );\n            }\n            throw error;\n        }\n    }\n\n    /**\n     * API to silenty clear the browser cache.\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: ClearCacheRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    ICrypto,\n    PromptValue,\n    AuthToken,\n    Constants,\n    AccountEntity,\n    AuthorityType,\n    ScopeSet,\n    TimeUtils,\n    AuthenticationScheme,\n    UrlString,\n    OIDC_DEFAULT_SCOPES,\n    PopTokenGenerator,\n    SignedHttpRequestParameters,\n    IPerformanceClient,\n    PerformanceEvents,\n    IdTokenEntity,\n    AccessTokenEntity,\n    AuthError,\n    CommonSilentFlowRequest,\n    AccountInfo,\n    AADServerParamKeys,\n    TokenClaims,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    invokeAsync,\n    updateAccountTenantProfileData,\n    CacheHelpers,\n    buildAccountToCache,\n    InProgressPerformanceEvent,\n    ServerTelemetryManager,\n} from \"@azure/msal-common/browser\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport {\n    ApiId,\n    TemporaryCacheKeys,\n    PlatformAuthConstants,\n    BrowserConstants,\n    CacheLookupPolicy,\n} from \"../utils/BrowserConstants.js\";\nimport { PlatformAuthRequest } from \"../broker/nativeBroker/PlatformAuthRequest.js\";\nimport {\n    MATS,\n    PlatformAuthResponse,\n} from \"../broker/nativeBroker/PlatformAuthResponse.js\";\nimport {\n    NativeAuthError,\n    NativeAuthErrorCodes,\n    createNativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { SilentCacheClient } from \"./SilentCacheClient.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { base64Decode } from \"../encode/Base64Decode.js\";\nimport { version } from \"../packageMetadata.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\nexport class PlatformAuthInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected platformAuthProvider: IPlatformAuthHandler;\n    protected silentCacheClient: SilentCacheClient;\n    protected nativeStorageManager: BrowserCacheManager;\n    protected skus: string;\n\n    constructor(\n        config: BrowserConfiguration,\n        browserStorage: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        provider: IPlatformAuthHandler,\n        accountId: string,\n        nativeStorageImpl: BrowserCacheManager,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            browserStorage,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.platformAuthProvider = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(\n            config,\n            this.nativeStorageManager,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n\n        const extensionName = this.platformAuthProvider.getExtensionName();\n\n        this.skus = ServerTelemetryManager.makeExtraSkuString({\n            libraryName: BrowserConstants.MSAL_SKU,\n            libraryVersion: version,\n            extensionName: extensionName,\n            extensionVersion: this.platformAuthProvider.getExtensionVersion(),\n        });\n    }\n\n    /**\n     * Adds SKUs to request extra query parameters\n     * @param request {PlatformAuthRequest}\n     * @private\n     */\n    private addRequestSKUs(request: PlatformAuthRequest): void {\n        request.extraParameters = {\n            ...request.extraParameters,\n            [AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\n        };\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(\n        request: PopupRequest | SilentRequest | SsoSilentRequest,\n        cacheLookupPolicy?: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // initialize native request\n            const nativeRequest = await this.initializeNativeRequest(request);\n\n            // check if the tokens can be retrieved from internal cache\n            try {\n                const result = await this.acquireTokensFromCache(\n                    this.accountId,\n                    nativeRequest\n                );\n                nativeATMeasurement.end({\n                    success: true,\n                    isNativeBroker: false, // Should be true only when the result is coming directly from the broker\n                    fromCache: true,\n                });\n                return result;\n            } catch (e) {\n                if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\n                    this.logger.info(\n                        \"MSAL internal Cache does not contain tokens, return error as per cache policy\"\n                    );\n                    throw e;\n                }\n                // continue with a native call for any and all errors\n                this.logger.info(\n                    \"MSAL internal Cache does not contain tokens, proceed to make a native call\"\n                );\n            }\n\n            const validatedResponse: PlatformAuthResponse =\n                await this.platformAuthProvider.sendMessage(nativeRequest);\n\n            return await this.handleNativeResponse(\n                validatedResponse,\n                nativeRequest,\n                reqTimestamp\n            )\n                .then((result: AuthenticationResult) => {\n                    nativeATMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                        requestId: result.requestId,\n                    });\n                    serverTelemetryManager.clearNativeBrokerErrorCode();\n                    return result;\n                })\n                .catch((error: AuthError) => {\n                    nativeATMeasurement.end({\n                        success: false,\n                        errorCode: error.errorCode,\n                        subErrorCode: error.subError,\n                        isNativeBroker: true,\n                    });\n                    throw error;\n                });\n        } catch (e) {\n            if (e instanceof NativeAuthError) {\n                serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    private createSilentCacheRequest(\n        request: PlatformAuthRequest,\n        cachedAccount: AccountInfo\n    ): CommonSilentFlowRequest {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    protected async acquireTokensFromCache(\n        nativeAccountId: string,\n        request: PlatformAuthRequest\n    ): Promise<AuthenticationResult> {\n        if (!nativeAccountId) {\n            this.logger.warning(\n                \"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\"\n            );\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getBaseAccountInfo({\n            nativeAccountId,\n        });\n\n        if (!account) {\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(\n                request,\n                account\n            );\n            const result = await this.silentCacheClient.acquireToken(\n                silentRequest\n            );\n\n            const fullAccount = {\n                ...account,\n                idTokenClaims: result?.idTokenClaims as TokenClaims,\n                idToken: result?.idToken,\n            };\n\n            return {\n                ...result,\n                account: fullAccount,\n            };\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param {RedirectRequest} request\n     * @param {InProgressPerformanceEvent} rootMeasurement\n     */\n    async acquireTokenRedirect(\n        request: RedirectRequest,\n        rootMeasurement: InProgressPerformanceEvent\n    ): Promise<void> {\n        this.logger.trace(\n            \"NativeInteractionClient - acquireTokenRedirect called.\"\n        );\n\n        const { ...remainingParameters } = request;\n        delete remainingParameters.onRedirectNavigate;\n\n        const nativeRequest = await this.initializeNativeRequest(\n            remainingParameters\n        );\n\n        try {\n            await this.platformAuthProvider.sendMessage(nativeRequest);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError) {\n                const serverTelemetryManager =\n                    this.initializeServerTelemetryManager(this.apiId);\n                serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\n                if (isFatalNativeAuthError(e)) {\n                    throw e;\n                }\n            }\n        }\n        this.browserStorage.setTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            JSON.stringify(nativeRequest),\n            true\n        );\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        rootMeasurement.end({ success: true });\n        await this.navigationClient.navigateExternal(\n            redirectUri,\n            navigationOptions\n        ); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     * @param performanceClient {IPerformanceClient?}\n     * @param correlationId {string?} correlation identifier\n     */\n    async handleRedirectPromise(\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): Promise<AuthenticationResult | null> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleRedirectPromise called.\"\n        );\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\n                \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n            );\n            return null;\n        }\n\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\"\n            );\n            if (performanceClient && correlationId) {\n                performanceClient?.addFields(\n                    { errorCode: \"no_cached_request\" },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\"\n            );\n        }\n\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(\n                TemporaryCacheKeys.NATIVE_REQUEST\n            )\n        );\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise sending message to native broker.\"\n            );\n            const response: PlatformAuthResponse =\n                await this.platformAuthProvider.sendMessage(request);\n            const authResult = await this.handleNativeResponse(\n                response,\n                request,\n                reqTimestamp\n            );\n\n            const serverTelemetryManager =\n                this.initializeServerTelemetryManager(this.apiId);\n            serverTelemetryManager.clearNativeBrokerErrorCode();\n            return authResult;\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(\n        response: PlatformAuthResponse,\n        request: PlatformAuthRequest,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleNativeResponse called.\"\n        );\n\n        // generate identifiers\n        const idTokenClaims = AuthToken.extractTokenClaims(\n            response.id_token,\n            base64Decode\n        );\n\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(\n            response,\n            idTokenClaims\n        );\n\n        const cachedhomeAccountId =\n            this.browserStorage.getAccountInfoFilteredBy({\n                nativeAccountId: request.accountId,\n            })?.homeAccountId;\n\n        // add exception for double brokering, please note this is temporary and will be fortified in future\n        if (\n            request.extraParameters?.child_client_id &&\n            response.account.id !== request.accountId\n        ) {\n            this.logger.info(\n                \"handleNativeServerResponse: Double broker flow detected, ignoring accountId mismatch\"\n            );\n        } else if (\n            homeAccountIdentifier !== cachedhomeAccountId &&\n            response.account.id !== request.accountId\n        ) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw createNativeAuthError(NativeAuthErrorCodes.userSwitch);\n        }\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority({\n            requestAuthority: request.authority,\n        });\n\n        const baseAccount = buildAccountToCache(\n            this.browserStorage,\n            authority,\n            homeAccountIdentifier,\n            base64Decode,\n            idTokenClaims,\n            response.client_info,\n            undefined, // environment\n            idTokenClaims.tid,\n            undefined, // auth code payload\n            response.account.id,\n            this.logger\n        );\n\n        // Ensure expires_in is in number format\n        response.expires_in = Number(response.expires_in);\n\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(\n            response,\n            request,\n            idTokenClaims,\n            baseAccount,\n            authority.canonicalAuthority,\n            reqTimestamp\n        );\n\n        // cache accounts and tokens in the appropriate storage\n        await this.cacheAccount(baseAccount);\n        await this.cacheNativeTokens(\n            response,\n            request,\n            homeAccountIdentifier,\n            idTokenClaims,\n            response.access_token,\n            result.tenantId,\n            reqTimestamp\n        );\n\n        return result;\n    }\n\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    protected createHomeAccountIdentifier(\n        response: PlatformAuthResponse,\n        idTokenClaims: TokenClaims\n    ): string {\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            response.client_info || Constants.EMPTY_STRING,\n            AuthorityType.Default,\n            this.logger,\n            this.browserCrypto,\n            idTokenClaims\n        );\n\n        return homeAccountIdentifier;\n    }\n\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(requestScopes: string, responseScopes?: string): ScopeSet {\n        return responseScopes\n            ? ScopeSet.fromString(responseScopes)\n            : ScopeSet.fromString(requestScopes);\n    }\n\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(\n        response: PlatformAuthResponse,\n        request: PlatformAuthRequest\n    ): Promise<string> {\n        if (\n            request.tokenType === AuthenticationScheme.POP &&\n            request.signPopToken\n        ) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\n                    \"handleNativeServerResponse: SHR is enabled in native layer\"\n                );\n                return response.shr;\n            }\n\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(\n                this.browserCrypto\n            );\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\n            }\n            return popTokenGenerator.signPopToken(\n                response.access_token,\n                request.keyId,\n                shrParameters\n            );\n        } else {\n            return response.access_token;\n        }\n    }\n\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    protected async generateAuthenticationResult(\n        response: PlatformAuthResponse,\n        request: PlatformAuthRequest,\n        idTokenClaims: TokenClaims,\n        accountEntity: AccountEntity,\n        authority: string,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(\n            response.properties.MATS\n        );\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = this.generateScopes(\n            request.scope,\n            response.scope\n        );\n\n        const accountProperties = response.account.properties || {};\n        const uid =\n            accountProperties[\"UID\"] ||\n            idTokenClaims.oid ||\n            idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n        const tid =\n            accountProperties[\"TenantId\"] ||\n            idTokenClaims.tid ||\n            Constants.EMPTY_STRING;\n\n        const accountInfo: AccountInfo | null = updateAccountTenantProfileData(\n            accountEntity.getAccountInfo(),\n            undefined, // tenantProfile optional\n            idTokenClaims,\n            response.id_token\n        );\n\n        /**\n         * In pairwise broker flows, this check prevents the broker's native account id\n         * from being returned over the embedded app's account id.\n         */\n        if (accountInfo.nativeAccountId !== response.account.id) {\n            accountInfo.nativeAccountId = response.account.id;\n        }\n\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(\n            response,\n            request\n        );\n        const tokenType =\n            request.tokenType === AuthenticationScheme.POP\n                ? AuthenticationScheme.POP\n                : AuthenticationScheme.BEARER;\n\n        const result: AuthenticationResult = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountInfo,\n            idToken: response.id_token,\n            idTokenClaims: idTokenClaims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            // Request timestamp and NativeResponse expires_in are in seconds, converting to Date for AuthenticationResult\n            expiresOn: TimeUtils.toDateFromSeconds(\n                reqTimestamp + response.expires_in\n            ),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n\n        return result;\n    }\n\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    async cacheAccount(accountEntity: AccountEntity): Promise<void> {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        await this.browserStorage.setAccount(accountEntity, this.correlationId);\n\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(\n                `Error occurred while removing account context from browser storage. ${e}`\n            );\n        });\n    }\n\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(\n        response: PlatformAuthResponse,\n        request: PlatformAuthRequest,\n        homeAccountIdentifier: string,\n        idTokenClaims: TokenClaims,\n        responseAccessToken: string,\n        tenantId: string,\n        reqTimestamp: number\n    ): Promise<void> {\n        const cachedIdToken: IdTokenEntity | null =\n            CacheHelpers.createIdTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                response.id_token || \"\",\n                request.clientId,\n                idTokenClaims.tid || \"\"\n            );\n\n        // cache accessToken in inmemory storage\n        const expiresIn: number =\n            request.tokenType === AuthenticationScheme.POP\n                ? Constants.SHR_NONCE_VALIDITY\n                : (typeof response.expires_in === \"string\"\n                      ? parseInt(response.expires_in, 10)\n                      : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(\n            response.scope,\n            request.scope\n        );\n\n        const cachedAccessToken: AccessTokenEntity | null =\n            CacheHelpers.createAccessTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                responseAccessToken,\n                request.clientId,\n                idTokenClaims.tid || tenantId,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                0,\n                base64Decode,\n                undefined,\n                request.tokenType as AuthenticationScheme,\n                undefined,\n                request.keyId\n            );\n\n        const nativeCacheRecord = {\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n        };\n\n        return this.nativeStorageManager.saveCacheRecord(\n            nativeCacheRecord,\n            this.correlationId,\n            request.storeInCache\n        );\n    }\n\n    getExpiresInValue(\n        tokenType: string,\n        expiresIn: string | number | undefined\n    ): number {\n        return tokenType === AuthenticationScheme.POP\n            ? Constants.SHR_NONCE_VALIDITY\n            : (typeof expiresIn === \"string\"\n                  ? parseInt(expiresIn, 10)\n                  : expiresIn) || 0;\n    }\n\n    protected addTelemetryFromNativeResponse(\n        matsResponse?: string\n    ): MATS | null {\n        const mats = this.getMATSFromResponse(matsResponse);\n\n        if (!mats) {\n            return null;\n        }\n\n        this.performanceClient.addFields(\n            {\n                extensionId: this.platformAuthProvider.getExtensionId(),\n                extensionVersion:\n                    this.platformAuthProvider.getExtensionVersion(),\n                matsBrokerVersion: mats.broker_version,\n                matsAccountJoinOnStart: mats.account_join_on_start,\n                matsAccountJoinOnEnd: mats.account_join_on_end,\n                matsDeviceJoin: mats.device_join,\n                matsPromptBehavior: mats.prompt_behavior,\n                matsApiErrorCode: mats.api_error_code,\n                matsUiVisible: mats.ui_visible,\n                matsSilentCode: mats.silent_code,\n                matsSilentBiSubCode: mats.silent_bi_sub_code,\n                matsSilentMessage: mats.silent_message,\n                matsSilentStatus: mats.silent_status,\n                matsHttpStatus: mats.http_status,\n                matsHttpEventCount: mats.http_event_count,\n            },\n            this.correlationId\n        );\n\n        return mats;\n    }\n\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    private getMATSFromResponse(matsResponse: string | undefined): MATS | null {\n        if (matsResponse) {\n            try {\n                return JSON.parse(matsResponse);\n            } catch (e) {\n                this.logger.error(\n                    \"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    protected isResponseFromCache(mats: MATS): boolean {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\n                \"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\"\n            );\n            return false;\n        }\n\n        return !!mats.is_cached;\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(\n        request: PopupRequest | SsoSilentRequest\n    ): Promise<PlatformAuthRequest> {\n        this.logger.trace(\n            \"NativeInteractionClient - initializeNativeRequest called\"\n        );\n\n        const canonicalAuthority = await this.getCanonicalAuthority(request);\n\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        const validatedRequest: PlatformAuthRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: this.getPrompt(request.prompt),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n            keyId: request.popKid,\n        };\n\n        // Check for PoP token requests: signPopToken should only be set to true if popKid is not set\n        if (validatedRequest.signPopToken && !!request.popKid) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.invalidPopTokenRequest\n            );\n        }\n\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            PlatformAuthConstants.MATS_TELEMETRY;\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n\n            // generate reqCnf if not provided in the request\n            let reqCnfData;\n            if (!validatedRequest.keyId) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(shrParameters, this.logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n                validatedRequest.keyId = generatedReqCnfData.kid;\n                validatedRequest.signPopToken = true;\n            } else {\n                reqCnfData = this.browserCrypto.base64UrlEncode(\n                    JSON.stringify({ kid: validatedRequest.keyId })\n                );\n                validatedRequest.signPopToken = false;\n            }\n\n            // SPAs require whole string to be passed to broker\n            validatedRequest.reqCnf = reqCnfData;\n        }\n        this.addRequestSKUs(validatedRequest);\n\n        return validatedRequest;\n    }\n\n    private async getCanonicalAuthority(\n        request: PopupRequest | SsoSilentRequest\n    ): Promise<UrlString> {\n        const requestAuthority =\n            request.authority || this.config.auth.authority;\n\n        if (request.account) {\n            // validate authority\n            await this.getDiscoveredAuthority({\n                requestAuthority,\n                requestAzureCloudOptions: request.azureCloudOptions,\n                account: request.account,\n            });\n        }\n\n        const canonicalAuthority = new UrlString(requestAuthority);\n        canonicalAuthority.validateAsUri();\n        return canonicalAuthority;\n    }\n\n    private getPrompt(prompt?: string): string | undefined {\n        // If request is silent, prompt is always none\n        switch (this.apiId) {\n            case ApiId.ssoSilent:\n            case ApiId.acquireTokenSilent_silentFlow:\n                this.logger.trace(\n                    \"initializeNativeRequest: silent request sets prompt to none\"\n                );\n                return PromptValue.NONE;\n            default:\n                break;\n        }\n\n        // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n        if (!prompt) {\n            this.logger.trace(\n                \"initializeNativeRequest: prompt was not provided\"\n            );\n            return undefined;\n        }\n\n        // If request is interactive, check if prompt provided is allowed to go directly to native broker\n        switch (prompt) {\n            case PromptValue.NONE:\n            case PromptValue.CONSENT:\n            case PromptValue.LOGIN:\n                this.logger.trace(\n                    \"initializeNativeRequest: prompt is compatible with native flow\"\n                );\n                return prompt;\n            default:\n                this.logger.trace(\n                    `initializeNativeRequest: prompt = ${prompt} is not compatible with native flow`\n                );\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativePromptNotSupported\n                );\n        }\n    }\n\n    /**\n     * Handles extra broker request parameters\n     * @param request {PlatformAuthRequest}\n     * @private\n     */\n    private handleExtraBrokerParams(request: PlatformAuthRequest): void {\n        const hasExtraBrokerParams =\n            request.extraParameters &&\n            request.extraParameters.hasOwnProperty(\n                AADServerParamKeys.BROKER_CLIENT_ID\n            ) &&\n            request.extraParameters.hasOwnProperty(\n                AADServerParamKeys.BROKER_REDIRECT_URI\n            ) &&\n            request.extraParameters.hasOwnProperty(\n                AADServerParamKeys.CLIENT_ID\n            );\n\n        if (!request.embeddedClientId && !hasExtraBrokerParams) {\n            return;\n        }\n\n        let child_client_id: string = \"\";\n        const child_redirect_uri = request.redirectUri;\n\n        if (request.embeddedClientId) {\n            request.redirectUri = this.config.auth.redirectUri;\n            child_client_id = request.embeddedClientId;\n        } else if (request.extraParameters) {\n            request.redirectUri =\n                request.extraParameters[AADServerParamKeys.BROKER_REDIRECT_URI];\n            child_client_id =\n                request.extraParameters[AADServerParamKeys.CLIENT_ID];\n        }\n\n        request.extraParameters = {\n            child_client_id,\n            child_redirect_uri,\n        };\n\n        this.performanceClient?.addFields(\n            {\n                embeddedClientId: child_client_id,\n                embeddedRedirectUri: child_redirect_uri,\n            },\n            request.correlationId\n        );\n    }\n}\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthenticationScheme,\n    Authority,\n    AuthorizeProtocol,\n    ClientConfigurationErrorCodes,\n    CommonAuthorizationUrlRequest,\n    createClientConfigurationError,\n    invokeAsync,\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n    PopTokenGenerator,\n    ProtocolMode,\n    RequestParameterBuilder,\n    OAuthResponseType,\n    Constants,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    ProtocolUtils,\n    ThrottlingUtils,\n    AuthorizeResponse,\n    ResponseHandler,\n    TimeUtils,\n    AuthorizationCodePayload,\n    ServerAuthorizationTokenResponse,\n} from \"@azure/msal-common/browser\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { ApiId, BrowserConstants } from \"../utils/BrowserConstants.js\";\nimport { version } from \"../packageMetadata.js\";\nimport { CryptoOps } from \"../crypto/CryptoOps.js\";\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { PlatformAuthInteractionClient } from \"../interaction_client/PlatformAuthInteractionClient.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { decryptEarResponse } from \"../crypto/BrowserCrypto.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\n/**\n * Returns map of parameters that are applicable to all calls to /authorize whether using PKCE or EAR\n * @param config\n * @param authority\n * @param request\n * @param logger\n * @param performanceClient\n * @returns\n */\nasync function getStandardParameters(\n    config: BrowserConfiguration,\n    authority: Authority,\n    request: CommonAuthorizationUrlRequest,\n    logger: Logger,\n    performanceClient: IPerformanceClient\n): Promise<Map<string, string>> {\n    const parameters = AuthorizeProtocol.getStandardAuthorizeRequestParameters(\n        { ...config.auth, authority: authority },\n        request,\n        logger,\n        performanceClient\n    );\n    RequestParameterBuilder.addLibraryInfo(parameters, {\n        sku: BrowserConstants.MSAL_SKU,\n        version: version,\n        os: \"\",\n        cpu: \"\",\n    });\n    if (config.auth.protocolMode !== ProtocolMode.OIDC) {\n        RequestParameterBuilder.addApplicationTelemetry(\n            parameters,\n            config.telemetry.application\n        );\n    }\n\n    if (request.platformBroker) {\n        // signal ests that this is a WAM call\n        RequestParameterBuilder.addNativeBroker(parameters);\n\n        // pass the req_cnf for POP\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const cryptoOps = new CryptoOps(logger, performanceClient);\n            const popTokenGenerator = new PopTokenGenerator(cryptoOps);\n\n            // req_cnf is always sent as a string for SPAs\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    logger,\n                    performanceClient,\n                    request.correlationId\n                )(request, logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            } else {\n                reqCnfData = cryptoOps.encodeKid(request.popKid);\n            }\n            RequestParameterBuilder.addPopToken(parameters, reqCnfData);\n        }\n    }\n\n    RequestParameterBuilder.instrumentBrokerParams(\n        parameters,\n        request.correlationId,\n        performanceClient\n    );\n\n    return parameters;\n}\n\n/**\n * Gets the full /authorize URL with request parameters when using Auth Code + PKCE\n * @param config\n * @param authority\n * @param request\n * @param logger\n * @param performanceClient\n * @returns\n */\nexport async function getAuthCodeRequestUrl(\n    config: BrowserConfiguration,\n    authority: Authority,\n    request: CommonAuthorizationUrlRequest,\n    logger: Logger,\n    performanceClient: IPerformanceClient\n): Promise<string> {\n    if (!request.codeChallenge) {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.pkceParamsMissing\n        );\n    }\n\n    const parameters = await invokeAsync(\n        getStandardParameters,\n        PerformanceEvents.GetStandardParams,\n        logger,\n        performanceClient,\n        request.correlationId\n    )(config, authority, request, logger, performanceClient);\n    RequestParameterBuilder.addResponseType(parameters, OAuthResponseType.CODE);\n\n    RequestParameterBuilder.addCodeChallengeParams(\n        parameters,\n        request.codeChallenge,\n        Constants.S256_CODE_CHALLENGE_METHOD\n    );\n\n    RequestParameterBuilder.addExtraQueryParameters(\n        parameters,\n        request.extraQueryParameters || {}\n    );\n\n    return AuthorizeProtocol.getAuthorizeUrl(\n        authority,\n        parameters,\n        config.auth.encodeExtraQueryParams,\n        request.extraQueryParameters\n    );\n}\n\n/**\n * Gets the form that will be posted to /authorize with request parameters when using EAR\n */\nexport async function getEARForm(\n    frame: Document,\n    config: BrowserConfiguration,\n    authority: Authority,\n    request: CommonAuthorizationUrlRequest,\n    logger: Logger,\n    performanceClient: IPerformanceClient\n): Promise<HTMLFormElement> {\n    if (!request.earJwk) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.earJwkEmpty);\n    }\n\n    const parameters = await getStandardParameters(\n        config,\n        authority,\n        request,\n        logger,\n        performanceClient\n    );\n\n    RequestParameterBuilder.addResponseType(\n        parameters,\n        OAuthResponseType.IDTOKEN_TOKEN_REFRESHTOKEN\n    );\n    RequestParameterBuilder.addEARParameters(parameters, request.earJwk);\n\n    const queryParams = new Map<string, string>();\n    RequestParameterBuilder.addExtraQueryParameters(\n        queryParams,\n        request.extraQueryParameters || {}\n    );\n    const url = AuthorizeProtocol.getAuthorizeUrl(\n        authority,\n        queryParams,\n        config.auth.encodeExtraQueryParams,\n        request.extraQueryParameters\n    );\n\n    return createForm(frame, url, parameters);\n}\n\n/**\n * Creates form element in the provided document with auth parameters in the post body\n * @param frame\n * @param authorizeUrl\n * @param parameters\n * @returns\n */\nfunction createForm(\n    frame: Document,\n    authorizeUrl: string,\n    parameters: Map<string, string>\n): HTMLFormElement {\n    const form = frame.createElement(\"form\");\n    form.method = \"post\";\n    form.action = authorizeUrl;\n\n    parameters.forEach((value: string, key: string) => {\n        const param = frame.createElement(\"input\");\n        param.hidden = true;\n        param.name = key;\n        param.value = value;\n\n        form.appendChild(param);\n    });\n\n    frame.body.appendChild(form);\n    return form;\n}\n\n/**\n * Response handler when server returns accountId on the /authorize request\n * @param request\n * @param accountId\n * @param apiId\n * @param config\n * @param browserStorage\n * @param nativeStorage\n * @param eventHandler\n * @param logger\n * @param performanceClient\n * @param nativeMessageHandler\n * @returns\n */\nexport async function handleResponsePlatformBroker(\n    request: CommonAuthorizationUrlRequest,\n    accountId: string,\n    apiId: ApiId,\n    config: BrowserConfiguration,\n    browserStorage: BrowserCacheManager,\n    nativeStorage: BrowserCacheManager,\n    eventHandler: EventHandler,\n    logger: Logger,\n    performanceClient: IPerformanceClient,\n    platformAuthProvider?: IPlatformAuthHandler\n): Promise<AuthenticationResult> {\n    logger.verbose(\"Account id found, calling WAM for token\");\n\n    if (!platformAuthProvider) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.nativeConnectionNotEstablished\n        );\n    }\n    const browserCrypto = new CryptoOps(logger, performanceClient);\n    const nativeInteractionClient = new PlatformAuthInteractionClient(\n        config,\n        browserStorage,\n        browserCrypto,\n        logger,\n        eventHandler,\n        config.system.navigationClient,\n        apiId,\n        performanceClient,\n        platformAuthProvider,\n        accountId,\n        nativeStorage,\n        request.correlationId\n    );\n    const { userRequestState } = ProtocolUtils.parseRequestState(\n        browserCrypto,\n        request.state\n    );\n    return invokeAsync(\n        nativeInteractionClient.acquireToken.bind(nativeInteractionClient),\n        PerformanceEvents.NativeInteractionClientAcquireToken,\n        logger,\n        performanceClient,\n        request.correlationId\n    )({\n        ...request,\n        state: userRequestState,\n        prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n    });\n}\n\n/**\n * Response handler when server returns code on the /authorize request\n * @param request\n * @param response\n * @param codeVerifier\n * @param authClient\n * @param browserStorage\n * @param logger\n * @param performanceClient\n * @returns\n */\nexport async function handleResponseCode(\n    request: CommonAuthorizationUrlRequest,\n    response: AuthorizeResponse,\n    codeVerifier: string,\n    apiId: ApiId,\n    config: BrowserConfiguration,\n    authClient: AuthorizationCodeClient,\n    browserStorage: BrowserCacheManager,\n    nativeStorage: BrowserCacheManager,\n    eventHandler: EventHandler,\n    logger: Logger,\n    performanceClient: IPerformanceClient,\n    platformAuthProvider?: IPlatformAuthHandler\n): Promise<AuthenticationResult> {\n    // Remove throttle if it exists\n    ThrottlingUtils.removeThrottle(\n        browserStorage,\n        config.auth.clientId,\n        request\n    );\n    if (response.accountId) {\n        return invokeAsync(\n            handleResponsePlatformBroker,\n            PerformanceEvents.HandleResponsePlatformBroker,\n            logger,\n            performanceClient,\n            request.correlationId\n        )(\n            request,\n            response.accountId,\n            apiId,\n            config,\n            browserStorage,\n            nativeStorage,\n            eventHandler,\n            logger,\n            performanceClient,\n            platformAuthProvider\n        );\n    }\n    const authCodeRequest: CommonAuthorizationCodeRequest = {\n        ...request,\n        code: response.code || \"\",\n        codeVerifier: codeVerifier,\n    };\n    // Create popup interaction handler.\n    const interactionHandler = new InteractionHandler(\n        authClient,\n        browserStorage,\n        authCodeRequest,\n        logger,\n        performanceClient\n    );\n    // Handle response from hash string.\n    const result = await invokeAsync(\n        interactionHandler.handleCodeResponse.bind(interactionHandler),\n        PerformanceEvents.HandleCodeResponse,\n        logger,\n        performanceClient,\n        request.correlationId\n    )(response, request);\n\n    return result;\n}\n\n/**\n * Response handler when server returns ear_jwe on the /authorize request\n * @param request\n * @param response\n * @param apiId\n * @param config\n * @param authority\n * @param browserStorage\n * @param nativeStorage\n * @param eventHandler\n * @param logger\n * @param performanceClient\n * @param nativeMessageHandler\n * @returns\n */\nexport async function handleResponseEAR(\n    request: CommonAuthorizationUrlRequest,\n    response: AuthorizeResponse,\n    apiId: ApiId,\n    config: BrowserConfiguration,\n    authority: Authority,\n    browserStorage: BrowserCacheManager,\n    nativeStorage: BrowserCacheManager,\n    eventHandler: EventHandler,\n    logger: Logger,\n    performanceClient: IPerformanceClient,\n    platformAuthProvider?: IPlatformAuthHandler\n): Promise<AuthenticationResult> {\n    // Remove throttle if it exists\n    ThrottlingUtils.removeThrottle(\n        browserStorage,\n        config.auth.clientId,\n        request\n    );\n\n    // Validate state & check response for errors\n    AuthorizeProtocol.validateAuthorizationResponse(response, request.state);\n\n    if (!response.ear_jwe) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.earJweEmpty);\n    }\n\n    if (!request.earJwk) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.earJwkEmpty);\n    }\n\n    const decryptedData = JSON.parse(\n        await invokeAsync(\n            decryptEarResponse,\n            PerformanceEvents.DecryptEarResponse,\n            logger,\n            performanceClient,\n            request.correlationId\n        )(request.earJwk, response.ear_jwe)\n    ) as AuthorizeResponse & ServerAuthorizationTokenResponse;\n\n    if (decryptedData.accountId) {\n        return invokeAsync(\n            handleResponsePlatformBroker,\n            PerformanceEvents.HandleResponsePlatformBroker,\n            logger,\n            performanceClient,\n            request.correlationId\n        )(\n            request,\n            decryptedData.accountId,\n            apiId,\n            config,\n            browserStorage,\n            nativeStorage,\n            eventHandler,\n            logger,\n            performanceClient,\n            platformAuthProvider\n        );\n    }\n\n    const responseHandler = new ResponseHandler(\n        config.auth.clientId,\n        browserStorage,\n        new CryptoOps(logger, performanceClient),\n        logger,\n        null,\n        null,\n        performanceClient\n    );\n\n    // Validate response. This function throws a server error if an error is returned by the server.\n    responseHandler.validateTokenResponse(decryptedData);\n\n    // Temporary until response handler is refactored to be more flow agnostic.\n    const additionalData: AuthorizationCodePayload = {\n        code: \"\",\n        state: request.state,\n        nonce: request.nonce,\n        client_info: decryptedData.client_info,\n        cloud_graph_host_name: decryptedData.cloud_graph_host_name,\n        cloud_instance_host_name: decryptedData.cloud_instance_host_name,\n        cloud_instance_name: decryptedData.cloud_instance_name,\n        msgraph_host: decryptedData.msgraph_host,\n    };\n\n    return (await invokeAsync(\n        responseHandler.handleServerTokenResponse.bind(responseHandler),\n        PerformanceEvents.HandleServerTokenResponse,\n        logger,\n        performanceClient,\n        request.correlationId\n    )(\n        decryptedData,\n        authority,\n        TimeUtils.nowSeconds(),\n        request,\n        additionalData,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    )) as AuthenticationResult;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n    PkceCodes,\n    invoke,\n    invokeAsync,\n} from \"@azure/msal-common/browser\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { urlEncodeArr } from \"../encode/Base64Encode.js\";\nimport { getRandomValues, sha256Digest } from \"./BrowserCrypto.js\";\n\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n\n/**\n * This file defines APIs to generate PKCE codes and code verifiers.\n */\n\n/**\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n */\nexport async function generatePkceCodes(\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string\n): Promise<PkceCodes> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.GeneratePkceCodes,\n        correlationId\n    );\n    const codeVerifier = invoke(\n        generateCodeVerifier,\n        PerformanceEvents.GenerateCodeVerifier,\n        logger,\n        performanceClient,\n        correlationId\n    )(performanceClient, logger, correlationId);\n    const codeChallenge = await invokeAsync(\n        generateCodeChallengeFromVerifier,\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\n        logger,\n        performanceClient,\n        correlationId\n    )(codeVerifier, performanceClient, logger, correlationId);\n    return {\n        verifier: codeVerifier,\n        challenge: codeChallenge,\n    };\n}\n\n/**\n * Generates a random 32 byte buffer and returns the base64\n * encoded string to be used as a PKCE Code Verifier\n */\nfunction generateCodeVerifier(\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string\n): string {\n    try {\n        // Generate random values as utf-8\n        const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n        invoke(\n            getRandomValues,\n            PerformanceEvents.GetRandomValues,\n            logger,\n            performanceClient,\n            correlationId\n        )(buffer);\n        // encode verifier as base64\n        const pkceCodeVerifierB64: string = urlEncodeArr(buffer);\n        return pkceCodeVerifierB64;\n    } catch (e) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.pkceNotCreated);\n    }\n}\n\n/**\n * Creates a base64 encoded PKCE Code Challenge string from the\n * hash created from the PKCE Code Verifier supplied\n */\nasync function generateCodeChallengeFromVerifier(\n    pkceCodeVerifier: string,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string\n): Promise<string> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\n        correlationId\n    );\n    try {\n        // hashed verifier\n        const pkceHashedCodeVerifier = await invokeAsync(\n            sha256Digest,\n            PerformanceEvents.Sha256Digest,\n            logger,\n            performanceClient,\n            correlationId\n        )(pkceCodeVerifier, performanceClient, correlationId);\n        // encode hash as base64\n        return urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n    } catch (e) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.pkceNotCreated);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    PlatformAuthConstants,\n    NativeExtensionMethod,\n} from \"../../utils/BrowserConstants.js\";\nimport {\n    Logger,\n    AuthError,\n    createAuthError,\n    AuthErrorCodes,\n    InProgressPerformanceEvent,\n    PerformanceEvents,\n    IPerformanceClient,\n} from \"@azure/msal-common/browser\";\nimport {\n    NativeExtensionRequest,\n    NativeExtensionRequestBody,\n    PlatformAuthRequest,\n} from \"./PlatformAuthRequest.js\";\nimport { createNativeAuthError } from \"../../error/NativeAuthError.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../../error/BrowserAuthError.js\";\nimport { createNewGuid } from \"../../crypto/BrowserCrypto.js\";\nimport { PlatformAuthResponse } from \"./PlatformAuthResponse.js\";\nimport { IPlatformAuthHandler } from \"./IPlatformAuthHandler.js\";\n\ntype ResponseResolvers<T> = {\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (\n        value: AuthError | Error | PromiseLike<Error> | PromiseLike<AuthError>\n    ) => void;\n};\n\nexport class PlatformAuthExtensionHandler implements IPlatformAuthHandler {\n    private extensionId: string | undefined;\n    private extensionVersion: string | undefined;\n    private logger: Logger;\n    private readonly handshakeTimeoutMs: number;\n    private timeoutId: number | undefined;\n    private resolvers: Map<string, ResponseResolvers<object>>;\n    private handshakeResolvers: Map<string, ResponseResolvers<void>>;\n    private messageChannel: MessageChannel;\n    private readonly windowListener: (event: MessageEvent) => void;\n    private readonly performanceClient: IPerformanceClient;\n    private readonly handshakeEvent: InProgressPerformanceEvent;\n    platformAuthType: string;\n\n    constructor(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient,\n        extensionId?: string\n    ) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(\n            PerformanceEvents.NativeMessageHandlerHandshake\n        );\n        this.platformAuthType =\n            PlatformAuthConstants.PLATFORM_EXTENSION_PROVIDER;\n    }\n\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param request\n     */\n    async sendMessage(\n        request: PlatformAuthRequest\n    ): Promise<PlatformAuthResponse> {\n        this.logger.trace(this.platformAuthType + \" - sendMessage called.\");\n\n        // fall back to native calls\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: request,\n        };\n\n        const req: NativeExtensionRequest = {\n            channel: PlatformAuthConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: messageBody,\n        };\n\n        this.logger.trace(\n            this.platformAuthType + \" - Sending request to browser extension\"\n        );\n        this.logger.tracePii(\n            this.platformAuthType +\n                ` - Sending request to browser extension: ${JSON.stringify(\n                    req\n                )}`\n        );\n        this.messageChannel.port1.postMessage(req);\n\n        const response: object = await new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n\n        const validatedResponse: PlatformAuthResponse =\n            this.validatePlatformBrokerResponse(response);\n\n        return validatedResponse;\n    }\n\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient\n    ): Promise<PlatformAuthExtensionHandler> {\n        logger.trace(\"PlatformAuthExtensionHandler - createProvider called.\");\n\n        try {\n            const preferredProvider = new PlatformAuthExtensionHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient,\n                PlatformAuthConstants.PREFERRED_EXTENSION_ID\n            );\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        } catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new PlatformAuthExtensionHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient\n            );\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n\n    /**\n     * Send handshake request helper.\n     */\n    private async sendHandshakeRequest(): Promise<void> {\n        this.logger.trace(\n            this.platformAuthType + \" - sendHandshakeRequest called.\"\n        );\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n\n        const req: NativeExtensionRequest = {\n            channel: PlatformAuthConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                );\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeHandshakeTimeout\n                    )\n                );\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    private onWindowMessage(event: MessageEvent): void {\n        this.logger.trace(this.platformAuthType + \" - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n\n        const request = event.data;\n\n        if (\n            !request.channel ||\n            request.channel !== PlatformAuthConstants.CHANNEL_ID\n        ) {\n            return;\n        }\n\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(\n                request.responseId\n            );\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(\n                    this.platformAuthType +\n                        `.onWindowMessage - resolver can't be found for request ${request.responseId}`\n                );\n                return;\n            }\n\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(\n                request.extensionId\n                    ? `Extension with id: ${request.extensionId} not installed`\n                    : \"No extension installed\"\n            );\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeExtensionNotInstalled\n                )\n            );\n        }\n    }\n\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    private onChannelMessage(event: MessageEvent): void {\n        this.logger.trace(\n            this.platformAuthType + \" - onChannelMessage called.\"\n        );\n        const request = event.data;\n\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(\n            request.responseId\n        );\n\n        try {\n            const method = request.body.method;\n\n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\n                    this.platformAuthType +\n                        \" - Received response from browser extension\"\n                );\n                this.logger.tracePii(\n                    this.platformAuthType +\n                        ` - Received response from browser extension: ${JSON.stringify(\n                            response\n                        )}`\n                );\n                if (response.status !== \"Success\") {\n                    resolver.reject(\n                        createNativeAuthError(\n                            response.code,\n                            response.description,\n                            response.ext\n                        )\n                    );\n                } else if (response.result) {\n                    if (\n                        response.result[\"code\"] &&\n                        response.result[\"description\"]\n                    ) {\n                        resolver.reject(\n                            createNativeAuthError(\n                                response.result[\"code\"],\n                                response.result[\"description\"],\n                                response.result[\"ext\"]\n                            )\n                        );\n                    } else {\n                        resolver.resolve(response.result);\n                    }\n                } else {\n                    throw createAuthError(\n                        AuthErrorCodes.unexpectedError,\n                        \"Event does not contain result.\"\n                    );\n                }\n                this.resolvers.delete(request.responseId);\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(\n                        this.platformAuthType +\n                            `.onChannelMessage - resolver can't be found for request ${request.responseId}`\n                    );\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                ); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(\n                    this.platformAuthType +\n                        ` - Received HandshakeResponse from extension: ${this.extensionId}`\n                );\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        } catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(\n                `Error parsing response from WAM Extension: ${err as string}`\n            );\n            this.logger.errorPii(`Unable to parse ${event}`);\n\n            if (resolver) {\n                resolver.reject(err as AuthError);\n            } else if (handshakeResolver) {\n                handshakeResolver.reject(err as AuthError);\n            }\n        }\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validatePlatformBrokerResponse(\n        response: object\n    ): PlatformAuthResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as PlatformAuthResponse;\n        } else {\n            throw createAuthError(\n                AuthErrorCodes.unexpectedError,\n                \"Response missing expected properties.\"\n            );\n        }\n    }\n\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId(): string | undefined {\n        return this.extensionId;\n    }\n\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion(): string | undefined {\n        return this.extensionVersion;\n    }\n\n    getExtensionName(): string | undefined {\n        return this.getExtensionId() ===\n            PlatformAuthConstants.PREFERRED_EXTENSION_ID\n            ? \"chrome\"\n            : this.getExtensionId()?.length\n            ? \"unknown\"\n            : undefined;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    createAuthError,\n    AuthErrorCodes,\n    IPerformanceClient,\n    StringDict,\n} from \"@azure/msal-common/browser\";\nimport {\n    DOMExtraParameters,\n    PlatformAuthRequest,\n    PlatformDOMTokenRequest,\n} from \"./PlatformAuthRequest.js\";\nimport { PlatformAuthConstants } from \"../../utils/BrowserConstants.js\";\nimport {\n    PlatformAuthResponse,\n    PlatformDOMTokenResponse,\n} from \"./PlatformAuthResponse.js\";\nimport { createNativeAuthError } from \"../../error/NativeAuthError.js\";\nimport { IPlatformAuthHandler } from \"./IPlatformAuthHandler.js\";\n\nexport class PlatformAuthDOMHandler implements IPlatformAuthHandler {\n    protected logger: Logger;\n    protected performanceClient: IPerformanceClient;\n    protected correlationId: string;\n    platformAuthType: string;\n\n    constructor(\n        logger: Logger,\n        performanceClient: IPerformanceClient,\n        correlationId: string\n    ) {\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.platformAuthType = PlatformAuthConstants.PLATFORM_DOM_PROVIDER;\n    }\n\n    static async createProvider(\n        logger: Logger,\n        performanceClient: IPerformanceClient,\n        correlationId: string\n    ): Promise<PlatformAuthDOMHandler | undefined> {\n        logger.trace(\"PlatformAuthDOMHandler: createProvider called\");\n\n        // @ts-ignore\n        if (window.navigator?.platformAuthentication) {\n            const supportedContracts =\n                // @ts-ignore\n                await window.navigator.platformAuthentication.getSupportedContracts(\n                    PlatformAuthConstants.MICROSOFT_ENTRA_BROKERID\n                );\n            if (\n                supportedContracts?.includes(\n                    PlatformAuthConstants.PLATFORM_DOM_APIS\n                )\n            ) {\n                logger.trace(\"Platform auth api available in DOM\");\n                return new PlatformAuthDOMHandler(\n                    logger,\n                    performanceClient,\n                    correlationId\n                );\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the Id for the broker extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId(): string {\n        return PlatformAuthConstants.MICROSOFT_ENTRA_BROKERID;\n    }\n\n    getExtensionVersion(): string | undefined {\n        return \"\";\n    }\n\n    getExtensionName(): string | undefined {\n        return PlatformAuthConstants.DOM_API_NAME;\n    }\n\n    /**\n     * Send token request to platform broker via browser DOM API\n     * @param request\n     * @returns\n     */\n    async sendMessage(\n        request: PlatformAuthRequest\n    ): Promise<PlatformAuthResponse> {\n        this.logger.trace(\n            this.platformAuthType + \" - Sending request to browser DOM API\"\n        );\n\n        try {\n            const platformDOMRequest: PlatformDOMTokenRequest =\n                this.initializePlatformDOMRequest(request);\n            const response: object =\n                // @ts-ignore\n                await window.navigator.platformAuthentication.executeGetToken(\n                    platformDOMRequest\n                );\n            return this.validatePlatformBrokerResponse(response);\n        } catch (e) {\n            this.logger.error(\n                this.platformAuthType + \" - executeGetToken DOM API error\"\n            );\n            throw e;\n        }\n    }\n\n    private initializePlatformDOMRequest(\n        request: PlatformAuthRequest\n    ): PlatformDOMTokenRequest {\n        this.logger.trace(\n            this.platformAuthType + \" - initializeNativeDOMRequest called\"\n        );\n\n        const {\n            accountId,\n            clientId,\n            authority,\n            scope,\n            redirectUri,\n            correlationId,\n            state,\n            storeInCache,\n            embeddedClientId,\n            extraParameters,\n            ...remainingProperties\n        } = request;\n\n        const validExtraParameters: DOMExtraParameters =\n            this.getDOMExtraParams(remainingProperties);\n\n        const platformDOMRequest: PlatformDOMTokenRequest = {\n            accountId: accountId,\n            brokerId: this.getExtensionId(),\n            authority: authority,\n            clientId: clientId,\n            correlationId: correlationId || this.correlationId,\n            extraParameters: { ...extraParameters, ...validExtraParameters },\n            isSecurityTokenService: false,\n            redirectUri: redirectUri,\n            scope: scope,\n            state: state,\n            storeInCache: storeInCache,\n            embeddedClientId: embeddedClientId,\n        };\n\n        return platformDOMRequest;\n    }\n\n    private validatePlatformBrokerResponse(\n        response: object\n    ): PlatformAuthResponse {\n        if (response.hasOwnProperty(\"isSuccess\")) {\n            if (\n                response.hasOwnProperty(\"accessToken\") &&\n                response.hasOwnProperty(\"idToken\") &&\n                response.hasOwnProperty(\"clientInfo\") &&\n                response.hasOwnProperty(\"account\") &&\n                response.hasOwnProperty(\"scopes\") &&\n                response.hasOwnProperty(\"expiresIn\")\n            ) {\n                this.logger.trace(\n                    this.platformAuthType +\n                        \" - platform broker returned successful and valid response\"\n                );\n                return this.convertToPlatformBrokerResponse(\n                    response as PlatformDOMTokenResponse\n                );\n            } else if (response.hasOwnProperty(\"error\")) {\n                const errorResponse = response as PlatformDOMTokenResponse;\n                if (\n                    errorResponse.isSuccess === false &&\n                    errorResponse.error &&\n                    errorResponse.error.code\n                ) {\n                    this.logger.trace(\n                        this.platformAuthType +\n                            \" - platform broker returned error response\"\n                    );\n                    throw createNativeAuthError(\n                        errorResponse.error.code,\n                        errorResponse.error.description,\n                        {\n                            error: parseInt(errorResponse.error.errorCode),\n                            protocol_error: errorResponse.error.protocolError,\n                            status: errorResponse.error.status,\n                            properties: errorResponse.error.properties,\n                        }\n                    );\n                }\n            }\n        }\n        throw createAuthError(\n            AuthErrorCodes.unexpectedError,\n            \"Response missing expected properties.\"\n        );\n    }\n\n    private convertToPlatformBrokerResponse(\n        response: PlatformDOMTokenResponse\n    ): PlatformAuthResponse {\n        this.logger.trace(\n            this.platformAuthType + \" - convertToNativeResponse called\"\n        );\n        const nativeResponse: PlatformAuthResponse = {\n            access_token: response.accessToken,\n            id_token: response.idToken,\n            client_info: response.clientInfo,\n            account: response.account,\n            expires_in: response.expiresIn,\n            scope: response.scopes,\n            state: response.state || \"\",\n            properties: response.properties || {},\n            extendedLifetimeToken: response.extendedLifetimeToken ?? false,\n            shr: response.proofOfPossessionPayload,\n        };\n\n        return nativeResponse;\n    }\n\n    private getDOMExtraParams(\n        extraParameters: Record<string, unknown>\n    ): DOMExtraParameters {\n        const stringifiedParams = Object.entries(extraParameters).reduce(\n            (record, [key, value]) => {\n                record[key] = String(value);\n                return record;\n            },\n            {} as StringDict\n        );\n\n        const validExtraParams: DOMExtraParameters = {\n            ...stringifiedParams,\n        };\n\n        return validExtraParams;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    LoggerOptions,\n    IPerformanceClient,\n    Logger,\n    AuthenticationScheme,\n    StubPerformanceClient,\n} from \"@azure/msal-common/browser\";\nimport { name, version } from \"../../packageMetadata.js\";\nimport {\n    BrowserConfiguration,\n    DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n} from \"../../config/Configuration.js\";\nimport { PlatformAuthExtensionHandler } from \"./PlatformAuthExtensionHandler.js\";\nimport { IPlatformAuthHandler } from \"./IPlatformAuthHandler.js\";\nimport { PlatformAuthDOMHandler } from \"./PlatformAuthDOMHandler.js\";\nimport { createNewGuid } from \"../../crypto/BrowserCrypto.js\";\nimport {\n    BrowserCacheLocation,\n    PLATFORM_AUTH_DOM_SUPPORT,\n} from \"../../utils/BrowserConstants.js\";\n\n/**\n * Checks if the platform broker is available in the current environment.\n * @param loggerOptions\n * @param perfClient\n * @returns\n */\nexport async function isPlatformBrokerAvailable(\n    loggerOptions?: LoggerOptions,\n    perfClient?: IPerformanceClient,\n    correlationId?: string\n): Promise<boolean> {\n    const logger = new Logger(loggerOptions || {}, name, version);\n\n    logger.trace(\"isPlatformBrokerAvailable called\");\n\n    const performanceClient = perfClient || new StubPerformanceClient();\n\n    if (typeof window === \"undefined\") {\n        logger.trace(\"Non-browser environment detected, returning false\");\n        return false;\n    }\n\n    return !!(await getPlatformAuthProvider(\n        logger,\n        performanceClient,\n        correlationId || createNewGuid()\n    ));\n}\n\nexport async function getPlatformAuthProvider(\n    logger: Logger,\n    performanceClient: IPerformanceClient,\n    correlationId: string,\n    nativeBrokerHandshakeTimeout?: number\n): Promise<IPlatformAuthHandler | undefined> {\n    logger.trace(\"getPlatformAuthProvider called\", correlationId);\n\n    const enablePlatformBrokerDOMSupport = isDomEnabledForPlatformAuth();\n\n    logger.trace(\n        \"Has client allowed platform auth via DOM API: \" +\n            enablePlatformBrokerDOMSupport\n    );\n    let platformAuthProvider: IPlatformAuthHandler | undefined;\n    try {\n        if (enablePlatformBrokerDOMSupport) {\n            // Check if DOM platform API is supported first\n            platformAuthProvider = await PlatformAuthDOMHandler.createProvider(\n                logger,\n                performanceClient,\n                correlationId\n            );\n        }\n        if (!platformAuthProvider) {\n            logger.trace(\n                \"Platform auth via DOM API not available, checking for extension\"\n            );\n            /*\n             * If DOM APIs are not available, check if browser extension is available.\n             * Platform authentication via DOM APIs is preferred over extension APIs.\n             */\n            platformAuthProvider =\n                await PlatformAuthExtensionHandler.createProvider(\n                    logger,\n                    nativeBrokerHandshakeTimeout ||\n                        DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n                    performanceClient\n                );\n        }\n    } catch (e) {\n        logger.trace(\"Platform auth not available\", e as string);\n    }\n    return platformAuthProvider;\n}\n\n/**\n * Returns true if the DOM API support for platform auth is enabled in session storage\n * @returns boolean\n * @deprecated\n */\nexport function isDomEnabledForPlatformAuth(): boolean {\n    let sessionStorage: Storage | undefined;\n    try {\n        sessionStorage = window[BrowserCacheLocation.SessionStorage];\n        // Mute errors if it's a non-browser environment or cookies are blocked.\n        return sessionStorage?.getItem(PLATFORM_AUTH_DOM_SUPPORT) === \"true\";\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Returns boolean indicating whether or not the request should attempt to use native broker\n * @param logger\n * @param config\n * @param platformAuthProvider\n * @param authenticationScheme\n */\nexport function isPlatformAuthAllowed(\n    config: BrowserConfiguration,\n    logger: Logger,\n    platformAuthProvider?: IPlatformAuthHandler,\n    authenticationScheme?: AuthenticationScheme\n): boolean {\n    logger.trace(\"isBrokerAvailable called\");\n    if (!config.system.allowPlatformBroker) {\n        logger.trace(\n            \"isBrokerAvailable: allowPlatformBroker is not enabled, returning false\"\n        );\n        // Developer disabled WAM\n        return false;\n    }\n\n    if (!platformAuthProvider) {\n        logger.trace(\n            \"isBrokerAvailable: Platform auth provider is not initialized, returning false\"\n        );\n        // Platform broker auth providers are not available\n        return false;\n    }\n\n    if (authenticationScheme) {\n        switch (authenticationScheme) {\n            case AuthenticationScheme.BEARER:\n            case AuthenticationScheme.POP:\n                logger.trace(\n                    \"isBrokerAvailable: authenticationScheme is supported, returning true\"\n                );\n                return true;\n            default:\n                logger.trace(\n                    \"isBrokerAvailable: authenticationScheme is not supported, returning false\"\n                );\n                return false;\n        }\n    }\n    return true;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    CommonEndSessionRequest,\n    UrlString,\n    AuthError,\n    OIDC_DEFAULT_SCOPES,\n    PerformanceEvents,\n    IPerformanceClient,\n    Logger,\n    ICrypto,\n    ProtocolMode,\n    ServerResponseType,\n    invokeAsync,\n    invoke,\n    PkceCodes,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\nimport { EventType } from \"../event/EventType.js\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserConstants,\n} from \"../utils/BrowserConstants.js\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes.js\";\nimport { EventError } from \"../event/EventMessage.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport * as ResponseHandler from \"../response/ResponseHandler.js\";\nimport * as Authorize from \"../protocol/Authorize.js\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator.js\";\nimport { isPlatformAuthAllowed } from \"../broker/nativeBroker/PlatformAuthProvider.js\";\nimport { generateEarKey } from \"../crypto/BrowserCrypto.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\nexport type PopupParams = {\n    popup?: Window | null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes;\n    popupWindowParent: Window;\n};\n\nexport class PopupClient extends StandardInteractionClient {\n    private currentWindow: Window | undefined;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        platformAuthHandler?: IPlatformAuthHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            platformAuthHandler,\n            correlationId\n        );\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n        this.eventHandler = eventHandler;\n    }\n\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     * @param pkceCodes\n     */\n    acquireToken(\n        request: PopupRequest,\n        pkceCodes?: PkceCodes\n    ): Promise<AuthenticationResult> {\n        try {\n            const popupName = this.generatePopupName(\n                request.scopes || OIDC_DEFAULT_SCOPES,\n                request.authority || this.config.auth.authority\n            );\n            const popupParams: PopupParams = {\n                popupName,\n                popupWindowAttributes: request.popupWindowAttributes || {},\n                popupWindowParent: request.popupWindowParent ?? window,\n            };\n\n            this.performanceClient.addFields(\n                { isAsyncPopup: this.config.system.asyncPopups },\n                this.correlationId\n            );\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupParams,\n                    pkceCodes\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\n                    \"asyncPopup set to false, opening popup before acquiring token\"\n                );\n                popupParams.popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupParams\n                );\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupParams,\n                    pkceCodes\n                );\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest =\n                this.initializeLogoutRequest(logoutRequest);\n            const popupParams: PopupParams = {\n                popupName: this.generateLogoutPopupName(validLogoutRequest),\n                popupWindowAttributes:\n                    logoutRequest?.popupWindowAttributes || {},\n                popupWindowParent: logoutRequest?.popupWindowParent ?? window,\n            };\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri =\n                logoutRequest && logoutRequest.mainWindowRedirectUri;\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupParams,\n                    authority,\n                    mainWindowRedirectUri\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                popupParams.popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupParams\n                );\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupParams,\n                    authority,\n                    mainWindowRedirectUri\n                );\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param request\n     * @param popupParams\n     * @param pkceCodes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenPopupAsync(\n        request: PopupRequest,\n        popupParams: PopupParams,\n        pkceCodes?: PkceCodes\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n\n        const validRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, InteractionType.Popup);\n\n        /*\n         * Skip pre-connect for async popups to reduce time between user interaction and popup window creation to avoid\n         * popup from being blocked by browsers with shorter popup timers\n         */\n        if (popupParams.popup) {\n            BrowserUtils.preconnect(validRequest.authority);\n        }\n\n        const isPlatformBroker = isPlatformAuthAllowed(\n            this.config,\n            this.logger,\n            this.platformAuthProvider,\n            request.authenticationScheme\n        );\n        validRequest.platformBroker = isPlatformBroker;\n\n        if (this.config.auth.protocolMode === ProtocolMode.EAR) {\n            return this.executeEarFlow(validRequest, popupParams);\n        } else {\n            return this.executeCodeFlow(validRequest, popupParams, pkceCodes);\n        }\n    }\n\n    /**\n     * Executes auth code + PKCE flow\n     * @param request\n     * @param popupParams\n     * @param pkceCodes\n     * @returns\n     */\n    async executeCodeFlow(\n        request: CommonAuthorizationUrlRequest,\n        popupParams: PopupParams,\n        pkceCodes?: PkceCodes\n    ): Promise<AuthenticationResult> {\n        const correlationId = request.correlationId;\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenPopup\n        );\n\n        const pkce =\n            pkceCodes ||\n            (await invokeAsync(\n                generatePkceCodes,\n                PerformanceEvents.GeneratePkceCodes,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(this.performanceClient, this.logger, correlationId));\n\n        const popupRequest = {\n            ...request,\n            codeChallenge: pkce.challenge,\n        };\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )({\n                serverTelemetryManager,\n                requestAuthority: popupRequest.authority,\n                requestAzureCloudOptions: popupRequest.azureCloudOptions,\n                requestExtraQueryParameters: popupRequest.extraQueryParameters,\n                account: popupRequest.account,\n            });\n\n            // Create acquire token url.\n            const navigateUrl = await invokeAsync(\n                Authorize.getAuthCodeRequestUrl,\n                PerformanceEvents.GetAuthCodeUrl,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(\n                this.config,\n                authClient.authority,\n                popupRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupWindow: Window = this.initiateAuthRequest(\n                navigateUrl,\n                popupParams\n            );\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const responseString = await this.monitorPopupForHash(\n                popupWindow,\n                popupParams.popupWindowParent\n            );\n\n            const serverParams = invoke(\n                ResponseHandler.deserializeResponse,\n                PerformanceEvents.DeserializeResponse,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                responseString,\n                this.config.auth.OIDCOptions.serverResponseType,\n                this.logger\n            );\n\n            return await invokeAsync(\n                Authorize.handleResponseCode,\n                PerformanceEvents.HandleResponseCode,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(\n                request,\n                serverParams,\n                pkce.verifier,\n                ApiId.acquireTokenPopup,\n                this.config,\n                authClient,\n                this.browserStorage,\n                this.nativeStorage,\n                this.eventHandler,\n                this.logger,\n                this.performanceClient,\n                this.platformAuthProvider\n            );\n        } catch (e) {\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\n            popupParams.popup?.close();\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Executes EAR flow\n     * @param request\n     */\n    async executeEarFlow(\n        request: CommonAuthorizationUrlRequest,\n        popupParams: PopupParams\n    ): Promise<AuthenticationResult> {\n        const correlationId = request.correlationId;\n        // Get the frame handle for the silent request\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )({\n            requestAuthority: request.authority,\n            requestAzureCloudOptions: request.azureCloudOptions,\n            requestExtraQueryParameters: request.extraQueryParameters,\n            account: request.account,\n        });\n\n        const earJwk = await invokeAsync(\n            generateEarKey,\n            PerformanceEvents.GenerateEarKey,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )();\n        const popupRequest = {\n            ...request,\n            earJwk: earJwk,\n        };\n        const popupWindow =\n            popupParams.popup || this.openPopup(\"about:blank\", popupParams);\n\n        const form = await Authorize.getEARForm(\n            popupWindow.document,\n            this.config,\n            discoveredAuthority,\n            popupRequest,\n            this.logger,\n            this.performanceClient\n        );\n        form.submit();\n\n        // Monitor the popup for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const responseString = await invokeAsync(\n            this.monitorPopupForHash.bind(this),\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(popupWindow, popupParams.popupWindowParent);\n\n        const serverParams = invoke(\n            ResponseHandler.deserializeResponse,\n            PerformanceEvents.DeserializeResponse,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            responseString,\n            this.config.auth.OIDCOptions.serverResponseType,\n            this.logger\n        );\n\n        return invokeAsync(\n            Authorize.handleResponseEAR,\n            PerformanceEvents.HandleResponseEar,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            popupRequest,\n            serverParams,\n            ApiId.acquireTokenPopup,\n            this.config,\n            discoveredAuthority,\n            this.browserStorage,\n            this.nativeStorage,\n            this.eventHandler,\n            this.logger,\n            this.performanceClient,\n            this.platformAuthProvider\n        );\n    }\n\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    protected async logoutPopupAsync(\n        validRequest: CommonEndSessionRequest,\n        popupParams: PopupParams,\n        requestAuthority?: string,\n        mainWindowRedirectUri?: string\n    ): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_START,\n            InteractionType.Popup,\n            validRequest\n        );\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logoutPopup\n        );\n\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            // Initialize the client\n            const authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )({\n                serverTelemetryManager,\n                requestAuthority: requestAuthority,\n                account: validRequest.account || undefined,\n            });\n\n            try {\n                authClient.authority.endSessionEndpoint;\n            } catch {\n                if (\n                    validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === ProtocolMode.OIDC\n                ) {\n                    void this.browserStorage.removeAccount(\n                        validRequest.account?.homeAccountId\n                    );\n\n                    this.eventHandler.emitEvent(\n                        EventType.LOGOUT_SUCCESS,\n                        InteractionType.Popup,\n                        validRequest\n                    );\n\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions: NavigationOptions = {\n                            apiId: ApiId.logoutPopup,\n                            timeout:\n                                this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = UrlString.getAbsoluteUrl(\n                            mainWindowRedirectUri,\n                            BrowserUtils.getCurrentUri()\n                        );\n                        await this.navigationClient.navigateInternal(\n                            absoluteUrl,\n                            navigationOptions\n                        );\n                    }\n\n                    popupParams.popup?.close();\n\n                    return;\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Popup,\n                validRequest\n            );\n\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, popupParams);\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            await this.monitorPopupForHash(\n                popupWindow,\n                popupParams.popupWindowParent\n            ).catch(() => {\n                // Swallow any errors related to monitoring the window. Server logout is best effort\n            });\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(\n                    mainWindowRedirectUri,\n                    BrowserUtils.getCurrentUri()\n                );\n\n                this.logger.verbose(\n                    \"Redirecting main window to url specified in the request\"\n                );\n                this.logger.verbosePii(\n                    `Redirecting main window to: ${absoluteUrl}`\n                );\n                await this.navigationClient.navigateInternal(\n                    absoluteUrl,\n                    navigationOptions\n                );\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        } catch (e) {\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\n            popupParams.popup?.close();\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Popup,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Popup\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Popup\n        );\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (requestUrl) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(\n        popupWindow: Window,\n        popupWindowParent: Window\n    ): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            this.logger.verbose(\n                \"PopupHandler.monitorPopupForHash - polling started\"\n            );\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\n                        \"PopupHandler.monitorPopupForHash - window closed\"\n                    );\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.userCancelled\n                        )\n                    );\n                    return;\n                }\n\n                let href = \"\";\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                clearInterval(intervalId);\n\n                let responseString = \"\";\n                const responseType =\n                    this.config.auth.OIDCOptions.serverResponseType;\n                if (popupWindow) {\n                    if (responseType === ServerResponseType.QUERY) {\n                        responseString = popupWindow.location.search;\n                    } else {\n                        responseString = popupWindow.location.hash;\n                    }\n                }\n\n                this.logger.verbose(\n                    \"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\"\n                );\n\n                resolve(responseString);\n            }, this.config.system.pollIntervalMilliseconds);\n        }).finally(() => {\n            this.cleanPopup(popupWindow, popupWindowParent);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(\n                    `Navigating popup window to: ${urlNavigate}`\n                );\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(\n                    `Opening popup window to: ${urlNavigate}`\n                );\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams);\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.emptyWindowError\n                );\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            popupParams.popupWindowParent.addEventListener(\n                \"beforeunload\",\n                this.unloadWindow\n            );\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\n                \"error opening popup \" + (e as AuthError).message\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.popupWindowError\n            );\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(\n        urlNavigate: string,\n        { popupName, popupWindowAttributes, popupWindowParent }: PopupParams\n    ): Window | null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = popupWindowParent.screenLeft\n            ? popupWindowParent.screenLeft\n            : popupWindowParent.screenX;\n        const winTop = popupWindowParent.screenTop\n            ? popupWindowParent.screenTop\n            : popupWindowParent.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth =\n            popupWindowParent.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight =\n            popupWindowParent.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\n                \"Default popup window width used. Window width not configured or invalid.\"\n            );\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\n                \"Default popup window height used. Window height not configured or invalid.\"\n            );\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\n                \"Default popup window top position used. Window top not configured or invalid.\"\n            );\n            top = Math.max(\n                0,\n                winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop\n            );\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\n                \"Default popup window left position used. Window left not configured or invalid.\"\n            );\n            left = Math.max(\n                0,\n                winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft\n            );\n        }\n\n        return popupWindowParent.open(\n            urlNavigate,\n            popupName,\n            `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`\n        );\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow: Window, popupWindowParent: Window): void {\n        // Close window.\n        popupWindow.close();\n\n        // Remove window unload function\n        popupWindowParent.removeEventListener(\n            \"beforeunload\",\n            this.unloadWindow\n        );\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes: Array<string>, authority: string): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${\n            this.config.auth.clientId\n        }.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    UrlString,\n    AuthError,\n    ServerTelemetryManager,\n    Constants,\n    AuthorizeResponse,\n    ICrypto,\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    ProtocolMode,\n    invokeAsync,\n    ServerResponseType,\n    UrlUtils,\n    InProgressPerformanceEvent,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\nimport {\n    ApiId,\n    INTERACTION_TYPE,\n    InteractionType,\n    TemporaryCacheKeys,\n} from \"../utils/BrowserConstants.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport { EventType } from \"../event/EventType.js\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { EventError } from \"../event/EventMessage.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport * as ResponseHandler from \"../response/ResponseHandler.js\";\nimport * as Authorize from \"../protocol/Authorize.js\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator.js\";\nimport { isPlatformAuthAllowed } from \"../broker/nativeBroker/PlatformAuthProvider.js\";\nimport { generateEarKey } from \"../crypto/BrowserCrypto.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\nfunction getNavigationType(): NavigationTimingType | undefined {\n    if (\n        typeof window === \"undefined\" ||\n        typeof window.performance === \"undefined\" ||\n        typeof window.performance.getEntriesByType !== \"function\"\n    ) {\n        return undefined;\n    }\n\n    const navigationEntries = window.performance.getEntriesByType(\"navigation\");\n    const navigation = navigationEntries.length\n        ? (navigationEntries[0] as PerformanceNavigationTiming)\n        : undefined;\n    return navigation?.type;\n}\n\nexport class RedirectClient extends StandardInteractionClient {\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        platformAuthHandler?: IPlatformAuthHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            platformAuthHandler,\n            correlationId\n        );\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        const validRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, InteractionType.Redirect);\n\n        validRequest.platformBroker = isPlatformAuthAllowed(\n            this.config,\n            this.logger,\n            this.platformAuthProvider,\n            request.authenticationScheme\n        );\n\n        const handleBackButton = (event: PageTransitionEvent) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\n                    \"Page was restored from back/forward cache. Clearing temporary cache.\"\n                );\n                this.browserStorage.resetRequestCache();\n                this.eventHandler.emitEvent(\n                    EventType.RESTORE_FROM_BFCACHE,\n                    InteractionType.Redirect\n                );\n            }\n        };\n\n        const redirectStartPage = this.getRedirectStartPage(\n            request.redirectStartPage\n        );\n        this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n        // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n        this.browserStorage.setTemporaryCache(\n            TemporaryCacheKeys.ORIGIN_URI,\n            redirectStartPage,\n            true\n        );\n\n        // Clear temporary cache if the back button is clicked during the redirect flow.\n        window.addEventListener(\"pageshow\", handleBackButton);\n\n        try {\n            if (this.config.auth.protocolMode === ProtocolMode.EAR) {\n                await this.executeEarFlow(validRequest);\n            } else {\n                await this.executeCodeFlow(\n                    validRequest,\n                    request.onRedirectNavigate\n                );\n            }\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            throw e;\n        }\n    }\n\n    /**\n     * Executes auth code + PKCE flow\n     * @param request\n     * @returns\n     */\n    async executeCodeFlow(\n        request: CommonAuthorizationUrlRequest,\n        onRedirectNavigate?: (url: string) => boolean | void\n    ): Promise<void> {\n        const correlationId = request.correlationId;\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenRedirect\n        );\n\n        const pkceCodes = await invokeAsync(\n            generatePkceCodes,\n            PerformanceEvents.GeneratePkceCodes,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(this.performanceClient, this.logger, correlationId);\n\n        const redirectRequest = {\n            ...request,\n            codeChallenge: pkceCodes.challenge,\n        };\n\n        this.browserStorage.cacheAuthorizeRequest(\n            redirectRequest,\n            pkceCodes.verifier\n        );\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )({\n                serverTelemetryManager,\n                requestAuthority: redirectRequest.authority,\n                requestAzureCloudOptions: redirectRequest.azureCloudOptions,\n                requestExtraQueryParameters:\n                    redirectRequest.extraQueryParameters,\n                account: redirectRequest.account,\n            });\n\n            // Create acquire token url.\n            const navigateUrl = await invokeAsync(\n                Authorize.getAuthCodeRequestUrl,\n                PerformanceEvents.GetAuthCodeUrl,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                this.config,\n                authClient.authority,\n                redirectRequest,\n                this.logger,\n                this.performanceClient\n            );\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await this.initiateAuthRequest(\n                navigateUrl,\n                onRedirectNavigate\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Executes EAR flow\n     * @param request\n     */\n    async executeEarFlow(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<void> {\n        const correlationId = request.correlationId;\n        // Get the frame handle for the silent request\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )({\n            requestAuthority: request.authority,\n            requestAzureCloudOptions: request.azureCloudOptions,\n            requestExtraQueryParameters: request.extraQueryParameters,\n            account: request.account,\n        });\n\n        const earJwk = await invokeAsync(\n            generateEarKey,\n            PerformanceEvents.GenerateEarKey,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )();\n        const redirectRequest = {\n            ...request,\n            earJwk: earJwk,\n        };\n        this.browserStorage.cacheAuthorizeRequest(redirectRequest);\n\n        const form = await Authorize.getEARForm(\n            document,\n            this.config,\n            discoveredAuthority,\n            redirectRequest,\n            this.logger,\n            this.performanceClient\n        );\n        form.submit();\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash {string} url hash\n     * @param parentMeasurement {InProgressPerformanceEvent} parent measurement\n     */\n    async handleRedirectPromise(\n        hash: string = \"\",\n        request: CommonAuthorizationUrlRequest,\n        pkceVerifier: string,\n        parentMeasurement: InProgressPerformanceEvent\n    ): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.handleRedirectPromise\n        );\n\n        try {\n            const [serverParams, responseString] = this.getRedirectResponse(\n                hash || \"\"\n            );\n            if (!serverParams) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\n                    \"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\"\n                );\n                this.browserStorage.resetRequestCache();\n\n                // Do not instrument \"no_server_response\" if user clicked back button\n                if (getNavigationType() !== \"back_forward\") {\n                    parentMeasurement.event.errorCode = \"no_server_response\";\n                } else {\n                    this.logger.verbose(\n                        \"Back navigation event detected. Muting no_server_response error\"\n                    );\n                }\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl =\n                this.browserStorage.getTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    true\n                ) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized =\n                UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(\n                window.location.href\n            );\n\n            if (\n                loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl\n            ) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\n                    \"Current page is loginRequestUrl, handling response\"\n                );\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                const handleHashResult = await this.handleResponse(\n                    serverParams,\n                    request,\n                    pkceVerifier,\n                    serverTelemetryManager\n                );\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\n                    \"NavigateToLoginRequestUrl set to false, handling response\"\n                );\n                return await this.handleResponse(\n                    serverParams,\n                    request,\n                    pkceVerifier,\n                    serverTelemetryManager\n                );\n            } else if (\n                !BrowserUtils.isInIframe() ||\n                this.config.system.allowRedirectInIframe\n            ) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.URL_HASH,\n                    responseString,\n                    true\n                );\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(\n                        TemporaryCacheKeys.ORIGIN_URI,\n                        homepage,\n                        true\n                    );\n                    this.logger.warning(\n                        \"Unable to get valid login request url from cache, redirecting to home page\"\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            homepage,\n                            navigationOptions\n                        );\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(\n                        `Navigating to loginRequestUrl: ${loginRequestUrl}`\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            loginRequestUrl,\n                            navigationOptions\n                        );\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return await this.handleResponse(\n                        serverParams,\n                        request,\n                        pkceVerifier,\n                        serverTelemetryManager\n                    );\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    protected getRedirectResponse(\n        userProvidedResponse: string\n    ): [AuthorizeResponse | null, string] {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        let responseString = userProvidedResponse;\n        if (!responseString) {\n            if (\n                this.config.auth.OIDCOptions.serverResponseType ===\n                ServerResponseType.QUERY\n            ) {\n                responseString = window.location.search;\n            } else {\n                responseString = window.location.hash;\n            }\n        }\n        let response = UrlUtils.getDeserializedResponse(responseString);\n\n        if (response) {\n            try {\n                ResponseHandler.validateInteractionType(\n                    response,\n                    this.browserCrypto,\n                    InteractionType.Redirect\n                );\n            } catch (e) {\n                if (e instanceof AuthError) {\n                    this.logger.error(\n                        `Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`\n                    );\n                }\n                return [null, \"\"];\n            }\n\n            BrowserUtils.clearHash(window);\n            this.logger.verbose(\n                \"Hash contains known properties, returning response hash\"\n            );\n            return [response, responseString];\n        }\n\n        const cachedHash = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.URL_HASH,\n            true\n        );\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH)\n        );\n\n        if (cachedHash) {\n            response = UrlUtils.getDeserializedResponse(cachedHash);\n            if (response) {\n                this.logger.verbose(\n                    \"Hash does not contain known properties, returning cached hash\"\n                );\n                return [response, cachedHash];\n            }\n        }\n\n        return [null, \"\"];\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    protected async handleResponse(\n        serverParams: AuthorizeResponse,\n        request: CommonAuthorizationUrlRequest,\n        codeVerifier: string,\n        serverTelemetryManager: ServerTelemetryManager\n    ): Promise<AuthenticationResult> {\n        const state = serverParams.state;\n        if (!state) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n        }\n\n        if (serverParams.ear_jwe) {\n            const discoveredAuthority = await invokeAsync(\n                this.getDiscoveredAuthority.bind(this),\n                PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )({\n                requestAuthority: request.authority,\n                requestAzureCloudOptions: request.azureCloudOptions,\n                requestExtraQueryParameters: request.extraQueryParameters,\n                account: request.account,\n            });\n            return invokeAsync(\n                Authorize.handleResponseEAR,\n                PerformanceEvents.HandleResponseEar,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                request,\n                serverParams,\n                ApiId.acquireTokenRedirect,\n                this.config,\n                discoveredAuthority,\n                this.browserStorage,\n                this.nativeStorage,\n                this.eventHandler,\n                this.logger,\n                this.performanceClient,\n                this.platformAuthProvider\n            );\n        }\n\n        const authClient = await invokeAsync(\n            this.createAuthCodeClient.bind(this),\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )({ serverTelemetryManager, requestAuthority: request.authority });\n        return invokeAsync(\n            Authorize.handleResponseCode,\n            PerformanceEvents.HandleResponseCode,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            request,\n            serverParams,\n            codeVerifier,\n            ApiId.acquireTokenRedirect,\n            this.config,\n            authClient,\n            this.browserStorage,\n            this.nativeStorage,\n            this.eventHandler,\n            this.logger,\n            this.performanceClient,\n            this.platformAuthProvider\n        );\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     * @param onRedirectNavigateRequest - onRedirectNavigate callback provided on the request\n     */\n    async initiateAuthRequest(\n        requestUrl: string,\n        onRedirectNavigateRequest?: (url: string) => boolean | void\n    ): Promise<void> {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (requestUrl) {\n            this.logger.infoPii(\n                `RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`\n            );\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n\n            const onRedirectNavigate =\n                onRedirectNavigateRequest ||\n                this.config.auth.onRedirectNavigate;\n\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof onRedirectNavigate === \"function\") {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\"\n                );\n                const navigate = onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\"\n                    );\n                    await this.navigationClient.navigateExternal(\n                        requestUrl,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\"\n                    );\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\"\n                );\n                await this.navigationClient.navigateExternal(\n                    requestUrl,\n                    navigationOptions\n                );\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.info(\n                \"RedirectHandler.initiateAuthRequest: Navigate url is empty\"\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logout\n        );\n\n        try {\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_START,\n                InteractionType.Redirect,\n                logoutRequest\n            );\n\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n\n            const authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )({\n                serverTelemetryManager,\n                requestAuthority: logoutRequest && logoutRequest.authority,\n                requestExtraQueryParameters:\n                    logoutRequest?.extraQueryParameters,\n                account: (logoutRequest && logoutRequest.account) || undefined,\n            });\n\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                } catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        void this.browserStorage.removeAccount(\n                            validLogoutRequest.account?.homeAccountId\n                        );\n\n                        this.eventHandler.emitEvent(\n                            EventType.LOGOUT_SUCCESS,\n                            InteractionType.Redirect,\n                            validLogoutRequest\n                        );\n\n                        return;\n                    }\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string =\n                authClient.getLogoutUri(validLogoutRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Redirect,\n                validLogoutRequest\n            );\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (\n                logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\"\n            ) {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate did not return false, navigating\"\n                    );\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(\n                            true,\n                            INTERACTION_TYPE.SIGNOUT\n                        );\n                    }\n                    await this.navigationClient.navigateExternal(\n                        logoutUri,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate returned false, stopping navigation\"\n                    );\n                }\n            } else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(\n                        true,\n                        INTERACTION_TYPE.SIGNOUT\n                    );\n                }\n                await this.navigationClient.navigateExternal(\n                    logoutUri,\n                    navigationOptions\n                );\n                return;\n            }\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Redirect,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Redirect\n        );\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(\n            redirectStartPage,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    invoke,\n    ServerResponseType,\n    Authority,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport {\n    BrowserConfiguration,\n    DEFAULT_IFRAME_TIMEOUT_MS,\n} from \"../config/Configuration.js\";\nimport { getEARForm } from \"../protocol/Authorize.js\";\n\n/**\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\n * @param urlNavigate\n * @param userRequestScopes\n */\nexport async function initiateCodeRequest(\n    requestUrl: string,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string,\n    navigateFrameWait?: number\n): Promise<HTMLIFrameElement> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\n        correlationId\n    );\n\n    if (!requestUrl) {\n        // Throw error if request URL is empty.\n        logger.info(\"Navigate url is empty\");\n        throw createBrowserAuthError(BrowserAuthErrorCodes.emptyNavigateUri);\n    }\n    if (navigateFrameWait) {\n        return invokeAsync(\n            loadFrame,\n            PerformanceEvents.SilentHandlerLoadFrame,\n            logger,\n            performanceClient,\n            correlationId\n        )(requestUrl, navigateFrameWait, performanceClient, correlationId);\n    }\n    return invoke(\n        loadFrameSync,\n        PerformanceEvents.SilentHandlerLoadFrameSync,\n        logger,\n        performanceClient,\n        correlationId\n    )(requestUrl);\n}\n\nexport async function initiateEarRequest(\n    config: BrowserConfiguration,\n    authority: Authority,\n    request: CommonAuthorizationUrlRequest,\n    logger: Logger,\n    performanceClient: IPerformanceClient\n): Promise<HTMLIFrameElement> {\n    const frame = createHiddenIframe();\n    if (!frame.contentDocument) {\n        throw \"No document associated with iframe!\";\n    }\n    const form = await getEARForm(\n        frame.contentDocument,\n        config,\n        authority,\n        request,\n        logger,\n        performanceClient\n    );\n    form.submit();\n    return frame;\n}\n\n/**\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n * @param iframe\n * @param timeout\n */\nexport async function monitorIframeForHash(\n    iframe: HTMLIFrameElement,\n    timeout: number,\n    pollIntervalMilliseconds: number,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string,\n    responseType: ServerResponseType\n): Promise<string> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\n        correlationId\n    );\n\n    return new Promise<string>((resolve, reject) => {\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n            logger.warning(\n                `system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`\n            );\n        }\n\n        /*\n         * Polling for iframes can be purely timing based,\n         * since we don't need to account for interaction.\n         */\n        const timeoutId = window.setTimeout(() => {\n            window.clearInterval(intervalId);\n            reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.monitorWindowTimeout\n                )\n            );\n        }, timeout);\n\n        const intervalId = window.setInterval(() => {\n            let href: string = \"\";\n            const contentWindow = iframe.contentWindow;\n            try {\n                /*\n                 * Will throw if cross origin,\n                 * which should be caught and ignored\n                 * since we need the interval to keep running while on STS UI.\n                 */\n                href = contentWindow ? contentWindow.location.href : \"\";\n            } catch (e) {}\n\n            if (!href || href === \"about:blank\") {\n                return;\n            }\n\n            let responseString = \"\";\n            if (contentWindow) {\n                if (responseType === ServerResponseType.QUERY) {\n                    responseString = contentWindow.location.search;\n                } else {\n                    responseString = contentWindow.location.hash;\n                }\n            }\n            window.clearTimeout(timeoutId);\n            window.clearInterval(intervalId);\n            resolve(responseString);\n        }, pollIntervalMilliseconds);\n    }).finally(() => {\n        invoke(\n            removeHiddenIframe,\n            PerformanceEvents.RemoveHiddenIframe,\n            logger,\n            performanceClient,\n            correlationId\n        )(iframe);\n    });\n}\n\n/**\n * @hidden\n * Loads iframe with authorization endpoint URL\n * @ignore\n * @deprecated\n */\nfunction loadFrame(\n    urlNavigate: string,\n    navigateFrameWait: number,\n    performanceClient: IPerformanceClient,\n    correlationId: string\n): Promise<HTMLIFrameElement> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerLoadFrame,\n        correlationId\n    );\n\n    /*\n     * This trick overcomes iframe navigation in IE\n     * IE does not load the page consistently in iframe\n     */\n\n    return new Promise((resolve, reject) => {\n        const frameHandle = createHiddenIframe();\n\n        window.setTimeout(() => {\n            if (!frameHandle) {\n                reject(\"Unable to load iframe\");\n                return;\n            }\n\n            frameHandle.src = urlNavigate;\n\n            resolve(frameHandle);\n        }, navigateFrameWait);\n    });\n}\n/**\n * @hidden\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n * @param urlNavigate\n * @param frameName\n * @param logger\n */\nfunction loadFrameSync(urlNavigate: string): HTMLIFrameElement {\n    const frameHandle = createHiddenIframe();\n\n    frameHandle.src = urlNavigate;\n\n    return frameHandle;\n}\n\n/**\n * @hidden\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\n * @ignore\n */\nfunction createHiddenIframe(): HTMLIFrameElement {\n    const authFrame = document.createElement(\"iframe\");\n\n    authFrame.className = \"msalSilentIframe\";\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\n        \"sandbox\",\n        \"allow-scripts allow-same-origin allow-forms\"\n    );\n    document.body.appendChild(authFrame);\n\n    return authFrame;\n}\n\n/**\n * @hidden\n * Removes a hidden iframe from the page.\n * @ignore\n */\nfunction removeHiddenIframe(iframe: HTMLIFrameElement): void {\n    if (document.body === iframe.parentNode) {\n        document.body.removeChild(iframe);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    PromptValue,\n    AuthorizationCodeClient,\n    AuthError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    invoke,\n    ProtocolMode,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserConstants,\n} from \"../utils/BrowserConstants.js\";\nimport {\n    initiateCodeRequest,\n    initiateEarRequest,\n    monitorIframeForHash,\n} from \"../interaction_handler/SilentHandler.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\nimport * as ResponseHandler from \"../response/ResponseHandler.js\";\nimport * as Authorize from \"../protocol/Authorize.js\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator.js\";\nimport { isPlatformAuthAllowed } from \"../broker/nativeBroker/PlatformAuthProvider.js\";\nimport { generateEarKey } from \"../crypto/BrowserCrypto.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    protected apiId: ApiId;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        platformAuthProvider?: IPlatformAuthHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            platformAuthProvider,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(\n        request: SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            request.correlationId\n        );\n        // Check that we have some SSO data\n        if (\n            !request.loginHint &&\n            !request.sid &&\n            (!request.account || !request.account.username)\n        ) {\n            this.logger.warning(\n                \"No user hint provided. The authorization server may need more information to complete this request.\"\n            );\n        }\n\n        // Check the prompt value\n        const inputRequest = { ...request };\n        if (inputRequest.prompt) {\n            if (\n                inputRequest.prompt !== PromptValue.NONE &&\n                inputRequest.prompt !== PromptValue.NO_SESSION\n            ) {\n                this.logger.warning(\n                    `SilentIframeClient. Replacing invalid prompt ${inputRequest.prompt} with ${PromptValue.NONE}`\n                );\n                inputRequest.prompt = PromptValue.NONE;\n            }\n        } else {\n            inputRequest.prompt = PromptValue.NONE;\n        }\n\n        // Create silent request\n        const silentRequest: CommonAuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(inputRequest, InteractionType.Silent);\n        silentRequest.platformBroker = isPlatformAuthAllowed(\n            this.config,\n            this.logger,\n            this.platformAuthProvider,\n            silentRequest.authenticationScheme\n        );\n        BrowserUtils.preconnect(silentRequest.authority);\n\n        if (this.config.auth.protocolMode === ProtocolMode.EAR) {\n            return this.executeEarFlow(silentRequest);\n        } else {\n            return this.executeCodeFlow(silentRequest);\n        }\n    }\n\n    /**\n     * Executes auth code + PKCE flow\n     * @param request\n     * @returns\n     */\n    async executeCodeFlow(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        let authClient: AuthorizationCodeClient | undefined;\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Initialize the client\n            authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )({\n                serverTelemetryManager,\n                requestAuthority: request.authority,\n                requestAzureCloudOptions: request.azureCloudOptions,\n                requestExtraQueryParameters: request.extraQueryParameters,\n                account: request.account,\n            });\n\n            return await invokeAsync(\n                this.silentTokenHelper.bind(this),\n                PerformanceEvents.SilentIframeClientTokenHelper,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authClient, request);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n\n            if (\n                !authClient ||\n                !(e instanceof AuthError) ||\n                e.errorCode !== BrowserConstants.INVALID_GRANT_ERROR\n            ) {\n                throw e;\n            }\n\n            this.performanceClient.addFields(\n                {\n                    retryError: e.errorCode,\n                },\n                this.correlationId\n            );\n\n            return await invokeAsync(\n                this.silentTokenHelper.bind(this),\n                PerformanceEvents.SilentIframeClientTokenHelper,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(authClient, request);\n        }\n    }\n\n    /**\n     * Executes EAR flow\n     * @param request\n     */\n    async executeEarFlow(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = request.correlationId;\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )({\n            requestAuthority: request.authority,\n            requestAzureCloudOptions: request.azureCloudOptions,\n            requestExtraQueryParameters: request.extraQueryParameters,\n            account: request.account,\n        });\n\n        const earJwk = await invokeAsync(\n            generateEarKey,\n            PerformanceEvents.GenerateEarKey,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )();\n        const silentRequest = {\n            ...request,\n            earJwk: earJwk,\n        };\n        const msalFrame = await invokeAsync(\n            initiateEarRequest,\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            this.config,\n            discoveredAuthority,\n            silentRequest,\n            this.logger,\n            this.performanceClient\n        );\n\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const responseString = await invokeAsync(\n            monitorIframeForHash,\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            msalFrame,\n            this.config.system.iframeHashTimeout,\n            this.config.system.pollIntervalMilliseconds,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            responseType\n        );\n\n        const serverParams = invoke(\n            ResponseHandler.deserializeResponse,\n            PerformanceEvents.DeserializeResponse,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(responseString, responseType, this.logger);\n\n        return invokeAsync(\n            Authorize.handleResponseEAR,\n            PerformanceEvents.HandleResponseEar,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            silentRequest,\n            serverParams,\n            this.apiId,\n            this.config,\n            discoveredAuthority,\n            this.browserStorage,\n            this.nativeStorage,\n            this.eventHandler,\n            this.logger,\n            this.performanceClient,\n            this.platformAuthProvider\n        );\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    protected async silentTokenHelper(\n        authClient: AuthorizationCodeClient,\n        request: CommonAuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = request.correlationId;\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientTokenHelper,\n            correlationId\n        );\n        const pkceCodes = await invokeAsync(\n            generatePkceCodes,\n            PerformanceEvents.GeneratePkceCodes,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(this.performanceClient, this.logger, correlationId);\n\n        const silentRequest = {\n            ...request,\n            codeChallenge: pkceCodes.challenge,\n        };\n        // Create authorize request url\n        const navigateUrl = await invokeAsync(\n            Authorize.getAuthCodeRequestUrl,\n            PerformanceEvents.GetAuthCodeUrl,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            this.config,\n            authClient.authority,\n            silentRequest,\n            this.logger,\n            this.performanceClient\n        );\n\n        // Get the frame handle for the silent request\n        const msalFrame = await invokeAsync(\n            initiateCodeRequest,\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            navigateUrl,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            this.config.system.navigateFrameWait\n        );\n\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const responseString = await invokeAsync(\n            monitorIframeForHash,\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            msalFrame,\n            this.config.system.iframeHashTimeout,\n            this.config.system.pollIntervalMilliseconds,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            responseType\n        );\n        const serverParams = invoke(\n            ResponseHandler.deserializeResponse,\n            PerformanceEvents.DeserializeResponse,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(responseString, responseType, this.logger);\n\n        return invokeAsync(\n            Authorize.handleResponseCode,\n            PerformanceEvents.HandleResponseCode,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            request,\n            serverParams,\n            pkceCodes.verifier,\n            this.apiId,\n            this.config,\n            authClient,\n            this.browserStorage,\n            this.nativeStorage,\n            this.eventHandler,\n            this.logger,\n            this.performanceClient,\n            this.platformAuthProvider\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration.js\";\nimport { BaseClient } from \"./BaseClient.js\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest.js\";\nimport { Authority } from \"../authority/Authority.js\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\nimport * as RequestParameterBuilder from \"../request/RequestParameterBuilder.js\";\nimport * as UrlUtils from \"../utils/UrlUtils.js\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    Errors,\n    HeaderNames,\n} from \"../utils/Constants.js\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\nimport { ResponseHandler } from \"../response/ResponseHandler.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator.js\";\nimport { StringUtils } from \"../utils/StringUtils.js\";\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest.js\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError.js\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError.js\";\nimport { ServerError } from \"../error/ServerError.js\";\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\nimport { UrlString } from \"../url/UrlString.js\";\nimport { CcsCredentialType } from \"../account/CcsCredential.js\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo.js\";\nimport {\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"../error/InteractionRequiredAuthError.js\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\nimport { invoke, invokeAsync } from \"../utils/FunctionWrappers.js\";\nimport { generateCredentialKey } from \"../cache/utils/CacheHelpers.js\";\nimport { ClientAssertion } from \"../account/ClientCredentials.js\";\nimport { getClientAssertion } from \"../utils/ClientAssertionUtils.js\";\nimport { getRequestThumbprint } from \"../network/RequestThumbprint.js\";\n\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\n\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nexport class RefreshTokenClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n    public async acquireToken(\n        request: CommonRefreshTokenRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireToken,\n            request.correlationId\n        );\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, this.authority);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true,\n            request.forceCache,\n            requestId\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.tokenRequestEmpty\n            );\n        }\n\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            request.correlationId\n        );\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(\n            request.account.environment\n        );\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return await invokeAsync(\n                    this.acquireTokenWithCachedRefreshToken.bind(this),\n                    PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, true);\n            } catch (e) {\n                const noFamilyRTInCache =\n                    e instanceof InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        InteractionRequiredAuthErrorCodes.noTokensFound;\n                const clientMismatchErrorWithFamilyRT =\n                    e instanceof ServerError &&\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return invokeAsync(\n                        this.acquireTokenWithCachedRefreshToken.bind(this),\n                        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        request.correlationId\n                    )(request, false);\n                    // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return invokeAsync(\n            this.acquireTokenWithCachedRefreshToken.bind(this),\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(\n        request: CommonSilentFlowRequest,\n        foci: boolean\n    ) {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            request.correlationId\n        );\n\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = invoke(\n            this.cacheManager.getRefreshToken.bind(this.cacheManager),\n            PerformanceEvents.CacheManagerGetRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            request.account,\n            foci,\n            undefined,\n            this.performanceClient,\n            request.correlationId\n        );\n\n        if (!refreshToken) {\n            throw createInteractionRequiredAuthError(\n                InteractionRequiredAuthErrorCodes.noTokensFound\n            );\n        }\n\n        if (\n            refreshToken.expiresOn &&\n            TimeUtils.isTokenExpired(\n                refreshToken.expiresOn,\n                request.refreshTokenExpirationOffsetSeconds ||\n                    DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS\n            )\n        ) {\n            this.performanceClient?.addFields(\n                { rtExpiresOnMs: Number(refreshToken.expiresOn) },\n                request.correlationId\n            );\n            throw createInteractionRequiredAuthError(\n                InteractionRequiredAuthErrorCodes.refreshTokenExpired\n            );\n        }\n        // attach cached RT size to the current measurement\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme:\n                request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n\n        try {\n            return await invokeAsync(\n                this.acquireToken.bind(this),\n                PerformanceEvents.RefreshTokenClientAcquireToken,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(refreshTokenRequest);\n        } catch (e) {\n            if (e instanceof InteractionRequiredAuthError) {\n                this.performanceClient?.addFields(\n                    { rtExpiresOnMs: Number(refreshToken.expiresOn) },\n                    request.correlationId\n                );\n\n                if (e.subError === InteractionRequiredAuthErrorCodes.badToken) {\n                    // Remove bad refresh token from cache\n                    this.logger.verbose(\n                        \"acquireTokenWithRefreshToken: bad refresh token, removing from cache\"\n                    );\n                    const badRefreshTokenKey =\n                        generateCredentialKey(refreshToken);\n                    this.cacheManager.removeRefreshToken(badRefreshTokenKey);\n                }\n            }\n\n            throw e;\n        }\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(\n        request: CommonRefreshTokenRequest,\n        authority: Authority\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            request.ccsCredential\n        );\n\n        const thumbprint = getRequestThumbprint(\n            this.config.authOptions.clientId,\n            request\n        );\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            endpoint,\n            requestBody,\n            headers,\n            thumbprint,\n            request.correlationId,\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint\n        );\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonRefreshTokenRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const parameters = new Map<string, string>();\n\n        RequestParameterBuilder.addClientId(\n            parameters,\n            request.embeddedClientId ||\n                request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        if (request.redirectUri) {\n            RequestParameterBuilder.addRedirectUri(\n                parameters,\n                request.redirectUri\n            );\n        }\n\n        RequestParameterBuilder.addScopes(\n            parameters,\n            request.scopes,\n            true,\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes\n        );\n\n        RequestParameterBuilder.addGrantType(\n            parameters,\n            GrantType.REFRESH_TOKEN_GRANT\n        );\n\n        RequestParameterBuilder.addClientInfo(parameters);\n\n        RequestParameterBuilder.addLibraryInfo(\n            parameters,\n            this.config.libraryInfo\n        );\n        RequestParameterBuilder.addApplicationTelemetry(\n            parameters,\n            this.config.telemetry.application\n        );\n        RequestParameterBuilder.addThrottling(parameters);\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            RequestParameterBuilder.addServerTelemetry(\n                parameters,\n                this.serverTelemetryManager\n            );\n        }\n\n        RequestParameterBuilder.addRefreshToken(\n            parameters,\n            request.refreshToken\n        );\n\n        if (this.config.clientCredentials.clientSecret) {\n            RequestParameterBuilder.addClientSecret(\n                parameters,\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion: ClientAssertion =\n                this.config.clientCredentials.clientAssertion;\n\n            RequestParameterBuilder.addClientAssertion(\n                parameters,\n                await getClientAssertion(\n                    clientAssertion.assertion,\n                    this.config.authOptions.clientId,\n                    request.resourceRequestUri\n                )\n            );\n            RequestParameterBuilder.addClientAssertionType(\n                parameters,\n                clientAssertion.assertionType\n            );\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, this.logger);\n\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            } else {\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n            }\n\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            RequestParameterBuilder.addPopToken(parameters, reqCnfData);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                RequestParameterBuilder.addSshJwk(parameters, request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            RequestParameterBuilder.addClaims(\n                parameters,\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (\n            this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential\n        ) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.ccsCredential.credential\n                        );\n                        RequestParameterBuilder.addCcsOid(\n                            parameters,\n                            clientInfo\n                        );\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    RequestParameterBuilder.addCcsUpn(\n                        parameters,\n                        request.ccsCredential.credential\n                    );\n                    break;\n            }\n        }\n\n        if (request.embeddedClientId) {\n            RequestParameterBuilder.addBrokerParameters(\n                parameters,\n                this.config.authOptions.clientId,\n                this.config.authOptions.redirectUri\n            );\n        }\n\n        if (request.tokenBodyParameters) {\n            RequestParameterBuilder.addExtraQueryParameters(\n                parameters,\n                request.tokenBodyParameters\n            );\n        }\n\n        RequestParameterBuilder.instrumentBrokerParams(\n            parameters,\n            request.correlationId,\n            this.performanceClient\n        );\n        return UrlUtils.mapToQueryString(parameters);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\nimport {\n    CommonSilentFlowRequest,\n    ServerTelemetryManager,\n    RefreshTokenClient,\n    AuthError,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n    AccountInfo,\n    StringDict,\n} from \"@azure/msal-common/browser\";\nimport { ApiId } from \"../utils/BrowserConstants.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { initializeBaseRequest } from \"../request/RequestHelpers.js\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentRefreshClientAcquireToken,\n            request.correlationId\n        );\n\n        const baseRequest = await invokeAsync(\n            initializeBaseRequest,\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, this.config, this.performanceClient, this.logger);\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...baseRequest,\n        };\n\n        if (request.redirectUri) {\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\n            silentRequest.redirectUri = this.getRedirectUri(\n                request.redirectUri\n            );\n        }\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const refreshTokenClient = await this.createRefreshTokenClient({\n            serverTelemetryManager,\n            authorityUrl: silentRequest.authority,\n            azureCloudOptions: silentRequest.azureCloudOptions,\n            account: silentRequest.account,\n        });\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return invokeAsync(\n            refreshTokenClient.acquireTokenByRefreshToken.bind(\n                refreshTokenClient\n            ),\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(silentRequest).catch((e: AuthError) => {\n            (e as AuthError).setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }) as Promise<AuthenticationResult>;\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param params {\n     *         serverTelemetryManager: ServerTelemetryManager;\n     *         authorityUrl?: string;\n     *         azureCloudOptions?: AzureCloudOptions;\n     *         extraQueryParams?: StringDict;\n     *         account?: AccountInfo;\n     *        }\n     */\n    protected async createRefreshTokenClient(params: {\n        serverTelemetryManager: ServerTelemetryManager;\n        authorityUrl?: string;\n        azureCloudOptions?: AzureCloudOptions;\n        extraQueryParameters?: StringDict;\n        account?: AccountInfo;\n    }): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )({\n            serverTelemetryManager: params.serverTelemetryManager,\n            requestAuthority: params.authorityUrl,\n            requestAzureCloudOptions: params.azureCloudOptions,\n            requestExtraQueryParameters: params.extraQueryParameters,\n            account: params.account,\n        });\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccessTokenEntity,\n    ICrypto,\n    IdTokenEntity,\n    Logger,\n    ScopeSet,\n    Authority,\n    AuthorityOptions,\n    ExternalTokenResponse,\n    AccountEntity,\n    AuthToken,\n    RefreshTokenEntity,\n    CacheRecord,\n    TokenClaims,\n    CacheHelpers,\n    buildAccountToCache,\n    TimeUtils,\n} from \"@azure/msal-common/browser\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport type { SilentRequest } from \"../request/SilentRequest.js\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager.js\";\nimport type { ITokenCache } from \"./ITokenCache.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport type { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { base64Decode } from \"../encode/Base64Decode.js\";\nimport * as BrowserCrypto from \"../crypto/BrowserCrypto.js\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string;\n    expiresOn?: number;\n    extendedExpiresOn?: number;\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(\n        configuration: BrowserConfiguration,\n        storage: BrowserCacheManager,\n        logger: Logger,\n        cryptoObj: ICrypto\n    ) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n\n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    async loadExternalTokens(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        options: LoadTokenOptions\n    ): Promise<AuthenticationResult> {\n        if (!this.isBrowserEnvironment) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nonBrowserEnvironment\n            );\n        }\n\n        const correlationId =\n            request.correlationId || BrowserCrypto.createNewGuid();\n\n        const idTokenClaims = response.id_token\n            ? AuthToken.extractTokenClaims(response.id_token, base64Decode)\n            : undefined;\n\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache:\n                this.config.auth.skipAuthorityMetadataCache,\n        };\n        const authority = request.authority\n            ? new Authority(\n                  Authority.generateAuthority(\n                      request.authority,\n                      request.azureCloudOptions\n                  ),\n                  this.config.system.networkClient,\n                  this.storage,\n                  authorityOptions,\n                  this.logger,\n                  request.correlationId || BrowserCrypto.createNewGuid()\n              )\n            : undefined;\n\n        const cacheRecordAccount: AccountEntity = await this.loadAccount(\n            request,\n            options.clientInfo || response.client_info || \"\",\n            correlationId,\n            idTokenClaims,\n            authority\n        );\n\n        const idToken = await this.loadIdToken(\n            response,\n            cacheRecordAccount.homeAccountId,\n            cacheRecordAccount.environment,\n            cacheRecordAccount.realm,\n            correlationId\n        );\n\n        const accessToken = await this.loadAccessToken(\n            request,\n            response,\n            cacheRecordAccount.homeAccountId,\n            cacheRecordAccount.environment,\n            cacheRecordAccount.realm,\n            options,\n            correlationId\n        );\n\n        const refreshToken = await this.loadRefreshToken(\n            response,\n            cacheRecordAccount.homeAccountId,\n            cacheRecordAccount.environment,\n            correlationId\n        );\n\n        return this.generateAuthenticationResult(\n            request,\n            {\n                account: cacheRecordAccount,\n                idToken,\n                accessToken,\n                refreshToken,\n            },\n            idTokenClaims,\n            authority\n        );\n    }\n\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    private async loadAccount(\n        request: SilentRequest,\n        clientInfo: string,\n        correlationId: string,\n        idTokenClaims?: TokenClaims,\n        authority?: Authority\n    ): Promise<AccountEntity> {\n        this.logger.verbose(\"TokenCache - loading account\");\n\n        if (request.account) {\n            const accountEntity = AccountEntity.createFromAccountInfo(\n                request.account\n            );\n            await this.storage.setAccount(accountEntity, correlationId);\n            return accountEntity;\n        } else if (!authority || (!clientInfo && !idTokenClaims)) {\n            this.logger.error(\n                \"TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead.\"\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const homeAccountId = AccountEntity.generateHomeAccountId(\n            clientInfo,\n            authority.authorityType,\n            this.logger,\n            this.cryptoObj,\n            idTokenClaims\n        );\n\n        const claimsTenantId = idTokenClaims?.tid;\n\n        const cachedAccount = buildAccountToCache(\n            this.storage,\n            authority,\n            homeAccountId,\n            base64Decode,\n            idTokenClaims,\n            clientInfo,\n            authority.hostnameAndPort,\n            claimsTenantId,\n            undefined, // authCodePayload\n            undefined, // nativeAccountId\n            this.logger\n        );\n\n        await this.storage.setAccount(cachedAccount, correlationId);\n        return cachedAccount;\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    private async loadIdToken(\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string,\n        correlationId: string\n    ): Promise<IdTokenEntity | null> {\n        if (!response.id_token) {\n            this.logger.verbose(\"TokenCache - no id token found in response\");\n            return null;\n        }\n\n        this.logger.verbose(\"TokenCache - loading id token\");\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\n            homeAccountId,\n            environment,\n            response.id_token,\n            this.config.auth.clientId,\n            tenantId\n        );\n\n        await this.storage.setIdTokenCredential(idTokenEntity, correlationId);\n        return idTokenEntity;\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    private async loadAccessToken(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string,\n        options: LoadTokenOptions,\n        correlationId: string\n    ): Promise<AccessTokenEntity | null> {\n        if (!response.access_token) {\n            this.logger.verbose(\n                \"TokenCache - no access token found in response\"\n            );\n            return null;\n        } else if (!response.expires_in) {\n            this.logger.error(\n                \"TokenCache - no expiration set on the access token. Cannot add it to the cache.\"\n            );\n            return null;\n        } else if (\n            !response.scope &&\n            (!request.scopes || !request.scopes.length)\n        ) {\n            this.logger.error(\n                \"TokenCache - scopes not specified in the request or response. Cannot add token to the cache.\"\n            );\n            return null;\n        }\n\n        this.logger.verbose(\"TokenCache - loading access token\");\n\n        const scopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : new ScopeSet(request.scopes);\n        const expiresOn =\n            options.expiresOn || response.expires_in + TimeUtils.nowSeconds();\n\n        const extendedExpiresOn =\n            options.extendedExpiresOn ||\n            (response.ext_expires_in || response.expires_in) +\n                TimeUtils.nowSeconds();\n\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\n            homeAccountId,\n            environment,\n            response.access_token,\n            this.config.auth.clientId,\n            tenantId,\n            scopes.printScopes(),\n            expiresOn,\n            extendedExpiresOn,\n            base64Decode\n        );\n\n        await this.storage.setAccessTokenCredential(\n            accessTokenEntity,\n            correlationId\n        );\n        return accessTokenEntity;\n    }\n\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    private async loadRefreshToken(\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        correlationId: string\n    ): Promise<RefreshTokenEntity | null> {\n        if (!response.refresh_token) {\n            this.logger.verbose(\n                \"TokenCache - no refresh token found in response\"\n            );\n            return null;\n        }\n\n        this.logger.verbose(\"TokenCache - loading refresh token\");\n        const refreshTokenEntity = CacheHelpers.createRefreshTokenEntity(\n            homeAccountId,\n            environment,\n            response.refresh_token,\n            this.config.auth.clientId,\n            response.foci,\n            undefined, // userAssertionHash\n            response.refresh_token_expires_in\n        );\n\n        await this.storage.setRefreshTokenCredential(\n            refreshTokenEntity,\n            correlationId\n        );\n        return refreshTokenEntity;\n    }\n\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    private generateAuthenticationResult(\n        request: SilentRequest,\n        cacheRecord: CacheRecord & { account: AccountEntity },\n        idTokenClaims?: TokenClaims,\n        authority?: Authority\n    ): AuthenticationResult {\n        let accessToken: string = \"\";\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            // Access token expiresOn stored in seconds, converting to Date for AuthenticationResult\n            expiresOn = TimeUtils.toDateFromSeconds(\n                cacheRecord.accessToken.expiresOn\n            );\n            extExpiresOn = TimeUtils.toDateFromSeconds(\n                cacheRecord.accessToken.extendedExpiresOn\n            );\n        }\n\n        const accountEntity = cacheRecord.account;\n\n        return {\n            authority: authority ? authority.canonicalAuthority : \"\",\n            uniqueId: cacheRecord.account.localAccountId,\n            tenantId: cacheRecord.account.realm,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: cacheRecord.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || \"\",\n            requestId: \"\",\n            extExpiresOn: extExpiresOn,\n            familyId: cacheRecord.refreshToken?.familyId || \"\",\n            tokenType: cacheRecord?.accessToken?.tokenType || \"\",\n            state: request.state || \"\",\n            cloudGraphHostName: accountEntity.cloudGraphHostName || \"\",\n            msGraphHost: accountEntity.msGraphHost || \"\",\n            fromNativeBroker: false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    ClientConfiguration,\n} from \"@azure/msal-common/browser\";\n\nexport class HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\n    constructor(config: ClientConfiguration) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    CommonAuthorizationCodeRequest,\n    AuthError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    CommonAuthorizationUrlRequest,\n} from \"@azure/msal-common/browser\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants.js\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\n\nexport class SilentAuthCodeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        platformAuthProvider?: IPlatformAuthHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            platformAuthProvider,\n            correlationId\n        );\n        this.apiId = apiId;\n    }\n\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.authCodeRequired\n            );\n        }\n\n        // Create silent request\n        const silentRequest: CommonAuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, InteractionType.Silent);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n\n            // Initialize the client\n            const clientConfig = await invokeAsync(\n                this.getClientConfiguration.bind(this),\n                PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )({\n                serverTelemetryManager,\n                requestAuthority: silentRequest.authority,\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\n                account: silentRequest.account,\n            });\n            const authClient: HybridSpaAuthorizationCodeClient =\n                new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create silent handler\n            const interactionHandler = new InteractionHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Handle auth code parameters from request\n            return await invokeAsync(\n                interactionHandler.handleCodeResponseFromServer.bind(\n                    interactionHandler\n                ),\n                PerformanceEvents.HandleCodeResponseFromServer,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                {\n                    code: request.code,\n                    msgraph_host: request.msGraphHost,\n                    cloud_graph_host_name: request.cloudGraphHostName,\n                    cloud_instance_host_name: request.cloudInstanceHostName,\n                },\n                silentRequest,\n                false\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps.js\";\nimport {\n    InteractionRequiredAuthError,\n    AccountInfo,\n    Constants,\n    INetworkModule,\n    Logger,\n    CommonSilentFlowRequest,\n    ICrypto,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AuthError,\n    PerformanceEvents,\n    PerformanceCallbackFunction,\n    IPerformanceClient,\n    BaseAuthRequest,\n    PromptValue,\n    InProgressPerformanceEvent,\n    getRequestThumbprint,\n    AccountEntity,\n    invokeAsync,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    AccountFilter,\n    buildStaticAuthorityOptions,\n    InteractionRequiredAuthErrorCodes,\n    PkceCodes,\n} from \"@azure/msal-common/browser\";\nimport {\n    BrowserCacheManager,\n    DEFAULT_BROWSER_CACHE_MANAGER,\n} from \"../cache/BrowserCacheManager.js\";\nimport * as AccountManager from \"../cache/AccountManager.js\";\nimport { BrowserConfiguration, CacheOptions } from \"../config/Configuration.js\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserCacheLocation,\n    WrapperSKU,\n    CacheLookupPolicy,\n    DEFAULT_REQUEST,\n    BrowserConstants,\n    iFrameRenewalPolicies,\n    INTERACTION_TYPE,\n} from \"../utils/BrowserConstants.js\";\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { EventCallbackFunction, EventError } from \"../event/EventMessage.js\";\nimport { EventType } from \"../event/EventType.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { EventHandler } from \"../event/EventHandler.js\";\nimport { PopupClient } from \"../interaction_client/PopupClient.js\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient.js\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient.js\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient.js\";\nimport { TokenCache } from \"../cache/TokenCache.js\";\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\nimport { PlatformAuthInteractionClient } from \"../interaction_client/PlatformAuthInteractionClient.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport {\n    NativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError.js\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient.js\";\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient.js\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError.js\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\nimport { PlatformAuthRequest } from \"../broker/nativeBroker/PlatformAuthRequest.js\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext.js\";\nimport { BaseOperatingContext } from \"../operatingcontext/BaseOperatingContext.js\";\nimport { IController } from \"./IController.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto.js\";\nimport { initializeSilentRequest } from \"../request/RequestHelpers.js\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator.js\";\nimport {\n    getPlatformAuthProvider,\n    isPlatformAuthAllowed,\n} from \"../broker/nativeBroker/PlatformAuthProvider.js\";\nimport { IPlatformAuthHandler } from \"../broker/nativeBroker/IPlatformAuthHandler.js\";\nimport { collectInstanceStats } from \"../utils/MsalFrameStatsUtils.js\";\n\nfunction getAccountType(\n    account?: AccountInfo\n): \"AAD\" | \"MSA\" | \"B2C\" | undefined {\n    const idTokenClaims = account?.idTokenClaims;\n    if (idTokenClaims?.tfp || idTokenClaims?.acr) {\n        return \"B2C\";\n    }\n\n    if (!idTokenClaims?.tid) {\n        return undefined;\n    } else if (idTokenClaims?.tid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\n        return \"MSA\";\n    }\n    return \"AAD\";\n}\n\nfunction preflightCheck(\n    initialized: boolean,\n    performanceEvent: InProgressPerformanceEvent\n) {\n    try {\n        BrowserUtils.preflightCheck(initialized);\n    } catch (e) {\n        performanceEvent.end({ success: false }, e);\n        throw e;\n    }\n}\n\nexport class StandardController implements IController {\n    // OperatingContext\n    protected readonly operatingContext: StandardOperatingContext;\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Native Cache in memory storage implementation\n    protected readonly nativeInternalStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected readonly config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected readonly eventHandler: EventHandler;\n\n    // Redirect Response Object\n    protected readonly redirectResponse: Map<\n        string,\n        Promise<AuthenticationResult | null>\n    >;\n\n    // Native Extension Provider\n    protected platformAuthProvider: IPlatformAuthHandler | undefined;\n\n    // Hybrid auth code responses\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\n\n    // Performance telemetry client\n    protected readonly performanceClient: IPerformanceClient;\n\n    // Flag representing whether or not the initialize API has been called and completed\n    protected initialized: boolean;\n\n    // Active requests\n    private activeSilentTokenRequests: Map<\n        string,\n        Promise<AuthenticationResult>\n    >;\n\n    // Active Iframe request\n    private activeIframeRequest: [Promise<boolean>, string] | undefined;\n\n    private ssoSilentMeasurement?: InProgressPerformanceEvent;\n    private acquireTokenByCodeAsyncMeasurement?: InProgressPerformanceEvent;\n\n    private pkceCode: PkceCodes | undefined;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext: StandardOperatingContext) {\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(\n                  this.config.auth.clientId,\n                  this.config.cache,\n                  this.browserCrypto,\n                  this.logger,\n                  this.performanceClient,\n                  this.eventHandler,\n                  buildStaticAuthorityOptions(this.config.auth)\n              )\n            : DEFAULT_BROWSER_CACHE_MANAGER(\n                  this.config.auth.clientId,\n                  this.logger,\n                  this.performanceClient,\n                  this.eventHandler\n              );\n\n        // initialize in memory storage for native flows\n        const nativeCacheOptions: Required<CacheOptions> = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(\n            this.config.auth.clientId,\n            nativeCacheOptions,\n            this.browserCrypto,\n            this.logger,\n            this.performanceClient,\n            this.eventHandler\n        );\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(\n            this.config,\n            this.browserStorage,\n            this.logger,\n            this.browserCrypto\n        );\n\n        this.activeSilentTokenRequests = new Map();\n\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n\n    static async createController(\n        operatingContext: BaseOperatingContext,\n        request?: InitializeApplicationRequest\n    ): Promise<IController> {\n        const controller = new StandardController(operatingContext);\n        await controller.initialize(request);\n        return controller;\n    }\n\n    private trackPageVisibility(correlationId?: string): void {\n        if (!correlationId) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.performanceClient.incrementFields(\n            { visibilityChangeCount: 1 },\n            correlationId\n        );\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     * @param request {?InitializeApplicationRequest} correlation id\n     */\n    async initialize(\n        request?: InitializeApplicationRequest,\n        isBroker?: boolean\n    ): Promise<void> {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\n                \"initialize has already been called, exiting early.\"\n            );\n            return;\n        }\n\n        if (!this.isBrowserEnvironment) {\n            this.logger.info(\"in non-browser environment, exiting early.\");\n            this.initialized = true;\n            this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n            return;\n        }\n\n        const initCorrelationId =\n            request?.correlationId || this.getRequestCorrelationId();\n        const allowPlatformBroker = this.config.system.allowPlatformBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.InitializeClientApplication,\n            initCorrelationId\n        );\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n\n        // Broker applications are initialized twice, so we avoid double-counting it\n        if (!isBroker) {\n            try {\n                this.logMultipleInstances(initMeasurement);\n            } catch {}\n        }\n\n        await invokeAsync(\n            this.browserStorage.initialize.bind(this.browserStorage),\n            PerformanceEvents.InitializeCache,\n            this.logger,\n            this.performanceClient,\n            initCorrelationId\n        )(initCorrelationId);\n\n        if (allowPlatformBroker) {\n            try {\n                // check if platform authentication is available via DOM or browser extension and create relevant handlers\n                this.platformAuthProvider = await getPlatformAuthProvider(\n                    this.logger,\n                    this.performanceClient,\n                    initCorrelationId,\n                    this.config.system.nativeBrokerHandshakeTimeout\n                );\n            } catch (e) {\n                this.logger.verbose(e as string);\n            }\n        }\n\n        if (!this.config.cache.claimsBasedCachingEnabled) {\n            this.logger.verbose(\n                \"Claims-based caching is disabled. Clearing the previous cache with claims\"\n            );\n\n            await invokeAsync(\n                this.browserStorage.clearTokensAndKeysWithClaims.bind(\n                    this.browserStorage\n                ),\n                PerformanceEvents.ClearTokensAndKeysWithClaims,\n                this.logger,\n                this.performanceClient,\n                initCorrelationId\n            )(this.performanceClient, initCorrelationId);\n        }\n\n        this.config.system.asyncPopups &&\n            (await this.preGeneratePkceCodes(initCorrelationId));\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n        initMeasurement.end({\n            allowPlatformBroker: allowPlatformBroker,\n            success: true,\n        });\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || \"\";\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                response = this.handleRedirectPromiseInternal(hash);\n                this.redirectResponse.set(redirectResponseKey, response);\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called for the first time, storing the promise\"\n                );\n            } else {\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called previously, returning the result from the first call\"\n                );\n            }\n\n            return response;\n        }\n        this.logger.verbose(\n            \"handleRedirectPromise returns null, not browser environment\"\n        );\n        return null;\n    }\n\n    /**\n     * The internal details of handleRedirectPromise. This is separated out to a helper to allow handleRedirectPromise to memoize requests\n     * @param hash\n     * @returns\n     */\n    private async handleRedirectPromiseInternal(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\n                \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n            );\n            return null;\n        }\n\n        const interactionType =\n            this.browserStorage.getInteractionInProgress()?.type;\n        if (interactionType === INTERACTION_TYPE.SIGNOUT) {\n            this.logger.verbose(\n                \"handleRedirectPromise removing interaction_in_progress flag and returning null after sign-out\"\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            return Promise.resolve(null);\n        }\n\n        const loggedInAccounts = this.getAllAccounts();\n        const platformBrokerRequest: PlatformAuthRequest | null =\n            this.browserStorage.getCachedNativeRequest();\n        const useNative =\n            platformBrokerRequest && this.platformAuthProvider && !hash;\n\n        let rootMeasurement: InProgressPerformanceEvent;\n\n        this.eventHandler.emitEvent(\n            EventType.HANDLE_REDIRECT_START,\n            InteractionType.Redirect\n        );\n\n        let redirectResponse: Promise<AuthenticationResult | null>;\n        try {\n            if (useNative && this.platformAuthProvider) {\n                rootMeasurement = this.performanceClient.startMeasurement(\n                    PerformanceEvents.AcquireTokenRedirect,\n                    platformBrokerRequest?.correlationId || \"\"\n                );\n                this.logger.trace(\n                    \"handleRedirectPromise - acquiring token from native platform\"\n                );\n                const nativeClient = new PlatformAuthInteractionClient(\n                    this.config,\n                    this.browserStorage,\n                    this.browserCrypto,\n                    this.logger,\n                    this.eventHandler,\n                    this.navigationClient,\n                    ApiId.handleRedirectPromise,\n                    this.performanceClient,\n                    this.platformAuthProvider,\n                    platformBrokerRequest.accountId,\n                    this.nativeInternalStorage,\n                    platformBrokerRequest.correlationId\n                );\n\n                redirectResponse = invokeAsync(\n                    nativeClient.handleRedirectPromise.bind(nativeClient),\n                    PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\n                    this.logger,\n                    this.performanceClient,\n                    rootMeasurement.event.correlationId\n                )(this.performanceClient, rootMeasurement.event.correlationId);\n            } else {\n                const [standardRequest, codeVerifier] =\n                    this.browserStorage.getCachedRequest();\n                const correlationId = standardRequest.correlationId;\n                // Reset rootMeasurement now that we have correlationId\n                rootMeasurement = this.performanceClient.startMeasurement(\n                    PerformanceEvents.AcquireTokenRedirect,\n                    correlationId\n                );\n                this.logger.trace(\n                    \"handleRedirectPromise - acquiring token from web flow\"\n                );\n                const redirectClient = this.createRedirectClient(correlationId);\n                redirectResponse = invokeAsync(\n                    redirectClient.handleRedirectPromise.bind(redirectClient),\n                    PerformanceEvents.HandleRedirectPromiseMeasurement,\n                    this.logger,\n                    this.performanceClient,\n                    rootMeasurement.event.correlationId\n                )(hash, standardRequest, codeVerifier, rootMeasurement);\n            }\n        } catch (e) {\n            this.browserStorage.resetRequestCache();\n            throw e;\n        }\n\n        return redirectResponse\n            .then((result: AuthenticationResult | null) => {\n                if (result) {\n                    this.browserStorage.resetRequestCache();\n                    // Emit login event if number of accounts change\n                    const isLoggingIn =\n                        loggedInAccounts.length < this.getAllAccounts().length;\n                    if (isLoggingIn) {\n                        this.eventHandler.emitEvent(\n                            EventType.LOGIN_SUCCESS,\n                            InteractionType.Redirect,\n                            result\n                        );\n                        this.logger.verbose(\n                            \"handleRedirectResponse returned result, login success\"\n                        );\n                    } else {\n                        this.eventHandler.emitEvent(\n                            EventType.ACQUIRE_TOKEN_SUCCESS,\n                            InteractionType.Redirect,\n                            result\n                        );\n                        this.logger.verbose(\n                            \"handleRedirectResponse returned result, acquire token success\"\n                        );\n                    }\n                    rootMeasurement.end({\n                        success: true,\n                        accountType: getAccountType(result.account),\n                    });\n                } else {\n                    /*\n                     * Instrument an event only if an error code is set. Otherwise, discard it when the redirect response\n                     * is empty and the error code is missing.\n                     */\n                    if (rootMeasurement.event.errorCode) {\n                        rootMeasurement.end({ success: false });\n                    } else {\n                        rootMeasurement.discard();\n                    }\n                }\n\n                this.eventHandler.emitEvent(\n                    EventType.HANDLE_REDIRECT_END,\n                    InteractionType.Redirect\n                );\n\n                return result;\n            })\n            .catch((e) => {\n                this.browserStorage.resetRequestCache();\n                const eventError = e as EventError;\n                // Emit login event if there is an account\n                if (loggedInAccounts.length > 0) {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_FAILURE,\n                        InteractionType.Redirect,\n                        null,\n                        eventError\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_FAILURE,\n                        InteractionType.Redirect,\n                        null,\n                        eventError\n                    );\n                }\n                this.eventHandler.emitEvent(\n                    EventType.HANDLE_REDIRECT_END,\n                    InteractionType.Redirect\n                );\n\n                rootMeasurement.end(\n                    {\n                        success: false,\n                    },\n                    eventError\n                );\n\n                throw e;\n            });\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n\n        const atrMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPreRedirect,\n            correlationId\n        );\n        atrMeasurement.add({\n            accountType: getAccountType(request.account),\n            scenarioId: request.scenarioId,\n        });\n\n        // Override on request only if set, as onRedirectNavigate field is deprecated\n        const onRedirectNavigateCb = request.onRedirectNavigate;\n        if (onRedirectNavigateCb) {\n            request.onRedirectNavigate = (url: string) => {\n                const navigate =\n                    typeof onRedirectNavigateCb === \"function\"\n                        ? onRedirectNavigateCb(url)\n                        : undefined;\n                if (navigate !== false) {\n                    atrMeasurement.end({ success: true });\n                } else {\n                    atrMeasurement.discard();\n                }\n                return navigate;\n            };\n        } else {\n            const configOnRedirectNavigateCb =\n                this.config.auth.onRedirectNavigate;\n            this.config.auth.onRedirectNavigate = (url: string) => {\n                const navigate =\n                    typeof configOnRedirectNavigateCb === \"function\"\n                        ? configOnRedirectNavigateCb(url)\n                        : undefined;\n                if (navigate !== false) {\n                    atrMeasurement.end({ success: true });\n                } else {\n                    atrMeasurement.discard();\n                }\n                return navigate;\n            };\n        }\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        try {\n            BrowserUtils.redirectPreflightCheck(this.initialized, this.config);\n            this.browserStorage.setInteractionInProgress(\n                true,\n                INTERACTION_TYPE.SIGNIN\n            );\n\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_START,\n                    InteractionType.Redirect,\n                    request\n                );\n            } else {\n                this.eventHandler.emitEvent(\n                    EventType.LOGIN_START,\n                    InteractionType.Redirect,\n                    request\n                );\n            }\n\n            let result: Promise<void>;\n\n            if (\n                this.platformAuthProvider &&\n                this.canUsePlatformBroker(request)\n            ) {\n                const nativeClient = new PlatformAuthInteractionClient(\n                    this.config,\n                    this.browserStorage,\n                    this.browserCrypto,\n                    this.logger,\n                    this.eventHandler,\n                    this.navigationClient,\n                    ApiId.acquireTokenRedirect,\n                    this.performanceClient,\n                    this.platformAuthProvider,\n                    this.getNativeAccountId(request),\n                    this.nativeInternalStorage,\n                    correlationId\n                );\n                result = nativeClient\n                    .acquireTokenRedirect(request, atrMeasurement)\n                    .catch((e: AuthError) => {\n                        if (\n                            e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)\n                        ) {\n                            this.platformAuthProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                            const redirectClient =\n                                this.createRedirectClient(correlationId);\n                            return redirectClient.acquireToken(request);\n                        } else if (e instanceof InteractionRequiredAuthError) {\n                            this.logger.verbose(\n                                \"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                            );\n                            const redirectClient =\n                                this.createRedirectClient(correlationId);\n                            return redirectClient.acquireToken(request);\n                        }\n                        throw e;\n                    });\n            } else {\n                const redirectClient = this.createRedirectClient(correlationId);\n                result = redirectClient.acquireToken(request);\n            }\n\n            return await result;\n        } catch (e) {\n            this.browserStorage.resetRequestCache();\n            atrMeasurement.end({ success: false }, e);\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e as EventError\n                );\n            } else {\n                this.eventHandler.emitEvent(\n                    EventType.LOGIN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e as EventError\n                );\n            }\n            throw e;\n        }\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPopup,\n            correlationId\n        );\n\n        atPopupMeasurement.add({\n            scenarioId: request.scenarioId,\n            accountType: getAccountType(request.account),\n        });\n\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            preflightCheck(this.initialized, atPopupMeasurement);\n            this.browserStorage.setInteractionInProgress(\n                true,\n                INTERACTION_TYPE.SIGNIN\n            );\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_START,\n                InteractionType.Popup,\n                request\n            );\n        } else {\n            this.eventHandler.emitEvent(\n                EventType.LOGIN_START,\n                InteractionType.Popup,\n                request\n            );\n        }\n\n        let result: Promise<AuthenticationResult>;\n        const pkce = this.getPreGeneratedPkceCodes(correlationId);\n\n        if (this.canUsePlatformBroker(request)) {\n            result = this.acquireTokenNative(\n                {\n                    ...request,\n                    correlationId,\n                },\n                ApiId.acquireTokenPopup\n            )\n                .then((response) => {\n                    atPopupMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                        accountType: getAccountType(response.account),\n                    });\n                    return response;\n                })\n                .catch((e: AuthError) => {\n                    if (\n                        e instanceof NativeAuthError &&\n                        isFatalNativeAuthError(e)\n                    ) {\n                        this.platformAuthProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        const popupClient =\n                            this.createPopupClient(correlationId);\n                        return popupClient.acquireToken(request, pkce);\n                    } else if (e instanceof InteractionRequiredAuthError) {\n                        this.logger.verbose(\n                            \"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                        );\n                        const popupClient =\n                            this.createPopupClient(correlationId);\n                        return popupClient.acquireToken(request, pkce);\n                    }\n                    throw e;\n                });\n        } else {\n            const popupClient = this.createPopupClient(correlationId);\n            result = popupClient.acquireToken(request, pkce);\n        }\n\n        return result\n            .then((result) => {\n                /*\n                 *  If logged in, emit acquire token events\n                 */\n                const isLoggingIn =\n                    loggedInAccounts.length < this.getAllAccounts().length;\n                if (isLoggingIn) {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                }\n\n                atPopupMeasurement.end({\n                    success: true,\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                    accountType: getAccountType(result.account),\n                });\n                return result;\n            })\n            .catch((e: Error) => {\n                if (loggedInAccounts.length > 0) {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                }\n\n                atPopupMeasurement.end(\n                    {\n                        success: false,\n                    },\n                    e\n                );\n\n                // Since this function is syncronous we need to reject\n                return Promise.reject(e);\n            })\n            .finally(async () => {\n                this.browserStorage.setInteractionInProgress(false);\n                if (this.config.system.asyncPopups) {\n                    await this.preGeneratePkceCodes(correlationId);\n                }\n            });\n    }\n\n    private trackPageVisibilityWithMeasurement(): void {\n        const measurement =\n            this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n\n        this.logger.info(\n            \"Perf: Visibility change detected in \",\n            measurement.event.name\n        );\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.SsoSilent,\n            correlationId\n        );\n        this.ssoSilentMeasurement?.add({\n            scenarioId: request.scenarioId,\n            accountType: getAccountType(request.account),\n        });\n        preflightCheck(this.initialized, this.ssoSilentMeasurement);\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(\n            EventType.SSO_SILENT_START,\n            InteractionType.Silent,\n            validRequest\n        );\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUsePlatformBroker(validRequest)) {\n            result = this.acquireTokenNative(\n                validRequest,\n                ApiId.ssoSilent\n            ).catch((e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.platformAuthProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(\n                        validRequest.correlationId\n                    );\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        } else {\n            const silentIframeClient = this.createSilentIframeClient(\n                validRequest.correlationId\n            );\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                this.ssoSilentMeasurement?.end({\n                    success: true,\n                    isNativeBroker: response.fromNativeBroker,\n                    accessTokenSize: response.accessToken.length,\n                    idTokenSize: response.idToken.length,\n                    accountType: getAccountType(response.account),\n                });\n                return response;\n            })\n            .catch((e: Error) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    e\n                );\n                this.ssoSilentMeasurement?.end(\n                    {\n                        success: false,\n                    },\n                    e\n                );\n                throw e;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        const atbcMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenByCode,\n            correlationId\n        );\n        preflightCheck(this.initialized, atbcMeasurement);\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_BY_CODE_START,\n            InteractionType.Silent,\n            request\n        );\n        atbcMeasurement.add({ scenarioId: request.scenarioId });\n\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n                );\n            } else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\n                        \"Initiating new acquireTokenByCode request\",\n                        correlationId\n                    );\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result: AuthenticationResult) => {\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS,\n                                InteractionType.Silent,\n                                result\n                            );\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            atbcMeasurement.end({\n                                success: true,\n                                isNativeBroker: result.fromNativeBroker,\n                                accessTokenSize: result.accessToken.length,\n                                idTokenSize: result.idToken.length,\n                                accountType: getAccountType(result.account),\n                            });\n                            return result;\n                        })\n                        .catch((error: Error) => {\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                                InteractionType.Silent,\n                                null,\n                                error\n                            );\n                            atbcMeasurement.end(\n                                {\n                                    success: false,\n                                },\n                                error\n                            );\n                            throw error;\n                        });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                } else {\n                    this.logger.verbose(\n                        \"Existing acquireTokenByCode request found\",\n                        correlationId\n                    );\n                    atbcMeasurement.discard();\n                }\n                return await response;\n            } else if (request.nativeAccountId) {\n                if (\n                    this.canUsePlatformBroker(request, request.nativeAccountId)\n                ) {\n                    const result = await this.acquireTokenNative(\n                        {\n                            ...request,\n                            correlationId,\n                        },\n                        ApiId.acquireTokenByCode,\n                        request.nativeAccountId\n                    ).catch((e: AuthError) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (\n                            e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)\n                        ) {\n                            this.platformAuthProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                    atbcMeasurement.end({\n                        accountType: getAccountType(result.account),\n                        success: true,\n                    });\n                    return result;\n                } else {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n                    );\n                }\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n                );\n            }\n        } catch (e) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                InteractionType.Silent,\n                null,\n                e as EventError\n            );\n            atbcMeasurement.end(\n                {\n                    success: false,\n                },\n                e\n            );\n            throw e;\n        }\n    }\n\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    private async acquireTokenByCodeAsync(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"acquireTokenByCodeAsync called\",\n            request.correlationId\n        );\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(\n                PerformanceEvents.AcquireTokenByCodeAsync,\n                request.correlationId\n            );\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(\n            request.correlationId\n        );\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end({\n                    success: true,\n                    fromCache: response.fromCache,\n                    isNativeBroker: response.fromNativeBroker,\n                });\n                return response;\n            })\n            .catch((tokenRenewalError: Error) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end(\n                    {\n                        success: false,\n                    },\n                    tokenRenewalError\n                );\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n        return silentTokenResult;\n    }\n\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenFromCache(\n        commonRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenFromCache,\n            commonRequest.correlationId\n        );\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessToken:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n                const silentCacheClient = this.createSilentCacheClient(\n                    commonRequest.correlationId\n                );\n                return invokeAsync(\n                    silentCacheClient.acquireToken.bind(silentCacheClient),\n                    PerformanceEvents.SilentCacheClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param cacheLookupPolicy CacheLookupPolicy\n     * @returns A promise that, when resolved, returns the access token\n     */\n    public async acquireTokenByRefreshToken(\n        commonRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenByRefreshToken,\n            commonRequest.correlationId\n        );\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case CacheLookupPolicy.RefreshToken:\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(\n                    commonRequest.correlationId\n                );\n\n                return invokeAsync(\n                    silentRefreshClient.acquireToken.bind(silentRefreshClient),\n                    PerformanceEvents.SilentRefreshClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenBySilentIframe(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenBySilentIframe,\n            request.correlationId\n        );\n\n        const silentIframeClient = this.createSilentIframeClient(\n            request.correlationId\n        );\n\n        return invokeAsync(\n            silentIframeClient.acquireToken.bind(silentIframeClient),\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\n            \"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\",\n            correlationId\n        );\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        BrowserUtils.redirectPreflightCheck(this.initialized, this.config);\n        this.browserStorage.setInteractionInProgress(\n            true,\n            INTERACTION_TYPE.SIGNOUT\n        );\n\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            BrowserUtils.preflightCheck(this.initialized);\n            this.browserStorage.setInteractionInProgress(\n                true,\n                INTERACTION_TYPE.SIGNOUT\n            );\n\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest).finally(() => {\n                this.browserStorage.setInteractionInProgress(false);\n            });\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Creates a cache interaction client to clear broswer cache.\n     * @param logoutRequest\n     */\n    async clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        if (!this.isBrowserEnvironment) {\n            this.logger.info(\"in non-browser environment, returning early.\");\n            return;\n        }\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        const cacheClient = this.createSilentCacheClient(correlationId);\n        return cacheClient.logout(logoutRequest);\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return AccountManager.getAllAccounts(\n            this.logger,\n            this.browserStorage,\n            this.isBrowserEnvironment,\n            accountFilter\n        );\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        return AccountManager.getAccount(\n            accountFilter,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username: string): AccountInfo | null {\n        return AccountManager.getAccountByUsername(\n            username,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        return AccountManager.getAccountByHomeId(\n            homeAccountId,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        return AccountManager.getAccountByLocalId(\n            localAccountId,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        AccountManager.setActiveAccount(account, this.browserStorage);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return AccountManager.getActiveAccount(this.browserStorage);\n    }\n\n    // #endregion\n\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        this.logger.verbose(\"hydrateCache called\");\n\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = AccountEntity.createFromAccountInfo(\n            result.account,\n            result.cloudGraphHostName,\n            result.msGraphHost\n        );\n        await this.browserStorage.setAccount(\n            accountEntity,\n            result.correlationId\n        );\n\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\n                \"Response was from native broker, storing in-memory\"\n            );\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        } else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n\n    // #region Helpers\n\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    public async acquireTokenNative(\n        request: PopupRequest | SilentRequest | SsoSilentRequest,\n        apiId: ApiId,\n        accountId?: string,\n        cacheLookupPolicy?: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.platformAuthProvider) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nativeConnectionNotEstablished\n            );\n        }\n\n        const nativeClient = new PlatformAuthInteractionClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            apiId,\n            this.performanceClient,\n            this.platformAuthProvider,\n            accountId || this.getNativeAccountId(request),\n            this.nativeInternalStorage,\n            request.correlationId\n        );\n\n        return nativeClient.acquireToken(request, cacheLookupPolicy);\n    }\n\n    /**\n     * Returns boolean indicating if this request can use the platform broker\n     * @param request\n     */\n    public canUsePlatformBroker(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        accountId?: string\n    ): boolean {\n        this.logger.trace(\"canUsePlatformBroker called\");\n        if (!this.platformAuthProvider) {\n            this.logger.trace(\n                \"canUsePlatformBroker: platform broker unavilable, returning false\"\n            );\n            return false;\n        }\n\n        if (\n            !isPlatformAuthAllowed(\n                this.config,\n                this.logger,\n                this.platformAuthProvider,\n                request.authenticationScheme\n            )\n        ) {\n            this.logger.trace(\n                \"canUsePlatformBroker: isBrokerAvailable returned false, returning false\"\n            );\n            return false;\n        }\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"canUsePlatformBroker: prompt is compatible with platform broker flow\"\n                    );\n                    break;\n                default:\n                    this.logger.trace(\n                        `canUsePlatformBroker: prompt = ${request.prompt} is not compatible with platform broker flow, returning false`\n                    );\n                    return false;\n            }\n        }\n\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\n                \"canUsePlatformBroker: nativeAccountId is not available, returning false\"\n            );\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    public getNativeAccountId(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): string {\n        const account =\n            request.account ||\n            this.getAccount({\n                loginHint: request.loginHint,\n                sid: request.sid,\n            }) ||\n            this.getActiveAccount();\n\n        return (account && account.nativeAccountId) || \"\";\n    }\n\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    public createPopupClient(correlationId?: string): PopupClient {\n        return new PopupClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.platformAuthProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    protected createRedirectClient(correlationId?: string): RedirectClient {\n        return new RedirectClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.platformAuthProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    public createSilentIframeClient(\n        correlationId?: string\n    ): SilentIframeClient {\n        return new SilentIframeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.ssoSilent,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.platformAuthProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    protected createSilentCacheClient(\n        correlationId?: string\n    ): SilentCacheClient {\n        return new SilentCacheClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.platformAuthProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    protected createSilentRefreshClient(\n        correlationId?: string\n    ): SilentRefreshClient {\n        return new SilentRefreshClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.platformAuthProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    protected createSilentAuthCodeClient(\n        correlationId?: string\n    ): SilentAuthCodeClient {\n        return new SilentAuthCodeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.acquireTokenByCode,\n            this.performanceClient,\n            this.platformAuthProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(\n        callback: EventCallbackFunction,\n        eventTypes?: Array<EventType>\n    ): string | null {\n        return this.eventHandler.addEventCallback(callback, eventTypes);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        BrowserUtils.blockNonBrowserEnvironment();\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     * @deprecated These events will be raised by default and this method will be removed in a future major version.\n     */\n    enableAccountStorageEvents(): void {\n        if (\n            this.config.cache.cacheLocation !==\n            BrowserCacheLocation.LocalStorage\n        ) {\n            this.logger.info(\n                \"Account storage events are only available when cacheLocation is set to localStorage\"\n            );\n            return;\n        }\n\n        this.eventHandler.subscribeCrossTab();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     * @deprecated These events will be raised by default and this method will be removed in a future major version.\n     */\n    disableAccountStorageEvents(): void {\n        if (\n            this.config.cache.cacheLocation !==\n            BrowserCacheLocation.LocalStorage\n        ) {\n            this.logger.info(\n                \"Account storage events are only available when cacheLocation is set to localStorage\"\n            );\n            return;\n        }\n\n        this.eventHandler.unsubscribeCrossTab();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    public getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    public getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the performance client\n     */\n    public getPerformanceClient(): IPerformanceClient {\n        return this.performanceClient;\n    }\n\n    /**\n     * Returns the browser env indicator\n     */\n    public isBrowserEnv(): boolean {\n        return this.isBrowserEnvironment;\n    }\n\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    protected getRequestCorrelationId(\n        request?: Partial<BaseAuthRequest>\n    ): string {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n\n        if (this.isBrowserEnvironment) {\n            return createNewGuid();\n        }\n\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n\n    // #endregion\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(\n        request: SilentRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenSilent,\n            correlationId\n        );\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n            scenarioId: request.scenarioId,\n        });\n\n        preflightCheck(this.initialized, atsMeasurement);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noAccountError);\n        }\n        atsMeasurement.add({ accountType: getAccountType(account) });\n\n        return this.acquireTokenSilentDeduped(request, account, correlationId)\n            .then((result) => {\n                atsMeasurement.end({\n                    success: true,\n                    fromCache: result.fromCache,\n                    isNativeBroker: result.fromNativeBroker,\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                return {\n                    ...result,\n                    state: request.state,\n                    correlationId: correlationId, // Ensures PWB scenarios can correctly match request to response\n                };\n            })\n            .catch((error: Error) => {\n                if (error instanceof AuthError) {\n                    // Ensures PWB scenarios can correctly match request to response\n                    error.setCorrelationId(correlationId);\n                }\n\n                atsMeasurement.end(\n                    {\n                        success: false,\n                    },\n                    error\n                );\n                throw error;\n            });\n    }\n\n    /**\n     * Checks if identical request is already in flight and returns reference to the existing promise or fires off a new one if this is the first\n     * @param request\n     * @param account\n     * @param correlationId\n     * @returns\n     */\n    private async acquireTokenSilentDeduped(\n        request: SilentRequest,\n        account: AccountInfo,\n        correlationId: string\n    ): Promise<AuthenticationResult> {\n        const thumbprint = getRequestThumbprint(\n            this.config.auth.clientId,\n            {\n                ...request,\n                authority: request.authority || this.config.auth.authority,\n                correlationId: correlationId,\n            },\n            account.homeAccountId\n        );\n        const silentRequestKey = JSON.stringify(thumbprint);\n\n        const inProgressRequest =\n            this.activeSilentTokenRequests.get(silentRequestKey);\n\n        if (typeof inProgressRequest === \"undefined\") {\n            this.logger.verbose(\n                \"acquireTokenSilent called for the first time, storing active request\",\n                correlationId\n            );\n            this.performanceClient.addFields({ deduped: false }, correlationId);\n\n            const activeRequest = invokeAsync(\n                this.acquireTokenSilentAsync.bind(this),\n                PerformanceEvents.AcquireTokenSilentAsync,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(\n                {\n                    ...request,\n                    correlationId,\n                },\n                account\n            );\n            this.activeSilentTokenRequests.set(silentRequestKey, activeRequest);\n\n            return activeRequest.finally(() => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n            });\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent has been called previously, returning the result from the first call\",\n                correlationId\n            );\n            this.performanceClient.addFields({ deduped: true }, correlationId);\n            return inProgressRequest;\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    protected async acquireTokenSilentAsync(\n        request: SilentRequest & { correlationId: string },\n        account: AccountInfo\n    ): Promise<AuthenticationResult> {\n        const trackPageVisibility = () =>\n            this.trackPageVisibility(request.correlationId);\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenSilentAsync,\n            request.correlationId\n        );\n\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_START,\n            InteractionType.Silent,\n            request\n        );\n\n        if (request.correlationId) {\n            this.performanceClient.incrementFields(\n                { visibilityChangeCount: 0 },\n                request.correlationId\n            );\n        }\n\n        document.addEventListener(\"visibilitychange\", trackPageVisibility);\n\n        const silentRequest = await invokeAsync(\n            initializeSilentRequest,\n            PerformanceEvents.InitializeSilentRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, account, this.config, this.performanceClient, this.logger);\n        const cacheLookupPolicy =\n            request.cacheLookupPolicy || CacheLookupPolicy.Default;\n\n        const result = this.acquireTokenSilentNoIframe(\n            silentRequest,\n            cacheLookupPolicy\n        ).catch(async (refreshTokenError: AuthError) => {\n            const shouldTryToResolveSilently =\n                checkIfRefreshTokenErrorCanBeResolvedSilently(\n                    refreshTokenError,\n                    cacheLookupPolicy\n                );\n\n            if (shouldTryToResolveSilently) {\n                if (!this.activeIframeRequest) {\n                    let _resolve: (result: boolean) => void;\n                    // Always set the active request tracker immediately after checking it to prevent races\n                    this.activeIframeRequest = [\n                        new Promise((resolve) => {\n                            _resolve = resolve;\n                        }),\n                        silentRequest.correlationId,\n                    ];\n                    this.logger.verbose(\n                        \"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\",\n                        silentRequest.correlationId\n                    );\n                    return invokeAsync(\n                        this.acquireTokenBySilentIframe.bind(this),\n                        PerformanceEvents.AcquireTokenBySilentIframe,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest)\n                        .then((iframeResult) => {\n                            _resolve(true);\n                            return iframeResult;\n                        })\n                        .catch((e) => {\n                            _resolve(false);\n                            throw e;\n                        })\n                        .finally(() => {\n                            this.activeIframeRequest = undefined;\n                        });\n                } else if (cacheLookupPolicy !== CacheLookupPolicy.Skip) {\n                    const [activePromise, activeCorrelationId] =\n                        this.activeIframeRequest;\n                    this.logger.verbose(\n                        `Iframe request is already in progress, awaiting resolution for request with correlationId: ${activeCorrelationId}`,\n                        silentRequest.correlationId\n                    );\n                    const awaitConcurrentIframeMeasure =\n                        this.performanceClient.startMeasurement(\n                            PerformanceEvents.AwaitConcurrentIframe,\n                            silentRequest.correlationId\n                        );\n                    awaitConcurrentIframeMeasure.add({\n                        awaitIframeCorrelationId: activeCorrelationId,\n                    });\n\n                    const activePromiseResult = await activePromise;\n                    awaitConcurrentIframeMeasure.end({\n                        success: activePromiseResult,\n                    });\n                    if (activePromiseResult) {\n                        this.logger.verbose(\n                            `Parallel iframe request with correlationId: ${activeCorrelationId} succeeded. Retrying cache and/or RT redemption`,\n                            silentRequest.correlationId\n                        );\n                        // Retry cache lookup and/or RT exchange after iframe completes\n                        return this.acquireTokenSilentNoIframe(\n                            silentRequest,\n                            cacheLookupPolicy\n                        );\n                    } else {\n                        this.logger.info(\n                            `Iframe request with correlationId: ${activeCorrelationId} failed. Interaction is required.`\n                        );\n                        // If previous iframe request failed, it's unlikely to succeed this time. Throw original error.\n                        throw refreshTokenError;\n                    }\n                } else {\n                    // Cache policy set to skip and another iframe request is already in progress\n                    this.logger.warning(\n                        \"Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.\",\n                        silentRequest.correlationId\n                    );\n                    return invokeAsync(\n                        this.acquireTokenBySilentIframe.bind(this),\n                        PerformanceEvents.AcquireTokenBySilentIframe,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest);\n                }\n            } else {\n                // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\n                throw refreshTokenError;\n            }\n        });\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                if (request.correlationId) {\n                    this.performanceClient.addFields(\n                        {\n                            fromCache: response.fromCache,\n                            isNativeBroker: response.fromNativeBroker,\n                        },\n                        request.correlationId\n                    );\n                }\n\n                return response;\n            })\n            .catch((tokenRenewalError: Error) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    tokenRenewalError\n                );\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    trackPageVisibility\n                );\n            });\n    }\n\n    /**\n     * AcquireTokenSilent without the iframe fallback. This is used to enable the correct fallbacks in cases where there's a potential for multiple silent requests to be made in parallel and prevent those requests from making concurrent iframe requests.\n     * @param silentRequest\n     * @param cacheLookupPolicy\n     * @returns\n     */\n    private async acquireTokenSilentNoIframe(\n        silentRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        // if the cache policy is set to access_token only, we should not be hitting the native layer yet\n        if (\n            isPlatformAuthAllowed(\n                this.config,\n                this.logger,\n                this.platformAuthProvider,\n                silentRequest.authenticationScheme\n            ) &&\n            silentRequest.account.nativeAccountId\n        ) {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from native platform\"\n            );\n            return this.acquireTokenNative(\n                silentRequest,\n                ApiId.acquireTokenSilent_silentFlow,\n                silentRequest.account.nativeAccountId,\n                cacheLookupPolicy\n            ).catch(async (e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.logger.verbose(\n                        \"acquireTokenSilent - native platform unavailable, falling back to web flow\"\n                    );\n                    this.platformAuthProvider = undefined; // Prevent future requests from continuing to attempt\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.tokenRefreshRequired\n                    );\n                }\n                throw e;\n            });\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from web flow\"\n            );\n            // add logs to identify embedded cache retrieval\n            if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\n                this.logger.verbose(\n                    \"acquireTokenSilent - cache lookup policy set to AccessToken, attempting to acquire token from local cache\"\n                );\n            }\n            return invokeAsync(\n                this.acquireTokenFromCache.bind(this),\n                PerformanceEvents.AcquireTokenFromCache,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentRequest, cacheLookupPolicy).catch(\n                (cacheError: AuthError) => {\n                    if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\n                        throw cacheError;\n                    }\n\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_NETWORK_START,\n                        InteractionType.Silent,\n                        silentRequest\n                    );\n\n                    return invokeAsync(\n                        this.acquireTokenByRefreshToken.bind(this),\n                        PerformanceEvents.AcquireTokenByRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest, cacheLookupPolicy);\n                }\n            );\n        }\n    }\n\n    /**\n     * Pre-generates PKCE codes and stores it in local variable\n     * @param correlationId\n     */\n    private async preGeneratePkceCodes(correlationId: string): Promise<void> {\n        this.logger.verbose(\"Generating new PKCE codes\");\n        this.pkceCode = await invokeAsync(\n            generatePkceCodes,\n            PerformanceEvents.GeneratePkceCodes,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(this.performanceClient, this.logger, correlationId);\n        return Promise.resolve();\n    }\n\n    /**\n     * Provides pre-generated PKCE codes, if any\n     * @param correlationId\n     */\n    private getPreGeneratedPkceCodes(\n        correlationId: string\n    ): PkceCodes | undefined {\n        this.logger.verbose(\"Attempting to pick up pre-generated PKCE codes\");\n        const res = this.pkceCode ? { ...this.pkceCode } : undefined;\n        this.pkceCode = undefined;\n        this.logger.verbose(\n            `${res ? \"Found\" : \"Did not find\"} pre-generated PKCE codes`\n        );\n        this.performanceClient.addFields(\n            { usePreGeneratedPkce: !!res },\n            correlationId\n        );\n        return res;\n    }\n\n    private logMultipleInstances(\n        performanceEvent: InProgressPerformanceEvent\n    ): void {\n        const clientId = this.config.auth.clientId;\n\n        if (!window) return;\n        // @ts-ignore\n        window.msal = window.msal || {};\n        // @ts-ignore\n        window.msal.clientIds = window.msal.clientIds || [];\n\n        // @ts-ignore\n        const clientIds: string[] = window.msal.clientIds;\n\n        if (clientIds.length > 0) {\n            this.logger.verbose(\n                \"There is already an instance of MSAL.js in the window.\"\n            );\n        }\n        // @ts-ignore\n        window.msal.clientIds.push(clientId);\n        collectInstanceStats(clientId, performanceEvent, this.logger);\n    }\n}\n\n/**\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\n * @param refreshTokenError\n * @param silentRequest\n * @param cacheLookupPolicy\n * @returns\n */\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(\n    refreshTokenError: AuthError,\n    cacheLookupPolicy: CacheLookupPolicy\n): boolean {\n    const noInteractionRequired = !(\n        refreshTokenError instanceof InteractionRequiredAuthError &&\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\n        refreshTokenError.subError !==\n            InteractionRequiredAuthErrorCodes.badToken\n    );\n\n    // Errors that result when the refresh token needs to be replaced\n    const refreshTokenRefreshRequired =\n        refreshTokenError.errorCode === BrowserConstants.INVALID_GRANT_ERROR ||\n        refreshTokenError.errorCode ===\n            ClientAuthErrorCodes.tokenRefreshRequired;\n\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\n    const isSilentlyResolvable =\n        (noInteractionRequired && refreshTokenRefreshRequired) ||\n        refreshTokenError.errorCode ===\n            InteractionRequiredAuthErrorCodes.noTokensFound ||\n        refreshTokenError.errorCode ===\n            InteractionRequiredAuthErrorCodes.refreshTokenExpired;\n\n    // Only these policies allow for an iframe renewal attempt\n    const tryIframeRenewal = iFrameRenewalPolicies.includes(cacheLookupPolicy);\n\n    return isSilentlyResolvable && tryIframeRenewal;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountInfo, AccountFilter, Logger } from \"@azure/msal-common/browser\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager.js\";\n\n/**\n * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n * @param accountFilter - (Optional) filter to narrow down the accounts returned\n * @returns Array of AccountInfo objects in cache\n */\nexport function getAllAccounts(\n    logger: Logger,\n    browserStorage: BrowserCacheManager,\n    isInBrowser: boolean,\n    accountFilter?: AccountFilter\n): AccountInfo[] {\n    logger.verbose(\"getAllAccounts called\");\n    return isInBrowser ? browserStorage.getAllAccounts(accountFilter) : [];\n}\n\n/**\n * Returns the first account found in the cache that matches the account filter passed in.\n * @param accountFilter\n * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n */\nexport function getAccount(\n    accountFilter: AccountFilter,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccount called\");\n    if (Object.keys(accountFilter).length === 0) {\n        logger.warning(\"getAccount: No accountFilter provided\");\n        return null;\n    }\n\n    const account: AccountInfo | null =\n        browserStorage.getAccountInfoFilteredBy(accountFilter);\n\n    if (account) {\n        logger.verbose(\n            \"getAccount: Account matching provided filter found, returning\"\n        );\n        return account;\n    } else {\n        logger.verbose(\"getAccount: No matching account found, returning null\");\n        return null;\n    }\n}\n\n/**\n * Returns the signed in account matching username.\n * (the account object is created at the time of successful login)\n * or null when no matching account is found.\n * This API is provided for convenience but getAccountById should be used for best reliability\n * @param username\n * @returns The account object stored in MSAL\n */\nexport function getAccountByUsername(\n    username: string,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccountByUsername called\");\n    if (!username) {\n        logger.warning(\"getAccountByUsername: No username provided\");\n        return null;\n    }\n\n    const account = browserStorage.getAccountInfoFilteredBy({\n        username,\n    });\n    if (account) {\n        logger.verbose(\n            \"getAccountByUsername: Account matching username found, returning\"\n        );\n        logger.verbosePii(\n            `getAccountByUsername: Returning signed-in accounts matching username: ${username}`\n        );\n        return account;\n    } else {\n        logger.verbose(\n            \"getAccountByUsername: No matching account found, returning null\"\n        );\n        return null;\n    }\n}\n\n/**\n * Returns the signed in account matching homeAccountId.\n * (the account object is created at the time of successful login)\n * or null when no matching account is found\n * @param homeAccountId\n * @returns The account object stored in MSAL\n */\nexport function getAccountByHomeId(\n    homeAccountId: string,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccountByHomeId called\");\n    if (!homeAccountId) {\n        logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\n        return null;\n    }\n\n    const account = browserStorage.getAccountInfoFilteredBy({\n        homeAccountId,\n    });\n    if (account) {\n        logger.verbose(\n            \"getAccountByHomeId: Account matching homeAccountId found, returning\"\n        );\n        logger.verbosePii(\n            `getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`\n        );\n        return account;\n    } else {\n        logger.verbose(\n            \"getAccountByHomeId: No matching account found, returning null\"\n        );\n        return null;\n    }\n}\n\n/**\n * Returns the signed in account matching localAccountId.\n * (the account object is created at the time of successful login)\n * or null when no matching account is found\n * @param localAccountId\n * @returns The account object stored in MSAL\n */\nexport function getAccountByLocalId(\n    localAccountId: string,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccountByLocalId called\");\n    if (!localAccountId) {\n        logger.warning(\"getAccountByLocalId: No localAccountId provided\");\n        return null;\n    }\n\n    const account = browserStorage.getAccountInfoFilteredBy({\n        localAccountId,\n    });\n    if (account) {\n        logger.verbose(\n            \"getAccountByLocalId: Account matching localAccountId found, returning\"\n        );\n        logger.verbosePii(\n            `getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`\n        );\n        return account;\n    } else {\n        logger.verbose(\n            \"getAccountByLocalId: No matching account found, returning null\"\n        );\n        return null;\n    }\n}\n\n/**\n * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n * @param account\n */\nexport function setActiveAccount(\n    account: AccountInfo | null,\n    browserStorage: BrowserCacheManager\n): void {\n    browserStorage.setActiveAccount(account);\n}\n\n/**\n * Gets the currently active account\n */\nexport function getActiveAccount(\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    return browserStorage.getActiveAccount();\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InProgressPerformanceEvent, Logger } from \"@azure/msal-common/browser\";\n\nexport function collectInstanceStats(\n    currentClientId: string,\n    performanceEvent: InProgressPerformanceEvent,\n    logger: Logger\n): void {\n    const frameInstances: string[] =\n        // @ts-ignore\n        window.msal?.clientIds || [];\n\n    const msalInstanceCount = frameInstances.length;\n\n    const sameClientIdInstanceCount = frameInstances.filter(\n        (i) => i === currentClientId\n    ).length;\n\n    if (sameClientIdInstanceCount > 1) {\n        logger.warning(\n            \"There is already an instance of MSAL.js in the window with the same client id.\"\n        );\n    }\n    performanceEvent.add({\n        msalInstanceCount: msalInstanceCount,\n        sameClientIdInstanceCount: sameClientIdInstanceCount,\n    });\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport { WrapperSKU } from \"../utils/BrowserConstants.js\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication.js\";\nimport { IController } from \"../controllers/IController.js\";\nimport {\n    PerformanceCallbackFunction,\n    AccountInfo,\n    AccountFilter,\n    Logger,\n} from \"@azure/msal-common/browser\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport * as ControllerFactory from \"../controllers/ControllerFactory.js\";\nimport { StandardController } from \"../controllers/StandardController.js\";\nimport {\n    BrowserConfiguration,\n    Configuration,\n} from \"../config/Configuration.js\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { EventCallbackFunction } from \"../event/EventMessage.js\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\nimport { NestedAppAuthController } from \"../controllers/NestedAppAuthController.js\";\nimport { NestedAppOperatingContext } from \"../operatingcontext/NestedAppOperatingContext.js\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\nimport { EventType } from \"../event/EventType.js\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication implements IPublicClientApplication {\n    protected controller: IController;\n    protected isBroker: boolean = false;\n\n    /**\n     * Creates StandardController and passes it to the PublicClientApplication\n     *\n     * @param configuration {Configuration}\n     */\n    public static async createPublicClientApplication(\n        configuration: Configuration\n    ): Promise<IPublicClientApplication> {\n        const controller = await ControllerFactory.createV3Controller(\n            configuration\n        );\n        const pca = new PublicClientApplication(configuration, controller);\n\n        return pca;\n    }\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    public constructor(configuration: Configuration, controller?: IController) {\n        this.controller =\n            controller ||\n            new StandardController(new StandardOperatingContext(configuration));\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     * @param request {?InitializeApplicationRequest}\n     */\n    async initialize(request?: InitializeApplicationRequest): Promise<void> {\n        return this.controller.initialize(request, this.isBroker);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(\n        request: PopupRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenPopup(request);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        return this.controller.acquireTokenRedirect(request);\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenByCode(request);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     * @param eventTypes\n     */\n    addEventCallback(\n        callback: EventCallbackFunction,\n        eventTypes?: Array<EventType>\n    ): string | null {\n        return this.controller.addEventCallback(callback, eventTypes);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        return this.controller.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.controller.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.controller.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.controller.disableAccountStorageEvents();\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        return this.controller.getAccount(accountFilter);\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId: string): AccountInfo | null {\n        return this.controller.getAccountByLocalId(localId);\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName: string): AccountInfo | null {\n        return this.controller.getAccountByUsername(userName);\n    }\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(\n        hash?: string | undefined\n    ): Promise<AuthenticationResult | null> {\n        return this.controller.handleRedirectPromise(hash);\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(\n        request?: PopupRequest | undefined\n    ): Promise<AuthenticationResult> {\n        return this.controller.loginPopup(request);\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request?: RedirectRequest | undefined): Promise<void> {\n        return this.controller.loginRedirect(request);\n    }\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logout(logoutRequest);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        return this.controller.ssoSilent(request);\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.controller.getTokenCache();\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.controller.getLogger();\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.controller.setLogger(logger);\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.controller.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.controller.getActiveAccount();\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.controller.setNavigationClient(navigationClient);\n    }\n\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.controller.getConfiguration();\n    }\n\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        return this.controller.hydrateCache(result, request);\n    }\n\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n\n/**\n * creates NestedAppAuthController and passes it to the PublicClientApplication,\n * falls back to StandardController if NestedAppAuthController is not available\n *\n * @param configuration\n * @returns IPublicClientApplication\n *\n */\nexport async function createNestablePublicClientApplication(\n    configuration: Configuration\n): Promise<IPublicClientApplication> {\n    const nestedAppAuth = new NestedAppOperatingContext(configuration);\n    await nestedAppAuth.initialize();\n\n    if (nestedAppAuth.isAvailable()) {\n        const controller = new NestedAppAuthController(nestedAppAuth);\n        const nestablePCA = new PublicClientApplication(\n            configuration,\n            controller\n        );\n        await nestablePCA.initialize();\n        return nestablePCA;\n    }\n\n    return createStandardPublicClientApplication(configuration);\n}\n\n/**\n * creates PublicClientApplication using StandardController\n *\n * @param configuration\n * @returns IPublicClientApplication\n *\n */\nexport async function createStandardPublicClientApplication(\n    configuration: Configuration\n): Promise<IPublicClientApplication> {\n    const pca = new PublicClientApplication(configuration);\n    await pca.initialize();\n    return pca;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NestedAppOperatingContext } from \"../operatingcontext/NestedAppOperatingContext.js\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext.js\";\nimport { IController } from \"./IController.js\";\nimport { Configuration } from \"../config/Configuration.js\";\nimport { StandardController } from \"./StandardController.js\";\nimport { NestedAppAuthController } from \"./NestedAppAuthController.js\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\n\nexport async function createV3Controller(\n    config: Configuration,\n    request?: InitializeApplicationRequest\n): Promise<IController> {\n    const standard = new StandardOperatingContext(config);\n\n    await standard.initialize();\n    return StandardController.createController(standard, request);\n}\n\nexport async function createController(\n    config: Configuration\n): Promise<IController | null> {\n    const standard = new StandardOperatingContext(config);\n    const nestedApp = new NestedAppOperatingContext(config);\n\n    const operatingContexts = [standard.initialize(), nestedApp.initialize()];\n\n    await Promise.all(operatingContexts);\n\n    if (nestedApp.isAvailable() && config.auth.supportsNestedAppAuth) {\n        return NestedAppAuthController.createController(nestedApp);\n    } else if (standard.isAvailable()) {\n        return StandardController.createController(standard);\n    } else {\n        // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\n        return null;\n    }\n}\n","import { Configuration, PopupRequest } from \"@azure/msal-browser\";\n\n// MSAL Configuration\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: process.env.REACT_APP_AZURE_CLIENT_ID || \"\",\n    authority: `https://login.microsoftonline.com/${process.env.REACT_APP_AZURE_TENANT_ID || \"common\"}`,\n    redirectUri: process.env.REACT_APP_AZURE_REDIRECT_URI || window.location.origin,\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    storeAuthStateInCookie: false,\n  },\n};\n\n// Add scopes for Azure Resource Manager\nexport const loginRequest: PopupRequest = {\n  scopes: [\n    \"https://management.azure.com/user_impersonation\",\n    \"User.Read\"\n  ],\n};\n\n// Graph API request\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};","import React from 'react';\nimport './FileUpload.css';\n\ninterface FileUploadProps {\n  onTemplateFileChange: (file: File | null) => void;\n  onParametersFileChange: (file: File | null) => void;\n  templateFile: File | null;\n  parametersFile: File | null;\n}\n\nexport const FileUpload: React.FC<FileUploadProps> = ({\n  onTemplateFileChange,\n  onParametersFileChange,\n  templateFile,\n  parametersFile,\n}) => {\n  const handleTemplateFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0] || null;\n    onTemplateFileChange(file);\n  };\n\n  const handleParametersFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0] || null;\n    onParametersFileChange(file);\n  };\n\n  return (\n    <div className=\"file-upload-container\">\n      <h3>📁 Upload ARM Template Files</h3>\n      \n      <div className=\"file-input-group\">\n        <label htmlFor=\"template-file\" className=\"file-label\">\n          📄 ARM Template (.json)\n        </label>\n        <input\n          id=\"template-file\"\n          type=\"file\"\n          accept=\".json\"\n          onChange={handleTemplateFileChange}\n          className=\"file-input\"\n        />\n        {templateFile && (\n          <div className=\"file-selected\">\n            ✅ {templateFile.name}\n          </div>\n        )}\n      </div>\n\n      <div className=\"file-input-group\">\n        <label htmlFor=\"parameters-file\" className=\"file-label\">\n          ⚙️ Parameters File (.json)\n        </label>\n        <input\n          id=\"parameters-file\"\n          type=\"file\"\n          accept=\".json\"\n          onChange={handleParametersFileChange}\n          className=\"file-input\"\n        />\n        {parametersFile && (\n          <div className=\"file-selected\">\n            ✅ {parametersFile.name}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport './DeploymentStatus.css';\n\nexport type DeploymentState = 'idle' | 'running' | 'success' | 'error';\n\ninterface DeploymentStatusProps {\n  state: DeploymentState;\n  message?: string;\n  deploymentName?: string;\n  resourceGroup?: string;\n}\n\nexport const DeploymentStatus: React.FC<DeploymentStatusProps> = ({\n  state,\n  message,\n  deploymentName,\n  resourceGroup,\n}) => {\n  const renderStatus = () => {\n    switch (state) {\n      case 'idle':\n        return null;\n      \n      case 'running':\n        return (\n          <div className=\"status-container status-running\">\n            <div className=\"spinner\"></div>\n            <div className=\"status-content\">\n              <h3>🚀 Deployment in Progress</h3>\n              <p>Deploying to resource group: <strong>{resourceGroup}</strong></p>\n              <p>Deployment name: <strong>{deploymentName}</strong></p>\n              <p>Please wait while we deploy your resources...</p>\n            </div>\n          </div>\n        );\n      \n      case 'success':\n        return (\n          <div className=\"status-container status-success\">\n            <div className=\"status-content\">\n              <h3>🎉 Deployment Successful! ✨</h3>\n              <p>🎊 Your Azure resources have been deployed successfully! 🎊</p>\n              <p>Resource Group: <strong>{resourceGroup}</strong></p>\n              <p>Deployment: <strong>{deploymentName}</strong></p>\n              {message && <p className=\"success-message\">{message}</p>}\n            </div>\n          </div>\n        );\n      \n      case 'error':\n        return (\n          <div className=\"status-container status-error\">\n            <div className=\"status-content\">\n              <h3>🛑 Deployment Failed</h3>\n              <p>❌ There was an error deploying your resources.</p>\n              <p>Resource Group: <strong>{resourceGroup}</strong></p>\n              <p>Deployment: <strong>{deploymentName}</strong></p>\n              {message && (\n                <div className=\"error-message\">\n                  <strong>Error Details:</strong>\n                  <pre>{message}</pre>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  return renderStatus();\n};","import React from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { loginRequest } from '../authConfig';\nimport './LoginButton.css';\n\nexport const LoginButton: React.FC = () => {\n  const { instance, accounts } = useMsal();\n\n  const handleLogin = () => {\n    instance.loginPopup(loginRequest).catch(e => {\n      console.error(e);\n    });\n  };\n\n  const handleLogout = () => {\n    instance.logoutPopup().catch(e => {\n      console.error(e);\n    });\n  };\n\n  if (accounts.length > 0) {\n    return (\n      <div className=\"auth-container\">\n        <div className=\"user-info\">\n          <span>👋 Hello, {accounts[0].name || accounts[0].username}</span>\n        </div>\n        <button onClick={handleLogout} className=\"auth-button logout-button\">\n          🚪 Sign Out\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <button onClick={handleLogin} className=\"auth-button login-button\">\n        🔐 Sign in with Microsoft\n      </button>\n    </div>\n  );\n};","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined,\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Microsoft.Resources operations. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Microsoft.Resources operation */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft.Resources */\n  provider?: string;\n  /** Resource on which the operation is performed: Profile, endpoint, etc. */\n  resource?: string;\n  /** Operation type: Read, write, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** An error response for a resource management request. */\nexport interface CloudError {\n  /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\n  error?: ErrorResponse;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\nexport interface ErrorResponse {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorResponse[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Deployment operation parameters. */\nexport interface Deployment {\n  /** The location to store the deployment data. */\n  location?: string;\n  /** The deployment properties. */\n  properties: DeploymentProperties;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment properties. */\nexport interface DeploymentProperties {\n  /** The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both. */\n  template?: Record<string, unknown>;\n  /** The URI of the template. Use either the templateLink property or the template property, but not both. */\n  templateLink?: TemplateLink;\n  /** Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string. */\n  parameters?: { [propertyName: string]: DeploymentParameter };\n  /** The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both. */\n  parametersLink?: ParametersLink;\n  /** The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template. */\n  extensionConfigs?: {\n    [propertyName: string]: {\n      [propertyName: string]: DeploymentExtensionConfigItem;\n    };\n  };\n  /** The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. */\n  mode: DeploymentMode;\n  /** The debug setting of the deployment. */\n  debugSetting?: DebugSetting;\n  /** The deployment on error behavior. */\n  onErrorDeployment?: OnErrorDeployment;\n  /** Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer. */\n  expressionEvaluationOptions?: ExpressionEvaluationOptions;\n  /** The validation level of the deployment */\n  validationLevel?: ValidationLevel;\n}\n\n/** Entity representing the reference to the template. */\nexport interface TemplateLink {\n  /** The URI of the template to deploy. Use either the uri or id property, but not both. */\n  uri?: string;\n  /** The resource id of a Template Spec. Use either the id or uri property, but not both. */\n  id?: string;\n  /** The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs */\n  relativePath?: string;\n  /** If included, must match the ContentVersion in the template. */\n  contentVersion?: string;\n  /** The query string (for example, a SAS token) to be used with the templateLink URI. */\n  queryString?: string;\n}\n\n/** Deployment parameter for the template. */\nexport interface DeploymentParameter {\n  /** Input value to the parameter . */\n  value?: any;\n  /** Azure Key Vault parameter reference. */\n  reference?: KeyVaultParameterReference;\n}\n\n/** Azure Key Vault parameter reference. */\nexport interface KeyVaultParameterReference {\n  /** Azure Key Vault reference. */\n  keyVault: KeyVaultReference;\n  /** Azure Key Vault secret name. */\n  secretName: string;\n  /** Azure Key Vault secret version. */\n  secretVersion?: string;\n}\n\n/** Azure Key Vault reference. */\nexport interface KeyVaultReference {\n  /** Azure Key Vault resource id. */\n  id: string;\n}\n\n/** Entity representing the reference to the deployment parameters. */\nexport interface ParametersLink {\n  /** The URI of the parameters file. */\n  uri: string;\n  /** If included, must match the ContentVersion in the template. */\n  contentVersion?: string;\n}\n\nexport interface DeploymentExtensionConfigItem {\n  /**\n   * The value type of the extension config property.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: ExtensionConfigPropertyType;\n  /** The value of the extension config property. */\n  value?: any;\n  /** The Azure Key Vault reference used to retrieve the secret value of the extension config property. */\n  keyVaultReference?: KeyVaultParameterReference;\n}\n\n/** The debug setting. */\nexport interface DebugSetting {\n  /** Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. */\n  detailLevel?: string;\n}\n\n/** Deployment on error behavior. */\nexport interface OnErrorDeployment {\n  /** The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. */\n  type?: OnErrorDeploymentType;\n  /** The deployment to be used on error case. */\n  deploymentName?: string;\n}\n\n/** Specifies whether template expressions are evaluated within the scope of the parent template or nested template. */\nexport interface ExpressionEvaluationOptions {\n  /** The scope to be used for evaluation of parameters, variables and functions in a nested template. */\n  scope?: ExpressionEvaluationOptionsScopeType;\n}\n\n/** Deployment information. */\nexport interface DeploymentExtended {\n  /**\n   * The ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** the location of the deployment. */\n  location?: string;\n  /** Deployment properties. */\n  properties?: DeploymentPropertiesExtended;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment properties with additional details. */\nexport interface DeploymentPropertiesExtended {\n  /**\n   * Denotes the state of provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The correlation ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly correlationId?: string;\n  /**\n   * The timestamp of the template deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the template deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Key/value pairs that represent deployment output.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outputs?: Record<string, unknown>;\n  /**\n   * The list of resource providers needed for the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly providers?: Provider[];\n  /**\n   * The list of deployment dependencies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dependencies?: Dependency[];\n  /**\n   * The URI referencing the template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly templateLink?: TemplateLink;\n  /**\n   * Deployment parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: Record<string, unknown>;\n  /**\n   * The URI referencing the parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parametersLink?: ParametersLink;\n  /**\n   * The extensions used in this deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extensions?: DeploymentExtensionDefinition[];\n  /**\n   * The deployment mode. Possible values are Incremental and Complete.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mode?: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly onErrorDeployment?: OnErrorDeploymentExtended;\n  /**\n   * The hash produced for the template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly templateHash?: string;\n  /**\n   * Array of provisioned resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outputResources?: ResourceReference[];\n  /**\n   * Array of validated resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validatedResources?: ResourceReference[];\n  /**\n   * The deployment error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n  /**\n   * Contains diagnostic information collected during validation process.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diagnostics?: DeploymentDiagnosticsDefinition[];\n  /** The validation level of the deployment */\n  validationLevel?: ValidationLevel;\n}\n\n/** Resource provider information. */\nexport interface Provider {\n  /**\n   * The provider ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The namespace of the resource provider. */\n  namespace?: string;\n  /**\n   * The registration state of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationState?: string;\n  /**\n   * The registration policy of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationPolicy?: string;\n  /**\n   * The collection of provider resource types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceTypes?: ProviderResourceType[];\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Resource type managed by the resource provider. */\nexport interface ProviderResourceType {\n  /** The resource type. */\n  resourceType?: string;\n  /** The collection of locations where this resource type can be created. */\n  locations?: string[];\n  /** The location mappings that are supported by this resource type. */\n  locationMappings?: ProviderExtendedLocation[];\n  /** The aliases that are supported by this resource type. */\n  aliases?: Alias[];\n  /** The API version. */\n  apiVersions?: string[];\n  /**\n   * The default API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultApiVersion?: string;\n  zoneMappings?: ZoneMapping[];\n  /**\n   * The API profiles for the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiProfiles?: ApiProfile[];\n  /** The additional capabilities offered by this resource type. */\n  capabilities?: string;\n  /** The properties. */\n  properties?: { [propertyName: string]: string };\n}\n\n/** The provider extended location. */\nexport interface ProviderExtendedLocation {\n  /** The azure location. */\n  location?: string;\n  /** The extended location type. */\n  type?: string;\n  /** The extended locations for the azure location. */\n  extendedLocations?: string[];\n}\n\n/** The alias type. */\nexport interface Alias {\n  /** The alias name. */\n  name?: string;\n  /** The paths for an alias. */\n  paths?: AliasPath[];\n  /** The type of the alias. */\n  type?: AliasType;\n  /** The default path for an alias. */\n  defaultPath?: string;\n  /** The default pattern for an alias. */\n  defaultPattern?: AliasPattern;\n  /**\n   * The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultMetadata?: AliasPathMetadata;\n}\n\n/** The type of the paths for alias. */\nexport interface AliasPath {\n  /** The path of an alias. */\n  path?: string;\n  /** The API versions. */\n  apiVersions?: string[];\n  /** The pattern for an alias path. */\n  pattern?: AliasPattern;\n  /**\n   * The metadata of the alias path. If missing, fall back to the default metadata of the alias.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: AliasPathMetadata;\n}\n\n/** The type of the pattern for an alias path. */\nexport interface AliasPattern {\n  /** The alias pattern phrase. */\n  phrase?: string;\n  /** The alias pattern variable. */\n  variable?: string;\n  /** The type of alias pattern */\n  type?: AliasPatternType;\n}\n\nexport interface AliasPathMetadata {\n  /**\n   * The type of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: AliasPathTokenType;\n  /**\n   * The attributes of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly attributes?: AliasPathAttributes;\n}\n\nexport interface ZoneMapping {\n  /** The location of the zone mapping. */\n  location?: string;\n  zones?: string[];\n}\n\nexport interface ApiProfile {\n  /**\n   * The profile version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileVersion?: string;\n  /**\n   * The API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersion?: string;\n}\n\n/** Deployment dependency information. */\nexport interface Dependency {\n  /** The list of dependencies. */\n  dependsOn?: BasicDependency[];\n  /** The ID of the dependency. */\n  id?: string;\n  /** The dependency resource type. */\n  resourceType?: string;\n  /** The dependency resource name. */\n  resourceName?: string;\n}\n\n/** Deployment dependency information. */\nexport interface BasicDependency {\n  /** The ID of the dependency. */\n  id?: string;\n  /** The dependency resource type. */\n  resourceType?: string;\n  /** The dependency resource name. */\n  resourceName?: string;\n}\n\nexport interface DeploymentExtensionDefinition {\n  /**\n   * The alias of the extension as defined in the deployment template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly alias?: string;\n  /**\n   * The extension name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The extension version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The extension configuration ID. It uniquely identifies a deployment control plane within an extension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly configId?: string;\n  /**\n   * The extension configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly config?: { [propertyName: string]: DeploymentExtensionConfigItem };\n}\n\n/** Deployment on error behavior with additional details. */\nexport interface OnErrorDeploymentExtended {\n  /**\n   * The state of the provisioning for the on error deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. */\n  type?: OnErrorDeploymentType;\n  /** The deployment to be used on error case. */\n  deploymentName?: string;\n}\n\n/** The resource Id model. */\nexport interface ResourceReference {\n  /**\n   * The fully qualified Azure resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The key of the extension the resource was deployed with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extension?: DeploymentExtensionDefinition;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The extensible resource identifiers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly identifiers?: Record<string, unknown>;\n  /**\n   * The API version the resource was deployed with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersion?: string;\n}\n\nexport interface DeploymentDiagnosticsDefinition {\n  /**\n   * Denotes the additional response level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly level: Level;\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** Information from validate template deployment response. */\nexport interface DeploymentValidateResult {\n  /**\n   * The deployment validation error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n  /**\n   * The ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The template deployment properties. */\n  properties?: DeploymentPropertiesExtended;\n}\n\n/** The deployment export result. */\nexport interface DeploymentExportResult {\n  /** The template content. */\n  template?: Record<string, unknown>;\n}\n\n/** List of deployments. */\nexport interface DeploymentListResult {\n  /** An array of deployments. */\n  value?: DeploymentExtended[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Deployment operation parameters. */\nexport interface ScopedDeployment {\n  /** The location to store the deployment data. */\n  location: string;\n  /** The deployment properties. */\n  properties: DeploymentProperties;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment What-if operation parameters. */\nexport interface ScopedDeploymentWhatIf {\n  /** The location to store the deployment data. */\n  location: string;\n  /** The deployment properties. */\n  properties: DeploymentWhatIfProperties;\n}\n\n/** Deployment What-If operation settings. */\nexport interface DeploymentWhatIfSettings {\n  /** The format of the What-If results */\n  resultFormat?: WhatIfResultFormat;\n}\n\n/** Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results. */\nexport interface WhatIfOperationResult {\n  /** Status of the What-If operation. */\n  status?: string;\n  /** Error when What-If operation fails. */\n  error?: ErrorResponse;\n  /** List of resource changes predicted by What-If operation. */\n  changes?: WhatIfChange[];\n  /** List of resource changes predicted by What-If operation. */\n  potentialChanges?: WhatIfChange[];\n  /**\n   * List of resource diagnostics detected by What-If operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diagnostics?: DeploymentDiagnosticsDefinition[];\n}\n\n/** Information about a single resource change predicted by What-If operation. */\nexport interface WhatIfChange {\n  /** Resource ID */\n  resourceId?: string;\n  /** The resource id of the Deployment responsible for this change. */\n  deploymentId?: string;\n  /** The symbolic name of the resource responsible for this change. */\n  symbolicName?: string;\n  /** A subset of properties that uniquely identify a Bicep extensible resource because it lacks a resource id like an Azure resource has. */\n  identifiers?: Record<string, unknown>;\n  /** Type of change that will be made to the resource when the deployment is executed. */\n  changeType: ChangeType;\n  /** The explanation about why the resource is unsupported by What-If. */\n  unsupportedReason?: string;\n  /** The snapshot of the resource before the deployment is executed. */\n  before?: Record<string, unknown>;\n  /** The predicted snapshot of the resource after the deployment is executed. */\n  after?: Record<string, unknown>;\n  /** The predicted changes to resource properties. */\n  delta?: WhatIfPropertyChange[];\n}\n\n/** The predicted change to the resource property. */\nexport interface WhatIfPropertyChange {\n  /** The path of the property. */\n  path: string;\n  /** The type of property change. */\n  propertyChangeType: PropertyChangeType;\n  /** The value of the property before the deployment is executed. */\n  before?: Record<string, unknown>;\n  /** The value of the property after the deployment is executed. */\n  after?: Record<string, unknown>;\n  /** Nested property changes. */\n  children?: WhatIfPropertyChange[];\n}\n\n/** Deployment What-if operation parameters. */\nexport interface DeploymentWhatIf {\n  /** The location to store the deployment data. */\n  location?: string;\n  /** The deployment properties. */\n  properties: DeploymentWhatIfProperties;\n}\n\n/** List of provider permissions. */\nexport interface ProviderPermissionListResult {\n  /** An array of provider permissions. */\n  value?: ProviderPermission[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The provider permission */\nexport interface ProviderPermission {\n  /** The application id. */\n  applicationId?: string;\n  /** Role definition properties. */\n  roleDefinition?: RoleDefinition;\n  /** Role definition properties. */\n  managedByRoleDefinition?: RoleDefinition;\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Role definition properties. */\nexport interface RoleDefinition {\n  /** The role definition ID. */\n  id?: string;\n  /** The role definition name. */\n  name?: string;\n  /** If this is a service role. */\n  isServiceRole?: boolean;\n  /** Role definition permissions. */\n  permissions?: Permission[];\n  /** Role definition assignable scopes. */\n  scopes?: string[];\n}\n\n/** Role definition permissions. */\nexport interface Permission {\n  /** Allowed actions. */\n  actions?: string[];\n  /** Denied actions. */\n  notActions?: string[];\n  /** Allowed Data actions. */\n  dataActions?: string[];\n  /** Denied Data actions. */\n  notDataActions?: string[];\n}\n\n/** The provider registration definition. */\nexport interface ProviderRegistrationRequest {\n  /** The provider consent. */\n  thirdPartyProviderConsent?: ProviderConsentDefinition;\n}\n\n/** The provider consent. */\nexport interface ProviderConsentDefinition {\n  /** A value indicating whether authorization is consented or not. */\n  consentToAuthorization?: boolean;\n}\n\n/** List of resource providers. */\nexport interface ProviderListResult {\n  /** An array of resource providers. */\n  value?: Provider[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource types of a resource provider. */\nexport interface ProviderResourceTypeListResult {\n  /** An array of resource types. */\n  value?: ProviderResourceType[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource groups. */\nexport interface ResourceListResult {\n  /** An array of resources. */\n  value?: GenericResourceExpanded[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Plan for the resource. */\nexport interface Plan {\n  /** The plan ID. */\n  name?: string;\n  /** The publisher ID. */\n  publisher?: string;\n  /** The offer ID. */\n  product?: string;\n  /** The promotion code. */\n  promotionCode?: string;\n  /** The plan's version. */\n  version?: string;\n}\n\n/** SKU for the resource. */\nexport interface Sku {\n  /** The SKU name. */\n  name?: string;\n  /** The SKU tier. */\n  tier?: string;\n  /** The SKU size. */\n  size?: string;\n  /** The SKU family. */\n  family?: string;\n  /** The SKU model. */\n  model?: string;\n  /** The SKU capacity. */\n  capacity?: number;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [propertyName: string]: IdentityUserAssignedIdentitiesValue;\n  };\n}\n\nexport interface IdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Specified resource. */\nexport interface Resource {\n  /**\n   * Resource ID\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location?: string;\n  /** Resource extended location. */\n  extendedLocation?: ExtendedLocation;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Resource extended location. */\nexport interface ExtendedLocation {\n  /** The extended location type. */\n  type?: ExtendedLocationType;\n  /** The extended location name. */\n  name?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroup {\n  /**\n   * The ID of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations. */\n  location: string;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The resource group properties. */\nexport interface ResourceGroupProperties {\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroupPatchable {\n  /** The name of the resource group. */\n  name?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Export resource group template request parameters. */\nexport interface ExportTemplateRequest {\n  /** The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'. */\n  resources?: string[];\n  /** The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization' */\n  options?: string;\n  /** The output format for the exported resources. */\n  outputFormat?: ExportTemplateOutputFormat;\n}\n\n/** Resource group export result. */\nexport interface ResourceGroupExportResult {\n  /** The template content. Used if outputFormat is empty or set to 'Json'. */\n  template?: Record<string, unknown>;\n  /** The formatted export content. Used if outputFormat is set to 'Bicep'. */\n  output?: string;\n  /** The template export error. */\n  error?: ErrorResponse;\n}\n\n/** List of resource groups. */\nexport interface ResourceGroupListResult {\n  /** An array of resource groups. */\n  value?: ResourceGroup[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Parameters of move resources. */\nexport interface ResourcesMoveInfo {\n  /** The IDs of the resources. */\n  resources?: string[];\n  /** The target resource group. */\n  targetResourceGroup?: string;\n}\n\n/** Tag information. */\nexport interface TagValue {\n  /**\n   * The tag value ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag value. */\n  tagValue?: string;\n  /** The tag value count. */\n  count?: TagCount;\n}\n\n/** Tag count. */\nexport interface TagCount {\n  /** Type of count. */\n  type?: string;\n  /** Value of count. */\n  value?: number;\n}\n\n/** Tag details. */\nexport interface TagDetails {\n  /**\n   * The tag name ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag name. */\n  tagName?: string;\n  /** The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0. */\n  count?: TagCount;\n  /** The list of tag values. */\n  values?: TagValue[];\n}\n\n/** List of subscription tags. */\nexport interface TagsListResult {\n  /** An array of tags. */\n  value?: TagDetails[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Deployment operation information. */\nexport interface DeploymentOperation {\n  /**\n   * Full deployment operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Deployment operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /** Deployment properties. */\n  properties?: DeploymentOperationProperties;\n}\n\n/** Deployment operation properties. */\nexport interface DeploymentOperationProperties {\n  /**\n   * The name of the current provisioning operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningOperation?: ProvisioningOperation;\n  /**\n   * The state of the provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The date and time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Deployment operation service request id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceRequestId?: string;\n  /**\n   * Operation status code from the resource provider. This property may not be set if a response has not yet been received.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusCode?: string;\n  /**\n   * Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusMessage?: StatusMessage;\n  /**\n   * The target resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResource?: TargetResource;\n  /**\n   * The HTTP request message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly request?: HttpMessage;\n  /**\n   * The HTTP response message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly response?: HttpMessage;\n}\n\n/** Operation status message object. */\nexport interface StatusMessage {\n  /** Status of the deployment operation. */\n  status?: string;\n  /** The error reported by the operation. */\n  error?: ErrorResponse;\n}\n\n/** Target resource. */\nexport interface TargetResource {\n  /** The Azure resource ID of the resource. */\n  id?: string;\n  /** The name of the resource. */\n  resourceName?: string;\n  /** The type of the resource. */\n  resourceType?: string;\n  /** The extension the resource was deployed with. */\n  extension?: DeploymentExtensionDefinition;\n  /** The extensible resource identifiers. */\n  identifiers?: Record<string, unknown>;\n  /** The API version the resource was deployed with. */\n  apiVersion?: string;\n  /** The symbolic name of the resource as defined in the deployment template. */\n  symbolicName?: string;\n}\n\n/** HTTP message. */\nexport interface HttpMessage {\n  /** HTTP message content. */\n  content?: Record<string, unknown>;\n}\n\n/** List of deployment operations. */\nexport interface DeploymentOperationsListResult {\n  /** An array of deployment operations. */\n  value?: DeploymentOperation[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the request to calculate template hash. It contains a string of minified template and its hash. */\nexport interface TemplateHashResult {\n  /** The minified template string. */\n  minifiedTemplate?: string;\n  /** The template hash. */\n  templateHash?: string;\n}\n\n/** Wrapper resource for tags API requests and responses. */\nexport interface TagsResource {\n  /**\n   * The ID of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The set of tags. */\n  properties: Tags;\n}\n\n/** A dictionary of name and value pairs. */\nexport interface Tags {\n  /** Dictionary of <string> */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Wrapper resource for tags patch API request only. */\nexport interface TagsPatchResource {\n  /** The operation type for the patch API. */\n  operation?: TagsPatchOperation;\n  /** The set of tags. */\n  properties?: Tags;\n}\n\n/** Deployment filter. */\nexport interface DeploymentExtendedFilter {\n  /** The provisioning state. */\n  provisioningState?: string;\n}\n\n/** Resource filter. */\nexport interface GenericResourceFilter {\n  /** The resource type. */\n  resourceType?: string;\n  /** The tag name. */\n  tagname?: string;\n  /** The tag value. */\n  tagvalue?: string;\n}\n\n/** Resource group filter. */\nexport interface ResourceGroupFilter {\n  /** The tag name. */\n  tagName?: string;\n  /** The tag value. */\n  tagValue?: string;\n}\n\n/** Resource provider operation's display properties. */\nexport interface ResourceProviderOperationDisplayProperties {\n  /** Operation description. */\n  publisher?: string;\n  /** Operation provider. */\n  provider?: string;\n  /** Operation resource. */\n  resource?: string;\n  /** Resource provider operation. */\n  operation?: string;\n  /** Operation description. */\n  description?: string;\n}\n\n/** Sub-resource. */\nexport interface SubResource {\n  /** Resource ID */\n  id?: string;\n}\n\n/** Deployment What-if properties. */\nexport interface DeploymentWhatIfProperties extends DeploymentProperties {\n  /** Optional What-If operation settings. */\n  whatIfSettings?: DeploymentWhatIfSettings;\n}\n\n/** Resource information. */\nexport interface GenericResource extends Resource {\n  /** The plan of the resource. */\n  plan?: Plan;\n  /** The resource properties. */\n  properties?: Record<string, unknown>;\n  /** The kind of the resource. */\n  kind?: string;\n  /** ID of the resource that manages this resource. */\n  managedBy?: string;\n  /** The SKU of the resource. */\n  sku?: Sku;\n  /** The identity of the resource. */\n  identity?: Identity;\n}\n\n/** Resource information. */\nexport interface GenericResourceExpanded extends GenericResource {\n  /**\n   * The created time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: Date;\n  /**\n   * The changed time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changedTime?: Date;\n  /**\n   * The provisioning state of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtTenantScope operation. */\nexport interface DeploymentsWhatIfAtTenantScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtManagementGroupScope operation. */\nexport interface DeploymentsWhatIfAtManagementGroupScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtSubscriptionScope operation. */\nexport interface DeploymentsWhatIfAtSubscriptionScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIf operation. */\nexport interface DeploymentsWhatIfHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for ResourceGroups_delete operation. */\nexport interface ResourceGroupsDeleteHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_createOrUpdateAtScope operation. */\nexport interface TagsCreateOrUpdateAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_updateAtScope operation. */\nexport interface TagsUpdateAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_deleteAtScope operation. */\nexport interface TagsDeleteAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Known values of {@link ExtensionConfigPropertyType} that the service accepts. */\nexport enum KnownExtensionConfigPropertyType {\n  /** Property type representing a string value. */\n  String = \"String\",\n  /** Property type representing an integer value. */\n  Int = \"Int\",\n  /** Property type representing a boolean value. */\n  Bool = \"Bool\",\n  /** Property type representing an array value. */\n  Array = \"Array\",\n  /** Property type representing an object value. */\n  Object = \"Object\",\n  /** Property type representing a secure string value. */\n  SecureString = \"SecureString\",\n  /** Property type representing a secure object value. */\n  SecureObject = \"SecureObject\",\n}\n\n/**\n * Defines values for ExtensionConfigPropertyType. \\\n * {@link KnownExtensionConfigPropertyType} can be used interchangeably with ExtensionConfigPropertyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **String**: Property type representing a string value. \\\n * **Int**: Property type representing an integer value. \\\n * **Bool**: Property type representing a boolean value. \\\n * **Array**: Property type representing an array value. \\\n * **Object**: Property type representing an object value. \\\n * **SecureString**: Property type representing a secure string value. \\\n * **SecureObject**: Property type representing a secure object value.\n */\nexport type ExtensionConfigPropertyType = string;\n\n/** Known values of {@link ExpressionEvaluationOptionsScopeType} that the service accepts. */\nexport enum KnownExpressionEvaluationOptionsScopeType {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Outer */\n  Outer = \"Outer\",\n  /** Inner */\n  Inner = \"Inner\",\n}\n\n/**\n * Defines values for ExpressionEvaluationOptionsScopeType. \\\n * {@link KnownExpressionEvaluationOptionsScopeType} can be used interchangeably with ExpressionEvaluationOptionsScopeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Outer** \\\n * **Inner**\n */\nexport type ExpressionEvaluationOptionsScopeType = string;\n\n/** Known values of {@link ValidationLevel} that the service accepts. */\nexport enum KnownValidationLevel {\n  /** Static analysis of the template is performed. */\n  Template = \"Template\",\n  /** Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource. */\n  Provider = \"Provider\",\n  /** Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource. */\n  ProviderNoRbac = \"ProviderNoRbac\",\n}\n\n/**\n * Defines values for ValidationLevel. \\\n * {@link KnownValidationLevel} can be used interchangeably with ValidationLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Template**: Static analysis of the template is performed. \\\n * **Provider**: Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource. \\\n * **ProviderNoRbac**: Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.\n */\nexport type ValidationLevel = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Running */\n  Running = \"Running\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Created */\n  Created = \"Created\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Updating */\n  Updating = \"Updating\",\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Accepted** \\\n * **Running** \\\n * **Ready** \\\n * **Creating** \\\n * **Created** \\\n * **Deleting** \\\n * **Deleted** \\\n * **Canceled** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Updating**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link AliasPathTokenType} that the service accepts. */\nexport enum KnownAliasPathTokenType {\n  /** The token type is not specified. */\n  NotSpecified = \"NotSpecified\",\n  /** The token type can be anything. */\n  Any = \"Any\",\n  /** The token type is string. */\n  String = \"String\",\n  /** The token type is object. */\n  Object = \"Object\",\n  /** The token type is array. */\n  Array = \"Array\",\n  /** The token type is integer. */\n  Integer = \"Integer\",\n  /** The token type is number. */\n  Number = \"Number\",\n  /** The token type is boolean. */\n  Boolean = \"Boolean\",\n}\n\n/**\n * Defines values for AliasPathTokenType. \\\n * {@link KnownAliasPathTokenType} can be used interchangeably with AliasPathTokenType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified**: The token type is not specified. \\\n * **Any**: The token type can be anything. \\\n * **String**: The token type is string. \\\n * **Object**: The token type is object. \\\n * **Array**: The token type is array. \\\n * **Integer**: The token type is integer. \\\n * **Number**: The token type is number. \\\n * **Boolean**: The token type is boolean.\n */\nexport type AliasPathTokenType = string;\n\n/** Known values of {@link AliasPathAttributes} that the service accepts. */\nexport enum KnownAliasPathAttributes {\n  /** The token that the alias path is referring to has no attributes. */\n  None = \"None\",\n  /** The token that the alias path is referring to is modifiable by policies with 'modify' effect. */\n  Modifiable = \"Modifiable\",\n}\n\n/**\n * Defines values for AliasPathAttributes. \\\n * {@link KnownAliasPathAttributes} can be used interchangeably with AliasPathAttributes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: The token that the alias path is referring to has no attributes. \\\n * **Modifiable**: The token that the alias path is referring to is modifiable by policies with 'modify' effect.\n */\nexport type AliasPathAttributes = string;\n\n/** Known values of {@link ProviderAuthorizationConsentState} that the service accepts. */\nexport enum KnownProviderAuthorizationConsentState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Required */\n  Required = \"Required\",\n  /** NotRequired */\n  NotRequired = \"NotRequired\",\n  /** Consented */\n  Consented = \"Consented\",\n}\n\n/**\n * Defines values for ProviderAuthorizationConsentState. \\\n * {@link KnownProviderAuthorizationConsentState} can be used interchangeably with ProviderAuthorizationConsentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Required** \\\n * **NotRequired** \\\n * **Consented**\n */\nexport type ProviderAuthorizationConsentState = string;\n\n/** Known values of {@link Level} that the service accepts. */\nexport enum KnownLevel {\n  /** Warning */\n  Warning = \"Warning\",\n  /** Info */\n  Info = \"Info\",\n  /** Error */\n  Error = \"Error\",\n}\n\n/**\n * Defines values for Level. \\\n * {@link KnownLevel} can be used interchangeably with Level,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Warning** \\\n * **Info** \\\n * **Error**\n */\nexport type Level = string;\n\n/** Known values of {@link ExtendedLocationType} that the service accepts. */\nexport enum KnownExtendedLocationType {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\",\n}\n\n/**\n * Defines values for ExtendedLocationType. \\\n * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationType = string;\n\n/** Known values of {@link ExportTemplateOutputFormat} that the service accepts. */\nexport enum KnownExportTemplateOutputFormat {\n  /** Json */\n  Json = \"Json\",\n  /** Bicep */\n  Bicep = \"Bicep\",\n}\n\n/**\n * Defines values for ExportTemplateOutputFormat. \\\n * {@link KnownExportTemplateOutputFormat} can be used interchangeably with ExportTemplateOutputFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Json** \\\n * **Bicep**\n */\nexport type ExportTemplateOutputFormat = string;\n\n/** Known values of {@link TagsPatchOperation} that the service accepts. */\nexport enum KnownTagsPatchOperation {\n  /** The 'replace' option replaces the entire set of existing tags with a new set. */\n  Replace = \"Replace\",\n  /** The 'merge' option allows adding tags with new names and updating the values of tags with existing names. */\n  Merge = \"Merge\",\n  /** The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs. */\n  Delete = \"Delete\",\n}\n\n/**\n * Defines values for TagsPatchOperation. \\\n * {@link KnownTagsPatchOperation} can be used interchangeably with TagsPatchOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Replace**: The 'replace' option replaces the entire set of existing tags with a new set. \\\n * **Merge**: The 'merge' option allows adding tags with new names and updating the values of tags with existing names. \\\n * **Delete**: The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs.\n */\nexport type TagsPatchOperation = string;\n/** Defines values for DeploymentMode. */\nexport type DeploymentMode = \"Incremental\" | \"Complete\";\n/** Defines values for OnErrorDeploymentType. */\nexport type OnErrorDeploymentType = \"LastSuccessful\" | \"SpecificDeployment\";\n/** Defines values for AliasPatternType. */\nexport type AliasPatternType = \"NotSpecified\" | \"Extract\";\n/** Defines values for AliasType. */\nexport type AliasType = \"NotSpecified\" | \"PlainText\" | \"Mask\";\n/** Defines values for WhatIfResultFormat. */\nexport type WhatIfResultFormat = \"ResourceIdOnly\" | \"FullResourcePayloads\";\n/** Defines values for ChangeType. */\nexport type ChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Ignore\"\n  | \"Deploy\"\n  | \"NoChange\"\n  | \"Modify\"\n  | \"Unsupported\";\n/** Defines values for PropertyChangeType. */\nexport type PropertyChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Modify\"\n  | \"Array\"\n  | \"NoEffect\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n/** Defines values for ProvisioningOperation. */\nexport type ProvisioningOperation =\n  | \"NotSpecified\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Waiting\"\n  | \"AzureAsyncOperationWaiting\"\n  | \"ResourceCacheWaiting\"\n  | \"Action\"\n  | \"Read\"\n  | \"EvaluateDeploymentOutput\"\n  | \"DeploymentCleanup\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtScope operation. */\nexport type DeploymentsCheckExistenceAtScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type DeploymentsCreateOrUpdateAtScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type DeploymentsGetAtScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtScope operation. */\nexport type DeploymentsValidateAtScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtScope operation. */\nexport type DeploymentsExportTemplateAtScopeResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtScope operation. */\nexport type DeploymentsListAtScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtTenantScope operation. */\nexport type DeploymentsCheckExistenceAtTenantScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtTenantScope operation. */\nexport type DeploymentsCreateOrUpdateAtTenantScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type DeploymentsGetAtTenantScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtTenantScope operation. */\nexport type DeploymentsValidateAtTenantScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtTenantScope operation. */\nexport type DeploymentsWhatIfAtTenantScopeResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtTenantScope operation. */\nexport type DeploymentsExportTemplateAtTenantScopeResponse =\n  DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type DeploymentsListAtTenantScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtManagementGroupScope operation. */\nexport type DeploymentsCheckExistenceAtManagementGroupScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtManagementGroupScope operation. */\nexport type DeploymentsCreateOrUpdateAtManagementGroupScopeResponse =\n  DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroupScope operation. */\nexport type DeploymentsGetAtManagementGroupScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtManagementGroupScope operation. */\nexport type DeploymentsValidateAtManagementGroupScopeResponse =\n  DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtManagementGroupScope operation. */\nexport type DeploymentsWhatIfAtManagementGroupScopeResponse =\n  WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtManagementGroupScope operation. */\nexport type DeploymentsExportTemplateAtManagementGroupScopeResponse =\n  DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtManagementGroupScope operation. */\nexport type DeploymentsListAtManagementGroupScopeResponse =\n  DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtSubscriptionScope operation. */\nexport type DeploymentsCheckExistenceAtSubscriptionScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtSubscriptionScope operation. */\nexport type DeploymentsCreateOrUpdateAtSubscriptionScopeResponse =\n  DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscriptionScope operation. */\nexport type DeploymentsGetAtSubscriptionScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtSubscriptionScope operation. */\nexport type DeploymentsValidateAtSubscriptionScopeResponse =\n  DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtSubscriptionScope operation. */\nexport type DeploymentsWhatIfAtSubscriptionScopeResponse =\n  WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtSubscriptionScope operation. */\nexport type DeploymentsExportTemplateAtSubscriptionScopeResponse =\n  DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtSubscriptionScope operation. */\nexport type DeploymentsListAtSubscriptionScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type DeploymentsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DeploymentsCreateOrUpdateResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentsGetResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validate operation. */\nexport type DeploymentsValidateResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIf operation. */\nexport type DeploymentsWhatIfResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplate operation. */\nexport type DeploymentsExportTemplateResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DeploymentsListByResourceGroupResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsCalculateTemplateHashOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the calculateTemplateHash operation. */\nexport type DeploymentsCalculateTemplateHashResponse = TemplateHashResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtScopeNext operation. */\nexport type DeploymentsListAtScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type DeploymentsListAtTenantScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtManagementGroupScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtManagementGroupScopeNext operation. */\nexport type DeploymentsListAtManagementGroupScopeNextResponse =\n  DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtSubscriptionScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtSubscriptionScopeNext operation. */\nexport type DeploymentsListAtSubscriptionScopeNextResponse =\n  DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DeploymentsListByResourceGroupNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface ProvidersUnregisterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the unregister operation. */\nexport type ProvidersUnregisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ProvidersProviderPermissionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the providerPermissions operation. */\nexport type ProvidersProviderPermissionsResponse = ProviderPermissionListResult;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterOptionalParams\n  extends coreClient.OperationOptions {\n  /** The third party consent for S2S. */\n  properties?: ProviderRegistrationRequest;\n}\n\n/** Contains response data for the register operation. */\nexport type ProvidersRegisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProvidersListResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type ProvidersListAtTenantScopeResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProvidersGetResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type ProvidersGetAtTenantScopeResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ProvidersListNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type ProvidersListAtTenantScopeNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProviderResourceTypesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProviderResourceTypesListResponse = ProviderResourceTypeListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resources. */\n  top?: number;\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ResourcesListByResourceGroupResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesValidateMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>Filter comparison operators include `eq` (equals) and `ne` (not equals) and may be used with the following properties: `location`, `resourceType`, `name`, `resourceGroup`, `identity`, `identity/principalId`, `plan`, `plan/publisher`, `plan/product`, `plan/name`, `plan/version`, and `plan/promotionCode`.<br><br>For example, to filter by a resource type, use `$filter=resourceType eq 'Microsoft.Network/virtualNetworks'`<br><br><br>`substringof(value, property)` can  be used to filter for substrings of the following currently-supported properties: `name` and `resourceGroup`<br><br>For example, to get all resources with 'demo' anywhere in the resource name, use `$filter=substringof('demo', name)`<br><br>Multiple substring operations can also be combined using `and`/`or` operators.<br><br>Note that any truncated number of results queried via `$top` may also not be compatible when using a filter.<br><br><br>Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use `$filter=tagName eq 'tag1' and tagValue eq 'Value1'`. Note that when resources are filtered by tag name and value, <b>the original tags for each resource will not be returned in the results.</b> Any list of additional properties queried via `$expand` may also not be compatible when filtering by tag names/values. <br><br>For tag names only, resources can be filtered by prefix using the following syntax: `$filter=startswith(tagName, 'depart')`. This query will return all resources with a tag name prefixed by the phrase `depart` (i.e.`department`, `departureDate`, `departureTime`, etc.)<br><br><br>Note that some properties can be combined when filtering resources, which include the following: `substringof() and/or resourceType`, `plan and plan/publisher and plan/name`, and `identity and identity/principalId`. */\n  filter?: string;\n  /** The number of recommendations per page if a paged version of this API is being used. */\n  top?: number;\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourcesListResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourcesCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourcesCreateOrUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ResourcesUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourcesGetResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceById operation. */\nexport type ResourcesCheckExistenceByIdResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateById operation. */\nexport type ResourcesCreateOrUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateById operation. */\nexport type ResourcesUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getById operation. */\nexport type ResourcesGetByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ResourcesListByResourceGroupNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourcesListNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourceGroupsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourceGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourceGroupsCreateOrUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets */\n  forceDeletionTypes?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourceGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourceGroupsGetResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ResourceGroupsUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the exportTemplate operation. */\nexport type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1' */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resource groups. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourceGroupsListResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourceGroupsListNextResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface TagsDeleteValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateValue operation. */\nexport type TagsCreateOrUpdateValueResponse = TagValue;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TagsCreateOrUpdateResponse = TagDetails;\n\n/** Optional parameters. */\nexport interface TagsDeleteOptionalParams extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TagsListResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type TagsCreateOrUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateAtScope operation. */\nexport type TagsUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type TagsGetAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface TagsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TagsListNextResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type DeploymentOperationsGetAtScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtScope operation. */\nexport type DeploymentOperationsListAtScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type DeploymentOperationsGetAtTenantScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type DeploymentOperationsListAtTenantScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroupScope operation. */\nexport type DeploymentOperationsGetAtManagementGroupScopeResponse =\n  DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtManagementGroupScope operation. */\nexport type DeploymentOperationsListAtManagementGroupScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscriptionScope operation. */\nexport type DeploymentOperationsGetAtSubscriptionScopeResponse =\n  DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtSubscriptionScope operation. */\nexport type DeploymentOperationsListAtSubscriptionScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentOperationsGetResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type DeploymentOperationsListResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtScopeNext operation. */\nexport type DeploymentOperationsListAtScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type DeploymentOperationsListAtTenantScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtManagementGroupScopeNext operation. */\nexport type DeploymentOperationsListAtManagementGroupScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtSubscriptionScopeNext operation. */\nexport type DeploymentOperationsListAtSubscriptionScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeploymentOperationsListNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface ResourceManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ndeclare global {\n  // stub these out for the browser\n  function btoa(input: string): string;\n  function atob(input: string): string;\n}\n\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nexport function encodeString(value: string): string {\n  return btoa(value);\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < value.length; i++) {\n    str += String.fromCharCode(value[i]);\n  }\n  return btoa(str);\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeString(value: string): Uint8Array {\n  const byteString = atob(value);\n  const arr = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    arr[i] = byteString.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeStringToString(value: string): string {\n  return atob(value);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  HttpClient,\n  HttpMethods,\n  PipelineOptions,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n/**\n * Options to configure serialization/de-serialization behavior.\n */\nexport interface SerializerOptions {\n  /**\n   * Options to configure xml parser/builder behavior.\n   */\n  xml: XmlOptions;\n  /**\n   * Normally additional properties are included in the result object, even if there is no mapper for them.\n   * This flag disables this behavior when true. It is used when parsing headers to avoid polluting the result object.\n   */\n  ignoreUnknownProperties?: boolean;\n}\n\nexport type RequiredSerializerOptions = {\n  [K in keyof SerializerOptions]: Required<SerializerOptions[K]>;\n};\n\n/**\n * A type alias for future proofing.\n */\nexport type OperationRequest = PipelineRequest;\n\n/**\n * Metadata that is used to properly parse a response.\n */\nexport interface OperationRequestInfo {\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n\n  /**\n   * Used to encode the request.\n   */\n  operationArguments?: OperationArguments;\n\n  /**\n   * A function that returns the proper OperationResponseMap for the given OperationSpec and\n   * PipelineResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: PipelineResponse,\n  ) => undefined | OperationResponseMap;\n\n  /**\n   * Whether or not the PipelineResponse should be deserialized. Defaults to true.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n}\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n  /**\n   * Options to override serialization/de-serialization behavior.\n   */\n  serializerOptions?: SerializerOptions;\n\n  /**\n   * A function to be called each time a response is received from the server\n   * while performing the requested operation.\n   * May be called multiple times.\n   */\n  onResponse?: RawResponseCallback;\n}\n\n/**\n * Options used when creating and sending HTTP requests for this operation.\n */\nexport interface OperationRequestOptions {\n  /**\n   * User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * A collection of properties that apply to a single invocation of an operation.\n */\nexport interface OperationArguments {\n  /**\n   * The parameters that were passed to the operation method.\n   */\n  [parameterName: string]: unknown;\n\n  /**\n   * The optional arguments that are provided to an operation.\n   */\n  options?: OperationOptions;\n}\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport type QueryCollectionFormat = \"CSV\" | \"SSV\" | \"TSV\" | \"Pipes\" | \"Multi\";\n\n/**\n * Encodes how to reach a particular property on an object.\n */\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * An OperationResponse that can be returned from an operation request for a single status code.\n */\nexport interface OperationResponseMap {\n  /**\n   * The mapper that will be used to deserialize the response headers.\n   */\n  headersMapper?: Mapper;\n\n  /**\n   * The mapper that will be used to deserialize the response body.\n   */\n  bodyMapper?: Mapper;\n\n  /**\n   * Indicates if this is an error response\n   */\n  isError?: boolean;\n}\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponseMap };\n}\n\n/**\n * Wrapper object for http request and response. Deserialized object is stored in\n * the `parsedBody` property when the response body is received in JSON or XML.\n */\nexport interface FullOperationResponse extends PipelineResponse {\n  /**\n   * The parsed HTTP response headers.\n   */\n  parsedHeaders?: { [key: string]: unknown };\n\n  /**\n   * The response body as parsed JSON or XML.\n   */\n  parsedBody?: any;\n\n  /**\n   * The request that generated the response.\n   */\n  request: OperationRequest;\n}\n\n/**\n * A function to be called each time a response is received from the server\n * while performing the requested operation.\n * May be called multiple times.\n */\nexport type RawResponseCallback = (\n  rawResponse: FullOperationResponse,\n  flatResponse: unknown,\n  error?: unknown,\n) => void;\n\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nexport interface Serializer {\n  /**\n   * The provided model mapper.\n   */\n  readonly modelMappers: { [key: string]: any };\n  /**\n   * Whether the contents are XML or not.\n   */\n  readonly isXML: boolean;\n\n  /**\n   * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n   * @param mapper - The definition of data models.\n   * @param value - The value.\n   * @param objectName - Name of the object. Used in the error messages.\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void;\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param object - A valid Javascript object to be serialized.\n   * @param objectName - Name of the serialized object.\n   * @param options - additional options to deserialization.\n   * @returns A valid serialized Javascript object.\n   */\n  serialize(mapper: Mapper, object: any, objectName?: string, options?: SerializerOptions): any;\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param responseBody - A valid Javascript entity to be deserialized.\n   * @param objectName - Name of the deserialized object.\n   * @param options - Controls behavior of XML parser and builder.\n   * @returns A valid deserialized Javascript object.\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options?: SerializerOptions,\n  ): any;\n}\n\n/**\n * Description of various value constraints such as integer ranges and string regex.\n */\nexport interface MapperConstraints {\n  /**\n   * The value should be less than or equal to the `InclusiveMaximum` value.\n   */\n  InclusiveMaximum?: number;\n  /**\n   * The value should be less than the `ExclusiveMaximum` value.\n   */\n  ExclusiveMaximum?: number;\n  /**\n   * The value should be greater than or equal to the `InclusiveMinimum` value.\n   */\n  InclusiveMinimum?: number;\n  /**\n   * The value should be greater than the `InclusiveMinimum` value.\n   */\n  ExclusiveMinimum?: number;\n  /**\n   * The length should be smaller than the `MaxLength`.\n   */\n  MaxLength?: number;\n  /**\n   * The length should be bigger than the `MinLength`.\n   */\n  MinLength?: number;\n  /**\n   * The value must match the pattern.\n   */\n  Pattern?: RegExp;\n  /**\n   * The value must contain fewer items than the MaxItems value.\n   */\n  MaxItems?: number;\n  /**\n   * The value must contain more items than the `MinItems` value.\n   */\n  MinItems?: number;\n  /**\n   * The value must contain only unique items.\n   */\n  UniqueItems?: true;\n  /**\n   * The value should be exactly divisible by the `MultipleOf` value.\n   */\n  MultipleOf?: number;\n}\n\n/**\n * Type of the mapper. Includes known mappers.\n */\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\n/**\n * The type of a simple mapper.\n */\nexport interface SimpleMapperType {\n  /**\n   * Name of the type of the property.\n   */\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\n/**\n * Helps build a mapper that describes how to map a set of properties of an object based on other mappers.\n *\n * Only one of the following properties should be present: `className`, `modelProperties` and `additionalProperties`.\n */\nexport interface CompositeMapperType {\n  /**\n   * Name of the composite mapper type.\n   */\n  name: \"Composite\";\n\n  /**\n   * Use `className` to reference another type definition.\n   */\n  className?: string;\n\n  /**\n   * Use `modelProperties` when the reference to the other type has been resolved.\n   */\n  modelProperties?: { [propertyName: string]: Mapper };\n\n  /**\n   * Used when a model has `additionalProperties: true`. Allows the generic processing of unnamed model properties on the response object.\n   */\n  additionalProperties?: Mapper;\n\n  /**\n   * The name of the top-most parent scheme, the one that has no parents.\n   */\n  uberParent?: string;\n\n  /**\n   * A polymorphic discriminator.\n   */\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\n/**\n * Helps build a mapper that describes how to parse a sequence of mapped values.\n */\nexport interface SequenceMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Sequence\";\n  /**\n   * The mapper to use to map each one of the properties of the sequence.\n   */\n  element: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse a dictionary of mapped values.\n */\nexport interface DictionaryMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Dictionary\";\n  /**\n   * The mapper to use to map the value of each property in the dictionary.\n   */\n  value: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse an enum value.\n */\nexport interface EnumMapperType {\n  /**\n   * Name of the enum type mapper.\n   */\n  name: \"Enum\";\n  /**\n   * Values allowed by this mapper.\n   */\n  allowedValues: any[];\n}\n\n/**\n * The base definition of a mapper. Can be used for XML and plain JavaScript objects.\n */\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Determines if the current property should be serialized as the inner content of the xml element\n   */\n  xmlIsMsText?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current property should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current property is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current property is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current property is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current property allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\n/**\n * Mappers are definitions of the data models used in the library.\n * These data models are part of the Operation or Client definitions in the responses or parameters.\n */\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\n/**\n * Used to disambiguate discriminated type unions.\n * For example, if response can have many shapes but also includes a 'kind' field (or similar),\n * that field can be used to determine how to deserialize the response to the correct type.\n */\nexport interface PolymorphicDiscriminator {\n  /**\n   * Name of the discriminant property in the original JSON payload, e.g. `@odata.kind`.\n   */\n  serializedName: string;\n  /**\n   * Name to use on the resulting object instead of the original property name.\n   * Useful since the JSON property could be difficult to work with.\n   * For example: For a field received as `@odata.kind`, the final object could instead include a property simply named `kind`.\n   */\n  clientName: string;\n  /**\n   * It may contain any other property.\n   */\n  [key: string]: string;\n}\n\n/**\n * A mapper composed of other mappers.\n */\nexport interface CompositeMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `CompositeMapper`.\n   */\n  type: CompositeMapperType;\n}\n\n/**\n * A mapper describing arrays.\n */\nexport interface SequenceMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `SequenceMapper`.\n   */\n  type: SequenceMapperType;\n}\n\n/**\n * A mapper describing plain JavaScript objects used as key/value pairs.\n */\nexport interface DictionaryMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `DictionaryMapper`.\n   */\n  type: DictionaryMapperType;\n  /**\n   * Optionally, a prefix to add to the header collection.\n   */\n  headerCollectionPrefix?: string;\n}\n\n/**\n * A mapper describing an enum value.\n */\nexport interface EnumMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `EnumMapper`.\n   */\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n/**\n * Configuration for creating a new Tracing Span\n */\nexport interface SpanConfig {\n  /**\n   * Package name prefix\n   */\n  packagePrefix: string;\n  /**\n   * Service namespace\n   */\n  namespace: string;\n}\n\n/**\n * Used to configure additional policies added to the pipeline at construction.\n */\nexport interface AdditionalPolicyConfig {\n  /**\n   * A policy to be added.\n   */\n  policy: PipelinePolicy;\n  /**\n   * Determines if this policy be applied before or after retry logic.\n   * Only use `perRetry` if you need to modify the request again\n   * each time the operation is retried due to retryable service\n   * issues.\n   */\n  position: \"perCall\" | \"perRetry\";\n}\n\n/**\n * The common set of options that high level clients are expected to expose.\n */\nexport interface CommonClientOptions extends PipelineOptions {\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n  /**\n   * Additional policies to include in the HTTP pipeline.\n   */\n  additionalPolicies?: AdditionalPolicyConfig[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { CompositeMapper, FullOperationResponse, OperationResponseMap } from \"./interfaces.js\";\n\n/**\n * The union of all possible types for a primitive response body.\n * @internal\n */\nexport type BodyPrimitive = number | string | boolean | Date | Uint8Array | undefined | null;\n\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nexport function isPrimitiveBody(value: unknown, mapperTypeName?: string): value is BodyPrimitive {\n  return (\n    mapperTypeName !== \"Composite\" &&\n    mapperTypeName !== \"Dictionary\" &&\n    (typeof value === \"string\" ||\n      typeof value === \"number\" ||\n      typeof value === \"boolean\" ||\n      mapperTypeName?.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i) !==\n        null ||\n      value === undefined ||\n      value === null)\n  );\n}\n\nconst validateISODuration =\n  /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\nconst validUuidRegex =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Representation of parsed response headers and body coupled with information\n * about how to map them:\n * - whether the response body should be wrapped (typically if its type is primitive).\n * - whether the response is nullable so it can be null if the combination of\n *   the headers and the body is empty.\n */\ninterface ResponseObjectWithMetadata {\n  /** whether the mapper allows nullable body */\n  hasNullableType: boolean;\n  /** whether the response's body should be wrapped */\n  shouldWrapBody: boolean;\n  /** parsed headers of the response */\n  headers:\n    | {\n        [key: string]: unknown;\n      }\n    | undefined;\n  /** parsed body of the response */\n  body: any;\n}\n\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(\n  responseObject: ResponseObjectWithMetadata,\n): unknown | null {\n  const combinedHeadersAndBody = {\n    ...responseObject.headers,\n    ...responseObject.body,\n  };\n  if (\n    responseObject.hasNullableType &&\n    Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0\n  ) {\n    return responseObject.shouldWrapBody ? { body: null } : null;\n  } else {\n    return responseObject.shouldWrapBody\n      ? {\n          ...responseObject.headers,\n          body: responseObject.body,\n        }\n      : combinedHeadersAndBody;\n  }\n}\n\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nexport function flattenResponse(\n  fullResponse: FullOperationResponse,\n  responseSpec: OperationResponseMap | undefined,\n): unknown {\n  const parsedHeaders = fullResponse.parsedHeaders;\n\n  // head methods never have a body, but we return a boolean set to body property\n  // to indicate presence/absence of the resource\n  if (fullResponse.request.method === \"HEAD\") {\n    return {\n      ...parsedHeaders,\n      body: fullResponse.parsedBody,\n    };\n  }\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n  const isNullable = Boolean(bodyMapper?.nullable);\n  const expectedBodyTypeName = bodyMapper?.type.name;\n\n  /** If the body is asked for, we look at the expected body type to handle it */\n  if (expectedBodyTypeName === \"Stream\") {\n    return {\n      ...parsedHeaders,\n      blobBody: fullResponse.blobBody,\n      readableStreamBody: fullResponse.readableStreamBody,\n    };\n  }\n\n  const modelProperties =\n    (expectedBodyTypeName === \"Composite\" &&\n      (bodyMapper as CompositeMapper).type.modelProperties) ||\n    {};\n  const isPageableResponse = Object.keys(modelProperties).some(\n    (k) => modelProperties[k].serializedName === \"\",\n  );\n  if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n    const arrayResponse: { [key: string]: unknown } =\n      fullResponse.parsedBody ?? ([] as unknown as { [key: string]: unknown });\n\n    for (const key of Object.keys(modelProperties)) {\n      if (modelProperties[key].serializedName) {\n        arrayResponse[key] = fullResponse.parsedBody?.[key];\n      }\n    }\n\n    if (parsedHeaders) {\n      for (const key of Object.keys(parsedHeaders)) {\n        arrayResponse[key] = parsedHeaders[key];\n      }\n    }\n    return isNullable &&\n      !fullResponse.parsedBody &&\n      !parsedHeaders &&\n      Object.getOwnPropertyNames(modelProperties).length === 0\n      ? null\n      : arrayResponse;\n  }\n\n  return handleNullableResponseAndWrappableBody({\n    body: fullResponse.parsedBody,\n    headers: parsedHeaders,\n    hasNullableType: isNullable,\n    shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as base64 from \"./base64.js\";\nimport type {\n  BaseMapper,\n  CompositeMapper,\n  DictionaryMapper,\n  EnumMapper,\n  Mapper,\n  MapperConstraints,\n  PolymorphicDiscriminator,\n  RequiredSerializerOptions,\n  SequenceMapper,\n  Serializer,\n  SerializerOptions,\n} from \"./interfaces.js\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./interfaces.js\";\nimport { isDuration, isValidUuid } from \"./utils.js\";\n\nclass SerializerImpl implements Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML: boolean = false,\n  ) {}\n\n  /**\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any,\n    ): never => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`,\n      );\n    };\n    if (mapper.constraints && value !== undefined && value !== null) {\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems,\n      } = mapper.constraints;\n      if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      if (MaxItems !== undefined && value.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength !== undefined && value.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems !== undefined && value.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength !== undefined && value.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        value.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param object - A valid Javascript object to be serialized\n   *\n   * @param objectName - Name of the serialized object\n   *\n   * @param options - additional options to serialization\n   *\n   * @returns A valid serialized Javascript object\n   */\n  serialize(\n    mapper: Mapper,\n    object: any,\n    objectName?: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && (object === undefined || object === null)) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object === undefined || object === null) {\n      payload = object;\n    } else {\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param responseBody - A valid Javascript entity to be deserialized\n   *\n   * @param objectName - Name of the deserialized object\n   *\n   * @param options - Controls behavior of XML parser and builder.\n   *\n   * @returns A valid deserialized Javascript object\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n      ignoreUnknownProperties: options.ignoreUnknownProperties ?? false,\n    };\n    if (responseBody === undefined || responseBody === null) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions,\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xml.xmlCharKey;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (responseBody[XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n          responseBody = responseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nexport function createSerializer(\n  modelMappers: { [key: string]: any } = {},\n  isXML: boolean = false,\n): Serializer {\n  return new SerializerImpl(modelMappers, isXML);\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: Uint8Array): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`,\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n        typeof value.tee !== \"function\" && // browser ReadableStream\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        // File objects count as a type of Blob, so we want to use instanceof explicitly\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n        objectType !== \"function\"\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`,\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues,\n      )}.`,\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = base64.encodeByteArray(value);\n  }\n  return value;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = bufferToBase64Url(value);\n  }\n  return value;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value !== undefined && value !== null) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`,\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  let elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  // Quirk: Composite mappers referenced by `element` might\n  // not have *all* properties declared (like uberParent),\n  // so let's try to look up the full definition by name.\n  if (elementType.type.name === \"Composite\" && elementType.type.className) {\n    elementType = serializer.modelMappers[elementType.type.className] ?? elementType;\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xml.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n    const result = tempDictionary;\n    result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n    return result;\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2,\n      )}\".`,\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`,\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object !== undefined && object !== null) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            (childObject === undefined || childObject === null) &&\n            ((object[key] !== undefined && object[key] !== null) ||\n              propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject !== undefined && parentObject !== null) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace,\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          (toSerialize === undefined || toSerialize === null)\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options,\n        );\n        if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options,\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xml.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: RequiredSerializerOptions): boolean {\n  return [XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  const xmlCharKey = options.xml.xmlCharKey ?? XML_CHARKEY;\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options,\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options,\n        );\n      } else if (propertyMapper.xmlIsMsText) {\n        if (responseBody[xmlCharKey] !== undefined) {\n          instance[key] = responseBody[xmlCharKey];\n        } else if (typeof responseBody === \"string\") {\n          // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n          //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n          instance[key] = responseBody;\n        }\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(xmlName!);\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(propertyName!);\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      let steps = 0;\n      for (const item of paths) {\n        if (!res) break;\n        steps++;\n        res = res[item];\n      }\n      // only accept null when reaching the last position of object otherwise it would be undefined\n      if (res === null && steps < paths.length) {\n        res = undefined;\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        (propertyInstance === undefined || propertyInstance === null)\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        const arrayInstance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        // Copy over any properties that have already been added into the instance, where they do\n        // not exist on the newly de-serialized array\n        for (const [k, v] of Object.entries(instance)) {\n          if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n            arrayInstance[k] = v;\n          }\n        }\n        instance = arrayInstance;\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options,\n        );\n      }\n    }\n  } else if (responseBody && !options.ignoreUnknownProperties) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  /* jshint validthis: true */\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  let element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (element.type.name === \"Composite\" && element.type.className) {\n      element = serializer.modelMappers[element.type.className] ?? element;\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options,\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getIndexDiscriminator(\n  discriminators: Record<string, CompositeMapper>,\n  discriminatorValue: string,\n  typeName: string,\n): CompositeMapper | undefined {\n  const typeNamesToCheck = [typeName];\n  while (typeNamesToCheck.length) {\n    const currentName = typeNamesToCheck.shift();\n    const indexDiscriminator =\n      discriminatorValue === currentName\n        ? discriminatorValue\n        : currentName + \".\" + discriminatorValue;\n    if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n      return discriminators[indexDiscriminator];\n    } else {\n      for (const [name, mapper] of Object.entries(discriminators)) {\n        if (\n          name.startsWith(currentName + \".\") &&\n          mapper.type.uberParent === currentName &&\n          mapper.type.className\n        ) {\n          typeNamesToCheck.push(mapper.type.className);\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\",\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n\n  if (polymorphicDiscriminator) {\n    let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName) {\n      // The serializedName might have \\\\, which we just want to ignore\n      if (polymorphicPropertyName === \"serializedName\") {\n        discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n      }\n      const discriminatorValue = object[discriminatorName];\n      const typeName = mapper.type.uberParent ?? mapper.type.className;\n\n      if (typeof discriminatorValue === \"string\" && typeName) {\n        const polymorphicMapper = getIndexDiscriminator(\n          serializer.modelMappers.discriminators,\n          discriminatorValue,\n          typeName,\n        );\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(\n  serializer: Serializer,\n  typeName?: string,\n): PolymorphicDiscriminator | undefined {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\n/**\n * Known types of Mappers\n */\nexport const MapperTypeNames = {\n  Base64Url: \"Base64Url\",\n  Boolean: \"Boolean\",\n  ByteArray: \"ByteArray\",\n  Composite: \"Composite\",\n  Date: \"Date\",\n  DateTime: \"DateTime\",\n  DateTimeRfc1123: \"DateTimeRfc1123\",\n  Dictionary: \"Dictionary\",\n  Enum: \"Enum\",\n  Number: \"Number\",\n  Object: \"Object\",\n  Sequence: \"Sequence\",\n  String: \"String\",\n  Stream: \"Stream\",\n  TimeSpan: \"TimeSpan\",\n  UnixTime: \"UnixTime\",\n} as const;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts snippet:ReadmeSampleAbortError\n * import { AbortError } from \"@typespec/ts-http-runtime\";\n *\n * async function doAsyncWork(options: { abortSignal: AbortSignal }): Promise<void> {\n *   if (options.abortSignal.aborted) {\n *     throw new AbortError();\n *   }\n *\n *   // do async work\n * }\n *\n * const controller = new AbortController();\n * controller.abort();\n *\n * try {\n *   doAsyncWork({ abortSignal: controller.signal });\n * } catch (e) {\n *   if (e instanceof Error && e.name === \"AbortError\") {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { log } from \"./log.js\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"typeSpecRuntime:*\"\n   * Supports skip syntax, e.g. \"typeSpecRuntime:*,-typeSpecRuntime:storage:*\" will enable\n   * everything under typeSpecRuntime except for things under typeSpecRuntime:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log,\n  },\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend,\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function log(...args: any[]): void {\n  if (args.length > 0) {\n    const firstArg = String(args[0]);\n    if (firstArg.includes(\":error\")) {\n      console.error(...args);\n    } else if (firstArg.includes(\":warning\")) {\n      console.warn(...args);\n    } else if (firstArg.includes(\":info\")) {\n      console.info(...args);\n    } else if (firstArg.includes(\":verbose\")) {\n      console.debug(...args);\n    } else {\n      console.debug(...args);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport debug from \"./debug.js\";\n\nimport type { Debugger } from \"./debug.js\";\nexport type { Debugger };\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type TypeSpecRuntimeLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * A TypeSpecRuntimeClientLogger is a function that can log to an appropriate severity level.\n */\nexport type TypeSpecRuntimeClientLogger = Debugger;\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\nexport interface TypeSpecRuntimeLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * todo doc\n */\nexport interface LoggerContext {\n  /**\n   * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n   * @param level - The log level to enable for logging.\n   * Options from most verbose to least verbose are:\n   * - verbose\n   * - info\n   * - warning\n   * - error\n   */\n  setLogLevel(logLevel?: TypeSpecRuntimeLogLevel): void;\n\n  /**\n   * Retrieves the currently specified log level.\n   */\n  getLogLevel(): TypeSpecRuntimeLogLevel | undefined;\n\n  /**\n   * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n   * @param namespace - The name of the SDK package.\n   * @hidden\n   */\n  createClientLogger(namespace: string): TypeSpecRuntimeLogger;\n\n  /**\n   * The TypeSpecRuntimeClientLogger provides a mechanism for overriding where logs are output to.\n   * By default, logs are sent to stderr.\n   * Override the `log` method to redirect logs to another location.\n   */\n  logger: TypeSpecRuntimeClientLogger;\n}\n\n/**\n * Option for creating a TypeSpecRuntimeLoggerContext.\n */\nexport interface CreateLoggerContextOptions {\n  /**\n   * The name of the environment variable to check for the log level.\n   */\n  logLevelEnvVarName: string;\n\n  /**\n   * The namespace of the logger.\n   */\n  namespace: string;\n}\n\nconst TYPESPEC_RUNTIME_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype DebuggerWithLogLevel = Debugger & { level: TypeSpecRuntimeLogLevel };\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100,\n};\n\nfunction patchLogMethod(\n  parent: TypeSpecRuntimeClientLogger,\n  child: TypeSpecRuntimeClientLogger | DebuggerWithLogLevel,\n): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction isTypeSpecRuntimeLogLevel(level: string): level is TypeSpecRuntimeLogLevel {\n  return TYPESPEC_RUNTIME_LOG_LEVELS.includes(level as any);\n}\n\n/**\n * Creates a logger context base on the provided options.\n * @param options - The options for creating a logger context.\n * @returns The logger context.\n */\nexport function createLoggerContext(options: CreateLoggerContextOptions): LoggerContext {\n  const registeredLoggers = new Set<DebuggerWithLogLevel>();\n  const logLevelFromEnv =\n    (typeof process !== \"undefined\" && process.env && process.env[options.logLevelEnvVarName]) ||\n    undefined;\n\n  let logLevel: TypeSpecRuntimeLogLevel | undefined;\n\n  const clientLogger: TypeSpecRuntimeClientLogger = debug(options.namespace);\n  clientLogger.log = (...args) => {\n    debug.log(...args);\n  };\n\n  function contextSetLogLevel(level?: TypeSpecRuntimeLogLevel): void {\n    if (level && !isTypeSpecRuntimeLogLevel(level)) {\n      throw new Error(\n        `Unknown log level '${level}'. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\",\")}`,\n      );\n    }\n    logLevel = level;\n\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n      if (shouldEnable(logger)) {\n        enabledNamespaces.push(logger.namespace);\n      }\n    }\n\n    debug.enable(enabledNamespaces.join(\",\"));\n  }\n\n  if (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isTypeSpecRuntimeLogLevel(logLevelFromEnv)) {\n      contextSetLogLevel(logLevelFromEnv);\n    } else {\n      console.error(\n        `${options.logLevelEnvVarName} set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\n          \", \",\n        )}.`,\n      );\n    }\n  }\n\n  function shouldEnable(logger: DebuggerWithLogLevel): boolean {\n    return Boolean(logLevel && levelMap[logger.level] <= levelMap[logLevel]);\n  }\n\n  function createLogger(\n    parent: TypeSpecRuntimeClientLogger,\n    level: TypeSpecRuntimeLogLevel,\n  ): DebuggerWithLogLevel {\n    const logger: DebuggerWithLogLevel = Object.assign(parent.extend(level), {\n      level,\n    });\n\n    patchLogMethod(parent, logger);\n\n    if (shouldEnable(logger)) {\n      const enabledNamespaces = debug.disable();\n      debug.enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n\n    registeredLoggers.add(logger);\n\n    return logger;\n  }\n\n  function contextGetLogLevel(): TypeSpecRuntimeLogLevel | undefined {\n    return logLevel;\n  }\n\n  function contextCreateClientLogger(namespace: string): TypeSpecRuntimeLogger {\n    const clientRootLogger: TypeSpecRuntimeClientLogger = clientLogger.extend(namespace);\n    patchLogMethod(clientLogger, clientRootLogger);\n    return {\n      error: createLogger(clientRootLogger, \"error\"),\n      warning: createLogger(clientRootLogger, \"warning\"),\n      info: createLogger(clientRootLogger, \"info\"),\n      verbose: createLogger(clientRootLogger, \"verbose\"),\n    };\n  }\n\n  return {\n    setLogLevel: contextSetLogLevel,\n    getLogLevel: contextGetLogLevel,\n    createClientLogger: contextCreateClientLogger,\n    logger: clientLogger,\n  };\n}\n\nconst context = createLoggerContext({\n  logLevelEnvVarName: \"TYPESPEC_RUNTIME_LOG_LEVEL\",\n  namespace: \"typeSpecRuntime\",\n});\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const TypeSpecRuntimeLogger: TypeSpecRuntimeClientLogger = context.logger;\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function setLogLevel(logLevel?: TypeSpecRuntimeLogLevel): void {\n  context.setLogLevel(logLevel);\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): TypeSpecRuntimeLogLevel | undefined {\n  return context.getLogLevel();\n}\n\n/**\n * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): TypeSpecRuntimeLogger {\n  return context.createClientLogger(namespace);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpHeaders, RawHttpHeaders, RawHttpHeadersInput } from \"./interfaces.js\";\n\ninterface HeaderEntry {\n  name: string;\n  value: string;\n}\n\nfunction normalizeName(name: string): string {\n  return name.toLowerCase();\n}\n\nfunction* headerIterator(map: Map<string, HeaderEntry>): IterableIterator<[string, string]> {\n  for (const entry of map.values()) {\n    yield [entry.name, entry.value];\n  }\n}\n\nclass HttpHeadersImpl implements HttpHeaders {\n  private readonly _headersMap: Map<string, HeaderEntry>;\n\n  constructor(rawHeaders?: RawHttpHeaders | RawHttpHeadersInput) {\n    this._headersMap = new Map<string, HeaderEntry>();\n    if (rawHeaders) {\n      for (const headerName of Object.keys(rawHeaders)) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   * @param value - The value of the header to set.\n   */\n  public set(name: string, value: string | number | boolean): void {\n    this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param name - The name of the header. This value is case-insensitive.\n   */\n  public get(name: string): string | undefined {\n    return this._headersMap.get(normalizeName(name))?.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   */\n  public has(name: string): boolean {\n    return this._headersMap.has(normalizeName(name));\n  }\n\n  /**\n   * Remove the header with the provided headerName.\n   * @param name - The name of the header to remove.\n   */\n  public delete(name: string): void {\n    this._headersMap.delete(normalizeName(name));\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJSON(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const entry of this._headersMap.values()) {\n        result[entry.name] = entry.value;\n      }\n    } else {\n      for (const [normalizedName, entry] of this._headersMap) {\n        result[normalizedName] = entry.value;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJSON({ preserveCase: true }));\n  }\n\n  /**\n   * Iterate over tuples of header [name, value] pairs.\n   */\n  [Symbol.iterator](): Iterator<[string, string]> {\n    return headerIterator(this._headersMap);\n  }\n}\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders?: RawHttpHeadersInput): HttpHeaders {\n  return new HttpHeadersImpl(rawHeaders);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID(): string {\n  let uuid = \"\";\n  for (let i = 0; i < 32; i++) {\n    // Generate a random number between 0 and 15\n    const randomNumber = Math.floor(Math.random() * 16);\n    // Set the UUID version to 4 in the 13th position\n    if (i === 12) {\n      uuid += \"4\";\n    } else if (i === 16) {\n      // Set the UUID variant to \"10\" in the 17th position\n      uuid += (randomNumber & 0x3) | 0x8;\n    } else {\n      // Add a random hexadecimal digit to the UUID string\n      uuid += randomNumber.toString(16);\n    }\n    // Add hyphens to the UUID string at the appropriate positions\n    if (i === 7 || i === 11 || i === 15 || i === 19) {\n      uuid += \"-\";\n    }\n  }\n  return uuid;\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return generateUUID();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { generateUUID } from \"./uuidUtils.common.js\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : generateUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FormDataMap,\n  HttpHeaders,\n  HttpMethods,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\nimport { AuthScheme } from \"./auth/schemes.js\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignal;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n\n  /**\n   * List of authentication schemes used for this specific request.\n   * These schemes define how the request will be authenticated.\n   *\n   * If values are provided, these schemes override the client level authentication schemes.\n   * If an empty array is provided, it explicitly specifies no authentication for the request.\n   * If not provided at the request level, the client level authentication schemes will be used.\n   */\n  authSchemes?: AuthScheme[];\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n}\n\nclass PipelineRequestImpl implements PipelineRequest {\n  public url: string;\n  public method: HttpMethods;\n  public headers: HttpHeaders;\n  public timeout: number;\n  public withCredentials: boolean;\n  public body?: RequestBodyType;\n  public multipartBody?: MultipartRequestBody;\n  public formData?: FormDataMap;\n  public streamResponseStatusCodes?: Set<number>;\n  public enableBrowserStreams: boolean;\n\n  public proxySettings?: ProxySettings;\n  public disableKeepAlive: boolean;\n  public abortSignal?: AbortSignal;\n  public requestId: string;\n  public allowInsecureConnection?: boolean;\n  public onUploadProgress?: (progress: TransferProgressEvent) => void;\n  public onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  public requestOverrides?: Record<string, unknown>;\n  public authSchemes?: AuthScheme[];\n\n  constructor(options: PipelineRequestOptions) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n    this.requestOverrides = options.requestOverrides;\n    this.authSchemes = options.authSchemes;\n  }\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  return new PipelineRequestImpl(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\nconst ValidPhaseNames = new Set<PipelinePhase>([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\ninterface PipelineDescriptor {\n  policy: PipelinePolicy;\n  options: AddPolicyOptions;\n}\n\ninterface PolicyGraphNode {\n  policy: PipelinePolicy;\n  dependsOn: Set<PolicyGraphNode>;\n  dependants: Set<PolicyGraphNode>;\n  afterPhase?: Phase;\n}\n\ninterface Phase {\n  name: PipelinePhase | \"None\";\n  policies: Set<PolicyGraphNode>;\n  hasRun: boolean;\n  hasAfterPolicies: boolean;\n}\n\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline implements Pipeline {\n  private _policies: PipelineDescriptor[] = [];\n  private _orderedPolicies?: PipelinePolicy[];\n\n  private constructor(policies?: PipelineDescriptor[]) {\n    this._policies = policies?.slice(0) ?? [];\n    this._orderedPolicies = undefined;\n  }\n\n  public addPolicy(policy: PipelinePolicy, options: AddPolicyOptions = {}): void {\n    if (options.phase && options.afterPhase) {\n      throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n    }\n    if (options.phase && !ValidPhaseNames.has(options.phase)) {\n      throw new Error(`Invalid phase name: ${options.phase}`);\n    }\n    if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n      throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n    }\n    this._policies.push({\n      policy,\n      options,\n    });\n    this._orderedPolicies = undefined;\n  }\n\n  public removePolicy(options: { name?: string; phase?: string }): PipelinePolicy[] {\n    const removedPolicies: PipelinePolicy[] = [];\n\n    this._policies = this._policies.filter((policyDescriptor) => {\n      if (\n        (options.name && policyDescriptor.policy.name === options.name) ||\n        (options.phase && policyDescriptor.options.phase === options.phase)\n      ) {\n        removedPolicies.push(policyDescriptor.policy);\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this._orderedPolicies = undefined;\n\n    return removedPolicies;\n  }\n\n  public sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse> {\n    const policies = this.getOrderedPolicies();\n\n    const pipeline = policies.reduceRight<SendRequest>(\n      (next, policy) => {\n        return (req: PipelineRequest) => {\n          return policy.sendRequest(req, next);\n        };\n      },\n      (req: PipelineRequest) => httpClient.sendRequest(req),\n    );\n\n    return pipeline(request);\n  }\n\n  public getOrderedPolicies(): PipelinePolicy[] {\n    if (!this._orderedPolicies) {\n      this._orderedPolicies = this.orderPolicies();\n    }\n    return this._orderedPolicies;\n  }\n\n  public clone(): Pipeline {\n    return new HttpPipeline(this._policies);\n  }\n\n  public static create(): Pipeline {\n    return new HttpPipeline();\n  }\n\n  private orderPolicies(): PipelinePolicy[] {\n    /**\n     * The goal of this method is to reliably order pipeline policies\n     * based on their declared requirements when they were added.\n     *\n     * Order is first determined by phase:\n     *\n     * 1. Serialize Phase\n     * 2. Policies not in a phase\n     * 3. Deserialize Phase\n     * 4. Retry Phase\n     * 5. Sign Phase\n     *\n     * Within each phase, policies are executed in the order\n     * they were added unless they were specified to execute\n     * before/after other policies or after a particular phase.\n     *\n     * To determine the final order, we will walk the policy list\n     * in phase order multiple times until all dependencies are\n     * satisfied.\n     *\n     * `afterPolicies` are the set of policies that must be\n     * executed before a given policy. This requirement is\n     * considered satisfied when each of the listed policies\n     * have been scheduled.\n     *\n     * `beforePolicies` are the set of policies that must be\n     * executed after a given policy. Since this dependency\n     * can be expressed by converting it into a equivalent\n     * `afterPolicies` declarations, they are normalized\n     * into that form for simplicity.\n     *\n     * An `afterPhase` dependency is considered satisfied when all\n     * policies in that phase have scheduled.\n     *\n     */\n    const result: PipelinePolicy[] = [];\n\n    // Track all policies we know about.\n    const policyMap: Map<string, PolicyGraphNode> = new Map<string, PolicyGraphNode>();\n\n    function createPhase(name: PipelinePhase | \"None\"): Phase {\n      return {\n        name,\n        policies: new Set<PolicyGraphNode>(),\n        hasRun: false,\n        hasAfterPolicies: false,\n      };\n    }\n\n    // Track policies for each phase.\n    const serializePhase = createPhase(\"Serialize\");\n    const noPhase = createPhase(\"None\");\n    const deserializePhase = createPhase(\"Deserialize\");\n    const retryPhase = createPhase(\"Retry\");\n    const signPhase = createPhase(\"Sign\");\n\n    // a list of phases in order\n    const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n\n    // Small helper function to map phase name to each Phase\n    function getPhase(phase: PipelinePhase | undefined): Phase {\n      if (phase === \"Retry\") {\n        return retryPhase;\n      } else if (phase === \"Serialize\") {\n        return serializePhase;\n      } else if (phase === \"Deserialize\") {\n        return deserializePhase;\n      } else if (phase === \"Sign\") {\n        return signPhase;\n      } else {\n        return noPhase;\n      }\n    }\n\n    // First walk each policy and create a node to track metadata.\n    for (const descriptor of this._policies) {\n      const policy = descriptor.policy;\n      const options = descriptor.options;\n      const policyName = policy.name;\n      if (policyMap.has(policyName)) {\n        throw new Error(\"Duplicate policy names not allowed in pipeline\");\n      }\n      const node: PolicyGraphNode = {\n        policy,\n        dependsOn: new Set<PolicyGraphNode>(),\n        dependants: new Set<PolicyGraphNode>(),\n      };\n      if (options.afterPhase) {\n        node.afterPhase = getPhase(options.afterPhase);\n        node.afterPhase.hasAfterPolicies = true;\n      }\n      policyMap.set(policyName, node);\n      const phase = getPhase(options.phase);\n      phase.policies.add(node);\n    }\n\n    // Now that each policy has a node, connect dependency references.\n    for (const descriptor of this._policies) {\n      const { policy, options } = descriptor;\n      const policyName = policy.name;\n      const node = policyMap.get(policyName);\n      if (!node) {\n        throw new Error(`Missing node for policy ${policyName}`);\n      }\n\n      if (options.afterPolicies) {\n        for (const afterPolicyName of options.afterPolicies) {\n          const afterNode = policyMap.get(afterPolicyName);\n          if (afterNode) {\n            // Linking in both directions helps later\n            // when we want to notify dependants.\n            node.dependsOn.add(afterNode);\n            afterNode.dependants.add(node);\n          }\n        }\n      }\n      if (options.beforePolicies) {\n        for (const beforePolicyName of options.beforePolicies) {\n          const beforeNode = policyMap.get(beforePolicyName);\n          if (beforeNode) {\n            // To execute before another node, make it\n            // depend on the current node.\n            beforeNode.dependsOn.add(node);\n            node.dependants.add(beforeNode);\n          }\n        }\n      }\n    }\n\n    function walkPhase(phase: Phase): void {\n      phase.hasRun = true;\n      // Sets iterate in insertion order\n      for (const node of phase.policies) {\n        if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n          // If this node is waiting on a phase to complete,\n          // we need to skip it for now.\n          // Even if the phase is empty, we should wait for it\n          // to be walked to avoid re-ordering policies.\n          continue;\n        }\n        if (node.dependsOn.size === 0) {\n          // If there's nothing else we're waiting for, we can\n          // add this policy to the result list.\n          result.push(node.policy);\n          // Notify anything that depends on this policy that\n          // the policy has been scheduled.\n          for (const dependant of node.dependants) {\n            dependant.dependsOn.delete(node);\n          }\n          policyMap.delete(node.policy.name);\n          phase.policies.delete(node);\n        }\n      }\n    }\n\n    function walkPhases(): void {\n      for (const phase of orderedPhases) {\n        walkPhase(phase);\n        // if the phase isn't complete\n        if (phase.policies.size > 0 && phase !== noPhase) {\n          if (!noPhase.hasRun) {\n            // Try running noPhase to see if that unblocks this phase next tick.\n            // This can happen if a phase that happens before noPhase\n            // is waiting on a noPhase policy to complete.\n            walkPhase(noPhase);\n          }\n          // Don't proceed to the next phase until this phase finishes.\n          return;\n        }\n\n        if (phase.hasAfterPolicies) {\n          // Run any policies unblocked by this phase\n          walkPhase(noPhase);\n        }\n      }\n    }\n\n    // Iterate until we've put every node in the result list.\n    let iteration = 0;\n    while (policyMap.size > 0) {\n      iteration++;\n      const initialResultLength = result.length;\n      // Keep walking each phase in order until we can order every node.\n      walkPhases();\n      // The result list *should* get at least one larger each time\n      // after the first full pass.\n      // Otherwise, we're going to loop forever.\n      if (result.length <= initialResultLength && iteration > 1) {\n        throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return HttpPipeline.create();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const custom = Symbol();\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type UnknownObject, isObject } from \"./object.js\";\n\n/**\n * Sanitizer options\n */\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"ms-cv\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Accept-Encoding\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"WWW-Authenticate\",\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\n/**\n * A utility class to sanitize objects for logging.\n */\nexport class Sanitizer {\n  private allowedHeaderNames: Set<string>;\n  private allowedQueryParameters: Set<string>;\n\n  constructor({\n    additionalAllowedHeaderNames: allowedHeaderNames = [],\n    additionalAllowedQueryParameters: allowedQueryParameters = [],\n  }: SanitizerOptions = {}) {\n    allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n    allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  /**\n   * Sanitizes an object for logging.\n   * @param obj - The object to sanitize\n   * @returns - The sanitized object as a string\n   */\n  public sanitize(obj: unknown): string {\n    const seen = new Set<unknown>();\n    return JSON.stringify(\n      obj,\n      (key: string, value: unknown) => {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n          return {\n            ...value,\n            name: value.name,\n            message: value.message,\n          };\n        }\n\n        if (key === \"headers\") {\n          return this.sanitizeHeaders(value as UnknownObject);\n        } else if (key === \"url\") {\n          return this.sanitizeUrl(value as string);\n        } else if (key === \"query\") {\n          return this.sanitizeQuery(value as UnknownObject);\n        } else if (key === \"body\") {\n          // Don't log the request body\n          return undefined;\n        } else if (key === \"response\") {\n          // Don't log response again\n          return undefined;\n        } else if (key === \"operationSpec\") {\n          // When using sendOperationRequest, the request carries a massive\n          // field with the autorest spec. No need to log it.\n          return undefined;\n        } else if (Array.isArray(value) || isObject(value)) {\n          if (seen.has(value)) {\n            return \"[Circular]\";\n          }\n          seen.add(value);\n        }\n\n        return value;\n      },\n      2,\n    );\n  }\n\n  /**\n   * Sanitizes a URL for logging.\n   * @param value - The URL to sanitize\n   * @returns - The sanitized URL as a string\n   */\n  public sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null || value === \"\") {\n      return value;\n    }\n\n    const url = new URL(value);\n\n    if (!url.search) {\n      return value;\n    }\n\n    for (const [key] of url.searchParams) {\n      if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n        url.searchParams.set(key, RedactedString);\n      }\n    }\n\n    return url.toString();\n  }\n\n  private sanitizeHeaders(obj: UnknownObject): UnknownObject {\n    const sanitized: UnknownObject = {};\n    for (const key of Object.keys(obj)) {\n      if (this.allowedHeaderNames.has(key.toLowerCase())) {\n        sanitized[key] = obj[key];\n      } else {\n        sanitized[key] = RedactedString;\n      }\n    }\n    return sanitized;\n  }\n\n  private sanitizeQuery(value: UnknownObject): UnknownObject {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: UnknownObject = {};\n\n    for (const k of Object.keys(value)) {\n      if (this.allowedQueryParameters.has(k.toLowerCase())) {\n        sanitized[k] = value[k];\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"./util/error.js\";\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  public code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  public statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  public request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  public response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  public details?: unknown;\n\n  constructor(message: string, options: RestErrorOptions = {}) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = options.code;\n    this.statusCode = options.statusCode;\n\n    // The request and response may contain sensitive information in the headers or body.\n    // To help prevent this sensitive information being accidentally logged, the request and response\n    // properties are marked as non-enumerable here. This prevents them showing up in the output of\n    // JSON.stringify and console.log.\n    Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n    Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n\n    // Logging method for util.inspect in Node\n    Object.defineProperty(this, custom, {\n      value: () => {\n        // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n        // response get sanitized.\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize({\n          ...this,\n          request: this.request,\n          response: this.response,\n        })}`;\n      },\n      enumerable: false,\n    });\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n}\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  if (e instanceof RestError) {\n    return true;\n  }\n  return isError(e) && e.name === \"RestError\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ndeclare global {\n  // stub these out for the browser\n  function btoa(input: string): string;\n  function atob(input: string): string;\n}\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  switch (format) {\n    case \"utf-8\":\n      return uint8ArrayToUtf8String(bytes);\n    case \"base64\":\n      return uint8ArrayToBase64(bytes);\n    case \"base64url\":\n      return uint8ArrayToBase64Url(bytes);\n    case \"hex\":\n      return uint8ArrayToHexString(bytes);\n  }\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  switch (format) {\n    case \"utf-8\":\n      return utf8StringToUint8Array(value);\n    case \"base64\":\n      return base64ToUint8Array(value);\n    case \"base64url\":\n      return base64UrlToUint8Array(value);\n    case \"hex\":\n      return hexStringToUint8Array(value);\n  }\n}\n\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\nexport function uint8ArrayToBase64(bytes: Uint8Array): string {\n  return btoa([...bytes].map((x) => String.fromCharCode(x)).join(\"\"));\n}\n\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\nexport function uint8ArrayToBase64Url(bytes: Uint8Array): string {\n  return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\nexport function uint8ArrayToUtf8String(bytes: Uint8Array): string {\n  const decoder = new TextDecoder();\n  const dataString = decoder.decode(bytes);\n  return dataString;\n}\n\n/**\n * Decodes a Uint8Array into a hex string\n * @internal\n */\nexport function uint8ArrayToHexString(bytes: Uint8Array): string {\n  return [...bytes].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\nexport function utf8StringToUint8Array(value: string): Uint8Array {\n  return new TextEncoder().encode(value);\n}\n\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\nexport function base64ToUint8Array(value: string): Uint8Array {\n  return new Uint8Array([...atob(value)].map((x) => x.charCodeAt(0)));\n}\n\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\nexport function base64UrlToUint8Array(value: string): Uint8Array {\n  const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  return base64ToUint8Array(base64String);\n}\n\nconst hexDigits = new Set(\"0123456789abcdefABCDEF\");\n\n/**\n * Encodes a hex string into a Uint8Array\n * @internal\n */\nexport function hexStringToUint8Array(value: string): Uint8Array {\n  // If value has odd length, the last character will be ignored, consistent with NodeJS Buffer behavior\n  const bytes = new Uint8Array(value.length / 2);\n  for (let i = 0; i < value.length / 2; ++i) {\n    const highNibble = value[2 * i];\n    const lowNibble = value[2 * i + 1];\n    if (!hexDigits.has(highNibble) || !hexDigits.has(lowNibble)) {\n      // Replicate Node Buffer behavior by exiting early when we encounter an invalid byte\n      return bytes.slice(0, i);\n    }\n\n    bytes[i] = parseInt(`${highNibble}${lowNibble}`, 16);\n  }\n\n  return bytes;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\nexport function isWebReadableStream(x: unknown): x is ReadableStream {\n  return Boolean(\n    x &&\n      typeof (x as ReadableStream).getReader === \"function\" &&\n      typeof (x as ReadableStream).tee === \"function\",\n  );\n}\n\nexport function isBinaryBody(\n  body: unknown,\n): body is\n  | Uint8Array\n  | NodeJS.ReadableStream\n  | ReadableStream<Uint8Array>\n  | (() => NodeJS.ReadableStream)\n  | (() => ReadableStream<Uint8Array>)\n  | Blob {\n  return (\n    body !== undefined &&\n    (body instanceof Uint8Array ||\n      isReadableStream(body) ||\n      typeof body === \"function\" ||\n      body instanceof Blob)\n  );\n}\n\nexport function isReadableStream(x: unknown): x is ReadableStream | NodeJS.ReadableStream {\n  return isNodeReadableStream(x) || isWebReadableStream(x);\n}\n\nexport function isBlob(x: unknown): x is Blob {\n  return typeof (x as Blob).stream === \"function\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"./abort-controller/AbortError.js\";\nimport type {\n  HttpClient,\n  HttpHeaders as PipelineHeaders,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { RestError } from \"./restError.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./util/typeGuards.js\";\n\n/**\n * Checks if the body is a Blob or Blob-like\n */\nfunction isBlob(body: unknown): body is Blob {\n  // File objects count as a type of Blob, so we want to use instanceof explicitly\n  return (typeof Blob === \"function\" || typeof Blob === \"object\") && body instanceof Blob;\n}\n\n/**\n * A HttpClient implementation that uses window.fetch to send HTTP requests.\n * @internal\n */\nclass FetchHttpClient implements HttpClient {\n  /**\n   * Makes a request over an underlying transport layer and returns the response.\n   * @param request - The request to be made.\n   */\n  public async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n\n    if (isInsecure && !request.allowInsecureConnection) {\n      throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n    }\n\n    if (request.proxySettings) {\n      throw new Error(\"HTTP proxy is not supported in browser environment\");\n    }\n\n    try {\n      return await makeRequest(request);\n    } catch (e: any) {\n      throw getError(e, request);\n    }\n  }\n}\n\n/**\n * Sends a request\n */\nasync function makeRequest(request: PipelineRequest): Promise<PipelineResponse> {\n  const { abortController, abortControllerCleanup } = setupAbortSignal(request);\n  try {\n    const headers = buildFetchHeaders(request.headers);\n    const { streaming, body: requestBody } = buildRequestBody(request);\n    const requestInit: RequestInit = {\n      body: requestBody,\n      method: request.method,\n      headers: headers,\n      signal: abortController.signal,\n      // Cloudflare doesn't implement the full Fetch API spec\n      // because of some of it doesn't make sense in the edge.\n      // See https://github.com/cloudflare/workerd/issues/902\n      ...(\"credentials\" in Request.prototype\n        ? { credentials: request.withCredentials ? \"include\" : \"same-origin\" }\n        : {}),\n      ...(\"cache\" in Request.prototype ? { cache: \"no-store\" } : {}),\n    };\n\n    // According to https://fetch.spec.whatwg.org/#fetch-method,\n    // init.duplex must be set when body is a ReadableStream object.\n    // currently \"half\" is the only valid value.\n    if (streaming) {\n      (requestInit as any).duplex = \"half\";\n    }\n    /**\n     * Developers of the future:\n     * Do not set redirect: \"manual\" as part\n     * of request options.\n     * It will not work as you expect.\n     */\n    const response = await fetch(request.url, {\n      ...requestInit,\n      ...request.requestOverrides,\n    });\n    // If we're uploading a blob, we need to fire the progress event manually\n    if (isBlob(request.body) && request.onUploadProgress) {\n      request.onUploadProgress({ loadedBytes: request.body.size });\n    }\n    return buildPipelineResponse(response, request, abortControllerCleanup);\n  } catch (e) {\n    abortControllerCleanup?.();\n    throw e;\n  }\n}\n\n/**\n * Creates a pipeline response from a Fetch response;\n */\nasync function buildPipelineResponse(\n  httpResponse: Response,\n  request: PipelineRequest,\n  abortControllerCleanup?: () => void,\n): Promise<PipelineResponse> {\n  const headers = buildPipelineHeaders(httpResponse);\n  const response: PipelineResponse = {\n    request,\n    headers,\n    status: httpResponse.status,\n  };\n\n  const bodyStream = isWebReadableStream(httpResponse.body)\n    ? buildBodyStream(httpResponse.body, {\n        onProgress: request.onDownloadProgress,\n        onEnd: abortControllerCleanup,\n      })\n    : httpResponse.body;\n\n  if (\n    // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n    request.streamResponseStatusCodes?.has(Number.POSITIVE_INFINITY) ||\n    request.streamResponseStatusCodes?.has(response.status)\n  ) {\n    if (request.enableBrowserStreams) {\n      response.browserStreamBody = bodyStream ?? undefined;\n    } else {\n      const responseStream = new Response(bodyStream);\n      response.blobBody = responseStream.blob();\n      abortControllerCleanup?.();\n    }\n  } else {\n    const responseStream = new Response(bodyStream);\n\n    response.bodyAsText = await responseStream.text();\n    abortControllerCleanup?.();\n  }\n\n  return response;\n}\n\nfunction setupAbortSignal(request: PipelineRequest): {\n  abortController: AbortController;\n  abortControllerCleanup: (() => void) | undefined;\n} {\n  const abortController = new AbortController();\n\n  // Cleanup function\n  let abortControllerCleanup: (() => void) | undefined;\n\n  /**\n   * Attach an abort listener to the request\n   */\n  let abortListener: ((event: any) => void) | undefined;\n  if (request.abortSignal) {\n    if (request.abortSignal.aborted) {\n      throw new AbortError(\"The operation was aborted. Request has already been canceled.\");\n    }\n\n    abortListener = (event: Event) => {\n      if (event.type === \"abort\") {\n        abortController.abort();\n      }\n    };\n    request.abortSignal.addEventListener(\"abort\", abortListener);\n    abortControllerCleanup = () => {\n      if (abortListener) {\n        request.abortSignal?.removeEventListener(\"abort\", abortListener);\n      }\n    };\n  }\n\n  // If a timeout was passed, call the abort signal once the time elapses\n  if (request.timeout > 0) {\n    setTimeout(() => {\n      abortController.abort();\n    }, request.timeout);\n  }\n\n  return { abortController, abortControllerCleanup };\n}\n\n/**\n * Gets the specific error\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction getError(e: RestError, request: PipelineRequest): RestError {\n  if (e && e?.name === \"AbortError\") {\n    return e;\n  } else {\n    return new RestError(`Error sending request: ${e.message}`, {\n      code: e?.code ?? RestError.REQUEST_SEND_ERROR,\n      request,\n    });\n  }\n}\n\n/**\n * Converts PipelineRequest headers to Fetch headers\n */\nfunction buildFetchHeaders(pipelineHeaders: PipelineHeaders): Headers {\n  const headers = new Headers();\n  for (const [name, value] of pipelineHeaders) {\n    headers.append(name, value);\n  }\n\n  return headers;\n}\n\nfunction buildPipelineHeaders(httpResponse: Response): PipelineHeaders {\n  const responseHeaders = createHttpHeaders();\n  for (const [name, value] of httpResponse.headers) {\n    responseHeaders.set(name, value);\n  }\n\n  return responseHeaders;\n}\n\ninterface BuildRequestBodyResponse {\n  body:\n    | string\n    | Blob\n    | ReadableStream<Uint8Array>\n    | ArrayBuffer\n    | ArrayBufferView\n    | FormData\n    | null\n    | undefined;\n  streaming: boolean;\n}\n\nfunction buildRequestBody(request: PipelineRequest): BuildRequestBodyResponse {\n  const body = typeof request.body === \"function\" ? request.body() : request.body;\n  if (isNodeReadableStream(body)) {\n    throw new Error(\"Node streams are not supported in browser environment.\");\n  }\n\n  return isWebReadableStream(body)\n    ? { streaming: true, body: buildBodyStream(body, { onProgress: request.onUploadProgress }) }\n    : { streaming: false, body };\n}\n\n/**\n * Reads the request/response original stream and stream it through a new\n * ReadableStream, this is done to be able to report progress in a way that\n * all modern browsers support. TransformStreams would be an alternative,\n * however they are not yet supported by all browsers i.e Firefox\n */\nfunction buildBodyStream(\n  readableStream: ReadableStream<Uint8Array>,\n  options: { onProgress?: (progress: TransferProgressEvent) => void; onEnd?: () => void } = {},\n): ReadableStream<Uint8Array> {\n  let loadedBytes = 0;\n  const { onProgress, onEnd } = options;\n\n  // If the current browser supports pipeThrough we use a TransformStream\n  // to report progress\n  if (isTransformStreamSupported(readableStream)) {\n    return readableStream.pipeThrough(\n      new TransformStream({\n        transform(chunk, controller) {\n          if (chunk === null) {\n            controller.terminate();\n            return;\n          }\n\n          controller.enqueue(chunk);\n          loadedBytes += chunk.length;\n          if (onProgress) {\n            onProgress({ loadedBytes });\n          }\n        },\n        flush() {\n          onEnd?.();\n        },\n      }),\n    );\n  } else {\n    // If we can't use transform streams, wrap the original stream in a new readable stream\n    // and use pull to enqueue each chunk and report progress.\n    const reader = readableStream.getReader();\n    return new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        // When no more data needs to be consumed, break the reading\n        if (done || !value) {\n          onEnd?.();\n          // Close the stream\n          controller.close();\n          reader.releaseLock();\n          return;\n        }\n\n        loadedBytes += value?.length ?? 0;\n\n        // Enqueue the next data chunk into our target stream\n        controller.enqueue(value);\n\n        if (onProgress) {\n          onProgress({ loadedBytes });\n        }\n      },\n      cancel(reason?: string) {\n        onEnd?.();\n        return reader.cancel(reason);\n      },\n    });\n  }\n}\n\n/**\n * Create a new HttpClient instance for the browser environment.\n * @internal\n */\nexport function createFetchHttpClient(): HttpClient {\n  return new FetchHttpClient();\n}\n\nfunction isTransformStreamSupported(readableStream: ReadableStream): boolean {\n  return readableStream.pipeThrough !== undefined && self.TransformStream !== undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createFetchHttpClient } from \"./fetchHttpClient.js\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  return createFetchHttpClient();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"./logger/logger.js\";\nexport const logger = createClientLogger(\"ts-http-runtime\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getRandomIntegerInclusive } from \"./random.js\";\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  // Make sure inputs are integers.\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // Pick a random offset from zero to the size of the range.\n  // Since Math.random() can never return 1, we have to make the range one larger\n  // in order to be inclusive of the maximum value after we take the floor.\n  const offset = Math.floor(Math.random() * (max - min + 1));\n  return offset + min;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport type { PipelineResponse } from \"../interfaces.js\";\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay<T>(\n  delayInMs: number,\n  value?: T,\n  options?: {\n    abortSignal?: AbortSignal;\n    abortErrorMsg?: string;\n  },\n): Promise<T | void> {\n  return new Promise((resolve, reject) => {\n    let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    let onAborted: (() => void) | undefined = undefined;\n\n    const rejectOnAbort = (): void => {\n      return reject(\n        new AbortError(options?.abortErrorMsg ? options?.abortErrorMsg : StandardAbortMessage),\n      );\n    };\n\n    const removeListeners = (): void => {\n      if (options?.abortSignal && onAborted) {\n        options.abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    onAborted = (): void => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (options?.abortSignal && options.abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    timer = setTimeout(() => {\n      removeListeners();\n      resolve(value);\n    }, delayInMs);\n\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(\n  response: PipelineResponse,\n  headerName: string,\n): number | undefined {\n  const value = response.headers.get(headerName);\n  if (!value) return;\n  const valueAsNum = Number(value);\n  if (Number.isNaN(valueAsNum)) return;\n  return valueAsNum;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\n\n/**\n * The header that comes back from services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders: string[] = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response?: PipelineResponse): number | undefined {\n  if (!(response && [429, 503].includes(response.status))) return undefined;\n  try {\n    // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n    for (const header of AllRetryAfterHeaders) {\n      const retryAfterValue = parseHeaderValueAsNumber(response, header);\n      if (retryAfterValue === 0 || retryAfterValue) {\n        // \"Retry-After\" header ==> seconds\n        // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n        const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n        return retryAfterValue * multiplyingFactor; // in milli-seconds\n      }\n    }\n\n    // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n    const retryAfterHeader = response.headers.get(RetryAfterHeader);\n    if (!retryAfterHeader) return;\n\n    const date = Date.parse(retryAfterHeader);\n    const diff = date - Date.now();\n    // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n    return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response?: PipelineResponse): boolean {\n  return Number.isFinite(getRetryAfterInMs(response));\n}\n\nexport function throttlingRetryStrategy(): RetryStrategy {\n  return {\n    name: \"throttlingRetryStrategy\",\n    retry({ response }) {\n      const retryAfterInMs = getRetryAfterInMs(response);\n      if (!Number.isFinite(retryAfterInMs)) {\n        return { skipStrategy: true };\n      }\n      return {\n        retryAfterInMs,\n      };\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\nimport { calculateRetryDelay } from \"../util/delay.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(\n  options: {\n    /**\n     * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n     * (1 second.) The delay increases exponentially with each retry up to a maximum\n     * specified by maxRetryDelayInMs.\n     */\n    retryDelayInMs?: number;\n\n    /**\n     * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n     * to 64000 (64 seconds).\n     */\n    maxRetryDelayInMs?: number;\n\n    /**\n     * If true it won't retry if it received a system error.\n     */\n    ignoreSystemErrors?: boolean;\n\n    /**\n     * If true it won't retry if it received a non-fatal HTTP status code.\n     */\n    ignoreHttpStatusCodes?: boolean;\n  } = {},\n): RetryStrategy {\n  const retryInterval = options.retryDelayInMs ?? DEFAULT_CLIENT_RETRY_INTERVAL;\n  const maxRetryInterval = options.maxRetryDelayInMs ?? DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n\n  return {\n    name: \"exponentialRetryStrategy\",\n    retry({ retryCount, response, responseError }) {\n      const matchedSystemError = isSystemError(responseError);\n      const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n\n      const isExponential = isExponentialRetryResponse(response);\n      const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n      const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n\n      if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n        return { skipStrategy: true };\n      }\n\n      if (responseError && !matchedSystemError && !isExponential) {\n        return { errorToThrow: responseError };\n      }\n\n      return calculateRetryDelay(retryCount, {\n        retryDelayInMs: retryInterval,\n        maxRetryDelayInMs: maxRetryInterval,\n      });\n    },\n  };\n}\n\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response?: PipelineResponse): boolean {\n  return Boolean(\n    response &&\n      response.status !== undefined &&\n      (response.status >= 500 || response.status === 408) &&\n      response.status !== 501 &&\n      response.status !== 505,\n  );\n}\n\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err?: RestError): boolean {\n  if (!err) {\n    return false;\n  }\n  return (\n    err.code === \"ETIMEDOUT\" ||\n    err.code === \"ESOCKETTIMEDOUT\" ||\n    err.code === \"ECONNREFUSED\" ||\n    err.code === \"ECONNRESET\" ||\n    err.code === \"ENOENT\" ||\n    err.code === \"ENOTFOUND\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"0.2.3\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { delay } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"../retryStrategies/retryStrategy.js\";\nimport type { RestError } from \"../restError.js\";\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport type { TypeSpecRuntimeLogger } from \"../logger/logger.js\";\nimport { createClientLogger } from \"../logger/logger.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nconst retryPolicyLogger = createClientLogger(\"ts-http-runtime retryPolicy\");\n\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: TypeSpecRuntimeLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  const logger = options.logger || retryPolicyLogger;\n  return {\n    name: retryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let response: PipelineResponse | undefined;\n      let responseError: RestError | undefined;\n      let retryCount = -1;\n\n      retryRequest: while (true) {\n        retryCount += 1;\n        response = undefined;\n        responseError = undefined;\n\n        try {\n          logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n          response = await next(request);\n          logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n        } catch (e: any) {\n          logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n\n          // RestErrors are valid targets for the retry strategies.\n          // If none of the retry strategies can work with them, they will be thrown later in this policy.\n          // If the received error is not a RestError, it is immediately thrown.\n          responseError = e as RestError;\n          if (!e || responseError.name !== \"RestError\") {\n            throw e;\n          }\n\n          response = responseError.response;\n        }\n\n        if (request.abortSignal?.aborted) {\n          logger.error(`Retry ${retryCount}: Request aborted.`);\n          const abortError = new AbortError();\n          throw abortError;\n        }\n\n        if (retryCount >= (options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT)) {\n          logger.info(\n            `Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`,\n          );\n          if (responseError) {\n            throw responseError;\n          } else if (response) {\n            return response;\n          } else {\n            throw new Error(\"Maximum retries reached with no response or error to throw\");\n          }\n        }\n\n        logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n\n        strategiesLoop: for (const strategy of strategies) {\n          const strategyLogger = strategy.logger || logger;\n          strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n\n          const modifiers = strategy.retry({\n            retryCount,\n            response,\n            responseError,\n          });\n\n          if (modifiers.skipStrategy) {\n            strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n            continue strategiesLoop;\n          }\n\n          const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n\n          if (errorToThrow) {\n            strategyLogger.error(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`,\n              errorToThrow,\n            );\n            throw errorToThrow;\n          }\n\n          if (retryAfterInMs || retryAfterInMs === 0) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`,\n            );\n            await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n            continue retryRequest;\n          }\n\n          if (redirectTo) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`,\n            );\n            request.url = redirectTo;\n            continue retryRequest;\n          }\n        }\n\n        if (responseError) {\n          logger.info(\n            `None of the retry strategies could work with the received error. Throwing it.`,\n          );\n          throw responseError;\n        }\n        if (response) {\n          logger.info(\n            `None of the retry strategies could work with the received response. Returning it.`,\n          );\n          return response;\n        }\n\n        // If all the retries skip and there's no response,\n        // we're still in the retry loop, so a new request will be sent\n        // until `maxRetries` is reached.\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ninterface Window {\n  document: unknown;\n}\n\ninterface DedicatedWorkerGlobalScope {\n  constructor: {\n    name: string;\n  };\n\n  importScripts: (...paths: string[]) => void;\n}\n\ninterface Navigator {\n  product: string;\n}\n\ninterface DenoGlobal {\n  version: {\n    deno: string;\n  };\n}\n\ninterface BunGlobal {\n  version: string;\n}\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\ndeclare const window: Window;\ndeclare const self: DedicatedWorkerGlobalScope;\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike =\n  typeof globalThis.process !== \"undefined\" &&\n  Boolean(globalThis.process.version) &&\n  Boolean(globalThis.process.versions?.node);\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport type {\n  BodyPart,\n  FormDataMap,\n  FormDataValue,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\nfunction formDataToFormDataMap(formData: FormData): FormDataMap {\n  const formDataMap: FormDataMap = {};\n  for (const [key, value] of formData.entries()) {\n    formDataMap[key] ??= [];\n    (formDataMap[key] as FormDataValue[]).push(value);\n  }\n  return formDataMap;\n}\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n        request.formData = formDataToFormDataMap(request.body);\n        request.body = undefined;\n      }\n\n      if (request.formData) {\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = wwwFormUrlEncode(request.formData);\n        } else {\n          await prepareFormData(request.formData, request);\n        }\n\n        request.formData = undefined;\n      }\n      return next(request);\n    },\n  };\n}\n\nfunction wwwFormUrlEncode(formData: FormDataMap): string {\n  const urlSearchParams = new URLSearchParams();\n  for (const [key, value] of Object.entries(formData)) {\n    if (Array.isArray(value)) {\n      for (const subValue of value) {\n        urlSearchParams.append(key, subValue.toString());\n      }\n    } else {\n      urlSearchParams.append(key, value.toString());\n    }\n  }\n  return urlSearchParams.toString();\n}\n\nasync function prepareFormData(formData: FormDataMap, request: PipelineRequest): Promise<void> {\n  // validate content type (multipart/form-data)\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n    // content type is specified and is not multipart/form-data. Exit.\n    return;\n  }\n\n  request.headers.set(\"Content-Type\", contentType ?? \"multipart/form-data\");\n\n  // set body to MultipartRequestBody using content from FormDataMap\n  const parts: BodyPart[] = [];\n\n  for (const [fieldName, values] of Object.entries(formData)) {\n    for (const value of Array.isArray(values) ? values : [values]) {\n      if (typeof value === \"string\") {\n        parts.push({\n          headers: createHttpHeaders({\n            \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n          }),\n          body: stringToUint8Array(value, \"utf-8\"),\n        });\n      } else if (value === undefined || value === null || typeof value !== \"object\") {\n        throw new Error(\n          `Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`,\n        );\n      } else {\n        // using || instead of ?? here since if value.name is empty we should create a file name\n        const fileName = (value as File).name || \"blob\";\n        const headers = createHttpHeaders();\n        headers.set(\n          \"Content-Disposition\",\n          `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`,\n        );\n\n        // again, || is used since an empty value.type means the content type is unset\n        headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n\n        parts.push({\n          headers,\n          body: value,\n        });\n      }\n    }\n  }\n  request.multipartBody = { parts };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isWebReadableStream } from \"./typeGuards.js\";\n\n/**\n * Drain the content of the given ReadableStream into a Blob.\n * The blob's content may end up in memory or on disk dependent on size.\n */\nfunction drain(stream: ReadableStream<Uint8Array>): Promise<Blob> {\n  return new Response(stream).blob();\n}\n\nasync function toBlobPart(\n  source: ReadableStream<Uint8Array> | Blob | Uint8Array,\n): Promise<BlobPart> {\n  if (source instanceof Blob || source instanceof Uint8Array) {\n    return source;\n  }\n\n  if (isWebReadableStream(source)) {\n    return drain(source);\n  } else {\n    throw new Error(\n      \"Unsupported source type. Only Blob, Uint8Array, and ReadableStream are supported in browser.\",\n    );\n  }\n}\n\n/**\n * Accepted binary data types for concat\n *\n * @internal\n */\ntype ConcatSource = ReadableStream<Uint8Array> | Blob | Uint8Array;\n\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(\n  sources: (ConcatSource | (() => ConcatSource))[],\n): Promise<(() => NodeJS.ReadableStream) | Blob> {\n  const parts = [];\n  for (const source of sources) {\n    parts.push(await toBlobPart(typeof source === \"function\" ? source() : source));\n  }\n\n  return new Blob(parts);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BodyPart, HttpHeaders, PipelineRequest, PipelineResponse } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\nimport { randomUUID } from \"../util/uuidUtils.js\";\nimport { concat } from \"../util/concat.js\";\n\nfunction generateBoundary(): string {\n  return `----AzSDKFormBoundary${randomUUID()}`;\n}\n\nfunction encodeHeaders(headers: HttpHeaders): string {\n  let result = \"\";\n  for (const [key, value] of headers) {\n    result += `${key}: ${value}\\r\\n`;\n  }\n  return result;\n}\n\nfunction getLength(\n  source:\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream,\n): number | undefined {\n  if (source instanceof Uint8Array) {\n    return source.byteLength;\n  } else if (isBlob(source)) {\n    // if was created using createFile then -1 means we have an unknown size\n    return source.size === -1 ? undefined : source.size;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getTotalLength(\n  sources: (\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream\n  )[],\n): number | undefined {\n  let total = 0;\n  for (const source of sources) {\n    const partLength = getLength(source);\n    if (partLength === undefined) {\n      return undefined;\n    } else {\n      total += partLength;\n    }\n  }\n  return total;\n}\n\nasync function buildRequestBody(\n  request: PipelineRequest,\n  parts: BodyPart[],\n  boundary: string,\n): Promise<void> {\n  const sources = [\n    stringToUint8Array(`--${boundary}`, \"utf-8\"),\n    ...parts.flatMap((part) => [\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      part.body,\n      stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n    ]),\n    stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n  ];\n\n  const contentLength = getTotalLength(sources);\n  if (contentLength) {\n    request.headers.set(\"Content-Length\", contentLength);\n  }\n\n  request.body = await concat(sources);\n}\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\n\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`,\n);\n\nfunction assertValidBoundary(boundary: string): void {\n  if (boundary.length > maxBoundaryLength) {\n    throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n  }\n\n  if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n    throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n  }\n}\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  return {\n    name: multipartPolicyName,\n    async sendRequest(request, next): Promise<PipelineResponse> {\n      if (!request.multipartBody) {\n        return next(request);\n      }\n\n      if (request.body) {\n        throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n      }\n\n      let boundary = request.multipartBody.boundary;\n\n      const contentTypeHeader = request.headers.get(\"Content-Type\") ?? \"multipart/mixed\";\n      const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n      if (!parsedHeader) {\n        throw new Error(\n          `Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`,\n        );\n      }\n\n      const [, contentType, parsedBoundary] = parsedHeader;\n      if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n        throw new Error(\n          `Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`,\n        );\n      }\n\n      boundary ??= parsedBoundary;\n      if (boundary) {\n        assertValidBoundary(boundary);\n      } else {\n        boundary = generateBoundary();\n      }\n      request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n      await buildRequestBody(request, request.multipartBody.parts, boundary);\n\n      request.multipartBody = undefined;\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\nimport { createEmptyPipeline as tspCreateEmptyPipeline } from \"@typespec/ts-http-runtime\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return tspCreateEmptyPipeline() as Pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createLoggerContext } from \"@typespec/ts-http-runtime/internal/logger\";\n\nconst context = createLoggerContext({\n  logLevelEnvVarName: \"AZURE_LOG_LEVEL\",\n  namespace: \"azure\",\n});\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = context.logger;\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  context.setLogLevel(level);\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return context.getLogLevel();\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  return context.createClientLogger(namespace);\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const proxyPolicyName = \"proxyPolicy\";\nconst errorMessage = \"proxyPolicy is not supported in browser environment\";\n\nexport function getDefaultProxySettings(): never {\n  throw new Error(errorMessage);\n}\n\n/**\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function proxyPolicy(): never {\n  throw new Error(errorMessage);\n}\n\n/**\n * A function to reset the cached agents.\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n * @internal\n */\nexport function resetCachedProxyAgents(): never {\n  throw new Error(errorMessage);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  const { maxRetries = 20 } = options;\n  return {\n    name: redirectPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return handleRedirect(next, response, maxRetries);\n    },\n  };\n}\n\nasync function handleRedirect(\n  next: SendRequest,\n  response: PipelineResponse,\n  maxRetries: number,\n  currentRetries: number = 0,\n): Promise<PipelineResponse> {\n  const { request, status, headers } = response;\n  const locationHeader = headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    currentRetries < maxRetries\n  ) {\n    const url = new URL(locationHeader, request.url);\n    request.url = url.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      request.headers.delete(\"Content-Length\");\n      delete request.body;\n    }\n\n    request.headers.delete(\"Authorization\");\n\n    const res = await next(request);\n    return handleRedirect(next, res, maxRetries, currentRetries + 1);\n  }\n\n  return response;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"@azure/logger\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport {\n  logPolicyName as tspLogPolicyName,\n  logPolicy as tspLogPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = tspLogPolicyName;\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  return tspLogPolicy({\n    logger: coreLogger.info,\n    ...options,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"../logger/logger.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  const logger = options.logger ?? coreLogger.info;\n  const sanitizer = new Sanitizer({\n    additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  return {\n    name: logPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!logger.enabled) {\n        return next(request);\n      }\n\n      logger(`Request: ${sanitizer.sanitize(request)}`);\n\n      const response = await next(request);\n\n      logger(`Response status code: ${response.status}`);\n      logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n\n      return response;\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"1.21.0\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\n\nfunction getUserAgentString(telemetryInfo: Map<string, string>): string {\n  const parts: string[] = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n\n/**\n * @internal\n */\nexport function getUserAgentHeaderName(): string {\n  return getHeaderName();\n}\n\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix?: string): Promise<string> {\n  const runtimeInfo = new Map<string, string>();\n  runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n  await setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n */\nexport function getHeaderName(): string {\n  return \"x-ms-useragent\";\n}\n\ninterface BrowserBrand {\n  brand: string;\n  version: string;\n}\n\ninterface NavigatorEx extends Navigator {\n  userAgentData?: {\n    brands: BrowserBrand[];\n    mobile: boolean;\n    platform?: string;\n    getHighEntropyValues: (hints: string[]) => Promise<{\n      architecture: string;\n      bitness: string;\n      brands: BrowserBrand[];\n      formFactor: string;\n      fullVersionList: BrowserBrand[];\n      mobile: boolean;\n      model: string;\n      platform: string;\n      platformVersion: string;\n      wow64: boolean;\n    }>;\n  };\n}\n\ndeclare const globalThis: {\n  navigator?: NavigatorEx;\n  EdgeRuntime?: unknown;\n};\n\nfunction getBrowserInfo(userAgent: string): BrowserBrand | undefined {\n  const browserRegexes = [\n    { name: \"Firefox\", regex: /Firefox\\/([\\d.]+)/ },\n    { name: \"Safari\", regex: /Version\\/([\\d.]+).*Safari/ },\n  ];\n\n  for (const browser of browserRegexes) {\n    const match = userAgent.match(browser.regex);\n    if (match) {\n      return { brand: browser.name, version: match[1] };\n    }\n  }\n\n  return undefined;\n}\n\nfunction getBrandVersionString(brands: BrowserBrand[]): BrowserBrand | undefined {\n  const brandOrder = [\"Google Chrome\", \"Microsoft Edge\", \"Opera\", \"Brave\", \"Chromium\"];\n  for (const brand of brandOrder) {\n    const foundBrand = brands.find((b) => b.brand === brand);\n    if (foundBrand) {\n      return foundBrand;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map: Map<string, string>): Promise<void> {\n  const localNavigator = globalThis.navigator as NavigatorEx;\n  let osPlatform = \"unknown\";\n  if (localNavigator?.userAgentData) {\n    const entropyValues = await localNavigator.userAgentData.getHighEntropyValues([\n      \"architecture\",\n      \"platformVersion\",\n    ]);\n    osPlatform = `${entropyValues.architecture}-${entropyValues.platform}-${entropyValues.platformVersion}`;\n\n    // Get the brand and version\n    const brand = getBrandVersionString(localNavigator.userAgentData.brands);\n    if (brand) {\n      map.set(brand.brand, brand.version);\n    }\n  } else if (localNavigator?.platform) {\n    osPlatform = localNavigator.platform;\n    const brand = getBrowserInfo(localNavigator.userAgent);\n    if (brand) {\n      map.set(brand.brand, brand.version);\n    }\n  } else if (typeof globalThis.EdgeRuntime === \"string\") {\n    map.set(\"EdgeRuntime\", globalThis.EdgeRuntime);\n  }\n\n  map.set(\"OS\", osPlatform);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, await userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortOptions } from \"./aborterUtils.js\";\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\nimport { getRandomIntegerInclusive } from \"@typespec/ts-http-runtime/internal/util\";\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions extends AbortOptions {}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  const { abortSignal, abortErrorMsg } = options ?? {};\n  return createAbortablePromise(\n    (resolve) => {\n      token = setTimeout(resolve, timeInMs);\n    },\n    {\n      cleanupBeforeAbort: () => clearTimeout(token),\n      abortSignal,\n      abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    },\n  );\n}\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as tspRuntime from \"@typespec/ts-http-runtime/internal/util\";\n\nexport {\n  type AbortOptions,\n  type AbortablePromiseBuilder,\n  cancelablePromiseRace,\n} from \"./aborterUtils.js\";\nexport {\n  type CreateAbortablePromiseOptions,\n  createAbortablePromise,\n} from \"./createAbortablePromise.js\";\nexport { type DelayOptions, delay } from \"./delay.js\";\nexport { getErrorMessage } from \"./error.js\";\nexport { isDefined, isObjectWithProperties, objectHasProperty } from \"./typeGuards.js\";\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n *\n * @param retryAttempt - The current retry attempt number.\n *\n * @param config - The exponential retry configuration.\n *\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): {\n  retryAfterInMs: number;\n} {\n  return tspRuntime.calculateRetryDelay(retryAttempt, config);\n}\n\n/**\n * Generates a SHA-256 hash.\n *\n * @param content - The data to be included in the hash.\n *\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport function computeSha256Hash(content: string, encoding: \"base64\" | \"hex\"): Promise<string> {\n  return tspRuntime.computeSha256Hash(content, encoding);\n}\n\n/**\n * Generates a SHA-256 HMAC signature.\n *\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n *\n * @param stringToSign - The data to be signed.\n *\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport function computeSha256Hmac(\n  key: string,\n  stringToSign: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  return tspRuntime.computeSha256Hmac(key, stringToSign, encoding);\n}\n\n/**\n * Returns a random integer value between a lower and upper bound, inclusive of both bounds. Note that this uses Math.random and isn't secure. If you need to use this for any kind of security purpose, find a better source of random.\n *\n * @param min - The smallest integer value allowed.\n *\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  return tspRuntime.getRandomIntegerInclusive(min, max);\n}\n\n/**\n * Typeguard for an error object shape (has name and message)\n *\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  return tspRuntime.isError(e);\n}\n\n/**\n * Helper to determine when an input is a generic JS object.\n *\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return tspRuntime.isObject(input);\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return tspRuntime.randomUUID();\n}\n\n/**\n * Supported HTTP methods to use when making requests.\n *\n * @public\n */\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = {\n  [s: string]: unknown;\n};\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\nexport const isBrowser: boolean = tspRuntime.isBrowser;\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun: boolean = tspRuntime.isBun;\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno: boolean = tspRuntime.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n *\n * @deprecated\n *\n * Use `isNodeLike` instead.\n */\nexport const isNode: boolean = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike: boolean = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime: boolean = tspRuntime.isNodeRuntime;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\nexport const isReactNative: boolean = tspRuntime.isReactNative;\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker: boolean = tspRuntime.isWebWorker;\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  return tspRuntime.uint8ArrayToString(bytes, format);\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  return tspRuntime.stringToUint8Array(value, format);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNodeLike } from \"@azure/core-util\";\n\nfunction isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\n/**\n * Options passed into createFile specifying metadata about the file.\n */\nexport interface CreateFileOptions {\n  /**\n   * The MIME type of the file.\n   */\n  type?: string;\n\n  /**\n   * Last modified time of the file as a UNIX timestamp.\n   * This will default to the current date.\n   */\n  lastModified?: number;\n\n  /**\n   * relative path of this file when uploading a directory.\n   */\n  webkitRelativePath?: string;\n}\n\n/**\n * Extra options for createFile when a stream is being passed in.\n */\nexport interface CreateFileFromStreamOptions extends CreateFileOptions {\n  /**\n   * Size of the file represented by the stream in bytes.\n   *\n   * This will be used by the pipeline when calculating the Content-Length header\n   * for the overall request.\n   */\n  size?: number;\n}\n\nconst unimplementedMethods = {\n  arrayBuffer: () => {\n    throw new Error(\"Not implemented\");\n  },\n  bytes: () => {\n    throw new Error(\"Not implemented\");\n  },\n  slice: () => {\n    throw new Error(\"Not implemented\");\n  },\n  text: () => {\n    throw new Error(\"Not implemented\");\n  },\n};\n\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent: unique symbol = Symbol(\"rawContent\");\n\n/**\n * Type signature of a blob-like object with a raw content property.\n */\nexport interface RawContent extends Blob {\n  [rawContent](): Uint8Array | NodeJS.ReadableStream | ReadableStream<Uint8Array>;\n}\n\n/**\n * Type guard to check if a given object is a blob-like object with a raw content property.\n */\nexport function hasRawContent(x: unknown): x is RawContent {\n  return typeof (x as RawContent)[rawContent] === \"function\";\n}\n\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the actual blob.\n *\n * @internal\n */\nexport function getRawContent(\n  blob: Blob,\n): Blob | NodeJS.ReadableStream | ReadableStream<Uint8Array> | Uint8Array {\n  if (hasRawContent(blob)) {\n    return blob[rawContent]();\n  } else {\n    return blob;\n  }\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(\n  stream: () => ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n  name: string,\n  options: CreateFileFromStreamOptions = {},\n): File {\n  return {\n    ...unimplementedMethods,\n    type: options.type ?? \"\",\n    lastModified: options.lastModified ?? new Date().getTime(),\n    webkitRelativePath: options.webkitRelativePath ?? \"\",\n    size: options.size ?? -1,\n    name,\n    stream: () => {\n      const s = stream();\n      if (isNodeReadableStream(s)) {\n        throw new Error(\n          \"Not supported: a Node stream was provided as input to createFileFromStream.\",\n        );\n      }\n\n      return s;\n    },\n    [rawContent]: stream,\n  } as File & RawContent;\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(\n  content: Uint8Array,\n  name: string,\n  options: CreateFileOptions = {},\n): File {\n  if (isNodeLike) {\n    return {\n      ...unimplementedMethods,\n      type: options.type ?? \"\",\n      lastModified: options.lastModified ?? new Date().getTime(),\n      webkitRelativePath: options.webkitRelativePath ?? \"\",\n      size: content.byteLength,\n      name,\n      arrayBuffer: async () => content.buffer,\n      stream: () => new Blob([content]).stream(),\n      [rawContent]: () => content,\n    } as File & RawContent;\n  } else {\n    return new File([content], name, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  multipartPolicyName as tspMultipartPolicyName,\n  multipartPolicy as tspMultipartPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\nimport type {\n  PipelineRequest as TspPipelineRequest,\n  SendRequest as TspSendRequest,\n} from \"@typespec/ts-http-runtime\";\nimport { getRawContent, hasRawContent } from \"../util/file.js\";\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = tspMultipartPolicyName;\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  const tspPolicy = tspMultipartPolicy();\n\n  return {\n    name: multipartPolicyName,\n    sendRequest: async (request, next) => {\n      if (request.multipartBody) {\n        for (const part of request.multipartBody.parts) {\n          if (hasRawContent(part.body)) {\n            part.body = getRawContent(part.body);\n          }\n        }\n      }\n\n      return tspPolicy.sendRequest(request as TspPipelineRequest, next as TspSendRequest);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  decompressResponsePolicyName as tspDecompressResponsePolicyName,\n  decompressResponsePolicy as tspDecompressResponsePolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexport const decompressResponsePolicyName = tspDecompressResponsePolicyName;\n\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport function decompressResponsePolicy(): PipelinePolicy {\n  return tspDecompressResponsePolicy();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\n\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n\n/**\n * decompressResponsePolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function decompressResponsePolicy(): never {\n  throw new Error(\"decompressResponsePolicy is not supported in browser environment\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  defaultRetryPolicyName as tspDefaultRetryPolicyName,\n  defaultRetryPolicy as tspDefaultRetryPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = tspDefaultRetryPolicyName;\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return tspDefaultRetryPolicy(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return {\n    name: defaultRetryPolicyName,\n    sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    }).sendRequest,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ProxySettings } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  proxyPolicy as tspProxyPolicy,\n  proxyPolicyName as tspProxyPolicyName,\n  getDefaultProxySettings as tspGetDefaultProxySettings,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = tspProxyPolicyName;\n\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  return tspGetDefaultProxySettings(proxyUrl);\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  },\n): PipelinePolicy {\n  return tspProxyPolicy(proxySettings, options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { TracingContext, TracingSpan } from \"./interfaces.js\";\n\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options: CreateTracingContextOptions = {}): TracingContext {\n  let context: TracingContext = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n\n/** @internal */\nexport class TracingContextImpl implements TracingContext {\n  private _contextMap: Map<symbol, unknown>;\n  constructor(initialContext?: TracingContext) {\n    this._contextMap =\n      initialContext instanceof TracingContextImpl\n        ? new Map<symbol, unknown>(initialContext._contextMap)\n        : new Map();\n  }\n\n  setValue(key: symbol, value: unknown): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n\n  getValue(key: symbol): unknown {\n    return this._contextMap.get(key);\n  }\n\n  deleteValue(key: symbol): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}\n\n/**\n * Represents a set of items that can be set when creating a new {@link TracingContext}.\n */\nexport interface CreateTracingContextOptions {\n  /** The {@link parentContext} - the newly created context will contain all the values of the parent context unless overridden. */\n  parentContext?: TracingContext;\n  /** An initial span to set on the context. */\n  span?: TracingSpan;\n  /** The namespace to set on any child spans. */\n  namespace?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Instrumenter } from \"./interfaces.js\";\n\n/**\n * Browser-only implementation of the module's state. The browser esm variant will not load the commonjs state, so we do not need to share state between the two.\n */\nexport const state = {\n  instrumenterImplementation: undefined as Instrumenter | undefined,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  TracingContext,\n  TracingSpan,\n} from \"./interfaces.js\";\n\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\n\nexport function createDefaultTracingSpan(): TracingSpan {\n  return {\n    end: () => {\n      // noop\n    },\n    isRecording: () => false,\n    recordException: () => {\n      // noop\n    },\n    setAttribute: () => {\n      // noop\n    },\n    setStatus: () => {\n      // noop\n    },\n    addEvent: () => {\n      // noop\n    },\n  };\n}\n\nexport function createDefaultInstrumenter(): Instrumenter {\n  return {\n    createRequestHeaders: (): Record<string, string> => {\n      return {};\n    },\n    parseTraceparentHeader: (): TracingContext | undefined => {\n      return undefined;\n    },\n    startSpan: (\n      _name: string,\n      spanOptions: InstrumenterSpanOptions,\n    ): { span: TracingSpan; tracingContext: TracingContext } => {\n      return {\n        span: createDefaultTracingSpan(),\n        tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n      };\n    },\n    withContext<\n      CallbackArgs extends unknown[],\n      Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n    >(\n      _context: TracingContext,\n      callback: Callback,\n      ...callbackArgs: CallbackArgs\n    ): ReturnType<Callback> {\n      return callback(...callbackArgs);\n    },\n  };\n}\n\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter: Instrumenter): void {\n  state.instrumenterImplementation = instrumenter;\n}\n\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter(): Instrumenter {\n  if (!state.instrumenterImplementation) {\n    state.instrumenterImplementation = createDefaultInstrumenter();\n  }\n  return state.instrumenterImplementation;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\n\nimport {\n  RestError as TspRestError,\n  isRestError as tspIsRestError,\n} from \"@typespec/ts-http-runtime\";\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport interface RestErrorConstructor {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  readonly REQUEST_SEND_ERROR: string;\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  readonly PARSE_ERROR: string;\n\n  /**\n   * Prototype of RestError\n   */\n  readonly prototype: RestError;\n\n  /**\n   * Construct a new RestError.\n   */\n  new (message: string, options?: RestErrorOptions): RestError;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport interface RestError extends Error {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  details?: unknown;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const RestError: RestErrorConstructor = TspRestError as RestErrorConstructor;\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  return tspIsRestError(e);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  type TracingClient,\n  type TracingContext,\n  type TracingSpan,\n  createTracingClient,\n} from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\nimport { Sanitizer } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n\n/**\n * Options to configure the tracing policy.\n */\nexport interface TracingPolicyOptions {\n  /**\n   * String prefix to add to the user agent logged as metadata\n   * on the generated Span.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options: TracingPolicyOptions = {}): PipelinePolicy {\n  const userAgentPromise = getUserAgentValue(options.userAgentPrefix);\n  const sanitizer = new Sanitizer({\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  const tracingClient = tryCreateTracingClient();\n\n  return {\n    name: tracingPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!tracingClient) {\n        return next(request);\n      }\n\n      const userAgent = await userAgentPromise;\n\n      const spanAttributes = {\n        \"http.url\": sanitizer.sanitizeUrl(request.url),\n        \"http.method\": request.method,\n        \"http.user_agent\": userAgent,\n        requestId: request.requestId,\n      };\n      if (userAgent) {\n        spanAttributes[\"http.user_agent\"] = userAgent;\n      }\n\n      const { span, tracingContext } = tryCreateSpan(tracingClient, request, spanAttributes) ?? {};\n\n      if (!span || !tracingContext) {\n        return next(request);\n      }\n\n      try {\n        const response = await tracingClient.withContext(tracingContext, next, request);\n        tryProcessResponse(span, response);\n        return response;\n      } catch (err: any) {\n        tryProcessError(span, err);\n        throw err;\n      }\n    },\n  };\n}\n\nfunction tryCreateTracingClient(): TracingClient | undefined {\n  try {\n    return createTracingClient({\n      namespace: \"\",\n      packageName: \"@azure/core-rest-pipeline\",\n      packageVersion: SDK_VERSION,\n    });\n  } catch (e: unknown) {\n    logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryCreateSpan(\n  tracingClient: TracingClient,\n  request: PipelineRequest,\n  spanAttributes: Record<string, unknown>,\n): { span: TracingSpan; tracingContext: TracingContext } | undefined {\n  try {\n    // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n    const { span, updatedOptions } = tracingClient.startSpan(\n      `HTTP ${request.method}`,\n      { tracingOptions: request.tracingOptions },\n      {\n        spanKind: \"client\",\n        spanAttributes,\n      },\n    );\n\n    // If the span is not recording, don't do any more work.\n    if (!span.isRecording()) {\n      span.end();\n      return undefined;\n    }\n\n    // set headers\n    const headers = tracingClient.createRequestHeaders(\n      updatedOptions.tracingOptions.tracingContext,\n    );\n    for (const [key, value] of Object.entries(headers)) {\n      request.headers.set(key, value);\n    }\n    return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n  } catch (e: any) {\n    logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryProcessError(span: TracingSpan, error: unknown): void {\n  try {\n    span.setStatus({\n      status: \"error\",\n      error: isError(error) ? error : undefined,\n    });\n    if (isRestError(error) && error.statusCode) {\n      span.setAttribute(\"http.status_code\", error.statusCode);\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n\nfunction tryProcessResponse(span: TracingSpan, response: PipelineResponse): void {\n  try {\n    span.setAttribute(\"http.status_code\", response.status);\n    const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n    if (serviceRequestId) {\n      span.setAttribute(\"serviceRequestId\", serviceRequestId);\n    }\n    // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n    // Otherwise, the status MUST remain unset.\n    // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n    if (response.status >= 400) {\n      span.setStatus({\n        status: \"error\",\n      });\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options: TracingClientOptions): TracingClient {\n  const { namespace, packageName, packageVersion } = options;\n\n  function startSpan<Options extends { tracingOptions?: OperationTracingOptions }>(\n    name: string,\n    operationOptions?: Options,\n    spanOptions?: TracingSpanOptions,\n  ): {\n    span: TracingSpan;\n    updatedOptions: OptionsWithTracingContext<Options>;\n  } {\n    const startSpanResult = getInstrumenter().startSpan(name, {\n      ...spanOptions,\n      packageName: packageName,\n      packageVersion: packageVersion,\n      tracingContext: operationOptions?.tracingOptions?.tracingContext,\n    });\n    let tracingContext = startSpanResult.tracingContext;\n    const span = startSpanResult.span;\n    if (!tracingContext.getValue(knownContextKeys.namespace)) {\n      tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n    }\n    span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n    const updatedOptions: OptionsWithTracingContext<Options> = Object.assign({}, operationOptions, {\n      tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n    });\n\n    return {\n      span,\n      updatedOptions,\n    };\n  }\n\n  async function withSpan<\n    Options extends { tracingOptions?: OperationTracingOptions },\n    Callback extends (\n      updatedOptions: Options,\n      span: Omit<TracingSpan, \"end\">,\n    ) => ReturnType<Callback>,\n  >(\n    name: string,\n    operationOptions: Options,\n    callback: Callback,\n    spanOptions?: TracingSpanOptions,\n  ): Promise<Resolved<ReturnType<Callback>>> {\n    const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n    try {\n      const result = await withContext(updatedOptions.tracingOptions.tracingContext, () =>\n        Promise.resolve(callback(updatedOptions, span)),\n      );\n      span.setStatus({ status: \"success\" });\n      return result as ReturnType<typeof withSpan>;\n    } catch (err: any) {\n      span.setStatus({ status: \"error\", error: err });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  function withContext<\n    CallbackArgs extends unknown[],\n    Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n  >(\n    context: TracingContext,\n    callback: Callback,\n    ...callbackArgs: CallbackArgs\n  ): ReturnType<Callback> {\n    return getInstrumenter().withContext(context, callback, ...callbackArgs);\n  }\n\n  /**\n   * Parses a traceparent header value into a span identifier.\n   *\n   * @param traceparentHeader - The traceparent header to parse.\n   * @returns An implementation-specific identifier for the span.\n   */\n  function parseTraceparentHeader(traceparentHeader: string): TracingContext | undefined {\n    return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n  }\n\n  /**\n   * Creates a set of request headers to propagate tracing information to a backend.\n   *\n   * @param tracingContext - The context containing the span to serialize.\n   * @returns The set of headers to add to a request.\n   */\n  function createRequestHeaders(tracingContext?: TracingContext): Record<string, string> {\n    return getInstrumenter().createRequestHeaders(tracingContext);\n  }\n\n  return {\n    startSpan,\n    withSpan,\n    withContext,\n    parseTraceparentHeader,\n    createRequestHeaders,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Creates a native AbortSignal which reflects the state of the provided AbortSignalLike.\n * If the AbortSignalLike is already a native AbortSignal, it is returned as is.\n * @param abortSignalLike - The AbortSignalLike to wrap.\n * @returns - An object containing the native AbortSignal and an optional cleanup function. The cleanup function should be called when the AbortSignal is no longer needed.\n */\nexport function wrapAbortSignalLike(abortSignalLike: AbortSignalLike): {\n  abortSignal: AbortSignal;\n  cleanup?: () => void;\n} {\n  if (abortSignalLike instanceof AbortSignal) {\n    return { abortSignal: abortSignalLike };\n  }\n\n  if (abortSignalLike.aborted) {\n    return { abortSignal: AbortSignal.abort((abortSignalLike as any).reason) };\n  }\n\n  const controller = new AbortController();\n  let needsCleanup = true;\n  function cleanup(): void {\n    if (needsCleanup) {\n      abortSignalLike.removeEventListener(\"abort\", listener);\n      needsCleanup = false;\n    }\n  }\n  function listener(): void {\n    controller.abort((abortSignalLike as any).reason);\n    cleanup();\n  }\n\n  abortSignalLike.addEventListener(\"abort\", listener);\n  return { abortSignal: controller.signal, cleanup };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type LogPolicyOptions, logPolicy } from \"./policies/logPolicy.js\";\nimport { type Pipeline, createEmptyPipeline } from \"./pipeline.js\";\nimport type { Agent, PipelineRetryOptions, ProxySettings, TlsSettings } from \"./interfaces.js\";\nimport { type RedirectPolicyOptions, redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { type UserAgentPolicyOptions, userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\nimport { wrapAbortSignalLikePolicy } from \"./policies/wrapAbortSignalLikePolicy.js\";\n\n/**\n * Defines options that are used to configure the HTTP pipeline for\n * an SDK client.\n */\nexport interface PipelineOptions {\n  /**\n   * Options that control how to retry failed requests.\n   */\n  retryOptions?: PipelineRetryOptions;\n\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxySettings;\n\n  /** Options for configuring Agent instance for outgoing requests */\n  agent?: Agent;\n\n  /** Options for configuring TLS authentication */\n  tlsOptions?: TlsSettings;\n\n  /**\n   * Options for how redirect responses are handled.\n   */\n  redirectOptions?: RedirectPolicyOptions;\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentPolicyOptions;\n\n  /**\n   * Options for setting common telemetry and tracing info to outgoing requests.\n   */\n  telemetryOptions?: TelemetryOptions;\n}\n\n/**\n * Defines options that are used to configure common telemetry and tracing info\n */\nexport interface TelemetryOptions {\n  /**\n   * The name of the header to pass the request ID to.\n   */\n  clientRequestIdHeaderName?: string;\n}\n\n/**\n * Defines options that are used to configure internal options of\n * the HTTP pipeline for an SDK client.\n */\nexport interface InternalPipelineOptions extends PipelineOptions {\n  /**\n   * Options to configure request/response logging.\n   */\n  loggingOptions?: LogPolicyOptions;\n}\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options: InternalPipelineOptions): Pipeline {\n  const pipeline = createEmptyPipeline();\n\n  if (isNodeLike) {\n    if (options.agent) {\n      pipeline.addPolicy(agentPolicy(options.agent));\n    }\n    if (options.tlsOptions) {\n      pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n    }\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(wrapAbortSignalLikePolicy());\n\n  pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  pipeline.addPolicy(setClientRequestIdPolicy(options.telemetryOptions?.clientRequestIdHeaderName));\n  // The multipart policy is added after policies with no phase, so that\n  // policies can be added between it and formDataPolicy to modify\n  // properties (e.g., making the boundary constant in recorded tests).\n  pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n  pipeline.addPolicy(tracingPolicy({ ...options.userAgentOptions, ...options.loggingOptions }), {\n    afterPhase: \"Retry\",\n  });\n  if (isNodeLike) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n  }\n  pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = \"agentPolicy\";\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return {\n    name: agentPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define an agent on the request, honor it over the client level one\n      if (!req.agent) {\n        req.agent = agent;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\nimport {\n  agentPolicyName as tspAgentPolicyName,\n  agentPolicy as tspAgentPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = tspAgentPolicyName;\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return tspAgentPolicy(agent);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return {\n    name: tlsPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define a request tlsSettings, honor those over the client level one\n      if (!req.tlsSettings) {\n        req.tlsSettings = tlsSettings;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\nimport {\n  tlsPolicy as tspTlsPolicy,\n  tlsPolicyName as tspTlsPolicyName,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = tspTlsPolicyName;\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return tspTlsPolicy(tlsSettings);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type PipelinePolicy } from \"../pipeline.js\";\nimport { wrapAbortSignalLike } from \"../util/wrapAbortSignal.js\";\n\nexport const wrapAbortSignalLikePolicyName = \"wrapAbortSignalLikePolicy\";\n\n/**\n * Policy that ensure that any AbortSignalLike is wrapped in a native AbortSignal for processing by the pipeline.\n * Since the ts-http-runtime expects a native AbortSignal, this policy is used to ensure that any AbortSignalLike is wrapped in a native AbortSignal.\n *\n * @returns - created policy\n */\nexport function wrapAbortSignalLikePolicy(): PipelinePolicy {\n  return {\n    name: wrapAbortSignalLikePolicyName,\n    sendRequest: async (request, next) => {\n      if (!request.abortSignal) {\n        return next(request);\n      }\n\n      const { abortSignal, cleanup } = wrapAbortSignalLike(request.abortSignal);\n      // eslint-disable-next-line no-param-reassign\n      request.abortSignal = abortSignal;\n      try {\n        return await next(request);\n      } finally {\n        cleanup?.();\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  formDataPolicyName as tspFormDataPolicyName,\n  formDataPolicy as tspFormDataPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = tspFormDataPolicyName;\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return tspFormDataPolicy();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\",\n): PipelinePolicy {\n  return {\n    name: setClientRequestIdPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(requestIdHeaderName)) {\n        request.headers.set(requestIdHeaderName, request.requestId);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  redirectPolicyName as tspRedirectPolicyName,\n  redirectPolicy as tspRedirectPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = tspRedirectPolicyName;\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  return tspRedirectPolicy(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Agent,\n  FormDataMap,\n  HttpHeaders,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TlsSettings,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\nimport type { HttpMethods } from \"@azure/core-util\";\nimport {\n  createPipelineRequest as tspCreatePipelineRequest,\n  type PipelineRequestOptions as TspPipelineRequestOptions,\n} from \"@typespec/ts-http-runtime\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * NODEJS ONLY\n   *\n   * A Node-only option to provide a custom `http.Agent`/`https.Agent`.\n   * NOTE: usually this should be one instance shared by multiple requests so that the underlying\n   *       connection to the service can be reused.\n   * Does nothing when running in the browser.\n   */\n  agent?: Agent;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /** Settings for configuring TLS authentication */\n  tlsSettings?: TlsSettings;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  // Cast required due to difference between ts-http-runtime requiring AbortSignal while core-rest-pipeline allows\n  // the more generic AbortSignalLike. The wrapAbortSignalLike pipeline policy will take care of ensuring that any AbortSignalLike in the request\n  // is converted into a true AbortSignal.\n  return tspCreatePipelineRequest(options as TspPipelineRequestOptions);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { type AzureLogger, createClientLogger } from \"@azure/logger\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nimport {\n  retryPolicy as tspRetryPolicy,\n  type RetryStrategy as TspRetryStrategy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\n\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n\n/**\n * Information provided to the retry strategy about the current progress of the retry policy.\n */\nexport interface RetryInformation {\n  /**\n   * A {@link PipelineResponse}, if the last retry attempt succeeded.\n   */\n  response?: PipelineResponse;\n  /**\n   * A {@link RestError}, if the last retry attempt failed.\n   */\n  responseError?: RestError;\n  /**\n   * Total number of retries so far.\n   */\n  retryCount: number;\n}\n\n/**\n * Properties that can modify the behavior of the retry policy.\n */\nexport interface RetryModifiers {\n  /**\n   * If true, allows skipping the current strategy from running on the retry policy.\n   */\n  skipStrategy?: boolean;\n  /**\n   * Indicates to retry against this URL.\n   */\n  redirectTo?: string;\n  /**\n   * Controls whether to retry in a given number of milliseconds.\n   * If provided, a new retry will be attempted.\n   */\n  retryAfterInMs?: number;\n  /**\n   * Indicates to throw this error instead of retrying.\n   */\n  errorToThrow?: RestError;\n}\n\n/**\n * A retry strategy is intended to define whether to retry or not, and how to retry.\n */\nexport interface RetryStrategy {\n  /**\n   * Name of the retry strategy. Used for logging.\n   */\n  name: string;\n  /**\n   * Logger. If it's not provided, a default logger for all retry strategies is used.\n   */\n  logger?: AzureLogger;\n  /**\n   * Function that determines how to proceed with the subsequent requests.\n   * @param state - Retry state\n   */\n  retry(state: RetryInformation): RetryModifiers;\n}\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  // Cast is required since the TSP runtime retry strategy type is slightly different\n  // very deep down (using real AbortSignal vs. AbortSignalLike in RestError).\n  // In practice the difference doesn't actually matter.\n  return tspRetryPolicy(strategies as TspRetryStrategy[], {\n    logger: retryPolicyLogger,\n    ...options,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport { delay } from \"@azure/core-util\";\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\nexport type AccessTokenGetter = (\n  scopes: string | string[],\n  options: GetTokenOptions,\n) => Promise<AccessToken>;\n\nexport interface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  refreshTimeout: number,\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < refreshTimeout) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(\n  credential: TokenCredential,\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>,\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n  let tenantId: string | undefined;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      if (cycler.isRefreshing) {\n        return false;\n      }\n      if (token?.refreshAfterTimestamp && token.refreshAfterTimestamp < Date.now()) {\n        return true;\n      }\n\n      return (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now();\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(\n    scopes: string | string[],\n    getTokenOptions: GetTokenOptions,\n  ): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now(),\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          tenantId = getTokenOptions.tenantId;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          tenantId = undefined;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (scopes: string | string[], tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    const hasClaimChallenge = Boolean(tokenOptions.claims);\n    const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n\n    if (hasClaimChallenge) {\n      // If we've received a claim, we know the existing token isn't valid\n      // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n      token = null;\n    }\n\n    // If the tenantId passed in token options is different to the one we have\n    // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n    // refresh the token with the new tenantId or token.\n    const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n\n    if (mustRefresh) {\n      return refresh(scopes, tokenOptions);\n    }\n\n    if (cycler.shouldRefresh) {\n      refresh(scopes, tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport type { AzureLogger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport type { RestError } from \"../restError.js\";\nimport { isRestError } from \"../restError.js\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n\n/**\n * Options sent to the authorizeRequest callback\n */\nexport interface AuthorizeRequestOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options sent to the authorizeRequestOnChallenge callback\n */\nexport interface AuthorizeRequestOnChallengeOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * Response containing the challenge.\n   */\n  response: PipelineResponse;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options to override the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n */\nexport interface ChallengeCallbacks {\n  /**\n   * Allows for the authorization of the main request of this policy before it's sent.\n   */\n  authorizeRequest?(options: AuthorizeRequestOptions): Promise<void>;\n  /**\n   * Allows to handle authentication challenges and to re-authorize the request.\n   * The response containing the challenge is `options.response`.\n   * If this method returns true, the underlying request will be sent once again.\n   * The request may be modified before being sent.\n   */\n  authorizeRequestOnChallenge?(options: AuthorizeRequestOnChallengeOptions): Promise<boolean>;\n}\n\n/**\n * Options to configure the bearerTokenAuthenticationPolicy\n */\nexport interface BearerTokenAuthenticationPolicyOptions {\n  /**\n   * The TokenCredential implementation that can supply the bearer token.\n   */\n  credential?: TokenCredential;\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string | string[];\n  /**\n   * Allows for the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n   * If provided, it must contain at least the `authorizeRequestOnChallenge` method.\n   * If provided, after a request is sent, if it has a challenge, it can be processed to re-send the original request with the relevant challenge information.\n   */\n  challengeCallbacks?: ChallengeCallbacks;\n  /**\n   * A logger can be sent for debugging purposes.\n   */\n  logger?: AzureLogger;\n}\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(\n  request: PipelineRequest,\n  next: SendRequest,\n): Promise<[PipelineResponse, RestError | undefined]> {\n  try {\n    return [await next(request), undefined];\n  } catch (e: any) {\n    if (isRestError(e) && e.response) {\n      return [e.response, e];\n    } else {\n      throw e;\n    }\n  }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options: AuthorizeRequestOptions): Promise<void> {\n  const { scopes, getAccessToken, request } = options;\n  // Enable CAE true by default\n  const getTokenOptions: GetTokenOptions = {\n    abortSignal: request.abortSignal,\n    tracingOptions: request.tracingOptions,\n    enableCae: true,\n  };\n\n  const accessToken = await getAccessToken(scopes, getTokenOptions);\n\n  if (accessToken) {\n    options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n  }\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response: PipelineResponse): boolean {\n  return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(\n  onChallengeOptions: AuthorizeRequestOnChallengeOptions,\n  caeClaims: string,\n): Promise<boolean> {\n  const { scopes } = onChallengeOptions;\n\n  const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n    enableCae: true,\n    claims: caeClaims,\n  });\n  if (!accessToken) {\n    return false;\n  }\n\n  onChallengeOptions.request.headers.set(\n    \"Authorization\",\n    `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`,\n  );\n  return true;\n}\n\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(\n  options: BearerTokenAuthenticationPolicyOptions,\n): PipelinePolicy {\n  const { credential, scopes, challengeCallbacks } = options;\n  const logger = options.logger || coreLogger;\n  const callbacks = {\n    authorizeRequest:\n      challengeCallbacks?.authorizeRequest?.bind(challengeCallbacks) ?? defaultAuthorizeRequest,\n    authorizeRequestOnChallenge:\n      challengeCallbacks?.authorizeRequestOnChallenge?.bind(challengeCallbacks),\n  };\n\n  // This function encapsulates the entire process of reliably retrieving the token\n  // The options are left out of the public API until there's demand to configure this.\n  // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n  // in order to pass through the `options` object.\n  const getAccessToken = credential\n    ? createTokenCycler(credential /* , options */)\n    : () => Promise.resolve(null);\n\n  return {\n    name: bearerTokenAuthenticationPolicyName,\n    /**\n     * If there's no challenge parameter:\n     * - It will try to retrieve the token using the cache, or the credential's getToken.\n     * - Then it will try the next policy with or without the retrieved token.\n     *\n     * It uses the challenge parameters to:\n     * - Skip a first attempt to get the token from the credential if there's no cached token,\n     *   since it expects the token to be retrievable only after the challenge.\n     * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n     * - Send an initial request to receive the challenge if it fails.\n     * - Process a challenge if the response contains it.\n     * - Retrieve a token with the challenge information, then re-send the request.\n     */\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\",\n        );\n      }\n\n      await callbacks.authorizeRequest({\n        scopes: Array.isArray(scopes) ? scopes : [scopes],\n        request,\n        getAccessToken,\n        logger,\n      });\n\n      let response: PipelineResponse;\n      let error: Error | undefined;\n      let shouldSendRequest: boolean;\n      [response, error] = await trySendRequest(request, next);\n\n      if (isChallengeResponse(response)) {\n        let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n        // Handle CAE by default when receive CAE claim\n        if (claims) {\n          let parsedClaim: string;\n          // Return the response immediately if claims is not a valid base64 encoded string\n          try {\n            parsedClaim = atob(claims);\n          } catch (e) {\n            logger.warning(\n              `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n            );\n            return response;\n          }\n          shouldSendRequest = await authorizeRequestOnCaeChallenge(\n            {\n              scopes: Array.isArray(scopes) ? scopes : [scopes],\n              response,\n              request,\n              getAccessToken,\n              logger,\n            },\n            parsedClaim,\n          );\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n        } else if (callbacks.authorizeRequestOnChallenge) {\n          // Handle custom challenges when client provides custom callback\n          shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            request,\n            response,\n            getAccessToken,\n            logger,\n          });\n\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n\n          // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n          if (isChallengeResponse(response)) {\n            claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\") as string);\n            if (claims) {\n              let parsedClaim: string;\n              try {\n                parsedClaim = atob(claims);\n              } catch (e) {\n                logger.warning(\n                  `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n                );\n                return response;\n              }\n\n              shouldSendRequest = await authorizeRequestOnCaeChallenge(\n                {\n                  scopes: Array.isArray(scopes) ? scopes : [scopes],\n                  response,\n                  request,\n                  getAccessToken,\n                  logger,\n                },\n                parsedClaim,\n              );\n              // Send updated request and handle response for RestError\n              if (shouldSendRequest) {\n                [response, error] = await trySendRequest(request, next);\n              }\n            }\n          }\n        }\n      }\n\n      if (error) {\n        throw error;\n      } else {\n        return response;\n      }\n    },\n  };\n}\n\n/**\n *\n * Interface to represent a parsed challenge.\n *\n * @internal\n */\ninterface AuthChallenge {\n  scheme: string;\n  params: Record<string, string>;\n}\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nexport function parseChallenges(challenges: string): AuthChallenge[] {\n  // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n  // The challenge regex captures parameteres with either quotes values or unquoted values\n  const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n  // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n  // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n  const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n\n  const parsedChallenges: AuthChallenge[] = [];\n  let match;\n\n  // Iterate over each challenge match\n  while ((match = challengeRegex.exec(challenges)) !== null) {\n    const scheme = match[1];\n    const paramsString = match[2];\n    const params: Record<string, string> = {};\n    let paramMatch;\n\n    // Iterate over each parameter match\n    while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n      params[paramMatch[1]] = paramMatch[2];\n    }\n\n    parsedChallenges.push({ scheme, params });\n  }\n  return parsedChallenges;\n}\n\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges: string | undefined): string | undefined {\n  if (!challenges) {\n    return;\n  }\n  // Find all challenges present in the header\n  const parsedChallenges = parseChallenges(challenges);\n  return parsedChallenges.find(\n    (x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\",\n  )?.params.claims;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationRequest, OperationRequestInfo } from \"./interfaces.js\";\n\n/**\n * Browser-only implementation of the module's state. The browser esm variant will not load the commonjs state, so we do not need to share state between the two.\n */\nexport const state = {\n  operationRequestMap: new WeakMap<OperationRequest, OperationRequestInfo>(),\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  CompositeMapper,\n  Mapper,\n  OperationArguments,\n  OperationParameter,\n  OperationRequest,\n  OperationRequestInfo,\n  ParameterPath,\n} from \"./interfaces.js\";\n\nimport { state } from \"./state.js\";\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nexport function getOperationArgumentValueFromParameter(\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  fallbackObject?: { [parameterName: string]: any },\n): any {\n  let parameterPath = parameter.parameterPath;\n  const parameterMapper = parameter.mapper;\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n\n        if (!propertySearchResult.propertyFound && fallbackObject) {\n          propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameter(\n        operationArguments,\n        {\n          parameterPath: propertyPath,\n          mapper: propertyMapper,\n        },\n        fallbackObject,\n      );\n      if (propertyValue !== undefined) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[],\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\n\nfunction hasOriginalRequest(\n  request: OperationRequest,\n): request is OperationRequest & { [originalRequestSymbol]: OperationRequest } {\n  return originalRequestSymbol in request;\n}\n\nexport function getOperationRequestInfo(request: OperationRequest): OperationRequestInfo {\n  if (hasOriginalRequest(request)) {\n    return getOperationRequestInfo(request[originalRequestSymbol]);\n  }\n  let info = state.operationRequestMap.get(request);\n\n  if (!info) {\n    info = {};\n    state.operationRequestMap.set(request, info);\n  }\n  return info;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FullOperationResponse,\n  OperationRequest,\n  OperationResponseMap,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport { XML_CHARKEY } from \"./interfaces.js\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { RestError } from \"@azure/core-rest-pipeline\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nexport const deserializationPolicyName = \"deserializationPolicy\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationPolicyOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes?: DeserializationContentTypes;\n\n  /**\n   * A function that is able to parse XML. Required for XML support.\n   */\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nexport function deserializationPolicy(options: DeserializationPolicyOptions = {}): PipelinePolicy {\n  const jsonContentTypes = options.expectedContentTypes?.json ?? defaultJsonContentTypes;\n  const xmlContentTypes = options.expectedContentTypes?.xml ?? defaultXmlContentTypes;\n  const parseXML = options.parseXML;\n  const serializerOptions = options.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  return {\n    name: deserializationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return deserializeResponseBody(\n        jsonContentTypes,\n        xmlContentTypes,\n        response,\n        updatedOptions,\n        parseXML,\n      );\n    },\n  };\n}\n\nfunction getOperationResponseMap(\n  parsedResponse: PipelineResponse,\n): undefined | OperationResponseMap {\n  let result: OperationResponseMap | undefined;\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (operationSpec) {\n    if (!operationInfo?.operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationInfo?.operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: PipelineResponse): boolean {\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const shouldDeserialize = operationInfo?.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nasync function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: PipelineResponse,\n  options: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<PipelineResponse> {\n  const parsedResponse = await parse(\n    jsonContentTypes,\n    xmlContentTypes,\n    response,\n    options,\n    parseXML,\n  );\n  if (!shouldDeserializeResponse(parsedResponse)) {\n    return parsedResponse;\n  }\n\n  const operationInfo = getOperationRequestInfo(parsedResponse.request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (!operationSpec || !operationSpec.responses) {\n    return parsedResponse;\n  }\n\n  const responseSpec = getOperationResponseMap(parsedResponse);\n  const { error, shouldReturnResponse } = handleErrorResponse(\n    parsedResponse,\n    operationSpec,\n    responseSpec,\n    options,\n  );\n  if (error) {\n    throw error;\n  } else if (shouldReturnResponse) {\n    return parsedResponse;\n  }\n\n  // An operation response spec does exist for current status code, so\n  // use it to deserialize the response.\n  if (responseSpec) {\n    if (responseSpec.bodyMapper) {\n      let valueToDeserialize: any = parsedResponse.parsedBody;\n      if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperTypeNames.Sequence) {\n        valueToDeserialize =\n          typeof valueToDeserialize === \"object\"\n            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n            : [];\n      }\n      try {\n        parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n          responseSpec.bodyMapper,\n          valueToDeserialize,\n          \"operationRes.parsedBody\",\n          options,\n        );\n      } catch (deserializeError: any) {\n        const restError = new RestError(\n          `Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n          {\n            statusCode: parsedResponse.status,\n            request: parsedResponse.request,\n            response: parsedResponse,\n          },\n        );\n        throw restError;\n      }\n    } else if (operationSpec.httpMethod === \"HEAD\") {\n      // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n      parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n    }\n\n    if (responseSpec.headersMapper) {\n      parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n        responseSpec.headersMapper,\n        parsedResponse.headers.toJSON(),\n        \"operationRes.parsedHeaders\",\n        { xml: {}, ignoreUnknownProperties: true },\n      );\n    }\n  }\n\n  return parsedResponse;\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: FullOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponseMap | undefined,\n  options: RequiredSerializerOptions,\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n\n  const initialErrorMessage = parsedResponse.request.streamResponseStatusCodes?.has(\n    parsedResponse.status,\n  )\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(initialErrorMessage, {\n    statusCode: parsedResponse.status,\n    request: parsedResponse.request,\n    response: parsedResponse,\n  });\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // and the parsed body doesn't look like an error object,\n  // we should fail so we just throw the parsed response\n  if (\n    !errorResponseSpec &&\n    !(parsedResponse.parsedBody?.error?.code && parsedResponse.parsedBody?.error?.message)\n  ) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec?.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec?.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let deserializedError;\n\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperTypeNames.Sequence) {\n          valueToDeserialize = [];\n          const elementName = defaultBodyMapper.xmlElementName;\n          if (typeof parsedBody === \"object\" && elementName) {\n            valueToDeserialize = parsedBody[elementName];\n          }\n        }\n        deserializedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\",\n          options,\n        );\n      }\n\n      const internalError: any = parsedBody.error || deserializedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        (error.response! as FullOperationResponse).parsedBody = deserializedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      (error.response! as FullOperationResponse).parsedHeaders =\n        operationSpec.serializer.deserialize(\n          defaultHeadersMapper,\n          parsedResponse.headers.toJSON(),\n          \"operationRes.parsedHeaders\",\n        );\n    }\n  } catch (defaultError: any) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nasync function parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: FullOperationResponse,\n  opts: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<FullOperationResponse> {\n  if (\n    !operationResponse.request.streamResponseStatusCodes?.has(operationResponse.status) &&\n    operationResponse.bodyAsText\n  ) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n\n    try {\n      if (\n        contentComponents.length === 0 ||\n        contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n      ) {\n        operationResponse.parsedBody = JSON.parse(text);\n        return operationResponse;\n      } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n        if (!parseXML) {\n          throw new Error(\"Parsing XML not supported.\");\n        }\n        const body = await parseXML(text, opts.xml);\n        operationResponse.parsedBody = body;\n        return operationResponse;\n      }\n    } catch (err: any) {\n      const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n      const errCode = err.code || RestError.PARSE_ERROR;\n      const e = new RestError(msg, {\n        code: errCode,\n        statusCode: operationResponse.status,\n        request: operationResponse.request,\n        response: operationResponse,\n      });\n      throw e;\n    }\n  }\n\n  return operationResponse;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationParameter, OperationSpec } from \"./interfaces.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamingResponseStatusCodes(operationSpec: OperationSpec): Set<number> {\n  const result = new Set<number>();\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperTypeNames.Stream\n    ) {\n      result.add(Number(statusCode));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  const { parameterPath, mapper } = parameter;\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  DictionaryMapper,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./interfaces.js\";\nimport type { PipelinePolicy, PipelineResponse, SendRequest } from \"@azure/core-rest-pipeline\";\nimport {\n  getOperationArgumentValueFromParameter,\n  getOperationRequestInfo,\n} from \"./operationHelpers.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nexport const serializationPolicyName = \"serializationPolicy\";\n\n/**\n * Options to configure API request serialization.\n */\nexport interface SerializationPolicyOptions {\n  /**\n   * A function that is able to write XML. Required for XML support.\n   */\n  stringifyXML?: (obj: any, opts?: XmlOptions) => string;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nexport function serializationPolicy(options: SerializationPolicyOptions = {}): PipelinePolicy {\n  const stringifyXML = options.stringifyXML;\n\n  return {\n    name: serializationPolicyName,\n    async sendRequest(request: OperationRequest, next: SendRequest): Promise<PipelineResponse> {\n      const operationInfo = getOperationRequestInfo(request);\n      const operationSpec = operationInfo?.operationSpec;\n      const operationArguments = operationInfo?.operationArguments;\n      if (operationSpec && operationArguments) {\n        serializeHeaders(request, operationArguments, operationSpec);\n        serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n      }\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function serializeHeaders(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n): void {\n  if (operationSpec.headerParameters) {\n    for (const headerParameter of operationSpec.headerParameters) {\n      let headerValue = getOperationArgumentValueFromParameter(operationArguments, headerParameter);\n      if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n        headerValue = operationSpec.serializer.serialize(\n          headerParameter.mapper,\n          headerValue,\n          getPathStringFromParameter(headerParameter),\n        );\n        const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n          .headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n          for (const key of Object.keys(headerValue)) {\n            request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n          }\n        } else {\n          request.headers.set(\n            headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter),\n            headerValue,\n          );\n        }\n      }\n    }\n  }\n  const customHeaders = operationArguments.options?.requestOptions?.customHeaders;\n  if (customHeaders) {\n    for (const customHeaderName of Object.keys(customHeaders)) {\n      request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function serializeRequestBody(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n  stringifyXML: (obj: any, opts?: XmlOptions) => string = function () {\n    throw new Error(\"XML serialization unsupported!\");\n  },\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  const xmlCharKey = updatedOptions.xml.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    request.body = getOperationArgumentValueFromParameter(\n      operationArguments,\n      operationSpec.requestBody,\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const {\n      required,\n      serializedName,\n      xmlName,\n      xmlElementName,\n      xmlNamespace,\n      xmlNamespacePrefix,\n      nullable,\n    } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if (\n        (request.body !== undefined && request.body !== null) ||\n        (nullable && request.body === null) ||\n        required\n      ) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody,\n        );\n        request.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          request.body,\n          requestBodyParameterPathString,\n          updatedOptions,\n        );\n\n        const isStream = typeName === MapperTypeNames.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            request.body,\n            updatedOptions,\n          );\n\n          if (typeName === MapperTypeNames.Sequence) {\n            request.body = stringifyXML(\n              prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace,\n              ),\n              { rootName: xmlName || serializedName, xmlCharKey },\n            );\n          } else if (!isStream) {\n            request.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey,\n            });\n          }\n        } else if (\n          typeName === MapperTypeNames.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          request.body = JSON.stringify(request.body);\n        }\n      }\n    } catch (error: any) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \",\n        )}.`,\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    request.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue = getOperationArgumentValueFromParameter(\n        operationArguments,\n        formDataParameter,\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions,\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: RequiredSerializerOptions,\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction prepareXMLRootList(\n  obj: any,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string,\n): { [key: string]: any[] } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"@azure/core-rest-pipeline\";\nimport { createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\nimport { type PipelineRequest as TspPipelineRequest } from \"@typespec/ts-http-runtime\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  const client = tspCreateDefaultHttpClient();\n  return {\n    async sendRequest(request) {\n      // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n      // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n      const { abortSignal, cleanup } = request.abortSignal\n        ? wrapAbortSignalLike(request.abortSignal)\n        : {};\n      try {\n        // eslint-disable-next-line no-param-reassign\n        request.abortSignal = abortSignal;\n        return await client.sendRequest(request as TspPipelineRequest);\n      } finally {\n        cleanup?.();\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationArguments, OperationSpec, QueryCollectionFormat } from \"./interfaces.js\";\nimport { getOperationArgumentValueFromParameter } from \"./operationHelpers.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\nconst CollectionFormatToDelimiterMap: { [key in QueryCollectionFormat]: string } = {\n  CSV: \",\",\n  SSV: \" \",\n  Multi: \"Multi\",\n  TSV: \"\\t\",\n  Pipes: \"|\",\n};\n\nexport function getRequestUrl(\n  baseUri: string,\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): string {\n  const urlReplacements = calculateUrlReplacements(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n\n  let isAbsolutePath = false;\n\n  let requestUrl = replaceAll(baseUri, urlReplacements);\n  if (operationSpec.path) {\n    let path = replaceAll(operationSpec.path, urlReplacements);\n    // QUIRK: sometimes we get a path component like /{nextLink}\n    // which may be a fully formed URL with a leading /. In that case, we should\n    // remove the leading /\n    if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n      path = path.substring(1);\n    }\n    // QUIRK: sometimes we get a path component like {nextLink}\n    // which may be a fully formed URL. In that case, we should\n    // ignore the baseUri.\n    if (isAbsoluteUrl(path)) {\n      requestUrl = path;\n      isAbsolutePath = true;\n    } else {\n      requestUrl = appendPath(requestUrl, path);\n    }\n  }\n\n  const { queryParams, sequenceParams } = calculateQueryParameters(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n  /**\n   * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n   * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n   * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n   * is still being built so there is nothing to overwrite.\n   */\n  requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n\n  return requestUrl;\n}\n\nfunction replaceAll(input: string, replacements: Map<string, string>): string {\n  let result = input;\n  for (const [searchValue, replaceValue] of replacements) {\n    result = result.split(searchValue).join(replaceValue);\n  }\n  return result;\n}\n\nfunction calculateUrlReplacements(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): Map<string, string> {\n  const result = new Map<string, string>();\n  if (operationSpec.urlParameters?.length) {\n    for (const urlParameter of operationSpec.urlParameters) {\n      let urlParameterValue: string = getOperationArgumentValueFromParameter(\n        operationArguments,\n        urlParameter,\n        fallbackObject,\n      );\n      const parameterPathString = getPathStringFromParameter(urlParameter);\n      urlParameterValue = operationSpec.serializer.serialize(\n        urlParameter.mapper,\n        urlParameterValue,\n        parameterPathString,\n      );\n      if (!urlParameter.skipEncoding) {\n        urlParameterValue = encodeURIComponent(urlParameterValue);\n      }\n      result.set(\n        `{${urlParameter.mapper.serializedName || parameterPathString}}`,\n        urlParameterValue,\n      );\n    }\n  }\n  return result;\n}\n\nfunction isAbsoluteUrl(url: string): boolean {\n  return url.includes(\"://\");\n}\n\nfunction appendPath(url: string, pathToAppend?: string): string {\n  if (!pathToAppend) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n  let newPath = parsedUrl.pathname;\n\n  if (!newPath.endsWith(\"/\")) {\n    newPath = `${newPath}/`;\n  }\n\n  if (pathToAppend.startsWith(\"/\")) {\n    pathToAppend = pathToAppend.substring(1);\n  }\n\n  const searchStart = pathToAppend.indexOf(\"?\");\n  if (searchStart !== -1) {\n    const path = pathToAppend.substring(0, searchStart);\n    const search = pathToAppend.substring(searchStart + 1);\n    newPath = newPath + path;\n    if (search) {\n      parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n    }\n  } else {\n    newPath = newPath + pathToAppend;\n  }\n\n  parsedUrl.pathname = newPath;\n\n  return parsedUrl.toString();\n}\n\nfunction calculateQueryParameters(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): {\n  queryParams: Map<string, string | string[]>;\n  sequenceParams: Set<string>;\n} {\n  const result = new Map<string, string | string[]>();\n  const sequenceParams: Set<string> = new Set<string>();\n\n  if (operationSpec.queryParameters?.length) {\n    for (const queryParameter of operationSpec.queryParameters) {\n      if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n        sequenceParams.add(queryParameter.mapper.serializedName);\n      }\n      let queryParameterValue: string | string[] = getOperationArgumentValueFromParameter(\n        operationArguments,\n        queryParameter,\n        fallbackObject,\n      );\n      if (\n        (queryParameterValue !== undefined && queryParameterValue !== null) ||\n        queryParameter.mapper.required\n      ) {\n        queryParameterValue = operationSpec.serializer.serialize(\n          queryParameter.mapper,\n          queryParameterValue,\n          getPathStringFromParameter(queryParameter),\n        );\n\n        const delimiter = queryParameter.collectionFormat\n          ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n          : \"\";\n        if (Array.isArray(queryParameterValue)) {\n          // replace null and undefined\n          queryParameterValue = queryParameterValue.map((item) => {\n            if (item === null || item === undefined) {\n              return \"\";\n            }\n\n            return item;\n          });\n        }\n        if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n          continue;\n        } else if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n        if (!queryParameter.skipEncoding) {\n          if (Array.isArray(queryParameterValue)) {\n            queryParameterValue = queryParameterValue.map((item: string) => {\n              return encodeURIComponent(item);\n            });\n          } else {\n            queryParameterValue = encodeURIComponent(queryParameterValue);\n          }\n        }\n\n        // Join pipes and CSV *after* encoding, or the server will be upset.\n        if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n\n        result.set(\n          queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n          queryParameterValue,\n        );\n      }\n    }\n  }\n  return {\n    queryParams: result,\n    sequenceParams,\n  };\n}\n\nfunction simpleParseQueryParams(queryString: string): Map<string, string | string[] | undefined> {\n  const result: Map<string, string | string[] | undefined> = new Map<\n    string,\n    string | string[] | undefined\n  >();\n  if (!queryString || queryString[0] !== \"?\") {\n    return result;\n  }\n\n  // remove the leading ?\n  queryString = queryString.slice(1);\n  const pairs = queryString.split(\"&\");\n\n  for (const pair of pairs) {\n    const [name, value] = pair.split(\"=\", 2);\n    const existingValue = result.get(name);\n    if (existingValue) {\n      if (Array.isArray(existingValue)) {\n        existingValue.push(value);\n      } else {\n        result.set(name, [existingValue, value]);\n      }\n    } else {\n      result.set(name, value);\n    }\n  }\n\n  return result;\n}\n\n/** @internal */\nexport function appendQueryParams(\n  url: string,\n  queryParams: Map<string, string | string[]>,\n  sequenceParams: Set<string>,\n  noOverwrite: boolean = false,\n): string {\n  if (queryParams.size === 0) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n\n  // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n  // can change their meaning to the server, such as in the case of a SAS signature.\n  // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n  const combinedParams = simpleParseQueryParams(parsedUrl.search);\n\n  for (const [name, value] of queryParams) {\n    const existingValue = combinedParams.get(name);\n    if (Array.isArray(existingValue)) {\n      if (Array.isArray(value)) {\n        existingValue.push(...value);\n        const valueSet = new Set(existingValue);\n        combinedParams.set(name, Array.from(valueSet));\n      } else {\n        existingValue.push(value);\n      }\n    } else if (existingValue) {\n      if (Array.isArray(value)) {\n        value.unshift(existingValue);\n      } else if (sequenceParams.has(name)) {\n        combinedParams.set(name, [existingValue, value]);\n      }\n      if (!noOverwrite) {\n        combinedParams.set(name, value);\n      }\n    } else {\n      combinedParams.set(name, value);\n    }\n  }\n\n  const searchPieces: string[] = [];\n  for (const [name, value] of combinedParams) {\n    if (typeof value === \"string\") {\n      searchPieces.push(`${name}=${value}`);\n    } else if (Array.isArray(value)) {\n      // QUIRK: If we get an array of values, include multiple key/value pairs\n      for (const subValue of value) {\n        searchPieces.push(`${name}=${subValue}`);\n      }\n    } else {\n      searchPieces.push(`${name}=${value}`);\n    }\n  }\n\n  // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n  parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n  return parsedUrl.toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-client\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  CommonClientOptions,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n} from \"./interfaces.js\";\nimport type {\n  HttpClient,\n  Pipeline,\n  PipelineRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\nimport { createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { createClientPipeline } from \"./pipeline.js\";\nimport { flattenResponse } from \"./utils.js\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\nimport { getRequestUrl } from \"./urlHelpers.js\";\nimport { getStreamingResponseStatusCodes } from \"./interfaceHelpers.js\";\nimport { logger } from \"./log.js\";\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions extends CommonClientOptions {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * @deprecated This property is deprecated and will be removed soon, please use endpoint instead\n   */\n  baseUri?: string;\n  /**\n   * If specified, this is the endpoint that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * to encourage customer to use endpoint, we mark the baseUri as deprecated.\n   */\n  endpoint?: string;\n  /**\n   * If specified, will be used to build the BearerTokenAuthenticationPolicy.\n   */\n  credentialScopes?: string | string[];\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  requestContentType?: string;\n  /**\n   * Credential used to authenticate the request.\n   */\n  credential?: TokenCredential;\n  /**\n   * A customized pipeline to use, otherwise a default one will be created.\n   */\n  pipeline?: Pipeline;\n}\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  private readonly _endpoint?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  private readonly _requestContentType?: string;\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  private readonly _allowInsecureConnection?: boolean;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n\n  /**\n   * The pipeline used by this client to make requests\n   */\n  public readonly pipeline: Pipeline;\n\n  /**\n   * The ServiceClient constructor\n   * @param options - The service client options that govern the behavior of the client.\n   */\n  constructor(options: ServiceClientOptions = {}) {\n    this._requestContentType = options.requestContentType;\n    this._endpoint = options.endpoint ?? options.baseUri;\n    if (options.baseUri) {\n      logger.warning(\n        \"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\",\n      );\n    }\n    this._allowInsecureConnection = options.allowInsecureConnection;\n    this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n\n    this.pipeline = options.pipeline || createDefaultPipeline(options);\n    if (options.additionalPolicies?.length) {\n      for (const { policy, position } of options.additionalPolicies) {\n        // Sign happens after Retry and is commonly needed to occur\n        // before policies that intercept post-retry.\n        const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n        this.pipeline.addPolicy(policy, {\n          afterPhase,\n        });\n      }\n    }\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    return this.pipeline.sendRequest(this._httpClient, request);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @typeParam T - The typed result of the request, based on the OperationSpec.\n   * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n   * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const endpoint: string | undefined = operationSpec.baseUrl || this._endpoint;\n    if (!endpoint) {\n      throw new Error(\n        \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\",\n      );\n    }\n\n    // Templatized URLs sometimes reference properties on the ServiceClient child class,\n    // so we have to pass `this` below in order to search these properties if they're\n    // not part of OperationArguments\n    const url = getRequestUrl(endpoint, operationSpec, operationArguments, this);\n\n    const request: OperationRequest = createPipelineRequest({\n      url,\n    });\n    request.method = operationSpec.httpMethod;\n    const operationInfo = getOperationRequestInfo(request);\n    operationInfo.operationSpec = operationSpec;\n    operationInfo.operationArguments = operationArguments;\n\n    const contentType = operationSpec.contentType || this._requestContentType;\n    if (contentType && operationSpec.requestBody) {\n      request.headers.set(\"Content-Type\", contentType);\n    }\n\n    const options = operationArguments.options;\n    if (options) {\n      const requestOptions = options.requestOptions;\n\n      if (requestOptions) {\n        if (requestOptions.timeout) {\n          request.timeout = requestOptions.timeout;\n        }\n\n        if (requestOptions.onUploadProgress) {\n          request.onUploadProgress = requestOptions.onUploadProgress;\n        }\n\n        if (requestOptions.onDownloadProgress) {\n          request.onDownloadProgress = requestOptions.onDownloadProgress;\n        }\n\n        if (requestOptions.shouldDeserialize !== undefined) {\n          operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n        }\n\n        if (requestOptions.allowInsecureConnection) {\n          request.allowInsecureConnection = true;\n        }\n      }\n\n      if (options.abortSignal) {\n        request.abortSignal = options.abortSignal;\n      }\n\n      if (options.tracingOptions) {\n        request.tracingOptions = options.tracingOptions;\n      }\n    }\n\n    if (this._allowInsecureConnection) {\n      request.allowInsecureConnection = true;\n    }\n\n    if (request.streamResponseStatusCodes === undefined) {\n      request.streamResponseStatusCodes = getStreamingResponseStatusCodes(operationSpec);\n    }\n\n    try {\n      const rawResponse = await this.sendRequest(request);\n      const flatResponse = flattenResponse(\n        rawResponse,\n        operationSpec.responses[rawResponse.status],\n      ) as T;\n      if (options?.onResponse) {\n        options.onResponse(rawResponse, flatResponse);\n      }\n      return flatResponse;\n    } catch (error: any) {\n      if (typeof error === \"object\" && error?.response) {\n        const rawResponse = error.response;\n        const flatResponse = flattenResponse(\n          rawResponse,\n          operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"],\n        );\n        error.details = flatResponse;\n        if (options?.onResponse) {\n          options.onResponse(rawResponse, flatResponse, error);\n        }\n      }\n      throw error;\n    }\n  }\n}\n\nfunction createDefaultPipeline(options: ServiceClientOptions): Pipeline {\n  const credentialScopes = getCredentialScopes(options);\n  const credentialOptions =\n    options.credential && credentialScopes\n      ? { credentialScopes, credential: options.credential }\n      : undefined;\n\n  return createClientPipeline({\n    ...options,\n    credentialOptions,\n  });\n}\n\nfunction getCredentialScopes(options: ServiceClientOptions): string | string[] | undefined {\n  if (options.credentialScopes) {\n    return options.credentialScopes;\n  }\n\n  if (options.endpoint) {\n    return `${options.endpoint}/.default`;\n  }\n\n  if (options.baseUri) {\n    return `${options.baseUri}/.default`;\n  }\n\n  if (options.credential && !options.credentialScopes) {\n    throw new Error(\n      `When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`,\n    );\n  }\n\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { DeserializationPolicyOptions } from \"./deserializationPolicy.js\";\nimport { deserializationPolicy } from \"./deserializationPolicy.js\";\nimport type { InternalPipelineOptions, Pipeline } from \"@azure/core-rest-pipeline\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport type { SerializationPolicyOptions } from \"./serializationPolicy.js\";\nimport { serializationPolicy } from \"./serializationPolicy.js\";\nimport type { TokenCredential } from \"@azure/core-auth\";\n\n/**\n * Options for creating a Pipeline to use with ServiceClient.\n * Mostly for customizing the auth policy (if using token auth) or\n * the deserialization options when using XML.\n */\nexport interface InternalClientPipelineOptions extends InternalPipelineOptions {\n  /**\n   * Options to customize bearerTokenAuthenticationPolicy.\n   */\n  credentialOptions?: { credentialScopes: string | string[]; credential: TokenCredential };\n  /**\n   * Options to customize deserializationPolicy.\n   */\n  deserializationOptions?: DeserializationPolicyOptions;\n  /**\n   * Options to customize serializationPolicy.\n   */\n  serializationOptions?: SerializationPolicyOptions;\n}\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options: InternalClientPipelineOptions = {}): Pipeline {\n  const pipeline = createPipelineFromOptions(options ?? {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(\n      bearerTokenAuthenticationPolicy({\n        credential: options.credentialOptions.credential,\n        scopes: options.credentialOptions.credentialScopes,\n      }),\n    );\n  }\n\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), { phase: \"Serialize\" });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\",\n  });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AuthorizeRequestOnChallengeOptions } from \"@azure/core-rest-pipeline\";\nimport { logger as coreClientLogger } from \"./log.js\";\nimport { decodeStringToString } from \"./base64.js\";\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Bearer d=\"e\", f=\"g\"`.\n * Into: `[ { a: 'b', c: 'd' }, { d: 'e', f: 'g' } ]`.\n *\n * @internal\n */\nexport function parseCAEChallenge(challenges: string): any[] {\n  const bearerChallenges = `, ${challenges.trim()}`.split(\", Bearer \").filter((x) => x);\n  return bearerChallenges.map((challenge) => {\n    const challengeParts = `${challenge.trim()}, `.split('\", ').filter((x) => x);\n    const keyValuePairs = challengeParts.map((keyValue) =>\n      (([key, value]) => ({ [key]: value }))(keyValue.trim().split('=\"')),\n    );\n    // Key-value pairs to plain object:\n    return keyValuePairs.reduce((a, b) => ({ ...a, ...b }), {});\n  });\n}\n\n/**\n * CAE Challenge structure\n */\nexport interface CAEChallenge {\n  scope: string;\n  claims: string;\n}\n\n/**\n * This function can be used as a callback for the `bearerTokenAuthenticationPolicy` of `@azure/core-rest-pipeline`, to support CAE challenges:\n * [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation).\n *\n * Call the `bearerTokenAuthenticationPolicy` with the following options:\n *\n * ```ts snippet:AuthorizeRequestOnClaimChallenge\n * import { bearerTokenAuthenticationPolicy } from \"@azure/core-rest-pipeline\";\n * import { authorizeRequestOnClaimChallenge } from \"@azure/core-client\";\n *\n * const policy = bearerTokenAuthenticationPolicy({\n *   challengeCallbacks: {\n *     authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge,\n *   },\n *   scopes: [\"https://service/.default\"],\n * });\n * ```\n *\n * Once provided, the `bearerTokenAuthenticationPolicy` policy will internally handle Continuous Access Evaluation (CAE) challenges.\n * When it can't complete a challenge it will return the 401 (unauthorized) response from ARM.\n *\n * Example challenge with claims:\n *\n * ```\n * Bearer authorization_uri=\"https://login.windows-ppe.net/\", error=\"invalid_token\",\n * error_description=\"User session has been revoked\",\n * claims=\"eyJhY2Nlc3NfdG9rZW4iOnsibmJmIjp7ImVzc2VudGlhbCI6dHJ1ZSwgInZhbHVlIjoiMTYwMzc0MjgwMCJ9fX0=\"\n * ```\n */\nexport async function authorizeRequestOnClaimChallenge(\n  onChallengeOptions: AuthorizeRequestOnChallengeOptions,\n): Promise<boolean> {\n  const { scopes, response } = onChallengeOptions;\n  const logger = onChallengeOptions.logger || coreClientLogger;\n\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (!challenge) {\n    logger.info(\n      `The WWW-Authenticate header was missing. Failed to perform the Continuous Access Evaluation authentication flow.`,\n    );\n    return false;\n  }\n  const challenges: CAEChallenge[] = parseCAEChallenge(challenge) || [];\n\n  const parsedChallenge = challenges.find((x) => x.claims);\n  if (!parsedChallenge) {\n    logger.info(\n      `The WWW-Authenticate header was missing the necessary \"claims\" to perform the Continuous Access Evaluation authentication flow.`,\n    );\n    return false;\n  }\n\n  const accessToken = await onChallengeOptions.getAccessToken(\n    parsedChallenge.scope ? [parsedChallenge.scope] : scopes,\n    {\n      claims: decodeStringToString(parsedChallenge.claims),\n    },\n  );\n\n  if (!accessToken) {\n    return false;\n  }\n\n  onChallengeOptions.request.headers.set(\n    \"Authorization\",\n    `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`,\n  );\n  return true;\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\",\n        },\n      },\n    },\n  },\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\",\n        },\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\",\n            },\n          },\n        },\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const Deployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Deployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentProperties\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\",\n        },\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"DeploymentParameter\" },\n          },\n        },\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\",\n        },\n      },\n      extensionConfigs: {\n        serializedName: \"extensionConfigs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Dictionary\",\n              value: {\n                type: {\n                  name: \"Composite\",\n                  className: \"DeploymentExtensionConfigItem\",\n                },\n              },\n            },\n          },\n        },\n      },\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"],\n        },\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\",\n        },\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeployment\",\n        },\n      },\n      expressionEvaluationOptions: {\n        serializedName: \"expressionEvaluationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpressionEvaluationOptions\",\n        },\n      },\n      validationLevel: {\n        serializedName: \"validationLevel\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TemplateLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryString: {\n        serializedName: \"queryString\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentParameter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentParameter\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\",\n        },\n      },\n      reference: {\n        serializedName: \"reference\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultParameterReference\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyVaultParameterReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultParameterReference\",\n    modelProperties: {\n      keyVault: {\n        serializedName: \"keyVault\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultReference\",\n        },\n      },\n      secretName: {\n        serializedName: \"secretName\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyVaultReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ParametersLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParametersLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtensionConfigItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtensionConfigItem\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\",\n        },\n      },\n      keyVaultReference: {\n        serializedName: \"keyVaultReference\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultParameterReference\",\n        },\n      },\n    },\n  },\n};\n\nexport const DebugSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DebugSetting\",\n    modelProperties: {\n      detailLevel: {\n        serializedName: \"detailLevel\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OnErrorDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeployment\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"],\n        },\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ExpressionEvaluationOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpressionEvaluationOptions\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtended\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentPropertiesExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentPropertiesExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      providers: {\n        serializedName: \"providers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\",\n            },\n          },\n        },\n      },\n      dependencies: {\n        serializedName: \"dependencies\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dependency\",\n            },\n          },\n        },\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\",\n        },\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\",\n        },\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtensionDefinition\",\n            },\n          },\n        },\n      },\n      mode: {\n        serializedName: \"mode\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"],\n        },\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\",\n        },\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeploymentExtended\",\n        },\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      outputResources: {\n        serializedName: \"outputResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\",\n            },\n          },\n        },\n      },\n      validatedResources: {\n        serializedName: \"validatedResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\",\n            },\n          },\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n      diagnostics: {\n        serializedName: \"diagnostics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentDiagnosticsDefinition\",\n            },\n          },\n        },\n      },\n      validationLevel: {\n        serializedName: \"validationLevel\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Provider: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Provider\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\",\n        },\n      },\n      registrationState: {\n        serializedName: \"registrationState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      registrationPolicy: {\n        serializedName: \"registrationPolicy\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\",\n            },\n          },\n        },\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderResourceType: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceType\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      locationMappings: {\n        serializedName: \"locationMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderExtendedLocation\",\n            },\n          },\n        },\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alias\",\n            },\n          },\n        },\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      defaultApiVersion: {\n        serializedName: \"defaultApiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      zoneMappings: {\n        serializedName: \"zoneMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ZoneMapping\",\n            },\n          },\n        },\n      },\n      apiProfiles: {\n        serializedName: \"apiProfiles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiProfile\",\n            },\n          },\n        },\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderExtendedLocation\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      extendedLocations: {\n        serializedName: \"extendedLocations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Alias: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Alias\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasPath\",\n            },\n          },\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"PlainText\", \"Mask\"],\n        },\n      },\n      defaultPath: {\n        serializedName: \"defaultPath\",\n        type: {\n          name: \"String\",\n        },\n      },\n      defaultPattern: {\n        serializedName: \"defaultPattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\",\n        },\n      },\n      defaultMetadata: {\n        serializedName: \"defaultMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\",\n        },\n      },\n    },\n  },\n};\n\nexport const AliasPath: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPath\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\",\n        },\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      pattern: {\n        serializedName: \"pattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\",\n        },\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\",\n        },\n      },\n    },\n  },\n};\n\nexport const AliasPattern: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPattern\",\n    modelProperties: {\n      phrase: {\n        serializedName: \"phrase\",\n        type: {\n          name: \"String\",\n        },\n      },\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"Extract\"],\n        },\n      },\n    },\n  },\n};\n\nexport const AliasPathMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPathMetadata\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      attributes: {\n        serializedName: \"attributes\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ZoneMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ZoneMapping\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ApiProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiProfile\",\n    modelProperties: {\n      profileVersion: {\n        serializedName: \"profileVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Dependency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Dependency\",\n    modelProperties: {\n      dependsOn: {\n        serializedName: \"dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BasicDependency\",\n            },\n          },\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BasicDependency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BasicDependency\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtensionDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtensionDefinition\",\n    modelProperties: {\n      alias: {\n        serializedName: \"alias\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      configId: {\n        serializedName: \"configId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      config: {\n        serializedName: \"config\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtensionConfigItem\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OnErrorDeploymentExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeploymentExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"],\n        },\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentExtensionDefinition\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentDiagnosticsDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentDiagnosticsDefinition\",\n    modelProperties: {\n      level: {\n        serializedName: \"level\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentValidateResult\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExportResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtended\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ScopedDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ScopedDeploymentWhatIf: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentWhatIfSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfSettings\",\n    modelProperties: {\n      resultFormat: {\n        serializedName: \"resultFormat\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ResourceIdOnly\", \"FullResourcePayloads\"],\n        },\n      },\n    },\n  },\n};\n\nexport const WhatIfOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfOperationResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n      changes: {\n        serializedName: \"properties.changes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\",\n            },\n          },\n        },\n      },\n      potentialChanges: {\n        serializedName: \"properties.potentialChanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\",\n            },\n          },\n        },\n      },\n      diagnostics: {\n        serializedName: \"properties.diagnostics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentDiagnosticsDefinition\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const WhatIfChange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfChange\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deploymentId: {\n        serializedName: \"deploymentId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      symbolicName: {\n        serializedName: \"symbolicName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      changeType: {\n        serializedName: \"changeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Create\",\n            \"Delete\",\n            \"Ignore\",\n            \"Deploy\",\n            \"NoChange\",\n            \"Modify\",\n            \"Unsupported\",\n          ],\n        },\n      },\n      unsupportedReason: {\n        serializedName: \"unsupportedReason\",\n        type: {\n          name: \"String\",\n        },\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      delta: {\n        serializedName: \"delta\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const WhatIfPropertyChange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfPropertyChange\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      propertyChangeType: {\n        serializedName: \"propertyChangeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Create\", \"Delete\", \"Modify\", \"Array\", \"NoEffect\"],\n        },\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      children: {\n        serializedName: \"children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentWhatIf: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderPermissionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermissionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderPermission\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderPermission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermission\",\n    modelProperties: {\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      roleDefinition: {\n        serializedName: \"roleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\",\n        },\n      },\n      managedByRoleDefinition: {\n        serializedName: \"managedByRoleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\",\n        },\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RoleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isServiceRole: {\n        serializedName: \"isServiceRole\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Permission\",\n            },\n          },\n        },\n      },\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Permission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Permission\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      notActions: {\n        serializedName: \"notActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      dataActions: {\n        serializedName: \"dataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      notDataActions: {\n        serializedName: \"notDataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderRegistrationRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderRegistrationRequest\",\n    modelProperties: {\n      thirdPartyProviderConsent: {\n        serializedName: \"thirdPartyProviderConsent\",\n        type: {\n          name: \"Composite\",\n          className: \"ProviderConsentDefinition\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderConsentDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderConsentDefinition\",\n    modelProperties: {\n      consentToAuthorization: {\n        serializedName: \"consentToAuthorization\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderResourceTypeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceTypeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GenericResourceExpanded\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Plan: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\",\n        },\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\",\n        },\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\",\n        },\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\",\n        },\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\",\n        },\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"String\",\n        },\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\",\n          ],\n        },\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"IdentityUserAssignedIdentitiesValue\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const IdentityUserAssignedIdentitiesValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroup\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\",\n        },\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupPatchable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupPatchable\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\",\n        },\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ExportTemplateRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportTemplateRequest\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\",\n        },\n      },\n      outputFormat: {\n        serializedName: \"outputFormat\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupExportResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      output: {\n        serializedName: \"output\",\n        type: {\n          name: \"String\",\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceGroup\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourcesMoveInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesMoveInfo\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagValue\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\",\n        },\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagCount\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagDetails\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\",\n        },\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagValue\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const TagsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagDetails\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      operationId: {\n        serializedName: \"operationId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentOperationProperties\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentOperationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationProperties\",\n    modelProperties: {\n      provisioningOperation: {\n        serializedName: \"provisioningOperation\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotSpecified\",\n            \"Create\",\n            \"Delete\",\n            \"Waiting\",\n            \"AzureAsyncOperationWaiting\",\n            \"ResourceCacheWaiting\",\n            \"Action\",\n            \"Read\",\n            \"EvaluateDeploymentOutput\",\n            \"DeploymentCleanup\",\n          ],\n        },\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      serviceRequestId: {\n        serializedName: \"serviceRequestId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMessage\",\n        },\n      },\n      targetResource: {\n        serializedName: \"targetResource\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetResource\",\n        },\n      },\n      request: {\n        serializedName: \"request\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\",\n        },\n      },\n    },\n  },\n};\n\nexport const StatusMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMessage\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n    },\n  },\n};\n\nexport const TargetResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentExtensionDefinition\",\n        },\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      symbolicName: {\n        serializedName: \"symbolicName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HttpMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpMessage\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentOperationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentOperation\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TemplateHashResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateHashResult\",\n    modelProperties: {\n      minifiedTemplate: {\n        serializedName: \"minifiedTemplate\",\n        type: {\n          name: \"String\",\n        },\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\",\n        },\n      },\n    },\n  },\n};\n\nexport const Tags: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tags\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const TagsPatchResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsPatchResource\",\n    modelProperties: {\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtendedFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtendedFilter\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GenericResourceFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceFilter\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tagname: {\n        serializedName: \"tagname\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tagvalue: {\n        serializedName: \"tagvalue\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupFilter\",\n    modelProperties: {\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceProviderOperationDisplayProperties: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"ResourceProviderOperationDisplayProperties\",\n      modelProperties: {\n        publisher: {\n          serializedName: \"publisher\",\n          type: {\n            name: \"String\",\n          },\n        },\n        provider: {\n          serializedName: \"provider\",\n          type: {\n            name: \"String\",\n          },\n        },\n        resource: {\n          serializedName: \"resource\",\n          type: {\n            name: \"String\",\n          },\n        },\n        operation: {\n          serializedName: \"operation\",\n          type: {\n            name: \"String\",\n          },\n        },\n        description: {\n          serializedName: \"description\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentWhatIfProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfProperties\",\n    modelProperties: {\n      ...DeploymentProperties.type.modelProperties,\n      whatIfSettings: {\n        serializedName: \"whatIfSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfSettings\",\n        },\n      },\n    },\n  },\n};\n\nexport const GenericResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      kind: {\n        constraints: {\n          Pattern: new RegExp(\"^[-\\\\w\\\\._,\\\\(\\\\)]+$\"),\n        },\n        serializedName: \"kind\",\n        type: {\n          name: \"String\",\n        },\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\",\n        },\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\",\n        },\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\",\n        },\n      },\n    },\n  },\n};\n\nexport const GenericResourceExpanded: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceExpanded\",\n    modelProperties: {\n      ...GenericResource.type.modelProperties,\n      createdTime: {\n        serializedName: \"createdTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      changedTime: {\n        serializedName: \"changedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentsWhatIfAtTenantScopeHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"DeploymentsWhatIfAtTenantScopeHeaders\",\n      modelProperties: {\n        location: {\n          serializedName: \"location\",\n          type: {\n            name: \"String\",\n          },\n        },\n        retryAfter: {\n          serializedName: \"retry-after\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const DeploymentsWhatIfAtManagementGroupScopeHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"DeploymentsWhatIfAtManagementGroupScopeHeaders\",\n      modelProperties: {\n        location: {\n          serializedName: \"location\",\n          type: {\n            name: \"String\",\n          },\n        },\n        retryAfter: {\n          serializedName: \"retry-after\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const DeploymentsWhatIfAtSubscriptionScopeHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"DeploymentsWhatIfAtSubscriptionScopeHeaders\",\n      modelProperties: {\n        location: {\n          serializedName: \"location\",\n          type: {\n            name: \"String\",\n          },\n        },\n        retryAfter: {\n          serializedName: \"retry-after\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const DeploymentsWhatIfHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupsDeleteHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsCreateOrUpdateAtScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsCreateOrUpdateAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsUpdateAtScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsUpdateAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsDeleteAtScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsDeleteAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  Deployment as DeploymentMapper,\n  ScopedDeployment as ScopedDeploymentMapper,\n  ScopedDeploymentWhatIf as ScopedDeploymentWhatIfMapper,\n  DeploymentWhatIf as DeploymentWhatIfMapper,\n  ProviderRegistrationRequest as ProviderRegistrationRequestMapper,\n  ResourcesMoveInfo as ResourcesMoveInfoMapper,\n  GenericResource as GenericResourceMapper,\n  ResourceGroup as ResourceGroupMapper,\n  ResourceGroupPatchable as ResourceGroupPatchableMapper,\n  ExportTemplateRequest as ExportTemplateRequestMapper,\n  TagsResource as TagsResourceMapper,\n  TagsPatchResource as TagsPatchResourceMapper,\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2025-03-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const scope: OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    serializedName: \"scope\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const deploymentName: OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 64,\n      MinLength: 1,\n    },\n    serializedName: \"deploymentName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DeploymentMapper,\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ScopedDeploymentMapper,\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ScopedDeploymentWhatIfMapper,\n};\n\nexport const groupId: OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"groupId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DeploymentWhatIfMapper,\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const template: OperationParameter = {\n  parameterPath: \"template\",\n  mapper: {\n    serializedName: \"template\",\n    required: true,\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"any\" } },\n    },\n  },\n};\n\nexport const resourceProviderNamespace: OperationURLParameter = {\n  parameterPath: \"resourceProviderNamespace\",\n  mapper: {\n    serializedName: \"resourceProviderNamespace\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: [\"options\", \"properties\"],\n  mapper: ProviderRegistrationRequestMapper,\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourcesMoveInfoMapper,\n};\n\nexport const sourceResourceGroupName: OperationURLParameter = {\n  parameterPath: \"sourceResourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"sourceResourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parentResourcePath: OperationURLParameter = {\n  parameterPath: \"parentResourcePath\",\n  mapper: {\n    serializedName: \"parentResourcePath\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const resourceType: OperationURLParameter = {\n  parameterPath: \"resourceType\",\n  mapper: {\n    serializedName: \"resourceType\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GenericResourceMapper,\n};\n\nexport const resourceId: OperationURLParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    serializedName: \"resourceId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourceGroupMapper,\n};\n\nexport const forceDeletionTypes: OperationQueryParameter = {\n  parameterPath: [\"options\", \"forceDeletionTypes\"],\n  mapper: {\n    serializedName: \"forceDeletionTypes\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourceGroupPatchableMapper,\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExportTemplateRequestMapper,\n};\n\nexport const resourceGroupName1: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tagName: OperationURLParameter = {\n  parameterPath: \"tagName\",\n  mapper: {\n    serializedName: \"tagName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tagValue: OperationURLParameter = {\n  parameterPath: \"tagValue\",\n  mapper: {\n    serializedName: \"tagValue\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TagsResourceMapper,\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TagsPatchResourceMapper,\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Operations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams,\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams,\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams,\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams,\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nexport const logger = createClientLogger(\"core-lro\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The default time interval to wait before sending the next polling request.\n */\nexport const POLL_INTERVAL_IN_MS = 2000;\n/**\n * The closed set of terminal states.\n */\nexport const terminalStates = [\"succeeded\", \"canceled\", \"failed\"];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  LroError,\n  InnerError,\n  Operation,\n  OperationStatus,\n  RestorableOperationState,\n  StateProxy,\n} from \"./models.js\";\nimport { logger } from \"../logger.js\";\nimport { terminalStates } from \"./constants.js\";\n\n/**\n * Deserializes the state\n */\nexport function deserializeState<TState>(\n  serializedState: string,\n): RestorableOperationState<TState> {\n  try {\n    return JSON.parse(serializedState).state;\n  } catch (e) {\n    throw new Error(`Unable to deserialize input state: ${serializedState}`);\n  }\n}\n\nfunction setStateError<TState, TResult>(inputs: {\n  state: TState;\n  stateProxy: StateProxy<TState, TResult>;\n  isOperationError: (error: Error) => boolean;\n}): (error: Error) => never {\n  const { state, stateProxy, isOperationError } = inputs;\n  return (error: Error) => {\n    if (isOperationError(error)) {\n      stateProxy.setError(state, error);\n      stateProxy.setFailed(state);\n    }\n    throw error;\n  };\n}\n\nfunction appendReadableErrorMessage(currentMessage: string, innerMessage: string): string {\n  let message = currentMessage;\n  if (message.slice(-1) !== \".\") {\n    message = message + \".\";\n  }\n  return message + \" \" + innerMessage;\n}\n\nfunction simplifyError(err: LroError): {\n  code: string;\n  message: string;\n} {\n  let message = err.message;\n  let code = err.code;\n  let curErr = err as InnerError;\n  while (curErr.innererror) {\n    curErr = curErr.innererror;\n    code = curErr.code;\n    message = appendReadableErrorMessage(message, curErr.message);\n  }\n  return {\n    code,\n    message,\n  };\n}\n\nfunction processOperationStatus<TState, TResult, TResponse>(result: {\n  status: OperationStatus;\n  response: TResponse;\n  state: RestorableOperationState<TState>;\n  stateProxy: StateProxy<TState, TResult>;\n  processResult?: (result: TResponse, state: TState) => TResult;\n  getError?: (response: TResponse) => LroError | undefined;\n  isDone?: (lastResponse: TResponse, state: TState) => boolean;\n  setErrorAsResult: boolean;\n}): void {\n  const { state, stateProxy, status, isDone, processResult, getError, response, setErrorAsResult } =\n    result;\n  switch (status) {\n    case \"succeeded\": {\n      stateProxy.setSucceeded(state);\n      break;\n    }\n    case \"failed\": {\n      const err = getError?.(response);\n      let postfix = \"\";\n      if (err) {\n        const { code, message } = simplifyError(err);\n        postfix = `. ${code}. ${message}`;\n      }\n      const errStr = `The long-running operation has failed${postfix}`;\n      stateProxy.setError(state, new Error(errStr));\n      stateProxy.setFailed(state);\n      logger.warning(errStr);\n      break;\n    }\n    case \"canceled\": {\n      stateProxy.setCanceled(state);\n      break;\n    }\n  }\n  if (\n    isDone?.(response, state) ||\n    (isDone === undefined &&\n      [\"succeeded\", \"canceled\"].concat(setErrorAsResult ? [] : [\"failed\"]).includes(status))\n  ) {\n    stateProxy.setResult(\n      state,\n      buildResult({\n        response,\n        state,\n        processResult,\n      }),\n    );\n  }\n}\n\nfunction buildResult<TResponse, TResult, TState>(inputs: {\n  response: TResponse;\n  state: TState;\n  processResult?: (result: TResponse, state: TState) => TResult;\n}): TResult {\n  const { processResult, response, state } = inputs;\n  return processResult ? processResult(response, state) : (response as unknown as TResult);\n}\n\n/**\n * Initiates the long-running operation.\n */\nexport async function initOperation<TResponse, TResult, TState>(inputs: {\n  init: Operation<TResponse, unknown>[\"init\"];\n  stateProxy: StateProxy<TState, TResult>;\n  getOperationStatus: (inputs: {\n    response: TResponse;\n    state: RestorableOperationState<TState>;\n    operationLocation?: string;\n  }) => OperationStatus;\n  processResult?: (result: TResponse, state: TState) => TResult;\n  withOperationLocation?: (operationLocation: string, isUpdated: boolean) => void;\n  setErrorAsResult: boolean;\n}): Promise<RestorableOperationState<TState>> {\n  const {\n    init,\n    stateProxy,\n    processResult,\n    getOperationStatus,\n    withOperationLocation,\n    setErrorAsResult,\n  } = inputs;\n  const { operationLocation, resourceLocation, metadata, response } = await init();\n  if (operationLocation) withOperationLocation?.(operationLocation, false);\n  const config = {\n    metadata,\n    operationLocation,\n    resourceLocation,\n  };\n  logger.verbose(`LRO: Operation description:`, config);\n  const state = stateProxy.initState(config);\n  const status = getOperationStatus({ response, state, operationLocation });\n  processOperationStatus({ state, status, stateProxy, response, setErrorAsResult, processResult });\n  return state;\n}\n\nasync function pollOperationHelper<TResponse, TState, TResult, TOptions>(inputs: {\n  poll: Operation<TResponse, TOptions>[\"poll\"];\n  stateProxy: StateProxy<TState, TResult>;\n  state: RestorableOperationState<TState>;\n  operationLocation: string;\n  getOperationStatus: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => OperationStatus;\n  getResourceLocation: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => string | undefined;\n  isOperationError: (error: Error) => boolean;\n  options?: TOptions;\n}): Promise<{\n  status: OperationStatus;\n  response: TResponse;\n}> {\n  const {\n    poll,\n    state,\n    stateProxy,\n    operationLocation,\n    getOperationStatus,\n    getResourceLocation,\n    isOperationError,\n    options,\n  } = inputs;\n  const response = await poll(operationLocation, options).catch(\n    setStateError({\n      state,\n      stateProxy,\n      isOperationError,\n    }),\n  );\n  const status = getOperationStatus(response, state);\n  logger.verbose(\n    `LRO: Status:\\n\\tPolling from: ${\n      state.config.operationLocation\n    }\\n\\tOperation status: ${status}\\n\\tPolling status: ${\n      terminalStates.includes(status) ? \"Stopped\" : \"Running\"\n    }`,\n  );\n  if (status === \"succeeded\") {\n    const resourceLocation = getResourceLocation(response, state);\n    if (resourceLocation !== undefined) {\n      return {\n        response: await poll(resourceLocation).catch(\n          setStateError({ state, stateProxy, isOperationError }),\n        ),\n        status,\n      };\n    }\n  }\n  return { response, status };\n}\n\n/** Polls the long-running operation. */\nexport async function pollOperation<TResponse, TState, TResult, TOptions>(inputs: {\n  poll: Operation<TResponse, TOptions>[\"poll\"];\n  stateProxy: StateProxy<TState, TResult>;\n  state: RestorableOperationState<TState>;\n  getOperationStatus: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => OperationStatus;\n  getResourceLocation: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => string | undefined;\n  isOperationError: (error: Error) => boolean;\n  getPollingInterval?: (response: TResponse) => number | undefined;\n  setDelay: (intervalInMs: number) => void;\n  getOperationLocation?: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => string | undefined;\n  withOperationLocation?: (operationLocation: string, isUpdated: boolean) => void;\n  processResult?: (result: TResponse, state: TState) => TResult;\n  getError?: (response: TResponse) => LroError | undefined;\n  updateState?: (state: TState, lastResponse: TResponse) => void;\n  isDone?: (lastResponse: TResponse, state: TState) => boolean;\n  setErrorAsResult: boolean;\n  options?: TOptions;\n}): Promise<void> {\n  const {\n    poll,\n    state,\n    stateProxy,\n    options,\n    getOperationStatus,\n    getResourceLocation,\n    getOperationLocation,\n    isOperationError,\n    withOperationLocation,\n    getPollingInterval,\n    processResult,\n    getError,\n    updateState,\n    setDelay,\n    isDone,\n    setErrorAsResult,\n  } = inputs;\n  const { operationLocation } = state.config;\n  if (operationLocation !== undefined) {\n    const { response, status } = await pollOperationHelper({\n      poll,\n      getOperationStatus,\n      state,\n      stateProxy,\n      operationLocation,\n      getResourceLocation,\n      isOperationError,\n      options,\n    });\n    processOperationStatus({\n      status,\n      response,\n      state,\n      stateProxy,\n      isDone,\n      processResult,\n      getError,\n      setErrorAsResult,\n    });\n\n    if (!terminalStates.includes(status)) {\n      const intervalInMs = getPollingInterval?.(response);\n      if (intervalInMs) setDelay(intervalInMs);\n      const location = getOperationLocation?.(response, state);\n      if (location !== undefined) {\n        const isUpdated = operationLocation !== location;\n        state.config.operationLocation = location;\n        withOperationLocation?.(location, isUpdated);\n      } else withOperationLocation?.(operationLocation, false);\n    }\n    updateState?.(state, response);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpOperationMode,\n  LongRunningOperation,\n  LroResourceLocationConfig,\n  LroResponse,\n  RawResponse,\n  ResponseBody,\n} from \"./models.js\";\nimport {\n  LroError,\n  OperationConfig,\n  OperationStatus,\n  RestorableOperationState,\n  StateProxy,\n} from \"../poller/models.js\";\nimport { initOperation, pollOperation } from \"../poller/operation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { logger } from \"../logger.js\";\n\nfunction getOperationLocationPollingUrl(inputs: {\n  operationLocation?: string;\n  azureAsyncOperation?: string;\n}): string | undefined {\n  const { azureAsyncOperation, operationLocation } = inputs;\n  return operationLocation ?? azureAsyncOperation;\n}\n\nfunction getLocationHeader(rawResponse: RawResponse): string | undefined {\n  return rawResponse.headers[\"location\"];\n}\n\nfunction getOperationLocationHeader(rawResponse: RawResponse): string | undefined {\n  return rawResponse.headers[\"operation-location\"];\n}\n\nfunction getAzureAsyncOperationHeader(rawResponse: RawResponse): string | undefined {\n  return rawResponse.headers[\"azure-asyncoperation\"];\n}\n\nfunction findResourceLocation(inputs: {\n  requestMethod?: string;\n  location?: string;\n  requestPath?: string;\n  resourceLocationConfig?: LroResourceLocationConfig;\n}): string | undefined {\n  const { location, requestMethod, requestPath, resourceLocationConfig } = inputs;\n  switch (requestMethod) {\n    case \"PUT\": {\n      return requestPath;\n    }\n    case \"DELETE\": {\n      return undefined;\n    }\n    case \"PATCH\": {\n      return getDefault() ?? requestPath;\n    }\n    default: {\n      return getDefault();\n    }\n  }\n\n  function getDefault() {\n    switch (resourceLocationConfig) {\n      case \"azure-async-operation\": {\n        return undefined;\n      }\n      case \"original-uri\": {\n        return requestPath;\n      }\n      case \"location\":\n      default: {\n        return location;\n      }\n    }\n  }\n}\n\nexport function inferLroMode(inputs: {\n  rawResponse: RawResponse;\n  requestPath?: string;\n  requestMethod?: string;\n  resourceLocationConfig?: LroResourceLocationConfig;\n}): (OperationConfig & { mode: HttpOperationMode }) | undefined {\n  const { rawResponse, requestMethod, requestPath, resourceLocationConfig } = inputs;\n  const operationLocation = getOperationLocationHeader(rawResponse);\n  const azureAsyncOperation = getAzureAsyncOperationHeader(rawResponse);\n  const pollingUrl = getOperationLocationPollingUrl({ operationLocation, azureAsyncOperation });\n  const location = getLocationHeader(rawResponse);\n  const normalizedRequestMethod = requestMethod?.toLocaleUpperCase();\n  if (pollingUrl !== undefined) {\n    return {\n      mode: \"OperationLocation\",\n      operationLocation: pollingUrl,\n      resourceLocation: findResourceLocation({\n        requestMethod: normalizedRequestMethod,\n        location,\n        requestPath,\n        resourceLocationConfig,\n      }),\n    };\n  } else if (location !== undefined) {\n    return {\n      mode: \"ResourceLocation\",\n      operationLocation: location,\n    };\n  } else if (normalizedRequestMethod === \"PUT\" && requestPath) {\n    return {\n      mode: \"Body\",\n      operationLocation: requestPath,\n    };\n  } else {\n    return undefined;\n  }\n}\n\nfunction transformStatus(inputs: { status: unknown; statusCode: number }): OperationStatus {\n  const { status, statusCode } = inputs;\n  if (typeof status !== \"string\" && status !== undefined) {\n    throw new Error(\n      `Polling was unsuccessful. Expected status to have a string value or no value but it has instead: ${status}. This doesn't necessarily indicate the operation has failed. Check your Azure subscription or resource status for more information.`,\n    );\n  }\n  switch (status?.toLocaleLowerCase()) {\n    case undefined:\n      return toOperationStatus(statusCode);\n    case \"succeeded\":\n      return \"succeeded\";\n    case \"failed\":\n      return \"failed\";\n    case \"running\":\n    case \"accepted\":\n    case \"started\":\n    case \"canceling\":\n    case \"cancelling\":\n      return \"running\";\n    case \"canceled\":\n    case \"cancelled\":\n      return \"canceled\";\n    default: {\n      logger.verbose(`LRO: unrecognized operation status: ${status}`);\n      return status as OperationStatus;\n    }\n  }\n}\n\nfunction getStatus(rawResponse: RawResponse): OperationStatus {\n  const { status } = (rawResponse.body as ResponseBody) ?? {};\n  return transformStatus({ status, statusCode: rawResponse.statusCode });\n}\n\nfunction getProvisioningState(rawResponse: RawResponse): OperationStatus {\n  const { properties, provisioningState } = (rawResponse.body as ResponseBody) ?? {};\n  const status = properties?.provisioningState ?? provisioningState;\n  return transformStatus({ status, statusCode: rawResponse.statusCode });\n}\n\nfunction toOperationStatus(statusCode: number): OperationStatus {\n  if (statusCode === 202) {\n    return \"running\";\n  } else if (statusCode < 300) {\n    return \"succeeded\";\n  } else {\n    return \"failed\";\n  }\n}\n\nexport function parseRetryAfter<T>({ rawResponse }: LroResponse<T>): number | undefined {\n  const retryAfter: string | undefined = rawResponse.headers[\"retry-after\"];\n  if (retryAfter !== undefined) {\n    // Retry-After header value is either in HTTP date format, or in seconds\n    const retryAfterInSeconds = parseInt(retryAfter);\n    return isNaN(retryAfterInSeconds)\n      ? calculatePollingIntervalFromDate(new Date(retryAfter))\n      : retryAfterInSeconds * 1000;\n  }\n  return undefined;\n}\n\nexport function getErrorFromResponse<T>(response: LroResponse<T>): LroError | undefined {\n  const error = accessBodyProperty(response, \"error\");\n  if (!error) {\n    logger.warning(\n      `The long-running operation failed but there is no error property in the response's body`,\n    );\n    return;\n  }\n  if (!error.code || !error.message) {\n    logger.warning(\n      `The long-running operation failed but the error property in the response's body doesn't contain code or message`,\n    );\n    return;\n  }\n  return error as LroError;\n}\n\nfunction calculatePollingIntervalFromDate(retryAfterDate: Date): number | undefined {\n  const timeNow = Math.floor(new Date().getTime());\n  const retryAfterTime = retryAfterDate.getTime();\n  if (timeNow < retryAfterTime) {\n    return retryAfterTime - timeNow;\n  }\n  return undefined;\n}\n\nexport function getStatusFromInitialResponse<TState>(inputs: {\n  response: LroResponse<unknown>;\n  state: RestorableOperationState<TState>;\n  operationLocation?: string;\n}): OperationStatus {\n  const { response, state, operationLocation } = inputs;\n  function helper(): OperationStatus {\n    const mode = state.config.metadata?.[\"mode\"];\n    switch (mode) {\n      case undefined:\n        return toOperationStatus(response.rawResponse.statusCode);\n      case \"Body\":\n        return getOperationStatus(response, state);\n      default:\n        return \"running\";\n    }\n  }\n  const status = helper();\n  return status === \"running\" && operationLocation === undefined ? \"succeeded\" : status;\n}\n\n/**\n * Initiates the long-running operation.\n */\nexport async function initHttpOperation<TResult, TState>(inputs: {\n  stateProxy: StateProxy<TState, TResult>;\n  resourceLocationConfig?: LroResourceLocationConfig;\n  processResult?: (result: unknown, state: TState) => TResult;\n  setErrorAsResult: boolean;\n  lro: LongRunningOperation;\n}): Promise<RestorableOperationState<TState>> {\n  const { stateProxy, resourceLocationConfig, processResult, lro, setErrorAsResult } = inputs;\n  return initOperation({\n    init: async () => {\n      const response = await lro.sendInitialRequest();\n      const config = inferLroMode({\n        rawResponse: response.rawResponse,\n        requestPath: lro.requestPath,\n        requestMethod: lro.requestMethod,\n        resourceLocationConfig,\n      });\n      return {\n        response,\n        operationLocation: config?.operationLocation,\n        resourceLocation: config?.resourceLocation,\n        ...(config?.mode ? { metadata: { mode: config.mode } } : {}),\n      };\n    },\n    stateProxy,\n    processResult: processResult\n      ? ({ flatResponse }, state) => processResult(flatResponse, state)\n      : ({ flatResponse }) => flatResponse as TResult,\n    getOperationStatus: getStatusFromInitialResponse,\n    setErrorAsResult,\n  });\n}\n\nexport function getOperationLocation<TState>(\n  { rawResponse }: LroResponse,\n  state: RestorableOperationState<TState>,\n): string | undefined {\n  const mode = state.config.metadata?.[\"mode\"];\n  switch (mode) {\n    case \"OperationLocation\": {\n      return getOperationLocationPollingUrl({\n        operationLocation: getOperationLocationHeader(rawResponse),\n        azureAsyncOperation: getAzureAsyncOperationHeader(rawResponse),\n      });\n    }\n    case \"ResourceLocation\": {\n      return getLocationHeader(rawResponse);\n    }\n    case \"Body\":\n    default: {\n      return undefined;\n    }\n  }\n}\n\nexport function getOperationStatus<TState>(\n  { rawResponse }: LroResponse,\n  state: RestorableOperationState<TState>,\n): OperationStatus {\n  const mode = state.config.metadata?.[\"mode\"];\n  switch (mode) {\n    case \"OperationLocation\": {\n      return getStatus(rawResponse);\n    }\n    case \"ResourceLocation\": {\n      return toOperationStatus(rawResponse.statusCode);\n    }\n    case \"Body\": {\n      return getProvisioningState(rawResponse);\n    }\n    default:\n      throw new Error(`Internal error: Unexpected operation mode: ${mode}`);\n  }\n}\n\nfunction accessBodyProperty<P extends string>(\n  { flatResponse, rawResponse }: LroResponse,\n  prop: P,\n): ResponseBody[P] {\n  return (flatResponse as ResponseBody)?.[prop] ?? (rawResponse.body as ResponseBody)?.[prop];\n}\n\nexport function getResourceLocation<TState>(\n  res: LroResponse,\n  state: RestorableOperationState<TState>,\n): string | undefined {\n  const loc = accessBodyProperty(res, \"resourceLocation\");\n  if (loc && typeof loc === \"string\") {\n    state.config.resourceLocation = loc;\n  }\n  return state.config.resourceLocation;\n}\n\nexport function isOperationError(e: Error): boolean {\n  return e.name === \"RestError\";\n}\n\n/** Polls the long-running operation. */\nexport async function pollHttpOperation<TState, TResult>(inputs: {\n  lro: LongRunningOperation;\n  stateProxy: StateProxy<TState, TResult>;\n  processResult?: (result: unknown, state: TState) => TResult;\n  updateState?: (state: TState, lastResponse: LroResponse) => void;\n  isDone?: (lastResponse: LroResponse, state: TState) => boolean;\n  setDelay: (intervalInMs: number) => void;\n  options?: { abortSignal?: AbortSignalLike };\n  state: RestorableOperationState<TState>;\n  setErrorAsResult: boolean;\n}): Promise<void> {\n  const {\n    lro,\n    stateProxy,\n    options,\n    processResult,\n    updateState,\n    setDelay,\n    state,\n    setErrorAsResult,\n  } = inputs;\n  return pollOperation({\n    state,\n    stateProxy,\n    setDelay,\n    processResult: processResult\n      ? ({ flatResponse }, inputState) => processResult(flatResponse, inputState)\n      : ({ flatResponse }) => flatResponse as TResult,\n    getError: getErrorFromResponse,\n    updateState,\n    getPollingInterval: parseRetryAfter,\n    getOperationLocation,\n    getOperationStatus,\n    isOperationError,\n    getResourceLocation,\n    options,\n    /**\n     * The expansion here is intentional because `lro` could be an object that\n     * references an inner this, so we need to preserve a reference to it.\n     */\n    poll: async (location: string, inputOptions?: { abortSignal?: AbortSignalLike }) =>\n      lro.sendPollRequest(location, inputOptions),\n    setErrorAsResult,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  BuildCreatePollerOptions,\n  CreatePollerOptions,\n  Operation,\n  OperationState,\n  RestorableOperationState,\n  SimplePollerLike,\n  StateProxy,\n} from \"./models.js\";\nimport { deserializeState, initOperation, pollOperation } from \"./operation.js\";\nimport { POLL_INTERVAL_IN_MS } from \"./constants.js\";\nimport { delay } from \"@azure/core-util\";\n\nconst createStateProxy: <TResult, TState extends OperationState<TResult>>() => StateProxy<\n  TState,\n  TResult\n> = () => ({\n  /**\n   * The state at this point is created to be of type OperationState<TResult>.\n   * It will be updated later to be of type TState when the\n   * customer-provided callback, `updateState`, is called during polling.\n   */\n  initState: (config) => ({ status: \"running\", config }) as any,\n  setCanceled: (state) => (state.status = \"canceled\"),\n  setError: (state, error) => (state.error = error),\n  setResult: (state, result) => (state.result = result),\n  setRunning: (state) => (state.status = \"running\"),\n  setSucceeded: (state) => (state.status = \"succeeded\"),\n  setFailed: (state) => (state.status = \"failed\"),\n\n  getError: (state) => state.error,\n  getResult: (state) => state.result,\n  isCanceled: (state) => state.status === \"canceled\",\n  isFailed: (state) => state.status === \"failed\",\n  isRunning: (state) => state.status === \"running\",\n  isSucceeded: (state) => state.status === \"succeeded\",\n});\n\n/**\n * Returns a poller factory.\n */\nexport function buildCreatePoller<TResponse, TResult, TState extends OperationState<TResult>>(\n  inputs: BuildCreatePollerOptions<TResponse, TState>,\n): (\n  lro: Operation<TResponse, { abortSignal?: AbortSignalLike }>,\n  options?: CreatePollerOptions<TResponse, TResult, TState>,\n) => Promise<SimplePollerLike<TState, TResult>> {\n  const {\n    getOperationLocation,\n    getStatusFromInitialResponse,\n    getStatusFromPollResponse,\n    isOperationError,\n    getResourceLocation,\n    getPollingInterval,\n    getError,\n    resolveOnUnsuccessful,\n  } = inputs;\n  return async (\n    { init, poll }: Operation<TResponse, { abortSignal?: AbortSignalLike }>,\n    options?: CreatePollerOptions<TResponse, TResult, TState>,\n  ) => {\n    const {\n      processResult,\n      updateState,\n      withOperationLocation: withOperationLocationCallback,\n      intervalInMs = POLL_INTERVAL_IN_MS,\n      restoreFrom,\n    } = options || {};\n    const stateProxy = createStateProxy<TResult, TState>();\n    const withOperationLocation = withOperationLocationCallback\n      ? (() => {\n          let called = false;\n          return (operationLocation: string, isUpdated: boolean) => {\n            if (isUpdated) withOperationLocationCallback(operationLocation);\n            else if (!called) withOperationLocationCallback(operationLocation);\n            called = true;\n          };\n        })()\n      : undefined;\n    const state: RestorableOperationState<TState> = restoreFrom\n      ? deserializeState(restoreFrom)\n      : await initOperation({\n          init,\n          stateProxy,\n          processResult,\n          getOperationStatus: getStatusFromInitialResponse,\n          withOperationLocation,\n          setErrorAsResult: !resolveOnUnsuccessful,\n        });\n    let resultPromise: Promise<TResult> | undefined;\n    const abortController = new AbortController();\n    // Progress handlers\n    type Handler = (state: TState) => void;\n    const handlers = new Map<symbol, Handler>();\n    const handleProgressEvents = async (): Promise<void> => handlers.forEach((h) => h(state));\n    const cancelErrMsg = \"Operation was canceled\";\n    let currentPollIntervalInMs = intervalInMs;\n\n    const poller: SimplePollerLike<TState, TResult> = {\n      getOperationState: () => state,\n      getResult: () => state.result,\n      isDone: () => [\"succeeded\", \"failed\", \"canceled\"].includes(state.status),\n      isStopped: () => resultPromise === undefined,\n      stopPolling: () => {\n        abortController.abort();\n      },\n      toString: () =>\n        JSON.stringify({\n          state,\n        }),\n      onProgress: (callback: (state: TState) => void) => {\n        const s = Symbol();\n        handlers.set(s, callback);\n        return () => handlers.delete(s);\n      },\n      pollUntilDone: (pollOptions?: { abortSignal?: AbortSignalLike }) =>\n        (resultPromise ??= (async () => {\n          const { abortSignal: inputAbortSignal } = pollOptions || {};\n          // In the future we can use AbortSignal.any() instead\n          function abortListener(): void {\n            abortController.abort();\n          }\n          const abortSignal = abortController.signal;\n          if (inputAbortSignal?.aborted) {\n            abortController.abort();\n          } else if (!abortSignal.aborted) {\n            inputAbortSignal?.addEventListener(\"abort\", abortListener, { once: true });\n          }\n\n          try {\n            if (!poller.isDone()) {\n              await poller.poll({ abortSignal });\n              while (!poller.isDone()) {\n                await delay(currentPollIntervalInMs, { abortSignal });\n                await poller.poll({ abortSignal });\n              }\n            }\n          } finally {\n            inputAbortSignal?.removeEventListener(\"abort\", abortListener);\n          }\n          if (resolveOnUnsuccessful) {\n            return poller.getResult() as TResult;\n          } else {\n            switch (state.status) {\n              case \"succeeded\":\n                return poller.getResult() as TResult;\n              case \"canceled\":\n                throw new Error(cancelErrMsg);\n              case \"failed\":\n                throw state.error;\n              case \"notStarted\":\n              case \"running\":\n                throw new Error(`Polling completed without succeeding or failing`);\n            }\n          }\n        })().finally(() => {\n          resultPromise = undefined;\n        })),\n      async poll(pollOptions?: { abortSignal?: AbortSignalLike }): Promise<void> {\n        if (resolveOnUnsuccessful) {\n          if (poller.isDone()) return;\n        } else {\n          switch (state.status) {\n            case \"succeeded\":\n              return;\n            case \"canceled\":\n              throw new Error(cancelErrMsg);\n            case \"failed\":\n              throw state.error;\n          }\n        }\n        await pollOperation({\n          poll,\n          state,\n          stateProxy,\n          getOperationLocation,\n          isOperationError,\n          withOperationLocation,\n          getPollingInterval,\n          getOperationStatus: getStatusFromPollResponse,\n          getResourceLocation,\n          processResult,\n          getError,\n          updateState,\n          options: pollOptions,\n          setDelay: (pollIntervalInMs) => {\n            currentPollIntervalInMs = pollIntervalInMs;\n          },\n          setErrorAsResult: !resolveOnUnsuccessful,\n        });\n        await handleProgressEvents();\n        if (!resolveOnUnsuccessful) {\n          switch (state.status) {\n            case \"canceled\":\n              throw new Error(cancelErrMsg);\n            case \"failed\":\n              throw state.error;\n          }\n        }\n      },\n    };\n    return poller;\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LongRunningOperation, LroResponse } from \"./models.js\";\nimport { OperationState, SimplePollerLike } from \"../poller/models.js\";\nimport {\n  getErrorFromResponse,\n  getOperationLocation,\n  getOperationStatus,\n  getResourceLocation,\n  getStatusFromInitialResponse,\n  inferLroMode,\n  isOperationError,\n  parseRetryAfter,\n} from \"./operation.js\";\nimport { CreateHttpPollerOptions } from \"./models.js\";\nimport { buildCreatePoller } from \"../poller/poller.js\";\n\n/**\n * Creates a poller that can be used to poll a long-running operation.\n * @param lro - Description of the long-running operation\n * @param options - options to configure the poller\n * @returns an initialized poller\n */\nexport async function createHttpPoller<TResult, TState extends OperationState<TResult>>(\n  lro: LongRunningOperation,\n  options?: CreateHttpPollerOptions<TResult, TState>,\n): Promise<SimplePollerLike<TState, TResult>> {\n  const {\n    resourceLocationConfig,\n    intervalInMs,\n    processResult,\n    restoreFrom,\n    updateState,\n    withOperationLocation,\n    resolveOnUnsuccessful = false,\n  } = options || {};\n  return buildCreatePoller<LroResponse, TResult, TState>({\n    getStatusFromInitialResponse,\n    getStatusFromPollResponse: getOperationStatus,\n    isOperationError,\n    getOperationLocation,\n    getResourceLocation,\n    getPollingInterval: parseRetryAfter,\n    getError: getErrorFromResponse,\n    resolveOnUnsuccessful,\n  })(\n    {\n      init: async () => {\n        const response = await lro.sendInitialRequest();\n        const config = inferLroMode({\n          rawResponse: response.rawResponse,\n          requestPath: lro.requestPath,\n          requestMethod: lro.requestMethod,\n          resourceLocationConfig,\n        });\n        return {\n          response,\n          operationLocation: config?.operationLocation,\n          resourceLocation: config?.resourceLocation,\n          ...(config?.mode ? { metadata: { mode: config.mode } } : {}),\n        };\n      },\n      poll: lro.sendPollRequest,\n    },\n    {\n      intervalInMs,\n      withOperationLocation,\n      restoreFrom,\n      updateState,\n      processResult: processResult\n        ? ({ flatResponse }, state) => processResult(flatResponse, state)\n        : ({ flatResponse }) => flatResponse as TResult,\n    },\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress } from \"../poller/models.js\";\nimport { PollerLike } from \"./models.js\";\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult>\n{\n  /** controls whether to throw an error if the operation failed or was canceled. */\n  protected resolveOnUnsuccessful: boolean = false;\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void,\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      },\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-util has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-util\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(pollOptions: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll(pollOptions);\n      await this.delay();\n    }\n  }\n\n  /**\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.isDone()) {\n      this.operation = await this.operation.update({\n        abortSignal: options.abortSignal,\n        fireProgress: this.fireProgress.bind(this),\n      });\n    }\n    this.processUpdatedState();\n  }\n\n  /**\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * Invokes the underlying operation's cancel method.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  private processUpdatedState(): void {\n    if (this.operation.state.error) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        this.reject!(this.operation.state.error);\n        throw this.operation.state.error;\n      }\n    }\n    if (this.operation.state.isCancelled) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        const error = new PollerCancelledError(\"Operation was canceled\");\n        this.reject!(error);\n        throw error;\n      }\n    }\n    if (this.isDone() && this.resolve) {\n      // If the poller has finished polling, this means we now have a result.\n      // However, it can be the case that TResult is instantiated to void, so\n      // we are not expecting a result anyway. To assert that we might not\n      // have a result eventually after finishing polling, we cast the result\n      // to TResult.\n      this.resolve(this.getResult() as TResult);\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(\n    pollOptions: { abortSignal?: AbortSignalLike } = {},\n  ): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling(pollOptions).catch(this.reject);\n    }\n    // This is needed because the state could have been updated by\n    // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n    this.processUpdatedState();\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike },\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal,\n      });\n    },\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Deployments } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  DeploymentExtended,\n  DeploymentsListAtScopeNextOptionalParams,\n  DeploymentsListAtScopeOptionalParams,\n  DeploymentsListAtScopeResponse,\n  DeploymentsListAtTenantScopeNextOptionalParams,\n  DeploymentsListAtTenantScopeOptionalParams,\n  DeploymentsListAtTenantScopeResponse,\n  DeploymentsListAtManagementGroupScopeNextOptionalParams,\n  DeploymentsListAtManagementGroupScopeOptionalParams,\n  DeploymentsListAtManagementGroupScopeResponse,\n  DeploymentsListAtSubscriptionScopeNextOptionalParams,\n  DeploymentsListAtSubscriptionScopeOptionalParams,\n  DeploymentsListAtSubscriptionScopeResponse,\n  DeploymentsListByResourceGroupNextOptionalParams,\n  DeploymentsListByResourceGroupOptionalParams,\n  DeploymentsListByResourceGroupResponse,\n  DeploymentsDeleteAtScopeOptionalParams,\n  DeploymentsCheckExistenceAtScopeOptionalParams,\n  DeploymentsCheckExistenceAtScopeResponse,\n  Deployment,\n  DeploymentsCreateOrUpdateAtScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtScopeResponse,\n  DeploymentsGetAtScopeOptionalParams,\n  DeploymentsGetAtScopeResponse,\n  DeploymentsCancelAtScopeOptionalParams,\n  DeploymentsValidateAtScopeOptionalParams,\n  DeploymentsValidateAtScopeResponse,\n  DeploymentsExportTemplateAtScopeOptionalParams,\n  DeploymentsExportTemplateAtScopeResponse,\n  DeploymentsDeleteAtTenantScopeOptionalParams,\n  DeploymentsCheckExistenceAtTenantScopeOptionalParams,\n  DeploymentsCheckExistenceAtTenantScopeResponse,\n  ScopedDeployment,\n  DeploymentsCreateOrUpdateAtTenantScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtTenantScopeResponse,\n  DeploymentsGetAtTenantScopeOptionalParams,\n  DeploymentsGetAtTenantScopeResponse,\n  DeploymentsCancelAtTenantScopeOptionalParams,\n  DeploymentsValidateAtTenantScopeOptionalParams,\n  DeploymentsValidateAtTenantScopeResponse,\n  ScopedDeploymentWhatIf,\n  DeploymentsWhatIfAtTenantScopeOptionalParams,\n  DeploymentsWhatIfAtTenantScopeResponse,\n  DeploymentsExportTemplateAtTenantScopeOptionalParams,\n  DeploymentsExportTemplateAtTenantScopeResponse,\n  DeploymentsDeleteAtManagementGroupScopeOptionalParams,\n  DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams,\n  DeploymentsCheckExistenceAtManagementGroupScopeResponse,\n  DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtManagementGroupScopeResponse,\n  DeploymentsGetAtManagementGroupScopeOptionalParams,\n  DeploymentsGetAtManagementGroupScopeResponse,\n  DeploymentsCancelAtManagementGroupScopeOptionalParams,\n  DeploymentsValidateAtManagementGroupScopeOptionalParams,\n  DeploymentsValidateAtManagementGroupScopeResponse,\n  DeploymentsWhatIfAtManagementGroupScopeOptionalParams,\n  DeploymentsWhatIfAtManagementGroupScopeResponse,\n  DeploymentsExportTemplateAtManagementGroupScopeOptionalParams,\n  DeploymentsExportTemplateAtManagementGroupScopeResponse,\n  DeploymentsDeleteAtSubscriptionScopeOptionalParams,\n  DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams,\n  DeploymentsCheckExistenceAtSubscriptionScopeResponse,\n  DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtSubscriptionScopeResponse,\n  DeploymentsGetAtSubscriptionScopeOptionalParams,\n  DeploymentsGetAtSubscriptionScopeResponse,\n  DeploymentsCancelAtSubscriptionScopeOptionalParams,\n  DeploymentsValidateAtSubscriptionScopeOptionalParams,\n  DeploymentsValidateAtSubscriptionScopeResponse,\n  DeploymentWhatIf,\n  DeploymentsWhatIfAtSubscriptionScopeOptionalParams,\n  DeploymentsWhatIfAtSubscriptionScopeResponse,\n  DeploymentsExportTemplateAtSubscriptionScopeOptionalParams,\n  DeploymentsExportTemplateAtSubscriptionScopeResponse,\n  DeploymentsDeleteOptionalParams,\n  DeploymentsCheckExistenceOptionalParams,\n  DeploymentsCheckExistenceResponse,\n  DeploymentsCreateOrUpdateOptionalParams,\n  DeploymentsCreateOrUpdateResponse,\n  DeploymentsGetOptionalParams,\n  DeploymentsGetResponse,\n  DeploymentsCancelOptionalParams,\n  DeploymentsValidateOptionalParams,\n  DeploymentsValidateResponse,\n  DeploymentsWhatIfOptionalParams,\n  DeploymentsWhatIfResponse,\n  DeploymentsExportTemplateOptionalParams,\n  DeploymentsExportTemplateResponse,\n  DeploymentsCalculateTemplateHashOptionalParams,\n  DeploymentsCalculateTemplateHashResponse,\n  DeploymentsListAtScopeNextResponse,\n  DeploymentsListAtTenantScopeNextResponse,\n  DeploymentsListAtManagementGroupScopeNextResponse,\n  DeploymentsListAtSubscriptionScopeNextResponse,\n  DeploymentsListByResourceGroupNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Deployments operations. */\nexport class DeploymentsImpl implements Deployments {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Deployments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the deployments at the given scope.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  public listAtScope(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(scope, options, settings);\n      },\n    };\n  }\n\n  private async *listAtScopePagingPage(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtScopePagingAll(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments at the tenant scope.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    options?: DeploymentsListAtTenantScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtTenantScopePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    options?: DeploymentsListAtTenantScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    options?: DeploymentsListAtTenantScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtTenantScopePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param groupId The management group ID.\n   * @param options The options parameters.\n   */\n  public listAtManagementGroupScope(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtManagementGroupScopePagingAll(groupId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(\n          groupId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtManagementGroupScopePagingPage(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtManagementGroupScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtManagementGroupScope(groupId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtManagementGroupScopeNext(\n        groupId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtManagementGroupScopePagingAll(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtManagementGroupScopePagingPage(\n      groupId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param options The options parameters.\n   */\n  public listAtSubscriptionScope(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtSubscriptionScopePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listAtSubscriptionScopePagingPage(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtSubscriptionScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtSubscriptionScope(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtSubscriptionScopeNext(\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtSubscriptionScopePagingAll(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtSubscriptionScopePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   *                          case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams,\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtScopeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, deploymentName, options },\n      spec: deleteAtScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtScopeAndWait(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtScopeOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtScope(\n      scope,\n      deploymentName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtScopeOptionalParams,\n  ): Promise<DeploymentsCheckExistenceAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      checkExistenceAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtScopeResponse>,\n      DeploymentsCreateOrUpdateAtScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsCreateOrUpdateAtScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, deploymentName, parameters, options },\n      spec: createOrUpdateAtScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtScopeAndWait(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtScopeOptionalParams,\n  ): Promise<DeploymentsCreateOrUpdateAtScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtScope(\n      scope,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsGetAtScopeOptionalParams,\n  ): Promise<DeploymentsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      getAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsCancelAtScopeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      cancelAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtScopeResponse>,\n      DeploymentsValidateAtScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsValidateAtScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, deploymentName, parameters, options },\n      spec: validateAtScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtScopeResponse,\n      OperationState<DeploymentsValidateAtScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtScopeAndWait(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtScopeOptionalParams,\n  ): Promise<DeploymentsValidateAtScopeResponse> {\n    const poller = await this.beginValidateAtScope(\n      scope,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtScopeOptionalParams,\n  ): Promise<DeploymentsExportTemplateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      exportTemplateAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Get all the deployments at the given scope.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  private _listAtScope(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams,\n  ): Promise<DeploymentsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtTenantScopeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, options },\n      spec: deleteAtTenantScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtTenantScopeAndWait(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtTenantScopeOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtTenantScope(deploymentName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsCheckExistenceAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      checkExistenceAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtTenantScope(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtTenantScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtTenantScopeResponse>,\n      DeploymentsCreateOrUpdateAtTenantScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsCreateOrUpdateAtTenantScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: createOrUpdateAtTenantScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtTenantScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtTenantScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtTenantScopeAndWait(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsCreateOrUpdateAtTenantScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtTenantScope(\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsGetAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      getAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsCancelAtTenantScopeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      cancelAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtTenantScope(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtTenantScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtTenantScopeResponse>,\n      DeploymentsValidateAtTenantScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsValidateAtTenantScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: validateAtTenantScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtTenantScopeResponse,\n      OperationState<DeploymentsValidateAtTenantScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtTenantScopeAndWait(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsValidateAtTenantScopeResponse> {\n    const poller = await this.beginValidateAtTenantScope(\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the tenant group.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtTenantScope(\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtTenantScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfAtTenantScopeResponse>,\n      DeploymentsWhatIfAtTenantScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsWhatIfAtTenantScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: whatIfAtTenantScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfAtTenantScopeResponse,\n      OperationState<DeploymentsWhatIfAtTenantScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the tenant group.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtTenantScopeAndWait(\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsWhatIfAtTenantScopeResponse> {\n    const poller = await this.beginWhatIfAtTenantScope(\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsExportTemplateAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      exportTemplateAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Get all the deployments at the tenant scope.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    options?: DeploymentsListAtTenantScopeOptionalParams,\n  ): Promise<DeploymentsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtManagementGroupScopeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, options },\n      spec: deleteAtManagementGroupScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtManagementGroupScopeOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsCheckExistenceAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      checkExistenceAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>,\n      DeploymentsCreateOrUpdateAtManagementGroupScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, parameters, options },\n      spec: createOrUpdateAtManagementGroupScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtManagementGroupScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsGetAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      getAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsCancelAtManagementGroupScopeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      cancelAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtManagementGroupScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtManagementGroupScopeResponse>,\n      DeploymentsValidateAtManagementGroupScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsValidateAtManagementGroupScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, parameters, options },\n      spec: validateAtManagementGroupScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtManagementGroupScopeResponse,\n      OperationState<DeploymentsValidateAtManagementGroupScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsValidateAtManagementGroupScopeResponse> {\n    const poller = await this.beginValidateAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the management\n   * group.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtManagementGroupScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfAtManagementGroupScopeResponse>,\n      DeploymentsWhatIfAtManagementGroupScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsWhatIfAtManagementGroupScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, parameters, options },\n      spec: whatIfAtManagementGroupScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfAtManagementGroupScopeResponse,\n      OperationState<DeploymentsWhatIfAtManagementGroupScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the management\n   * group.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsWhatIfAtManagementGroupScopeResponse> {\n    const poller = await this.beginWhatIfAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsExportTemplateAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      exportTemplateAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param groupId The management group ID.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScope(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, options },\n      listAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtSubscriptionScopeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, options },\n      spec: deleteAtSubscriptionScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtSubscriptionScopeOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtSubscriptionScope(\n      deploymentName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsCheckExistenceAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      checkExistenceAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>,\n      DeploymentsCreateOrUpdateAtSubscriptionScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: createOrUpdateAtSubscriptionScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtSubscriptionScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsGetAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      getAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsCancelAtSubscriptionScopeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      cancelAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtSubscriptionScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtSubscriptionScopeResponse>,\n      DeploymentsValidateAtSubscriptionScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsValidateAtSubscriptionScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: validateAtSubscriptionScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtSubscriptionScopeResponse,\n      OperationState<DeploymentsValidateAtSubscriptionScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsValidateAtSubscriptionScopeResponse> {\n    const poller = await this.beginValidateAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the subscription.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to What If.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtSubscriptionScope(\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfAtSubscriptionScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfAtSubscriptionScopeResponse>,\n      DeploymentsWhatIfAtSubscriptionScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsWhatIfAtSubscriptionScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: whatIfAtSubscriptionScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfAtSubscriptionScopeResponse,\n      OperationState<DeploymentsWhatIfAtSubscriptionScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the subscription.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to What If.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsWhatIfAtSubscriptionScopeResponse> {\n    const poller = await this.beginWhatIfAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsExportTemplateAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      exportTemplateAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScope(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. Deleting a template deployment does not affect the\n   * state of the resource group. This is an asynchronous operation that returns a status of 202 until\n   * the template deployment is successfully deleted. The Location response header contains the URI that\n   * is used to obtain the status of the process. While the process is running, a call to the URI in the\n   * Location header returns a status of 202. When the process finishes, the URI in the Location header\n   * returns a status of 204 on success. If the asynchronous request failed, the URI in the Location\n   * header returns an error-level status code.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name is\n   *                          case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, options },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. Deleting a template deployment does not affect the\n   * state of the resource group. This is an asynchronous operation that returns a status of 202 until\n   * the template deployment is successfully deleted. The Location response header contains the URI that\n   * is used to obtain the status of the process. While the process is running, a call to the URI in the\n   * Location header returns a status of 202. When the process finishes, the URI in the Location header\n   * returns a status of 204 on success. If the asynchronous request failed, the URI in the Location\n   * header returns an error-level status code.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name is\n   *                          case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      deploymentName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name is\n   *                          case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistence(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceOptionalParams,\n  ): Promise<DeploymentsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      checkExistenceOperationSpec,\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is case\n   *                          insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateResponse>,\n      DeploymentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, parameters, options },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateResponse,\n      OperationState<DeploymentsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is case\n   *                          insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateOptionalParams,\n  ): Promise<DeploymentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsGetOptionalParams,\n  ): Promise<DeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resource group partially deployed.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsCancelOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      cancelOperationSpec,\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateResponse>,\n      DeploymentsValidateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsValidateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, parameters, options },\n      spec: validateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateResponse,\n      OperationState<DeploymentsValidateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateOptionalParams,\n  ): Promise<DeploymentsValidateResponse> {\n    const poller = await this.beginValidate(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the resource group.\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIf(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfResponse>,\n      DeploymentsWhatIfResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<DeploymentsWhatIfResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, parameters, options },\n      spec: whatIfOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfResponse,\n      OperationState<DeploymentsWhatIfResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the resource group.\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfOptionalParams,\n  ): Promise<DeploymentsWhatIfResponse> {\n    const poller = await this.beginWhatIf(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplate(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsExportTemplateOptionalParams,\n  ): Promise<DeploymentsExportTemplateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      exportTemplateOperationSpec,\n    );\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   *                          case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams,\n  ): Promise<DeploymentsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec,\n    );\n  }\n\n  /**\n   * Calculate the hash of the given template.\n   * @param template The template provided to calculate hash.\n   * @param options The options parameters.\n   */\n  calculateTemplateHash(\n    template: Record<string, unknown>,\n    options?: DeploymentsCalculateTemplateHashOptionalParams,\n  ): Promise<DeploymentsCalculateTemplateHashResponse> {\n    return this.client.sendOperationRequest(\n      { template, options },\n      calculateTemplateHashOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  private _listAtScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: DeploymentsListAtScopeNextOptionalParams,\n  ): Promise<DeploymentsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listAtScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    nextLink: string,\n    options?: DeploymentsListAtTenantScopeNextOptionalParams,\n  ): Promise<DeploymentsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAtTenantScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScopeNext(\n    groupId: string,\n    nextLink: string,\n    options?: DeploymentsListAtManagementGroupScopeNextOptionalParams,\n  ): Promise<DeploymentsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, nextLink, options },\n      listAtManagementGroupScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScopeNext(\n    nextLink: string,\n    options?: DeploymentsListAtSubscriptionScopeNextOptionalParams,\n  ): Promise<DeploymentsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAtSubscriptionScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   *                          case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DeploymentsListByResourceGroupNextOptionalParams,\n  ): Promise<DeploymentsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst cancelAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst validateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst exportTemplateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst cancelAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst validateAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst whatIfAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst exportTemplateAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceAtManagementGroupScopeOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n    httpMethod: \"HEAD\",\n    responses: {\n      204: {},\n      404: {},\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.deploymentName,\n      Parameters.groupId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createOrUpdateAtManagementGroupScopeOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      201: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      202: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      204: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    requestBody: Parameters.parameters1,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.deploymentName,\n      Parameters.groupId,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst getAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst cancelAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst validateAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst whatIfAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst exportTemplateAtManagementGroupScopeOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DeploymentExportResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.deploymentName,\n      Parameters.groupId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.groupId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceAtSubscriptionScopeOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n    httpMethod: \"HEAD\",\n    responses: {\n      204: {},\n      404: {},\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.deploymentName,\n      Parameters.subscriptionId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createOrUpdateAtSubscriptionScopeOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      201: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      202: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      204: {\n        bodyMapper: Mappers.DeploymentExtended,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    requestBody: Parameters.parameters,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.deploymentName,\n      Parameters.subscriptionId,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst getAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst cancelAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst validateAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst whatIfAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst exportTemplateAtSubscriptionScopeOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DeploymentExportResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.deploymentName,\n      Parameters.subscriptionId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst whatIfOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst exportTemplateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst calculateTemplateHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/calculateTemplateHash\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TemplateHashResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.template,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listAtScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.groupId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Providers } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  Provider,\n  ProvidersListNextOptionalParams,\n  ProvidersListOptionalParams,\n  ProvidersListResponse,\n  ProvidersListAtTenantScopeNextOptionalParams,\n  ProvidersListAtTenantScopeOptionalParams,\n  ProvidersListAtTenantScopeResponse,\n  ProvidersUnregisterOptionalParams,\n  ProvidersUnregisterResponse,\n  ProvidersRegisterAtManagementGroupScopeOptionalParams,\n  ProvidersProviderPermissionsOptionalParams,\n  ProvidersProviderPermissionsResponse,\n  ProvidersRegisterOptionalParams,\n  ProvidersRegisterResponse,\n  ProvidersGetOptionalParams,\n  ProvidersGetResponse,\n  ProvidersGetAtTenantScopeOptionalParams,\n  ProvidersGetAtTenantScopeResponse,\n  ProvidersListNextResponse,\n  ProvidersListAtTenantScopeNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Providers operations. */\nexport class ProvidersImpl implements Providers {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Providers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ProvidersListOptionalParams,\n  ): PagedAsyncIterableIterator<Provider> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ProvidersListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Provider[]> {\n    let result: ProvidersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ProvidersListOptionalParams,\n  ): AsyncIterableIterator<Provider> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all resource providers for the tenant.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    options?: ProvidersListAtTenantScopeOptionalParams,\n  ): PagedAsyncIterableIterator<Provider> {\n    const iter = this.listAtTenantScopePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    options?: ProvidersListAtTenantScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Provider[]> {\n    let result: ProvidersListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    options?: ProvidersListAtTenantScopeOptionalParams,\n  ): AsyncIterableIterator<Provider> {\n    for await (const page of this.listAtTenantScopePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Unregisters a subscription from a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param options The options parameters.\n   */\n  unregister(\n    resourceProviderNamespace: string,\n    options?: ProvidersUnregisterOptionalParams,\n  ): Promise<ProvidersUnregisterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      unregisterOperationSpec,\n    );\n  }\n\n  /**\n   * Registers a management group with a resource provider. Use this operation to register a resource\n   * provider with resource types that can be deployed at the management group scope. It does not\n   * recursively register subscriptions within the management group. Instead, you must register\n   * subscriptions individually.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param groupId The management group ID.\n   * @param options The options parameters.\n   */\n  registerAtManagementGroupScope(\n    resourceProviderNamespace: string,\n    groupId: string,\n    options?: ProvidersRegisterAtManagementGroupScopeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, groupId, options },\n      registerAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Get the provider permissions.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  providerPermissions(\n    resourceProviderNamespace: string,\n    options?: ProvidersProviderPermissionsOptionalParams,\n  ): Promise<ProvidersProviderPermissionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      providerPermissionsOperationSpec,\n    );\n  }\n\n  /**\n   * Registers a subscription with a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param options The options parameters.\n   */\n  register(\n    resourceProviderNamespace: string,\n    options?: ProvidersRegisterOptionalParams,\n  ): Promise<ProvidersRegisterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      registerOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ProvidersListOptionalParams,\n  ): Promise<ProvidersListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets all resource providers for the tenant.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    options?: ProvidersListAtTenantScopeOptionalParams,\n  ): Promise<ProvidersListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  get(\n    resourceProviderNamespace: string,\n    options?: ProvidersGetOptionalParams,\n  ): Promise<ProvidersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the specified resource provider at the tenant level.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    resourceProviderNamespace: string,\n    options?: ProvidersGetAtTenantScopeOptionalParams,\n  ): Promise<ProvidersGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      getAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ProvidersListNextOptionalParams,\n  ): Promise<ProvidersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    nextLink: string,\n    options?: ProvidersListAtTenantScopeNextOptionalParams,\n  ): Promise<ProvidersListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAtTenantScopeNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst unregisterOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst registerAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.groupId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst providerPermissionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/providerPermissions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderPermissionListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst registerOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/{resourceProviderNamespace}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.resourceProviderNamespace],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ProviderResourceTypes } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  ProviderResourceTypesListOptionalParams,\n  ProviderResourceTypesListResponse,\n} from \"../models/index.js\";\n\n/** Class containing ProviderResourceTypes operations. */\nexport class ProviderResourceTypesImpl implements ProviderResourceTypes {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class ProviderResourceTypes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the resource types for a specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  list(\n    resourceProviderNamespace: string,\n    options?: ProviderResourceTypesListOptionalParams,\n  ): Promise<ProviderResourceTypesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      listOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderResourceTypeListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Resources } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  GenericResourceExpanded,\n  ResourcesListByResourceGroupNextOptionalParams,\n  ResourcesListByResourceGroupOptionalParams,\n  ResourcesListByResourceGroupResponse,\n  ResourcesListNextOptionalParams,\n  ResourcesListOptionalParams,\n  ResourcesListResponse,\n  ResourcesMoveInfo,\n  ResourcesMoveResourcesOptionalParams,\n  ResourcesValidateMoveResourcesOptionalParams,\n  ResourcesCheckExistenceOptionalParams,\n  ResourcesCheckExistenceResponse,\n  ResourcesDeleteOptionalParams,\n  GenericResource,\n  ResourcesCreateOrUpdateOptionalParams,\n  ResourcesCreateOrUpdateResponse,\n  ResourcesUpdateOptionalParams,\n  ResourcesUpdateResponse,\n  ResourcesGetOptionalParams,\n  ResourcesGetResponse,\n  ResourcesCheckExistenceByIdOptionalParams,\n  ResourcesCheckExistenceByIdResponse,\n  ResourcesDeleteByIdOptionalParams,\n  ResourcesCreateOrUpdateByIdOptionalParams,\n  ResourcesCreateOrUpdateByIdResponse,\n  ResourcesUpdateByIdOptionalParams,\n  ResourcesUpdateByIdResponse,\n  ResourcesGetByIdOptionalParams,\n  ResourcesGetByIdResponse,\n  ResourcesListByResourceGroupNextResponse,\n  ResourcesListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Resources operations. */\nexport class ResourcesImpl implements Resources {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Resources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<GenericResourceExpanded> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<GenericResourceExpanded[]> {\n    let result: ResourcesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams,\n  ): AsyncIterableIterator<GenericResourceExpanded> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ResourcesListOptionalParams,\n  ): PagedAsyncIterableIterator<GenericResourceExpanded> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ResourcesListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<GenericResourceExpanded[]> {\n    let result: ResourcesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ResourcesListOptionalParams,\n  ): AsyncIterableIterator<GenericResourceExpanded> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams,\n  ): Promise<ResourcesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec,\n    );\n  }\n\n  /**\n   * The resources to be moved must be in the same source resource group in the source subscription being\n   * used. The target resource group may be in a different subscription. When moving resources, both the\n   * source group and the target group are locked for the duration of the operation. Write and delete\n   * operations are blocked on the groups until the move completes.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be moved.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginMoveResources(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesMoveResourcesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { sourceResourceGroupName, parameters, options },\n      spec: moveResourcesOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * The resources to be moved must be in the same source resource group in the source subscription being\n   * used. The target resource group may be in a different subscription. When moving resources, both the\n   * source group and the target group are locked for the duration of the operation. Write and delete\n   * operations are blocked on the groups until the move completes.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be moved.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginMoveResourcesAndWait(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesMoveResourcesOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginMoveResources(\n      sourceResourceGroupName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources to\n   * be moved must be in the same source resource group in the source subscription being used. The target\n   * resource group may be in a different subscription. If validation succeeds, it returns HTTP response\n   * code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an\n   * error message. Retrieve the URL in the Location header value to check the result of the long-running\n   * operation.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be validated for move.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginValidateMoveResources(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesValidateMoveResourcesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { sourceResourceGroupName, parameters, options },\n      spec: validateMoveResourcesOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources to\n   * be moved must be in the same source resource group in the source subscription being used. The target\n   * resource group may be in a different subscription. If validation succeeds, it returns HTTP response\n   * code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an\n   * error message. Retrieve the URL in the Location header value to check the result of the long-running\n   * operation.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be validated for move.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginValidateMoveResourcesAndWait(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesValidateMoveResourcesOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginValidateMoveResources(\n      sourceResourceGroupName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ResourcesListOptionalParams,\n  ): Promise<ResourcesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Checks whether a resource exists.\n   * @param resourceGroupName The name of the resource group containing the resource to check. The name\n   *                          is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  checkExistence(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesCheckExistenceOptionalParams,\n  ): Promise<ResourcesCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options,\n      },\n      checkExistenceOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete. The\n   *                          name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options,\n      },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete. The\n   *                          name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesCreateOrUpdateResponse>,\n      ResourcesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<ResourcesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options,\n      },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      ResourcesCreateOrUpdateResponse,\n      OperationState<ResourcesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateOptionalParams,\n  ): Promise<ResourcesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesUpdateResponse>,\n      ResourcesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<ResourcesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options,\n      },\n      spec: updateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      ResourcesUpdateResponse,\n      OperationState<ResourcesUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateOptionalParams,\n  ): Promise<ResourcesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a resource.\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name is\n   *                          case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesGetOptionalParams,\n  ): Promise<ResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options,\n      },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Checks by ID whether a resource exists. This API currently works only for a limited set of Resource\n   * providers. In the event that a Resource provider does not implement this API, ARM will respond with\n   * a 405. The alternative then is to use the GET API to check for the existence of the resource.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  checkExistenceById(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesCheckExistenceByIdOptionalParams,\n  ): Promise<ResourcesCheckExistenceByIdResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, apiVersion, options },\n      checkExistenceByIdOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDeleteById(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesDeleteByIdOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceId, apiVersion, options },\n      spec: deleteByIdOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDeleteByIdAndWait(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesDeleteByIdOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteById(resourceId, apiVersion, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateByIdOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesCreateOrUpdateByIdResponse>,\n      ResourcesCreateOrUpdateByIdResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<ResourcesCreateOrUpdateByIdResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceId, apiVersion, parameters, options },\n      spec: createOrUpdateByIdOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      ResourcesCreateOrUpdateByIdResponse,\n      OperationState<ResourcesCreateOrUpdateByIdResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateByIdAndWait(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateByIdOptionalParams,\n  ): Promise<ResourcesCreateOrUpdateByIdResponse> {\n    const poller = await this.beginCreateOrUpdateById(\n      resourceId,\n      apiVersion,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateByIdOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesUpdateByIdResponse>,\n      ResourcesUpdateByIdResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<ResourcesUpdateByIdResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceId, apiVersion, parameters, options },\n      spec: updateByIdOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      ResourcesUpdateByIdResponse,\n      OperationState<ResourcesUpdateByIdResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateByIdAndWait(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateByIdOptionalParams,\n  ): Promise<ResourcesUpdateByIdResponse> {\n    const poller = await this.beginUpdateById(\n      resourceId,\n      apiVersion,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  getById(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesGetByIdOptionalParams,\n  ): Promise<ResourcesGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, apiVersion, options },\n      getByIdOperationSpec,\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ResourcesListByResourceGroupNextOptionalParams,\n  ): Promise<ResourcesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ResourcesListNextOptionalParams,\n  ): Promise<ResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.top,\n    Parameters.expand,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst moveResourcesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.sourceResourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst validateMoveResourcesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.sourceResourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.top,\n    Parameters.expand,\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkExistenceByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { ResourceGroups } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  ResourceGroup,\n  ResourceGroupsListNextOptionalParams,\n  ResourceGroupsListOptionalParams,\n  ResourceGroupsListResponse,\n  ResourceGroupsCheckExistenceOptionalParams,\n  ResourceGroupsCheckExistenceResponse,\n  ResourceGroupsCreateOrUpdateOptionalParams,\n  ResourceGroupsCreateOrUpdateResponse,\n  ResourceGroupsDeleteOptionalParams,\n  ResourceGroupsGetOptionalParams,\n  ResourceGroupsGetResponse,\n  ResourceGroupPatchable,\n  ResourceGroupsUpdateOptionalParams,\n  ResourceGroupsUpdateResponse,\n  ExportTemplateRequest,\n  ResourceGroupsExportTemplateOptionalParams,\n  ResourceGroupsExportTemplateResponse,\n  ResourceGroupsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ResourceGroups operations. */\nexport class ResourceGroupsImpl implements ResourceGroups {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class ResourceGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ResourceGroupsListOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceGroup> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ResourceGroupsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ResourceGroup[]> {\n    let result: ResourceGroupsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ResourceGroupsListOptionalParams,\n  ): AsyncIterableIterator<ResourceGroup> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks whether a resource group exists.\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  checkExistence(\n    resourceGroupName: string,\n    options?: ResourceGroupsCheckExistenceOptionalParams,\n  ): Promise<ResourceGroupsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      checkExistenceOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or updates a resource group.\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   *                          alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that\n   *                          match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    parameters: ResourceGroup,\n    options?: ResourceGroupsCreateOrUpdateOptionalParams,\n  ): Promise<ResourceGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, parameters, options },\n      createOrUpdateOperationSpec,\n    );\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource group\n   * deletes all of its template deployments and currently stored operations.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    options?: ResourceGroupsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, options },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource group\n   * deletes all of its template deployments and currently stored operations.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    options?: ResourceGroupsDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a resource group.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    options?: ResourceGroupsGetOptionalParams,\n  ): Promise<ResourceGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Resource groups can be updated through a simple PATCH operation to a group address. The format of\n   * the request is the same as that for creating a resource group. If a field is unspecified, the\n   * current value is retained.\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    parameters: ResourceGroupPatchable,\n    options?: ResourceGroupsUpdateOptionalParams,\n  ): Promise<ResourceGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, parameters, options },\n      updateOperationSpec,\n    );\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters for exporting the template.\n   * @param options The options parameters.\n   */\n  async beginExportTemplate(\n    resourceGroupName: string,\n    parameters: ExportTemplateRequest,\n    options?: ResourceGroupsExportTemplateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourceGroupsExportTemplateResponse>,\n      ResourceGroupsExportTemplateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<ResourceGroupsExportTemplateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, parameters, options },\n      spec: exportTemplateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      ResourceGroupsExportTemplateResponse,\n      OperationState<ResourceGroupsExportTemplateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters for exporting the template.\n   * @param options The options parameters.\n   */\n  async beginExportTemplateAndWait(\n    resourceGroupName: string,\n    parameters: ExportTemplateRequest,\n    options?: ResourceGroupsExportTemplateOptionalParams,\n  ): Promise<ResourceGroupsExportTemplateResponse> {\n    const poller = await this.beginExportTemplate(\n      resourceGroupName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ResourceGroupsListOptionalParams,\n  ): Promise<ResourceGroupsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ResourceGroupsListNextOptionalParams,\n  ): Promise<ResourceGroupsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkExistenceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup,\n    },\n    201: {\n      bodyMapper: Mappers.ResourceGroup,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.forceDeletionTypes],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst exportTemplateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupExportResult,\n    },\n    201: {\n      bodyMapper: Mappers.ResourceGroupExportResult,\n    },\n    202: {\n      bodyMapper: Mappers.ResourceGroupExportResult,\n    },\n    204: {\n      bodyMapper: Mappers.ResourceGroupExportResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { TagsOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  TagDetails,\n  TagsListNextOptionalParams,\n  TagsListOptionalParams,\n  TagsListResponse,\n  TagsDeleteValueOptionalParams,\n  TagsCreateOrUpdateValueOptionalParams,\n  TagsCreateOrUpdateValueResponse,\n  TagsCreateOrUpdateOptionalParams,\n  TagsCreateOrUpdateResponse,\n  TagsDeleteOptionalParams,\n  TagsResource,\n  TagsCreateOrUpdateAtScopeOptionalParams,\n  TagsCreateOrUpdateAtScopeResponse,\n  TagsPatchResource,\n  TagsUpdateAtScopeOptionalParams,\n  TagsUpdateAtScopeResponse,\n  TagsGetAtScopeOptionalParams,\n  TagsGetAtScopeResponse,\n  TagsDeleteAtScopeOptionalParams,\n  TagsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing TagsOperations operations. */\nexport class TagsOperationsImpl implements TagsOperations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class TagsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: TagsListOptionalParams,\n  ): PagedAsyncIterableIterator<TagDetails> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: TagsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<TagDetails[]> {\n    let result: TagsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: TagsListOptionalParams,\n  ): AsyncIterableIterator<TagDetails> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * This operation allows deleting a value from the list of predefined values for an existing predefined\n   * tag name. The value being deleted must not be in use as a tag value for the given tag name for any\n   * resource.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param options The options parameters.\n   */\n  deleteValue(\n    tagName: string,\n    tagValue: string,\n    options?: TagsDeleteValueOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { tagName, tagValue, options },\n      deleteValueOperationSpec,\n    );\n  }\n\n  /**\n   * This operation allows adding a value to the list of predefined values for an existing predefined tag\n   * name. A tag value can have a maximum of 256 characters.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param options The options parameters.\n   */\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    options?: TagsCreateOrUpdateValueOptionalParams,\n  ): Promise<TagsCreateOrUpdateValueResponse> {\n    return this.client.sendOperationRequest(\n      { tagName, tagValue, options },\n      createOrUpdateValueOperationSpec,\n    );\n  }\n\n  /**\n   * This operation allows adding a name to the list of predefined tag names for the given subscription.\n   * A tag name can have a maximum of 512 characters and is case-insensitive. Tag names cannot have the\n   * following prefixes which are reserved for Azure use: 'microsoft', 'azure', 'windows'.\n   * @param tagName The name of the tag to create.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    tagName: string,\n    options?: TagsCreateOrUpdateOptionalParams,\n  ): Promise<TagsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { tagName, options },\n      createOrUpdateOperationSpec,\n    );\n  }\n\n  /**\n   * This operation allows deleting a name from the list of predefined tag names for the given\n   * subscription. The name being deleted must not be in use as a tag name for any resource. All\n   * predefined values for the given name must have already been deleted.\n   * @param tagName The name of the tag.\n   * @param options The options parameters.\n   */\n  delete(tagName: string, options?: TagsDeleteOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest(\n      { tagName, options },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @param options The options parameters.\n   */\n  private _list(options?: TagsListOptionalParams): Promise<TagsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * This operation allows adding or replacing the entire set of tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags API requests and responses.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtScope(\n    scope: string,\n    parameters: TagsResource,\n    options?: TagsCreateOrUpdateAtScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TagsCreateOrUpdateAtScopeResponse>,\n      TagsCreateOrUpdateAtScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<TagsCreateOrUpdateAtScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, parameters, options },\n      spec: createOrUpdateAtScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      TagsCreateOrUpdateAtScopeResponse,\n      OperationState<TagsCreateOrUpdateAtScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * This operation allows adding or replacing the entire set of tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags API requests and responses.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtScopeAndWait(\n    scope: string,\n    parameters: TagsResource,\n    options?: TagsCreateOrUpdateAtScopeOptionalParams,\n  ): Promise<TagsCreateOrUpdateAtScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtScope(\n      scope,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * This operation allows replacing, merging or selectively deleting tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The\n   * 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows\n   * adding tags with new names and updating the values of tags with existing names. The 'delete' option\n   * allows selectively deleting tags based on given names or name/value pairs.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags patch API request only.\n   * @param options The options parameters.\n   */\n  async beginUpdateAtScope(\n    scope: string,\n    parameters: TagsPatchResource,\n    options?: TagsUpdateAtScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TagsUpdateAtScopeResponse>,\n      TagsUpdateAtScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<TagsUpdateAtScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, parameters, options },\n      spec: updateAtScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      TagsUpdateAtScopeResponse,\n      OperationState<TagsUpdateAtScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * This operation allows replacing, merging or selectively deleting tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The\n   * 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows\n   * adding tags with new names and updating the values of tags with existing names. The 'delete' option\n   * allows selectively deleting tags based on given names or name/value pairs.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags patch API request only.\n   * @param options The options parameters.\n   */\n  async beginUpdateAtScopeAndWait(\n    scope: string,\n    parameters: TagsPatchResource,\n    options?: TagsUpdateAtScopeOptionalParams,\n  ): Promise<TagsUpdateAtScopeResponse> {\n    const poller = await this.beginUpdateAtScope(scope, parameters, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    options?: TagsGetAtScopeOptionalParams,\n  ): Promise<TagsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      getAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtScope(\n    scope: string,\n    options?: TagsDeleteAtScopeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, options },\n      spec: deleteAtScopeOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtScopeAndWait(\n    scope: string,\n    options?: TagsDeleteAtScopeOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtScope(scope, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: TagsListNextOptionalParams,\n  ): Promise<TagsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteValueOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName,\n    Parameters.tagValue,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateValueOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagValue,\n    },\n    201: {\n      bodyMapper: Mappers.TagValue,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName,\n    Parameters.tagValue,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagDetails,\n    },\n    201: {\n      bodyMapper: Mappers.TagDetails,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    201: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    202: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    204: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    201: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    202: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    204: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { DeploymentOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  DeploymentOperation,\n  DeploymentOperationsListAtScopeNextOptionalParams,\n  DeploymentOperationsListAtScopeOptionalParams,\n  DeploymentOperationsListAtScopeResponse,\n  DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  DeploymentOperationsListAtTenantScopeOptionalParams,\n  DeploymentOperationsListAtTenantScopeResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeResponse,\n  DeploymentOperationsListNextOptionalParams,\n  DeploymentOperationsListOptionalParams,\n  DeploymentOperationsListResponse,\n  DeploymentOperationsGetAtScopeOptionalParams,\n  DeploymentOperationsGetAtScopeResponse,\n  DeploymentOperationsGetAtTenantScopeOptionalParams,\n  DeploymentOperationsGetAtTenantScopeResponse,\n  DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsGetAtManagementGroupScopeResponse,\n  DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsGetAtSubscriptionScopeResponse,\n  DeploymentOperationsGetOptionalParams,\n  DeploymentOperationsGetResponse,\n  DeploymentOperationsListAtScopeNextResponse,\n  DeploymentOperationsListAtTenantScopeNextResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextResponse,\n  DeploymentOperationsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeploymentOperations operations. */\nexport class DeploymentOperationsImpl implements DeploymentOperations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeploymentOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtScopePagingAll(scope, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(\n          scope,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtScopePagingPage(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtScope(scope, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtScopeNext(\n        scope,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtScopePagingAll(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtScopePagingPage(\n      scope,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtTenantScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtTenantScopePagingPage(\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtManagementGroupScopePagingAll(\n      groupId,\n      deploymentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(\n          groupId,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtManagementGroupScopePagingPage(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtManagementGroupScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtManagementGroupScope(\n        groupId,\n        deploymentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtManagementGroupScopeNext(\n        groupId,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtManagementGroupScopePagingAll(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtManagementGroupScopePagingPage(\n      groupId,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtSubscriptionScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtSubscriptionScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtSubscriptionScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtSubscriptionScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtSubscriptionScopeNext(\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtSubscriptionScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtSubscriptionScopePagingPage(\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listPagingAll(resourceGroupName, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, operationId, options },\n      getAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      listAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, operationId, options },\n      getAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      listAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetOptionalParams,\n  ): Promise<DeploymentOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, operationId, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): Promise<DeploymentOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  private _listAtScopeNext(\n    scope: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, nextLink, options },\n      listAtScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtTenantScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScopeNext(\n    groupId: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, nextLink, options },\n      listAtManagementGroupScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtSubscriptionScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListNextOptionalParams,\n  ): Promise<DeploymentOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  DeploymentsImpl,\n  ProvidersImpl,\n  ProviderResourceTypesImpl,\n  ResourcesImpl,\n  ResourceGroupsImpl,\n  TagsOperationsImpl,\n  DeploymentOperationsImpl,\n} from \"./operations/index.js\";\nimport {\n  Operations,\n  Deployments,\n  Providers,\n  ProviderResourceTypes,\n  Resources,\n  ResourceGroups,\n  TagsOperations,\n  DeploymentOperations,\n} from \"./operationsInterfaces/index.js\";\nimport { ResourceManagementClientOptionalParams } from \"./models/index.js\";\n\nexport class ResourceManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId?: string;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The Microsoft Azure subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: ResourceManagementClientOptionalParams,\n  );\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: ResourceManagementClientOptionalParams,\n  );\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionIdOrOptions?: ResourceManagementClientOptionalParams | string,\n    options?: ResourceManagementClientOptionalParams,\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    let subscriptionId: string | undefined;\n\n    if (typeof subscriptionIdOrOptions === \"string\") {\n      subscriptionId = subscriptionIdOrOptions;\n    } else if (typeof subscriptionIdOrOptions === \"object\") {\n      options = subscriptionIdOrOptions;\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: ResourceManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials,\n    };\n\n    const packageDetails = `azsdk-js-arm-resources/6.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\",\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] =\n        options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge,\n          },\n        }),\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2025-03-01\";\n    this.operations = new OperationsImpl(this);\n    this.deployments = new DeploymentsImpl(this);\n    this.providers = new ProvidersImpl(this);\n    this.providerResourceTypes = new ProviderResourceTypesImpl(this);\n    this.resources = new ResourcesImpl(this);\n    this.resourceGroups = new ResourceGroupsImpl(this);\n    this.tagsOperations = new TagsOperationsImpl(this);\n    this.deploymentOperations = new DeploymentOperationsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest,\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      },\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  deployments: Deployments;\n  providers: Providers;\n  providerResourceTypes: ProviderResourceTypes;\n  resources: Resources;\n  resourceGroups: ResourceGroups;\n  tagsOperations: TagsOperations;\n  deploymentOperations: DeploymentOperations;\n}\n","import { ResourceManagementClient, Deployment } from \"@azure/arm-resources\";\nimport { TokenCredential } from \"@azure/core-auth\";\n\nexport interface DeploymentParams {\n  template: any;\n  parameters: any;\n  deploymentName: string;\n}\n\nexport interface DeploymentResult {\n  success: boolean;\n  deploymentName: string;\n  resourceGroupName: string;\n  outputs?: any;\n  error?: string;\n}\n\nexport class AzureDeploymentService {\n  private client: ResourceManagementClient;\n  private subscriptionId: string;\n  private resourceGroupName: string;\n\n  constructor(credential: TokenCredential) {\n    this.subscriptionId = process.env.REACT_APP_AZURE_SUBSCRIPTION_ID!;\n    this.resourceGroupName = process.env.REACT_APP_AZURE_RESOURCE_GROUP!;\n    \n    if (!this.subscriptionId || !this.resourceGroupName) {\n      throw new Error(\"Missing required environment variables: REACT_APP_AZURE_SUBSCRIPTION_ID or REACT_APP_AZURE_RESOURCE_GROUP\");\n    }\n\n    this.client = new ResourceManagementClient(credential, this.subscriptionId);\n  }\n\n  /**\n   * Extracts actual parameter values from ARM parameter file structure.\n   * Handles both full ARM parameter files (with $schema, contentVersion, parameters)\n   * and direct parameter objects.\n   */\n  private extractParameters(parameters: any): any {\n    // If the parameters object has a 'parameters' property, it's a full ARM parameter file\n    if (parameters && typeof parameters === 'object' && parameters.parameters) {\n      return parameters.parameters;\n    }\n    \n    // Otherwise, assume it's already in the correct format\n    return parameters;\n  }\n\n  async deployTemplate(params: DeploymentParams): Promise<DeploymentResult> {\n    try {\n      // Extract actual parameters from ARM parameter file structure if needed\n      const actualParameters = this.extractParameters(params.parameters);\n      \n      const deploymentParameters: Deployment = {\n        properties: {\n          template: params.template,\n          parameters: actualParameters,\n          mode: \"Incremental\",\n        },\n      };\n\n      console.log(`Starting deployment: ${params.deploymentName}`);\n      \n      const deployment = await this.client.deployments.beginCreateOrUpdateAndWait(\n        this.resourceGroupName,\n        params.deploymentName,\n        deploymentParameters\n      );\n\n      return {\n        success: true,\n        deploymentName: params.deploymentName,\n        resourceGroupName: this.resourceGroupName,\n        outputs: deployment.properties?.outputs,\n      };\n    } catch (error) {\n      console.error(\"Deployment failed:\", error);\n      return {\n        success: false,\n        deploymentName: params.deploymentName,\n        resourceGroupName: this.resourceGroupName,\n        error: error instanceof Error ? error.message : \"Unknown deployment error\",\n      };\n    }\n  }\n\n  async getDeploymentStatus(deploymentName: string) {\n    try {\n      const deployment = await this.client.deployments.get(\n        this.resourceGroupName,\n        deploymentName\n      );\n      return deployment.properties?.provisioningState;\n    } catch (error) {\n      console.error(\"Failed to get deployment status:\", error);\n      return \"Failed\";\n    }\n  }\n}","import { useMsal } from \"@azure/msal-react\";\nimport { TokenCredential, AccessToken } from \"@azure/core-auth\";\nimport { loginRequest } from \"../authConfig\";\n\nexport class MsalTokenCredential implements TokenCredential {\n  constructor(private instance: any) {}\n\n  async getToken(scopes: string | string[]): Promise<AccessToken | null> {\n    try {\n      const account = this.instance.getAllAccounts()[0];\n      if (!account) {\n        throw new Error(\"No account found\");\n      }\n\n      const scopeArray = Array.isArray(scopes) ? scopes : [scopes];\n      const response = await this.instance.acquireTokenSilent({\n        ...loginRequest,\n        scopes: scopeArray,\n        account: account,\n      });\n\n      return {\n        token: response.accessToken,\n        expiresOnTimestamp: response.expiresOn?.getTime() || 0,\n      };\n    } catch (error) {\n      console.error(\"Failed to acquire token:\", error);\n      return null;\n    }\n  }\n}\n\nexport const useAzureCredential = (): TokenCredential | null => {\n  const { instance, accounts } = useMsal();\n\n  if (accounts.length === 0) {\n    return null;\n  }\n\n  return new MsalTokenCredential(instance);\n};","import React, { useState } from 'react';\nimport { MsalProvider } from '@azure/msal-react';\nimport { PublicClientApplication } from '@azure/msal-browser';\nimport { msalConfig } from './authConfig';\nimport { FileUpload } from './components/FileUpload';\nimport { DeploymentStatus, DeploymentState } from './components/DeploymentStatus';\nimport { LoginButton } from './components/LoginButton';\nimport { AzureDeploymentService } from './services/azureDeploymentService';\nimport { useAzureCredential } from './hooks/useAzureCredential';\nimport './App.css';\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nconst AppContent: React.FC = () => {\n  const [templateFile, setTemplateFile] = useState<File | null>(null);\n  const [parametersFile, setParametersFile] = useState<File | null>(null);\n  const [deploymentState, setDeploymentState] = useState<DeploymentState>('idle');\n  const [deploymentMessage, setDeploymentMessage] = useState<string>('');\n  const [deploymentName, setDeploymentName] = useState<string>('');\n  \n  const credential = useAzureCredential();\n\n  const generateDeploymentName = () => {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, -5);\n    return `arm-deployment-${timestamp}`;\n  };\n\n  const parseFile = async (file: File): Promise<any> => {\n    const content = await file.text();\n    try {\n      return JSON.parse(content);\n    } catch (error) {\n      throw new Error(`Invalid JSON in file ${file.name}: ${error}`);\n    }\n  };\n\n  const handleDeploy = async () => {\n    if (!templateFile || !parametersFile) {\n      alert('Please select both template and parameters files');\n      return;\n    }\n\n    if (!credential) {\n      alert('Please sign in to Azure first');\n      return;\n    }\n\n    try {\n      setDeploymentState('running');\n      const newDeploymentName = generateDeploymentName();\n      setDeploymentName(newDeploymentName);\n      setDeploymentMessage('');\n\n      // Parse the files\n      const template = await parseFile(templateFile);\n      const parameters = await parseFile(parametersFile);\n\n      // Create deployment service and deploy\n      const deploymentService = new AzureDeploymentService(credential);\n      const result = await deploymentService.deployTemplate({\n        template,\n        parameters,\n        deploymentName: newDeploymentName,\n      });\n\n      if (result.success) {\n        setDeploymentState('success');\n        setDeploymentMessage('Resources deployed successfully!');\n      } else {\n        setDeploymentState('error');\n        setDeploymentMessage(result.error || 'Unknown error occurred');\n      }\n    } catch (error) {\n      setDeploymentState('error');\n      setDeploymentMessage(error instanceof Error ? error.message : 'Unknown error occurred');\n    }\n  };\n\n  const canDeploy = templateFile && parametersFile && credential && deploymentState !== 'running';\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🚀 Azure ARM Template Deployment Tool</h1>\n        <p>Deploy Azure resources using ARM templates</p>\n      </header>\n      \n      <main className=\"App-main\">\n        <LoginButton />\n        \n        {credential && (\n          <>\n            <FileUpload\n              onTemplateFileChange={setTemplateFile}\n              onParametersFileChange={setParametersFile}\n              templateFile={templateFile}\n              parametersFile={parametersFile}\n            />\n            \n            <div className=\"deploy-section\">\n              <button\n                onClick={handleDeploy}\n                disabled={!canDeploy}\n                className={`deploy-button ${!canDeploy ? 'disabled' : ''}`}\n              >\n                {deploymentState === 'running' ? '⏳ Deploying...' : '🚀 Deploy to Azure'}\n              </button>\n              \n              <div className=\"deployment-info\">\n                <p><strong>Target Subscription:</strong> {process.env.REACT_APP_AZURE_SUBSCRIPTION_ID || 'Not configured'}</p>\n                <p><strong>Target Resource Group:</strong> {process.env.REACT_APP_AZURE_RESOURCE_GROUP || 'Not configured'}</p>\n              </div>\n            </div>\n            \n            <DeploymentStatus\n              state={deploymentState}\n              message={deploymentMessage}\n              deploymentName={deploymentName}\n              resourceGroup={process.env.REACT_APP_AZURE_RESOURCE_GROUP}\n            />\n          </>\n        )}\n        \n        {!credential && (\n          <div className=\"not-authenticated\">\n            <h3>🔐 Authentication Required</h3>\n            <p>Please sign in with your Microsoft account to deploy Azure resources.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <MsalProvider instance={msalInstance}>\n      <AppContent />\n    </MsalProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["push","heap","node","index","length","a","parentIndex","parent","compare","peek","pop","first","last","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","exports","unstable_now","performance","now","localPerformance","localDate","Date","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","needsPaint","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","priorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","task","unstable_forceFrameRate","fps","console","error","Math","floor","unstable_getCurrentPriorityLevel","unstable_next","eventHandler","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","unstable_shouldYield","unstable_wrapCallback","parentPriorityLevel","apply","this","arguments","module","Scheduler","require","React","ReactDOM","formatProdErrorMessage","code","url","encodeURIComponent","i","isValidContainer","nodeType","getNearestMountedFiber","fiber","nearestMounted","alternate","return","flags","tag","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","Error","findCurrentHostFiberImpl","child","sibling","assign","Object","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_ACTIVITY_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","REACT_CLIENT_REFERENCE","getComponentNameFromType","type","$$typeof","displayName","name","_context","innerType","render","_payload","_init","x","isArrayImpl","Array","isArray","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sharedNotPendingObject","pending","data","method","action","valueStack","createCursor","defaultValue","current","cursor","value","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","documentElement","namespaceURI","getOwnHostContext","tagName","getChildHostContextProd","popHostContainer","pushHostContext","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","hasOwnProperty","prototype","scheduleCallback$3","cancelCallback$1","shouldYield","requestPaint","getCurrentPriorityLevel","ImmediatePriority","UserBlockingPriority","NormalPriority$1","LowPriority","IdlePriority","log$1","log","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","err","clz32","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","rootHasPendingCommit","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","entanglements","markRootEntangled","rootEntangledLanes","index$6","getBumpedLaneForHydrationByLane","lanesToEventPriority","resolveUpdatePriority","updatePriority","p","window","event","getEventPriority","randomKey","random","toString","slice","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","parentNode","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","prefix","suffix","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","setValueForAttribute","attributeName","call","test","removeAttribute","prefix$8","toLowerCase","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","describeBuiltInComponentFrame","match","stack","trim","indexOf","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","defineProperty","set","Reflect","control","x$9","x$10","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","getStackByFiberInDevAndProd","workInProgress","info","message","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","document","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","ch","charCodeAt","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","textContent","setTextContent","text","firstChild","lastChild","nodeValue","unitlessNumbers","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","props","querySelectorAll","otherNode","form","otherProps","isInsideEventHandler","batchedUpdates$1","flushSyncWork$1","getListener","canUseDOM","createElement","passiveBrowserEventsSupported","addEventListener","removeEventListener","startText","fallbackText","getData","start","end","startValue","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","SyntheticKeyboardEvent","key","String","fromCharCode","location","repeat","locale","which","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","propertyName","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticToggleEvent","newState","oldState","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","listeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$282","isSupported$jscomp$inline_417","element$jscomp$inline_418","oninput","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","objectIs","is","y","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","href","hasSelectionCapabilities","contentEditable","skipSelectionChangeEvent","activeElementInst","lastSelection","mouseDown","constructSelectEvent","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","animation","transition","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","CapturedStacks","WeakMap","createCapturedValueAtFiber","source","existing","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","update","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","FiberNode","pendingProps","mode","elementType","refCleanup","ref","updateQueue","memoizedProps","subtreeFlags","deletions","createFiberImplClass","shouldConstruct","Component","isReactComponent","createWorkInProgress","firstContext","resetWorkInProgress","createFiberFromTypeAndProps","owner","fiberTag","hostContext","itemProp","precedence","rel","onLoad","onError","async","src","isHostHoistableType","createFiberFromFragment","elements","createFiberFromText","content","createFiberFromPortal","portal","pendingChildren","implementation","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldSetTextContent","getNextHydratable","isSingletonScope","previousHydratableOnEnteringScopedSingleton","resetHydrationState","upgradeHydrationErrorsToRecoverable","queuedErrors","workInProgressRootRecoverableErrors","valueCursor","currentlyRenderingFiber$1","lastContextDependency","pushProvider","providerFiber","nextValue","popProvider","scheduleContextWorkOnParentPath","propagationRoot","propagateContextChanges","contexts","forcePropagateEntireTree","list","nextFiber","dependency","propagateParentContextChanges","isInsidePropagationBailout","currentParent","checkIfContextChanged","currentDependencies","memoizedValue","prepareToReadContext","readContext","readContextForConsumer","readContextDuringReconciliation","consumer","AbortControllerLocal","AbortController","signal","aborted","listener","abort","forEach","scheduleCallback$2","NormalPriority","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","controller","refCount","releaseCache","cache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","pingEngtangledActionScope","status","prevOnStartTransitionFinish","S","then","thenable","entangledListeners","requestTransitionLane","resolve","entangleAsyncAction","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","workInProgressRoot","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","SuspenseException","SuspenseyCommitException","SuspenseActionException","noopSuspenseyCommitThenable","isThenableResolved","noop$3","trackUsedThenable","thenableState","checkIfUseWrappedInAsyncCatch","reason","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","rejectedReason","hasForceUpdate","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","cloneUpdateQueue","createUpdate","payload","enqueueUpdate","executionContext","entangleTransitions","queueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","suspendIfUpdateReadFromEntangledAsyncAction","processUpdateQueue","workInProgress$jscomp$0","instance$jscomp$0","pendingQueue","lastPendingUpdate","firstPendingUpdate","isHiddenUpdate","workInProgressRootRenderLanes","workInProgressRootSkippedLanes","callCallback","commitCallbacks","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","baseLanes","reuseHiddenContextOnStack","popHiddenContext","currentlyRenderingFiber","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter$1","thenableState$1","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","useMemoCache","size","map","array","basicStateReducer","state","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$32","revertLane","hasEagerState","eagerState","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffectImpl","subscribeToStore","bind","pushSimpleEffect","destroy","resource","updateStoreInstance","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","isRenderPhaseUpdate","actionNode","isTransition","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","handleActionReturnValue","onActionError","error$38","nextState","onActionSuccess","notifyActionListeners","actionStateReducer","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionStateActionEffect","rerenderActionState","create","createDeps","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","mountEffect","updateEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","updateImperativeHandle","concat","mountDebugValue","updateCallback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","dispatchSetStateInternal","result","thenableWithOverride","chainThenableValue","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$41","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useFormState","useActionState","useOptimistic","useCacheRefresh","initialArg","init","identifierPrefix","booleanOrThenable","thenableIndexCounter","unwrapThenable","coerceRef","throwOnInvalidObjectType","returnFiber","newChild","join","resolveLazy","lazyType","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","updateElement","updateFragment","updatePortal","fragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","reconcileChildFibers","mountChildFibers","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","isSuspenseInstanceFallback","revealOrder","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","classComponentUpdater","enqueueSetState","_reactInternals","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","resolveClassComponentProps","baseProps","defaultProps","propName$73","reportGlobalError","reportError","ErrorEvent","dispatchEvent","process","emit","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$74","logCaughtError","boundary","onCaughtError","errorBoundary","e$75","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","bailoutOnAlreadyFinishedWork","updateMemoComponent","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","markRef","replayFunctionComponent","updateClassComponent","contextType","updater","refs","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","overflow","fallback","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","renderDidSuspendDelayIfPossible","primaryChildren","offscreenProps","_pendingMarkers","_retryCache","_transitions","scheduleSuspenseWorkOnFiber","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","isDehydrated","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","crossOrigin","title","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","markUpdate","preloadResourceAndSuspendIfNeeded","loading","preloadResource","scheduleRetryEffect","retryQueue","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$113","bubbleProperties","completedWork","didBailout","newChildLanes","child$114","completeWork","pendingContext","createElementNS","innerHTML","removeChild","appendChild","autoFocus","createTextNode","cache$127","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","destroy_","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$143","commitHostMount","focus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$205","propKey$221","propKey$226","propKey$231","setPropOnCustomElement","propKey$236","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","_reactRootContainer","insertOrAppendPlacementNode","commitHostSingletonAcquisition","singleton","attributes","removeAttributeNode","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","WeakSet","nextEffect","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$142","commitSuspenseHydrationCallbacks","readyState","_reactRetry","registerSuspenseInstanceRetry","retryDehydratedSuspenseBoundary","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","prevHostParent","prevHostParentIsContainer","releaseSingletonInstance","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","property","httpEquiv","charSet","mountHoistable","acquireResource","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","wasHidden","prevOffscreenSubtreeIsHidden","recursivelyTraverseDisappearLayoutEffects","display","hostParentFiber","parent$144","parent$146","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","suspendedState","media","matchMedia","matches","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","DefaultAsyncDispatcher","getCacheForType","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootDidIncludeRecursiveRenderUpdate","Infinity","workInProgressTransitions","pendingEffectsStatus","pendingEffectsRoot","pendingFinishedWork","pendingEffectsLanes","pendingEffectsRemainingLanes","pendingPassiveTransitions","pendingRecoverableErrors","suspenseHandler","cancelPendingCommit","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","thrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrentByScheduler","thrownValue$169","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","wasRootDehydrated","timeoutHandle","scheduleTimeout","commitRootWhenReady","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","expirationTimes","index$4","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$2","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$167","performUnitOfWork","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","flushPendingEffects","finishedLanes","remainingLanes","previouslyPendingLanes","index$5","hiddenUpdatesForLane","markRootFinished","callbackNode","callbackPriority","flushPassiveEffects","eventsEnabled","_enabled","selection","rangeCount","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","focusedElem","selectionRange","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","flushMutationEffects","flushLayoutEffects","flushSpawnedWork","rootMutationHasEffect","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","min","win","start$jscomp$0","end$jscomp$0","extend","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","rootHasLayoutEffect","releaseRootPooledCache","onCommitFiberRoot","onRecoverableError","recoverableError","wasDelayedCommit","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","scheduleMicrotask","processRootScheduleInImmediateTask","processRootScheduleInMicrotask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$174","performSyncWorkOnRoot","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$3","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","i$jscomp$inline_1528","eventName$jscomp$inline_1529","toUpperCase","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","parentWindow","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","eventType","getNativeBeforeInputChars","char","getFallbackBeforeInputChars","maybeTargetInst","formAction","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","endsWith","hasSrc","hasSrcSet","propValue$188","parentNamespace","dangerouslySetInnerHTML","localPromise","queueMicrotask","handleErrorInNextTick","parentInstance","suspenseInstance","possiblePreambleContribution","depth","nextNode","nextNode$jscomp$0","targetInstance","previousSibling","rootContainerInstance","preconnectsSet","getRootNode","previousDispatcher","d","f","previousWasRendering","wasRendering","r","formInst","D","preconnectAs","C","L","as","globalDocument","preloadSelector","imageSrcSet","imageSizes","getScriptKey","getScriptSelectorFromKey","m","X","scripts","adoptPreloadPropsForScript","link","insertStylesheet","M","limitedEscapedHref","currentProps","styles$244","resource$245","integrity","hrefLang","referrerPolicy","preloadProps","preloadStylesheet","rawProps","styleProps","instance$250","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedExplicitHydrationTargets","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1785","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$0","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2256","bundleType","rendererPackageName","currentDispatcherRef","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2257","isDisabled","supportsFiber","inject","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","checkDCE","ReactNoopUpdateQueue","isMounted","emptyObject","ComponentDummy","PureComponent","partialState","forceUpdate","pureComponentPrototype","V","ReactElement","self","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","escape","mapIntoArray","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","nextNamePrefix","resolveThenable","mapChildren","func","lazyInitializer","_status","_result","moduleObject","default","Children","forEachFunc","forEachContext","n","toArray","only","Fragment","Profiler","StrictMode","Suspense","__COMPILER_RUNTIME","__proto__","cloneElement","config","childArray","createContext","childrenLength","createRef","forwardRef","lazy","memo","scope","unstable_useCacheRefresh","permalink","Context","Internals","getCrossOriginStringAs","input","createPortal","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","prefetchDNS","preinit","fetchPriority","nonce","preinitModule","preloadModule","requestFormReset","unstable_batchedUpdates","useFormStatus","jsxProd","maybeKey","jsx","jsxs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","chunkId","all","reduce","promises","u","miniCssF","obj","prop","inProgress","dataWebpackPrefix","l","script","needAttach","s","charset","nc","onScriptComplete","doneFns","toStringTag","installedChunks","j","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","ADFS","DSTS","AAD_INSTANCE_DISCOVERY_ENDPT","CIAM_AUTH_URL","AAD_TENANT_DOMAIN_SUFFIX","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","NOT_APPLICABLE","NOT_AVAILABLE","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","SHR_NONCE_VALIDITY","INVALID_INSTANCE","HttpStatus","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","ClaimsRequestKeys","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","NO_SESSION","CodeChallengeMethodValues","PLAIN","S256","OAuthResponseType","ServerResponseType","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","ID_TOKEN","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","APP_METADATA","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","AuthenticationScheme","BEARER","POP","SSH","ThrottlingConstants","Errors","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","JsonWebTokenTypes","unexpectedError","postRequestFailed","AuthErrorMessages","AuthError","errorCode","errorMessage","suberror","super","setPrototypeOf","subError","setCorrelationId","correlationId","createAuthError","additionalMessage","storageNotSupported","stubbedPublicClientApplicationCalled","inMemRedirectUnavailable","BrowserConfigurationAuthErrorMessages","BrowserConfigurationAuthError","createBrowserConfigurationAuthError","stubbedPublicClientApplication","initialize","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","acquireTokenByCode","getAllAccounts","getAccount","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRedirect","logoutPopup","ssoSilent","addEventCallback","removeEventCallback","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","getLogger","setLogger","setActiveAccount","getActiveAccount","initializeWrapperLibrary","setNavigationClient","getConfiguration","hydrateCache","clearCache","BrowserConstants","PlatformAuthConstants","NativeExtensionMethod","BrowserCacheLocation","HTTP_REQUEST_TYPE","INTERACTION_TYPE","TemporaryCacheKeys","StaticCacheKeys","InMemoryCacheKeys","ApiId","InteractionType","InteractionStatus","DEFAULT_REQUEST","scopes","WrapperSKU","DB_NAME","DB_TABLE_NAME","CacheLookupPolicy","iFrameRenewalPolicies","PLATFORM_AUTH_DOM_SUPPORT","LogLevel","Logger","loggerOptions","packageName","packageVersion","level","Info","setLoggerOptions","createDefaultLoggerOptions","localCallback","loggerCallback","defaultLoggerCallback","piiLoggingEnabled","logLevel","logMessage","containsPii","timestamp","toUTCString","logHeader","executeCallback","errorPii","warning","Warning","warningPii","infoPii","verbose","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled","defaultMsalContext","accounts","logger","MsalContext","_typeof","toPropertyKey","t","toPrimitive","TypeError","Number","_defineProperty","writable","ownKeys","getOwnPropertySymbols","filter","_objectSpread2","getOwnPropertyDescriptors","defineProperties","EventType","EventMessageUtils","getInteractionStatusFromEvent","currentStatus","interactionType","Redirect","Popup","accountArraysAreEqual","arrayA","arrayB","comparisonArray","every","elementA","elementB","homeAccountId","localAccountId","username","MsalProviderActionType","previousState","newInProgress","currentAccounts","_objectSpread","MsalProvider","_ref","updateState","callbackId","finally","contextValue","React__default","useMsal","ProtocolMode","AzureCloudInstance","clientInfoDecodingError","clientInfoEmptyError","tokenParsingError","nullOrEmptyToken","endpointResolutionError","networkError","openIdConfigError","hashNotDeserialized","invalidState","stateMismatch","stateNotFound","nonceMismatch","authTimeNotFound","maxAgeTranspired","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","requestCannotBeMade","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noAccountInSilentRequest","invalidCacheRecord","invalidCacheEnvironment","noAccountFound","noCryptoObject","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsCnfRequiredForSignedJwt","authorizationCodeMissingFromServerResponse","bindingKeyNotRemoved","endSessionEndpointNotSupported","keyIdMissing","noNetworkConnectivity","userCanceled","missingTenantIdError","methodNotImplemented","nestedAppAuthBridgeDisabled","ClientAuthErrorMessages","ClientAuthError","createClientAuthError","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Decode","base64Encode","base64UrlEncode","encodeKid","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","hashString","extractTokenClaims","encodedToken","jswPayload","authToken","exec","getJWSPayload","base64Decoded","JSON","parse","checkMaxAge","authTime","maxAge","nowSeconds","round","getTime","toSecondsFromDate","toDateFromSeconds","seconds","isTokenExpired","expiresOn","expirationSec","generateCredentialKey","credentialEntity","generateAccountId","generateCredentialId","generateTarget","generateClaimsHash","generateScheme","createIdTokenEntity","environment","idToken","clientId","tenantId","credentialType","secret","realm","createAccessTokenEntity","accessToken","extExpiresOn","refreshOn","tokenType","userAssertionHash","keyId","requestedClaims","requestedClaimsHash","_atEntity$tokenType","_tokenClaims$cnf","atEntity","cachedAt","extendedExpiresOn","tokenClaims","cnf","kid","createRefreshTokenEntity","refreshToken","familyId","rtEntity","isCredentialEntity","entity","clientOrFamilyId","generateAuthorityMetadataExpiresAt","updateAuthorityEndpointMetadata","authorityMetadata","updatedValues","fromNetwork","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","updateCloudDiscoveryMetadata","preferred_cache","preferred_network","aliasesFromNetwork","isAuthorityMetadataExpired","metadata","expiresAt","redirectUriEmpty","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyInputScopesError","invalidPromptValue","invalidClaims","tokenRequestEmpty","logoutRequestEmpty","invalidCodeChallengeMethod","pkceParamsMissing","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","invalidAuthenticationHeader","cannotSetOIDCOptions","cannotAllowPlatformBroker","authorityMismatch","ClientConfigurationErrorMessages","ClientConfigurationError","createClientConfigurationError","StringUtils","isEmptyObj","strObj","startsWith","str","lastIndexOf","queryStringToObject","query","params","decode","decodeURIComponent","pair","trimArrayEntries","arr","entry","removeEmptyStringsFromArray","jsonParseHelper","matchPattern","pattern","ScopeSet","inputScopes","scopeArr","filteredInput","fromString","inputScopeString","createSearchScopes","scopeSet","containsOnlyOIDCScopes","removeScope","removeOIDCScopes","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","containsScopeSet","asArray","defaultScopeCount","defaultScope","appendScope","newScope","appendScopes","newScopes","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","val","printScopes","buildClientInfo","rawClientInfo","decodedClientInfo","buildClientInfoFromHomeAccountId","clientInfoParts","uid","utid","_objectWithoutProperties","propertyIsEnumerable","_excluded","_excluded2","tenantIdMatchesHomeTenant","buildTenantProfile","idTokenClaims","oid","sub","tid","tfp","acr","isHomeTenant","updateAccountTenantProfileData","baseAccountInfo","tenantProfile","idTokenSecret","updatedAccountInfo","tenantProfileOverride","_buildTenantProfile","claimsSourcedTenantProfile","AuthorityType","getTenantIdFromIdTokenClaims","AccountEntity","generateAccountKey","generateAccountCacheKey","getAccountInfo","nativeAccountId","authorityType","tenantProfiles","isSingleTenant","accountInterface","homeTenantId","createAccount","accountDetails","authority","_clientInfo","_clientInfo2","_accountDetails$idTok","_accountDetails$idTok2","_accountDetails$idTok3","_accountDetails$idTok4","_accountDetails$idTok5","_accountDetails$idTok6","account","clientInfo","protocolMode","env","getPreferredCache","preferredUsername","preferred_username","upn","emails","cloudGraphHostName","msGraphHost","createFromAccountInfo","accountInfo","_accountInfo$tenantPr","from","values","generateHomeAccountId","serverClientInfo","authType","cryptoObj","isAccountEntity","accountInfoIsEqual","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","stripLeadingHashOrQuery","responseString","substring","getDeserializedResponse","normalizedResponse","deserializedHash","fromEntries","URLSearchParams","ear_jwe","error_description","mapToQueryString","parameters","encodeExtraParams","extraQueryParameters","queryParameterArray","UrlString","urlString","_urlString","canonicalizeUri","lowerCaseUrl","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","appendQueryString","queryString","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","constructAuthorityUriFromObject","regEx","urlComponents","AbsolutePath","QueryString","pathSegments","getDomainFromUrl","getAbsoluteUrl","relativeUrl","baseUrl","baseComponents","hashContainsKnownProperties","response","EndpointMetadata","InstanceDiscoveryMetadata","tenant_discovery_endpoint","InstanceDiscoveryMetadataAliases","getAliasesFromMetadata","authorityHost","cloudDiscoveryMetadata","getCloudDiscoveryMetadataFromNetworkResponse","metadataEntry","alias","cacheQuotaExceededErrorCode","cacheUnknownErrorCode","CacheErrorMessages","CacheError","CacheManager","cryptoImpl","staticAuthorityOptions","commonLogger","accountFilter","buildTenantProfiles","getAccountsFilteredBy","getAccountInfoFilteredBy","allAccounts","sort","getBaseAccountInfo","accountEntities","cachedAccounts","flatMap","accountEntity","getTenantProfilesFromAccountEntity","getTenantedAccountInfoByFilter","tokenKeys","tenantProfileFilter","tenantedAccountInfo","tenantProfileMatchesFilter","getIdToken","idTokenClaimsMatchTenantProfileFilter","targetTenantId","searchTenantProfiles","getTokenKeys","matchingTenantProfiles","matchLocalAccountIdFromTenantProfile","matchLocalAccountIdFromTokenClaims","loginHint","matchLoginHintFromTokenClaims","matchUsername","matchName","sid","matchSid","saveCacheRecord","cacheRecord","storeInCache","setAccount","setIdTokenCredential","saveAccessToken","setRefreshTokenCredential","appMetadata","setAppMetadata","_this$commonLogger","_this$commonLogger4","_this$commonLogger2","_this$commonLogger3","credential","accessTokenFilter","currentScopes","removedAccessTokens","accessTokenKeyMatchesFilter","tokenEntity","getAccessTokenCredential","credentialMatchesFilter","removeAccessToken","setAccessTokenCredential","allAccountKeys","getAccountKeys","matchingAccounts","cacheKey","_entity$tenantProfile","isAccountKey","matchHomeAccountId","matchEnvironment","matchRealm","matchNativeAccountId","matchAuthorityType","isCredentialKey","lowerCaseKey","clientIdValidation","familyIdValidation","matchClientId","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","matchKeyId","getAppMetadataFilteredBy","allCacheKeys","getKeys","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","host","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","removeAllAccounts","removedAccounts","removeAccount","accountKey","removeAccountContext","removeItem","allTokenKeys","accountId","removedCredentials","removeIdToken","removeRefreshToken","removeAppMetadata","readAccountFromCache","targetRealm","performanceClient","idTokenFilter","idTokenMap","getIdTokensByFilter","numIdTokens","tokensToBeRemoved","homeIdTokenMap","numHomeIdTokens","addFields","multiMatchedID","idTokenKeys","idTokens","idTokenKeyMatchesFilter","getIdTokenCredential","inputKey","getAccessToken","authScheme","authenticationScheme","sshKid","accessTokenKeys","accessTokens","numAccessTokens","multiMatchedAT","keyMustContainAllScopes","getAccessTokensByFilter","getRefreshToken","familyRT","refreshTokenFilter","refreshTokenKeys","refreshTokens","refreshTokenKeyMatchesFilter","getRefreshTokenCredential","numRefreshTokens","multiMatchedRT","readAppMetadataFromCache","appMetadataFilter","appMetadataEntries","numAppMetadata","isAppMetadataFOCI","claims","_claims$name","cachedUsername","filterUsername","staticAliases","canonicalAuthority","_staticAuthorityOptio","knownAuthorities","getAliasesFromStaticSources","cloudMetadata","_entity$realm","login_hint","generateAuthorityMetadataCacheKey","toObject","json","DefaultStorageClass","setServerTelemetry","getServerTelemetry","setAuthorityMetadata","setThrottlingCache","getThrottlingCache","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","tenant","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","isOidcProtocolMode","authOptions","StubbedNetworkModule","PerformanceEvents","PerformanceEventStatus","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","discard","increment","eventId","libraryName","libraryVersion","startTimeMs","measurement","startPerformanceMeasurement","calculateQueuedTime","addQueueMeasurement","setPreQueueTime","discardMeasurements","emitEvents","incrementFields","cacheEventByCorrelationId","NavigationClient","navigateInternal","defaultNavigateWindow","navigateExternal","noHistory","NetworkError","httpStatus","responseHeaders","createNetworkError","additionalError","pkceNotCreated","earJwkEmpty","earJweEmpty","cryptoNonExistent","emptyNavigateUri","hashEmptyError","noStateInHash","hashDoesNotContainKnownProperties","unableToParseState","stateInteractionTypeMismatch","interactionInProgress","popupWindowError","emptyWindowError","userCancelled","monitorPopupTimeout","monitorWindowTimeout","redirectInIframe","blockIframeReload","blockNestedPopups","iframeClosedPrematurely","silentLogoutUnsupported","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","authRequestNotSetError","invalidCacheType","nonBrowserEnvironment","databaseNotOpen","getRequestFailed","failedToParseResponse","unableToLoadToken","cryptoKeyNotFound","authCodeRequired","authCodeOrNativeAccountIdRequired","spaCodeAndNativeAccountIdPresent","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","nativeExtensionNotInstalled","nativeConnectionNotEstablished","uninitializedPublicClientApplication","nativePromptNotSupported","invalidBase64String","invalidPopTokenRequest","failedToBuildHeaders","failedToParseHeaders","failedToDecryptEarResponse","ErrorLink","BrowserAuthErrorMessages","BrowserAuthError","createBrowserAuthError","FetchClient","responseStatus","reqHeaders","getFetchHeaders","fetch","headers","navigator","onLine","getHeaderDict","reqBody","Headers","optionsHeaders","entries","append","headerDict","urlEncode","urlEncodeArr","inputArr","base64EncArr","TextEncoder","encode","aBytes","binString","fromCodePoint","btoa","TextDecoder","base64DecToArr","base64String","encodedString","atob","Uint8Array","codePointAt","AES_GCM","HKDF","S256_HASH_ALG","PUBLIC_EXPONENT","UUID_CHARS","UINT32_ARR","Uint32Array","RAW","ENCRYPT","DECRYPT","keygenAlgorithmOptions","hash","modulusLength","publicExponent","sha256Digest","dataString","crypto","subtle","getRandomValues","dataBuffer","getRandomUint32","currentTimestamp","baseRand","bytes","randA","trunc","randBHi","randBLo","charAt","exportJwk","exportKey","generateEarKey","generateBaseKey","jwk","alg","kty","k","stringify","decryptEarResponse","earJwk","earJwe","earJweParts","b64DecodedJwk","keyBuffer","importKey","importEarKey","header","iv","ciphertext","tagLengthBits","byteLength","encryptedData","decryptedData","decrypt","tagLength","additionalData","generateKey","generateHKDF","baseKey","deriveKey","salt","encrypt","rawData","encodedData","derivedKey","plainText","hashBuffer","clearHash","history","replaceState","origin","pathname","isInIframe","getCurrentUri","blockAcquireTokenInPopups","opener","blockNonBrowserEnvironment","blockAPICallsBeforeInitialize","initialized","preflightCheck","blockReloadInHiddenIframes","redirectPreflightCheck","allowRedirectInIframe","blockRedirectInIframe","system","cacheLocation","storeAuthStateInCookie","URL","_unused","DEFAULT_IFRAME_TIMEOUT_MS","BaseOperatingContext","debug","warn","_sessionStorage","_sessionStorage2","sessionStorage","browserEnvironment","isBrowserEnvironment","auth","userInputAuth","userInputCache","userInputSystem","telemetry","userInputTelemetry","DEFAULT_AUTH_OPTIONS","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","clientCapabilities","OIDCOptions","serverResponseType","defaultScopes","azureCloudOptions","skipAuthorityMetadataCache","supportsNestedAppAuth","instanceAware","encodeExtraQueryParams","temporaryCacheLocation","secureCookies","cacheMigrationEnabled","DEFAULT_LOGGER_OPTIONS","DEFAULT_BROWSER_SYSTEM_OPTIONS","networkClient","navigationClient","loadFrameTimeout","windowHashTimeout","iframeHashTimeout","navigateFrameWait","redirectNavigationTimeout","asyncPopups","allowPlatformBroker","nativeBrokerHandshakeTimeout","pollIntervalMilliseconds","providedSystemOptions","client","ClientConfigurationErrorCodes","buildConfiguration","logLevelKey","getItem","piiLoggingKey","available","getConfig","isAvailable","StandardOperatingContext","getModuleName","MODULE_NAME","getId","ID","missingKidError","missingAlgError","JoseHeaderErrorMessages","JoseHeaderError","createJoseHeaderError","JoseHeader","typ","getShrHeaderString","shrHeaderOptions","shrHeader","DatabaseStorage","dbName","tableName","dbOpen","open","openDB","indexedDB","createObjectStore","db","closeConnection","close","validateDbIsOpen","dbGet","transaction","objectStore","setItem","dbPut","put","dbDelete","dbGetKeys","getAllKeys","containsKey","dbContainsKey","deleteDatabase","deleteDbRequest","MemoryStorage","getUserData","setUserData","cacheKeys","clear","AsyncMemoryStorage","inMemoryCache","indexedDBCache","handleDatabaseAccessError","item","clearInMemory","clearPersistent","dbDeleted","CryptoOps","skipValidateSubtleCrypto","validateCryptoAvailable","inputKid","_this$performanceClie","publicKeyThumbMeasurement","keyPair","extractable","usages","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","publicKeyJwk","publicKey","publicJwkString","getSortedObjectString","publicJwkHash","privateKeyJwk","privateKey","unextractablePrivateKey","importJwk","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","success","shrOptions","_this$performanceClie2","signJwtMeasurement","cachedKeyPair","publicKeyJwkString","encodedKeyIdThumbprint","encodedShrHeader","encodedPayload","tokenString","tokenBuffer","signatureBuffer","sign","encodedSignature","signedJwt","invoke","telemetryClient","inProgressEvent","eventCount","invokeAsync","RegionDiscovery","networkInterface","detectRegion","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","region_source","IMDS_OPTIONS","localIMDSVersionResponse","getRegionFromIMDS","currentIMDSVersion","getCurrentVersion","currentIMDSVersionResponse","_this$performanceClie3","Metadata","Authority","cacheManager","authorityOptions","managedIdentity","_canonicalAuthority","region_used","region_outcome","regionDiscovery","getAuthorityType","authorityUri","canonicalAuthorityUrlComponents","_canonicalAuthorityUrlComponents","hostnameAndPort","authorizationEndpoint","discoveryComplete","replacePath","tokenEndpoint","deviceCodeEndpoint","endSessionEndpoint","selfSignedJwtAudience","jwksUri","canReplaceTenant","reservedTenantDomains","replaceTenant","endpoint","cachedAuthorityUrlComponents","canonical_authority","cachedAuthorityParts","currentPart","cachedPart","defaultOpenIdConfigurationEndpoint","canonicalAuthorityHost","isAliasOfKnownMicrosoftAuthority","resolveEndpointsAsync","metadataEntity","getCurrentMetadataEntity","cloudDiscoverySource","endpointSource","updateEndpointMetadata","updateCachedMetadata","authorityEndpointSource","endpointMetadataResult","localMetadata","updateEndpointMetadataFromLocalSources","_this$authorityOption","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","getEndpointMetadataFromNetwork","_this$authorityOption2","configMetadata","getEndpointMetadataFromConfig","hardcodedMetadata","getEndpointMetadataFromHardcodedValues","metadataEntityExpired","isAuthoritySameType","_this$performanceClie4","openIdConfigurationEndpoint","isValidResponse","isOpenIdConfigResponse","_this$performanceClie5","_this$authorityOption3","userConfiguredAzureRegion","_this$authorityOption4","replaceWithRegionalInformation","_this$performanceClie6","localMetadataSource","updateCloudDiscoveryMetadataFromLocalSources","getCloudDiscoveryMetadataFromNetwork","getCloudDiscoveryMetadataFromConfig","createCloudDiscoveryMetadataFromHost","isInKnownAuthorities","_this$performanceClie7","instanceDiscoveryEndpoint","typedResponseBody","isCloudInstanceDiscoveryResponse","isCloudInstanceDiscoveryErrorResponse","typedError","generateAuthority","authorityString","authorityAzureCloudInstance","isAlias","isPublicCloudAuthority","buildRegionalAuthorityString","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","regionalMetadata","transformCIAMAuthority","ciamAuthority","authorityUrlComponents","tenantIdOrDomain","formatAuthorityUri","noTokensFound","nativeAccountUnavailable","refreshTokenExpired","badToken","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessages","InteractionRequiredAuthError","traceId","errorNo","isInteractionRequiredError","errorString","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","createInteractionRequiredAuthError","getRequestThumbprint","_request$tokenBodyPar","homeAccountIdentifier","shrClaims","embeddedClientId","tokenBodyParameters","COOKIE_LIFE_MULTIPLIER","SameSiteOptions","CookieStorage","cookieList","cookie","rest","ClientAuthErrorCodes","cookieLifeDays","secure","sameSite","cookieStr","expireTime","today","expr","getCookieExpirationTime","cookieParts","storage","accountKeys","ENCRYPTION_KEY","LocalStorage","localStorage","memoryStorage","broadcast","BroadcastChannel","cookies","cookieString","parsedCookie","encryptionCookie","importExistingCache","keyStr","cookieData","updateCache","getContext","importArray","getItemFromEncryptedCache","rawCache","encObj","encryptedCacheExpiredCount","unencryptedCacheCount","importedArr","promiseArr","perfMeasurement","isBackground","SessionStorage","BrowserCacheManager","cacheConfig","internalStorage","browserStorage","getStorageImplementation","temporaryCacheStorage","cookieStorage","trackVersionChanges","previousVersion","previousLibraryVersion","validateAndParseJson","jsonValue","parsedJson","serializedAccount","removeAccountKeyFromMap","parsedAccount","wasAdded","addAccountKeyToMap","emitEvent","removalIndex","removeTokenKey","addTokenKey","idRemoval","accessRemoval","refreshRemoval","idTokenKey","parsedIdToken","CacheHelpers","accessTokenKey","parsedAccessToken","refreshTokenKey","parsedRefreshToken","appMetadataKey","parsedMetadata","serverTelemetryKey","parsedEntity","validateKey","validateEntity","serverTelemetry","setWrapperMetadata","wrapperSKU","wrapperVersion","getWrapperMetadata","activeAccountKeyFilters","generateCacheKey","activeAccountValueFilters","activeAccountValueObj","activeAccountKey","activeAccountValue","throttlingCacheKey","parsedThrottlingCache","throttlingCache","getTemporaryCache","itemCookie","setTemporaryCache","removeTemporaryItem","clearTokensAndKeysWithClaims","resetRequestCache","setInteractionInProgress","cacheAuthorizeRequest","authCodeRequest","codeVerifier","encodedValue","encodedVerifier","getCachedRequest","encodedTokenRequest","parsedRequest","verifier","getCachedNativeRequest","cachedRequest","isInteractionInProgress","_this$getInteractionI","getInteractionInProgress","_this$getInteractionI2","_result$account","_result$account2","_result$account3","idTokenEntity","claimsHash","TimeUtils","cacheRtCount","cacheIdCount","cacheAtCount","EventHandler","eventCallbacks","broadcastChannel","invokeCrossTabCallbacks","eventTypes","_this$broadcastChanne","invokeCallbacks","subscribeCrossTab","_this$broadcastChanne2","unsubscribeCrossTab","_this$broadcastChanne3","CcsCredentialType","CLIENT_ID","REDIRECT_URI","TOKEN_TYPE","REQ_CNF","RETURN_SPA_CODE","X_CLIENT_EXTRA_SKU","BROKER_CLIENT_ID","BROKER_REDIRECT_URI","INSTANCE_AWARE","instrumentBrokerParams","embeddedRedirectUri","addResponseType","responseType","addScopes","addOidcScopes","requestScopes","addClientId","addRedirectUri","addLoginHint","addCcsUpn","addCcsOid","addSid","addClaims","mergedClaims","addClientCapabilitiesToClaims","addCorrelationId","addLibraryInfo","libraryInfo","addApplicationTelemetry","appTelemetry","addState","addClientSecret","addClientAssertion","addClientAssertionType","clientAssertionType","addGrantType","grantType","addClientInfo","addInstanceAware","addExtraQueryParameters","eQParams","addPopToken","cnfString","addSshJwk","sshJwkString","addServerTelemetry","serverTelemetryManager","generateCurrentRequestHeaderValue","generateLastRequestHeaderValue","addThrottling","addBrokerParameters","brokerClientId","brokerRedirectUri","createDiscoveredInstance","authorityUriFinal","acquireTokenAuthority","ServerError","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","preProcess","_value$errorCodes","throttleTime","errorCodes","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","parseInt","error_codes","currentSeconds","removeThrottle","BaseClient","configuration","userAuthOptions","systemOptions","userSystemOptions","userLoggerOption","cacheOptions","userCacheOptions","storageInterface","storageImplementation","networkImplementation","cryptoInterface","cryptoImplementation","clientCredentials","persistencePlugin","serializableCache","buildClientConfiguration","cryptoUtils","createTokenRequestHeaders","ccsCred","executePostToTokenEndpoint","sendPostRequest","clearTelemetryCache","_response$body$refres","refreshTokenSize","refresh_token","httpVerToken","requestId","contentTypeHeader","contentLengthHeader","updateAuthority","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","createTokenQueryParameters","tokenQueryParameters","ProtocolUtils","setRequestState","userState","meta","libraryState","generateLibraryState","stateObj","stateString","parseRequestState","splitState","libraryStateString","libraryStateObj","userRequestState","KeyLocation","PopTokenGenerator","generateCnf","reqCnf","generateKid","reqCnfString","xms_ksl","signPopToken","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","at","ts","q","client_claims","TokenCacheContext","tokenCache","hasChanged","cacheHasChanged","ResponseHandler","cacheStorage","validateTokenResponse","serverResponse","refreshAccessToken","_serverResponse$error","errString","correlation_id","trace_id","serverErrorNo","serverError","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","serverRequestId","requestStateObj","id_token","auth_time","client_info","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","afterCacheAccess","claimsTenantId","cachedIdToken","cachedAccount","buildAccountToCache","cachedAccessToken","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","token_type","cachedRefreshToken","rtExpiresOn","refresh_token_expires_in","foci","cachedAppMetadata","fromTokenCache","requestState","_cacheRecord$idToken","_cacheRecord$idToken2","_cacheRecord$accessTo","_cacheRecord$account","_cacheRecord$account2","popKid","popTokenGenerator","spa_accountid","uniqueId","fromCache","spa_code","fromNativeBroker","baseAccountKey","find","baseAccount","cloud_graph_host_name","msgraph_host","newTenantProfile","RequestValidator","validateRedirectUri","validatePrompt","prompt","promptValues","validateClaims","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeMethod","getClientAssertion","AuthorizationCodeClient","_this$config$authOpti","includeRedirectUri","oidcDefaultScopes","acquireToken","_response$headers","executeTokenRequest","responseHandler","getLogoutUri","logoutRequest","createLogoutUrlQueryString","queryParametersString","requestBody","createTokenRequestBody","ccsCredential","addAuthorizationCode","addCodeVerifier","assertion","assertionType","reqCnfData","sshJwk","enableSpaAuthorizationCode","addPostLogoutRedirectUri","idTokenHint","addIdTokenHint","logoutHint","addLogoutHint","makeExtraSkuString","skus","extensionName","extensionVersion","skuMap","skuArr","_value$","_value$2","skuName","skuVersion","setSku","ServerTelemetryManager","telemetryRequest","cacheOutcome","apiId","wrapperVer","telemetryCacheKey","platformFieldsArr","nativeBrokerErrorCode","getNativeBrokerErrorCode","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errors","errorCount","cacheHits","cacheFailedRequest","incrementCacheHits","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","setNativeBrokerErrorCode","clearNativeBrokerErrorCode","BaseInteractionClient","storageImpl","browserCrypto","platformAuthProvider","clearCacheOnLogout","getRedirectUri","requestRedirectUri","initializeServerTelemetryManager","forceRefresh","telemetryPayload","getDiscoveredAuthority","instanceAwareEQ","requestExtraQueryParameters","resolvedAuthority","requestAuthority","resolvedInstanceAware","userAuthority","builtAuthority","requestAzureCloudOptions","discoveredAuthority","AuthorityFactory","initializeBaseRequest","validatedRequest","initializeSilentRequest","baseRequest","StandardInteractionClient","initializeLogoutRequest","validLogoutRequest","getLogoutHintFromIdTokenClaims","createAuthCodeClient","clientConfig","getClientConfiguration","initializeAuthorizationRequest","browserState","responseMode","deserializeResponse","responseLocation","serverParams","UrlUtils","validateInteractionType","platformStateObj","extractBrowserRequestState","getStandardAuthorizeRequestParameters","_request$extraQueryPa","_authOptions$authorit","extraScopesToConsent","addResponseMode","addPrompt","domainHint","addDomainHint","domainHintFromRequest","sidFromRequest","accountSid","_account$idTokenClaim","extractAccountSid","accountLoginHintClaim","_account$idTokenClaim2","extractLoginHint","loginHintFromClaim","sidFromClaim","loginHintFromRequest","loginHintFromUpn","addNonce","getAuthorizeUrl","requestParameters","encodeParams","validateAuthorizationResponse","decodedServerResponseState","decodedRequestState","_serverResponse$error2","errorCodePrefix","errorCodePrefixIndex","error_uri","parseServerErrorNo","InteractionHandler","authCodeModule","authModule","handleCodeResponse","authCodeResponse","cachedState","AuthorizeProtocol","handleCodeResponseFromServer","validateNonce","cloud_instance_host_name","createCcsCredentials","userSwitch","NativeAuthErrorMessages","NativeAuthError","description","ext","isFatalNativeAuthError","createNativeAuthError","InteractionRequiredAuthErrorCodes","SilentFlowClient","acquireCachedToken","lastCacheOutcome","requestTenantId","_authorityUrlComponen","getTenantFromAuthorityString","generateResultFromCacheRecord","_this$serverTelemetry","_idTokenClaims","SilentCacheClient","silentRequest","silentAuthClient","authResponse","PlatformAuthInteractionClient","nativeStorageImpl","nativeStorageManager","silentCacheClient","getExtensionName","getExtensionVersion","addRequestSKUs","extraParameters","AADServerParamKeys","cacheLookupPolicy","nativeATMeasurement","nativeRequest","initializeNativeRequest","acquireTokensFromCache","isNativeBroker","validatedResponse","sendMessage","handleNativeResponse","subErrorCode","createSilentCacheRequest","fullAccount","rootMeasurement","remainingParameters","_objectDestructuringEmpty","onRedirectNavigate","navigationOptions","authResult","_this$browserStorage$","_request$extraParamet","AuthToken","createHomeAccountIdentifier","cachedhomeAccountId","child_client_id","cacheAccount","cacheNativeTokens","generateScopes","generatePopAccessToken","shr","shrParameters","mats","addTelemetryFromNativeResponse","properties","MATS","accountProperties","responseAccessToken","isResponseFromCache","nativeCacheRecord","getExpiresInValue","matsResponse","getMATSFromResponse","extensionId","getExtensionId","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","is_cached","getCanonicalAuthority","remainingProperties","getPrompt","windowTitleSubstring","extendedExpiryToken","handleExtraBrokerParams","generatedReqCnfData","hasExtraBrokerParams","child_redirect_uri","getStandardParameters","RequestParameterBuilder","platformBroker","cryptoOps","getAuthCodeRequestUrl","getEARForm","queryParams","authorizeUrl","param","hidden","createForm","handleResponsePlatformBroker","nativeStorage","nativeInteractionClient","handleResponseCode","authClient","interactionHandler","handleResponseEAR","cloud_instance_name","generatePkceCodes","generateCodeVerifier","challenge","generateCodeChallengeFromVerifier","buffer","pkceCodeVerifier","pkceHashedCodeVerifier","PlatformAuthExtensionHandler","handshakeTimeoutMs","resolvers","handshakeResolvers","messageChannel","windowListener","onWindowMessage","handshakeEvent","platformAuthType","messageBody","req","responseId","validatePlatformBrokerResponse","createProvider","preferredProvider","sendHandshakeRequest","backupProvider","extensionHandshakeTimeoutMs","onChannelMessage","timeoutId","extensionHandshakeTimedOut","handshakeResolver","extensionInstalled","resolver","AuthErrorCodes","_this$getExtensionId","PlatformAuthDOMHandler","_window$navigator","platformAuthentication","supportedContracts","getSupportedContracts","platformDOMRequest","initializePlatformDOMRequest","executeGetToken","validExtraParameters","getDOMExtraParams","brokerId","isSecurityTokenService","convertToPlatformBrokerResponse","errorResponse","isSuccess","protocol_error","protocolError","_response$extendedLif","extendedLifetimeToken","proofOfPossessionPayload","record","getPlatformAuthProvider","enablePlatformBrokerDOMSupport","isDomEnabledForPlatformAuth","isPlatformAuthAllowed","PopupClient","platformAuthHandler","unloadWindow","pkceCodes","_request$popupWindowP","popupParams","popupName","generatePopupName","popupWindowAttributes","popupWindowParent","isAsyncPopup","acquireTokenPopupAsync","popup","openSizedPopup","_logoutRequest$popupW","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","validRequest","isPlatformBroker","executeEarFlow","executeCodeFlow","pkce","popupRequest","navigateUrl","popupWindow","initiateAuthRequest","monitorPopupForHash","_popupParams$popup","openPopup","submit","_validRequest$account","_validRequest$account2","_popupParams$popup2","absoluteUrl","logoutUri","_popupParams$popup3","requestUrl","intervalId","setInterval","closed","clearInterval","cleanPopup","urlNavigate","currentWindow","_popupWindowAttribute","_popupWindowAttribute2","_popupWindowAttribute3","_popupWindowAttribute4","winLeft","screenLeft","winTop","screenTop","winWidth","innerWidth","clientWidth","winHeight","innerHeight","clientHeight","popupSize","popupPosition","max","RedirectClient","handleBackButton","persisted","redirectStartPage","getRedirectStartPage","redirectRequest","pkceVerifier","parentMeasurement","getRedirectResponse","getEntriesByType","navigationEntries","navigation","getNavigationType","loginRequestUrl","loginRequestUrlNormalized","urlParts","replaceHash","handleResponse","processHashOnRedirect","homepage","getHomepage","userProvidedResponse","cachedHash","onRedirectNavigateRequest","_validLogoutRequest$a","_validLogoutRequest$a2","requestStartPage","initiateCodeRequest","loadFrame","loadFrameSync","initiateEarRequest","createHiddenIframe","contentDocument","monitorIframeForHash","iframe","removeHiddenIframe","frameHandle","authFrame","className","visibility","position","border","SilentIframeClient","inputRequest","Silent","silentTokenHelper","retryError","msalFrame","RefreshTokenClient","forceCache","acquireTokenByRefreshToken","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","refreshTokenExpirationOffsetSeconds","rtExpiresOnMs","refreshTokenRequest","badRefreshTokenKey","addRefreshToken","SilentRefreshClient","refreshTokenClient","createRefreshTokenClient","authorityUrl","TokenCache","loadExternalTokens","cacheRecordAccount","loadAccount","loadIdToken","loadAccessToken","loadRefreshToken","accessTokenEntity","refreshTokenEntity","_cacheRecord$refreshT","HybridSpaAuthorizationCodeClient","SilentAuthCodeClient","cloudInstanceHostName","getAccountType","performanceEvent","preflightCheck$1","StandardController","operatingContext","redirectResponse","hybridAuthCodeResponses","rawCloudDiscoveryMetadata","buildStaticAuthorityOptions","DEFAULT_BROWSER_CACHE_MANAGER","nativeCacheOptions","nativeInternalStorage","activeSilentTokenRequests","trackPageVisibility","trackPageVisibilityWithMeasurement","createController","visibilityChangeCount","isBroker","initCorrelationId","getRequestCorrelationId","initMeasurement","logMultipleInstances","preGeneratePkceCodes","redirectResponseKey","handleRedirectPromiseInternal","loggedInAccounts","platformBrokerRequest","useNative","nativeClient","standardRequest","redirectClient","createRedirectClient","accountType","eventError","atrMeasurement","scenarioId","onRedirectNavigateCb","navigate","configOnRedirectNavigateCb","isLoggedIn","canUsePlatformBroker","getNativeAccountId","atPopupMeasurement","getPreGeneratedPkceCodes","acquireTokenNative","createPopupClient","accessTokenSize","idTokenSize","ssoSilentMeasurement","acquireTokenByCodeAsyncMeasurement","_this$ssoSilentMeasur","_this$ssoSilentMeasur2","createSilentIframeClient","_this$ssoSilentMeasur3","_this$ssoSilentMeasur4","atbcMeasurement","hybridAuthCode","acquireTokenByCodeAsync","_this$acquireTokenByC","silentAuthCodeClient","createSilentAuthCodeClient","_this$acquireTokenByC2","tokenRenewalError","_this$acquireTokenByC3","acquireTokenFromCache","commonRequest","createSilentCacheClient","silentRefreshClient","createSilentRefreshClient","acquireTokenBySilentIframe","silentIframeClient","isInBrowser","getPerformanceClient","isBrowserEnv","atsMeasurement","acquireTokenSilentDeduped","silentRequestKey","inProgressRequest","deduped","activeRequest","acquireTokenSilentAsync","acquireTokenSilentNoIframe","shouldTryToResolveSilently","refreshTokenError","noInteractionRequired","refreshTokenRefreshRequired","isSilentlyResolvable","tryIframeRenewal","checkIfRefreshTokenErrorCanBeResolvedSilently","activeIframeRequest","activePromise","activeCorrelationId","awaitConcurrentIframeMeasure","awaitIframeCorrelationId","activePromiseResult","_resolve","iframeResult","cacheError","pkceCode","res","usePreGeneratedPkce","msal","clientIds","currentClientId","_window$msal","frameInstances","msalInstanceCount","sameClientIdInstanceCount","collectInstanceStats","PublicClientApplication","createPublicClientApplication","standard","createV3Controller","localId","userName","msalConfig","REACT_APP_AZURE_CLIENT_ID","REACT_APP_AZURE_TENANT_ID","REACT_APP_AZURE_REDIRECT_URI","loginRequest","FileUpload","onTemplateFileChange","onParametersFileChange","templateFile","parametersFile","_jsxs","_jsx","htmlFor","accept","onChange","_event$target$files","file","files","_event$target$files2","DeploymentStatus","deploymentName","resourceGroup","renderStatus","LoginButton","handleLogout","handleLogin","pageMap","setContinuationToken","page","continuationToken","pageInfo","_a","KnownExtensionConfigPropertyType","KnownExpressionEvaluationOptionsScopeType","KnownValidationLevel","KnownProvisioningState","KnownAliasPathTokenType","KnownAliasPathAttributes","KnownProviderAuthorizationConsentState","KnownLevel","KnownExtendedLocationType","KnownExportTemplateOutputFormat","KnownTagsPatchOperation","encodeByteArray","decodeString","byteString","XML_ATTRKEY","XML_CHARKEY","validateISODuration","validUuidRegex","flattenResponse","fullResponse","responseSpec","parsedHeaders","parsedBody","bodyMapper","isNullable","Boolean","nullable","expectedBodyTypeName","blobBody","readableStreamBody","modelProperties","isPageableResponse","serializedName","arrayResponse","_b","getOwnPropertyNames","responseObject","combinedHeadersAndBody","hasNullableType","shouldWrapBody","handleNullableResponseAndWrappableBody","mapperTypeName","SerializerImpl","modelMappers","isXML","validateConstraints","mapper","objectName","failValidation","constraintName","constraintValue","constraints","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","ar","serialize","xml","updatedOptions","rootName","includeRoot","xmlCharKey","_c","mapperType","isConstant","required","typeName","valueOf","uuid","objectType","pipe","tee","ArrayBuffer","isView","Blob","serializeBasicTypes","allowedValues","serializeEnumType","toISOString","dateToUnixTime","isDuration","serializeDateTypes","base64","serializeByteArrayType","len","substr","trimEnd","bufferToBase64Url","serializeBase64UrlType","serializer","isXml","tempArray","serializedValue","xmlNamespace","xmlnsKey","xmlNamespacePrefix","serializeSequenceType","valueType","tempDictionary","getXmlObjectValue","serializeDictionaryType","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","modelProps","resolveModelProperties","propertyMapper","readOnly","parentObject","xmlIsWrapped","xmlName","xmlElementName","paths","splitSerializeName","pathName","childObject","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","xmlIsAttribute","additionalPropertiesMapper","additionalProperties","modelMapper","resolveReferencedMapper","resolveAdditionalProperties","propNames","clientPropName","pn","serializeCompositeType","deserialize","responseBody","ignoreUnknownProperties","_d","handledPropertyNames","headerCollectionPrefix","dictionary","headerKey","xmlIsMsText","wrapped","elementList","propertyInstance","steps","arrayInstance","v","isAdditionalProperty","responsePropName","isSpecialXmlProperty","deserializeCompositeType","parseFloat","unixTimeToDate","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","createSerializer","classes","partialclass","subwords","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","polymorphicMapper","discriminators","typeNamesToCheck","currentName","indexDiscriminator","getIndexDiscriminator","getPolymorphicDiscriminatorSafely","MapperTypeNames","AbortError","debugEnvVariable","DEBUG","enabledString","enabledNamespaces","skippedNamespaces","debuggers","enable","debugObj","createDebugger","enabled","disable","firstArg","namespaces","wildcard","namespaceList","ns","skipped","enabledNamespace","newDebugger","_len","args","_key","TYPESPEC_RUNTIME_LOG_LEVELS","levelMap","patchLogMethod","isTypeSpecRuntimeLogLevel","createLoggerContext","registeredLoggers","logLevelFromEnv","logLevelEnvVarName","clientLogger","contextSetLogLevel","shouldEnable","createLogger","setLogLevel","getLogLevel","createClientLogger","clientRootLogger","normalizeName","HttpHeadersImpl","rawHeaders","_headersMap","headerName","toJSON","preserveCase","normalizedName","headerIterator","createHttpHeaders","generateUUID","randomNumber","uuidFunction","globalThis","randomUUID","PipelineRequestImpl","multipartBody","disableKeepAlive","proxySettings","streamResponseStatusCodes","withCredentials","_e","abortSignal","onUploadProgress","onDownloadProgress","allowInsecureConnection","_f","enableBrowserStreams","_g","requestOverrides","authSchemes","ValidPhaseNames","HttpPipeline","policies","_policies","_orderedPolicies","addPolicy","policy","phase","afterPhase","removePolicy","removedPolicies","policyDescriptor","sendRequest","httpClient","getOrderedPolicies","reduceRight","pipeline","orderPolicies","policyMap","createPhase","hasRun","hasAfterPolicies","serializePhase","noPhase","deserializePhase","retryPhase","signPhase","orderedPhases","getPhase","policyName","dependsOn","dependants","afterPolicies","afterPolicyName","afterNode","beforePolicies","beforePolicyName","beforeNode","walkPhase","dependant","walkPhases","iteration","initialResultLength","isObject","isError","hasName","hasMessage","custom","RedactedString","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","additionalAllowedHeaderNames","allowedHeaderNames","additionalAllowedQueryParameters","allowedQueryParameters","sanitize","seen","sanitizeHeaders","sanitizeUrl","sanitizeQuery","searchParams","sanitized","errorSanitizer","RestError","statusCode","stringToUint8Array","format","utf8StringToUint8Array","base64ToUint8Array","base64UrlToUint8Array","highNibble","lowNibble","hexDigits","hexStringToUint8Array","REQUEST_SEND_ERROR","PARSE_ERROR","isNodeReadableStream","isWebReadableStream","getReader","FetchHttpClient","protocol","abortController","abortControllerCleanup","abortListener","setupAbortSignal","pipelineHeaders","buildFetchHeaders","streaming","buildBodyStream","onProgress","buildRequestBody","requestInit","Request","credentials","duplex","loadedBytes","httpResponse","buildPipelineHeaders","bodyStream","onEnd","POSITIVE_INFINITY","browserStreamBody","responseStream","Response","blob","bodyAsText","buildPipelineResponse","makeRequest","getError","readableStream","pipeThrough","TransformStream","isTransformStreamSupported","transform","chunk","enqueue","terminate","flush","reader","ReadableStream","pull","read","releaseLock","cancel","createDefaultHttpClient","calculateRetryDelay","retryAttempt","exponentialDelay","retryDelayInMs","pow","clampedDelay","maxRetryDelayInMs","retryAfterInMs","ceil","delayInMs","onAborted","rejectOnAbort","abortErrorMsg","removeListeners","parseHeaderValueAsNumber","valueAsNum","RetryAfterHeader","AllRetryAfterHeaders","getRetryAfterInMs","retryAfterValue","retryAfterHeader","isFinite","exponentialRetryStrategy","retryInterval","maxRetryInterval","retryCount","responseError","matchedSystemError","isSystemError","ignoreSystemErrors","isExponential","isExponentialRetryResponse","ignoreExponentialResponse","ignoreHttpStatusCodes","unknownResponse","isThrottlingRetryResponse","skipStrategy","errorToThrow","retryPolicyLogger","retryPolicy","strategies","maxRetries","retryRequest","strategiesLoop","strategy","strategyLogger","modifiers","redirectTo","importScripts","Deno","deno","Bun","isNodeLike","versions","product","formDataPolicy","formDataMap","formDataToFormDataMap","contentType","urlSearchParams","subValue","wwwFormUrlEncode","parts","fieldName","fileName","prepareFormData","toBlobPart","encodeHeaders","getLength","stream","sources","part","contentLength","total","partLength","getTotalLength","multipartPolicyName","validBoundaryCharacters","multipartPolicy","parsedHeader","parsedBoundary","assertValidBoundary","createEmptyPipeline","allowedRedirect","redirectPolicy","handleRedirect","currentRetries","locationHeader","logPolicy","coreLogger","sanitizer","tspLogPolicy","SDK_VERSION","getUserAgentValue","runtimeInfo","localNavigator","osPlatform","userAgentData","entropyValues","getHighEntropyValues","architecture","platform","platformVersion","brand","brands","brandOrder","foundBrand","getBrandVersionString","userAgent","browserRegexes","regex","browser","getBrowserInfo","EdgeRuntime","setPlatformSpecificData","defaultAgent","telemetryInfo","token","getUserAgentString","UserAgentHeaderName","timeInMs","buildPromise","cleanupBeforeAbort","onAbort","createAbortablePromise","getErrorMessage","stringified","tspRuntime","rawContent","hasRawContent","tspMultipartPolicyName","decompressResponsePolicy","tspDecompressResponsePolicy","defaultRetryPolicy","tspDefaultRetryPolicy","proxyPolicy","tspProxyPolicy","knownContextKeys","span","createTracingContext","TracingContextImpl","parentContext","initialContext","_contextMap","newContext","deleteValue","instrumenterImplementation","getInstrumenter","createRequestHeaders","parseTraceparentHeader","startSpan","_name","spanOptions","isRecording","recordException","setStatus","addEvent","tracingContext","withContext","callbackArgs","TspRestError","isRestError","tspIsRestError","tracingPolicy","userAgentPromise","userAgentPrefix","tracingClient","operationOptions","startSpanResult","tracingOptions","withSpan","traceparentHeader","createTracingClient","tryCreateTracingClient","spanAttributes","spanKind","tryCreateSpan","serviceRequestId","tryProcessResponse","tryProcessError","wrapAbortSignalLike","abortSignalLike","AbortSignal","needsCleanup","cleanup","createPipelineFromOptions","agent","tspAgentPolicy","tlsOptions","tlsSettings","tspTlsPolicy","proxyOptions","tspFormDataPolicy","userAgentValue","userAgentPolicy","userAgentOptions","requestIdHeaderName","setClientRequestIdPolicy","telemetryOptions","clientRequestIdHeaderName","tspPolicy","tspMultipartPolicy","retryOptions","loggingOptions","tspRedirectPolicy","redirectOptions","createPipelineRequest","tspCreatePipelineRequest","DEFAULT_CYCLER_OPTIONS","forcedRefreshWindowInMs","retryIntervalInMs","refreshWindowInMs","createTokenCycler","tokenCyclerOptions","refreshWorker","cycler","isRefreshing","shouldRefresh","refreshAfterTimestamp","expiresOnTimestamp","mustRefresh","refresh","getTokenOptions","refreshTimeout","tryGetAccessToken","finalToken","beginRefresh","getToken","_token","tokenOptions","hasClaimChallenge","tenantIdChanged","bearerTokenAuthenticationPolicyName","trySendRequest","defaultAuthorizeRequest","enableCae","isChallengeResponse","authorizeRequestOnCaeChallenge","onChallengeOptions","caeClaims","bearerTokenAuthenticationPolicy","challengeCallbacks","authorizeRequest","authorizeRequestOnChallenge","shouldSendRequest","getCaeChallengeClaims","parsedClaim","challenges","parsedChallenges","challengeRegex","paramRegex","scheme","paramsString","paramMatch","parseChallenges","operationRequestMap","getOperationArgumentValueFromParameter","operationArguments","parameter","fallbackObject","parameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathPart","originalRequestSymbol","getOperationRequestInfo","hasOriginalRequest","defaultJsonContentTypes","defaultXmlContentTypes","deserializationPolicy","jsonContentTypes","expectedContentTypes","xmlContentTypes","parseXML","serializerOptions","parsedResponse","operationResponse","opts","contentComponents","component","msg","errCode","operationInfo","shouldDeserialize","shouldDeserializeResponse","operationSpec","responses","operationResponseGetter","getOperationResponseMap","shouldReturnResponse","isSuccessByStatus","isExpectedStatusCode","expectedStatusCodes","isOperationSpecEmpty","errorResponseSpec","initialErrorMessage","defaultBodyMapper","defaultHeadersMapper","headersMapper","deserializedError","valueToDeserialize","elementName","internalError","defaultError","handleErrorResponse","deserializeError","httpMethod","deserializeResponseBody","getPathStringFromParameter","serializationPolicy","stringifyXML","headerParameters","headerParameter","headerValue","customHeaders","requestOptions","customHeaderName","serializeHeaders","requestBodyParameterPathString","isStream","getXmlValueWithNamespace","xmlNamespaceKey","prepareXMLRootList","mediaType","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","serializeRequestBody","cachedHttpClient","getCachedDefaultHttpClient","tspCreateDefaultHttpClient","CollectionFormatToDelimiterMap","CSV","SSV","Multi","TSV","Pipes","getRequestUrl","baseUri","urlReplacements","urlParameters","urlParameter","urlParameterValue","parameterPathString","skipEncoding","calculateUrlReplacements","isAbsolutePath","replaceAll","path","pathToAppend","parsedUrl","newPath","searchStart","appendPath","sequenceParams","queryParameters","queryParameter","queryParameterValue","delimiter","collectionFormat","calculateQueryParameters","noOverwrite","combinedParams","pairs","existingValue","simpleParseQueryParams","valueSet","searchPieces","appendQueryParams","replacements","searchValue","replaceValue","ServiceClient","_requestContentType","requestContentType","_endpoint","_allowInsecureConnection","_httpClient","credentialScopes","getCredentialScopes","credentialOptions","serializationOptions","deserializationOptions","createClientPipeline","createDefaultPipeline","additionalPolicies","sendOperationRequest","getStreamingResponseStatusCodes","rawResponse","flatResponse","onResponse","details","authorizeRequestOnClaimChallenge","coreClientLogger","keyValue","parseCAEChallenge","parsedChallenge","__rest","__values","__await","__asyncGenerator","thisArg","_arguments","generator","asyncIterator","g","AsyncIterator","verb","resume","fulfill","settle","__asyncDelegator","__asyncValues","SuppressedError","OperationListResult","nextLink","Operation","OperationDisplay","operation","CloudError","ErrorResponse","additionalInfo","ErrorAdditionalInfo","Deployment","tags","DeploymentProperties","template","templateLink","parametersLink","extensionConfigs","debugSetting","onErrorDeployment","expressionEvaluationOptions","validationLevel","TemplateLink","uri","relativePath","contentVersion","DeploymentParameter","reference","KeyVaultParameterReference","keyVault","secretName","secretVersion","KeyVaultReference","ParametersLink","DeploymentExtensionConfigItem","keyVaultReference","DebugSetting","detailLevel","OnErrorDeployment","ExpressionEvaluationOptions","DeploymentExtended","DeploymentPropertiesExtended","provisioningState","duration","outputs","providers","extensions","templateHash","outputResources","validatedResources","diagnostics","registrationState","registrationPolicy","resourceTypes","providerAuthorizationConsentState","ProviderResourceType","locations","locationMappings","apiVersions","defaultApiVersion","zoneMappings","apiProfiles","capabilities","ProviderExtendedLocation","extendedLocations","Alias","defaultPath","defaultPattern","defaultMetadata","AliasPath","AliasPattern","phrase","variable","AliasPathMetadata","ZoneMapping","zones","ApiProfile","profileVersion","apiVersion","Dependency","resourceName","BasicDependency","DeploymentExtensionDefinition","configId","OnErrorDeploymentExtended","ResourceReference","extension","identifiers","DeploymentDiagnosticsDefinition","DeploymentValidateResult","DeploymentExportResult","DeploymentListResult","ScopedDeployment","ScopedDeploymentWhatIf","DeploymentWhatIfSettings","resultFormat","WhatIfOperationResult","changes","potentialChanges","WhatIfChange","resourceId","deploymentId","symbolicName","changeType","unsupportedReason","after","delta","WhatIfPropertyChange","propertyChangeType","DeploymentWhatIf","ProviderPermissionListResult","ProviderPermission","applicationId","roleDefinition","managedByRoleDefinition","RoleDefinition","isServiceRole","permissions","Permission","actions","notActions","dataActions","notDataActions","ProviderRegistrationRequest","thirdPartyProviderConsent","ProviderConsentDefinition","consentToAuthorization","ProviderListResult","ProviderResourceTypeListResult","ResourceListResult","Plan","publisher","promotionCode","Sku","tier","family","model","capacity","Identity","principalId","userAssignedIdentities","IdentityUserAssignedIdentitiesValue","Resource","extendedLocation","ExtendedLocation","ResourceGroup","managedBy","ResourceGroupProperties","ResourceGroupPatchable","ExportTemplateRequest","outputFormat","ResourceGroupExportResult","output","ResourceGroupListResult","ResourcesMoveInfo","targetResourceGroup","TagValue","tagValue","TagCount","TagDetails","TagsListResult","DeploymentOperation","operationId","DeploymentOperationProperties","provisioningOperation","statusMessage","targetResource","StatusMessage","TargetResource","HttpMessage","DeploymentOperationsListResult","TemplateHashResult","minifiedTemplate","TagsResource","Tags","TagsPatchResource","DeploymentExtendedFilter","GenericResourceFilter","tagname","tagvalue","ResourceGroupFilter","ResourceProviderOperationDisplayProperties","SubResource","DeploymentWhatIfProperties","whatIfSettings","GenericResource","plan","kind","identity","GenericResourceExpanded","createdTime","changedTime","DeploymentsWhatIfAtTenantScopeHeaders","retryAfter","DeploymentsWhatIfAtManagementGroupScopeHeaders","DeploymentsWhatIfAtSubscriptionScopeHeaders","DeploymentsWhatIfHeaders","ResourceGroupsDeleteHeaders","TagsCreateOrUpdateAtScopeHeaders","TagsUpdateAtScopeHeaders","TagsDeleteAtScopeHeaders","$host","DeploymentMapper","parameters1","ScopedDeploymentMapper","parameters2","ScopedDeploymentWhatIfMapper","groupId","subscriptionId","parameters3","DeploymentWhatIfMapper","resourceGroupName","resourceProviderNamespace","ProviderRegistrationRequestMapper","expand","parameters4","ResourcesMoveInfoMapper","sourceResourceGroupName","parentResourcePath","apiVersion1","parameters5","GenericResourceMapper","parameters6","ResourceGroupMapper","parameters7","ResourceGroupPatchableMapper","parameters8","ExportTemplateRequestMapper","parameters9","TagsResourceMapper","parameters10","TagsPatchResourceMapper","OperationsImpl","iter","listPagingAll","byPage","settings","maxPageSize","listPagingPage","_list","_listNext","listOperationSpec","listNextOperationSpec","coreClient","Mappers","Parameters","POLL_INTERVAL_IN_MS","terminalStates","deserializeState","serializedState","setStateError","inputs","stateProxy","isOperationError","setError","setFailed","appendReadableErrorMessage","currentMessage","innerMessage","processOperationStatus","isDone","processResult","setErrorAsResult","setSucceeded","postfix","curErr","innererror","simplifyError","errStr","setCanceled","setResult","buildResult","initOperation","getOperationStatus","withOperationLocation","operationLocation","resourceLocation","initState","pollOperation","poll","getResourceLocation","getOperationLocation","getPollingInterval","setDelay","pollOperationHelper","intervalInMs","isUpdated","getOperationLocationPollingUrl","azureAsyncOperation","getLocationHeader","getOperationLocationHeader","getAzureAsyncOperationHeader","findResourceLocation","requestPath","resourceLocationConfig","getDefault","inferLroMode","pollingUrl","normalizedRequestMethod","toLocaleUpperCase","transformStatus","toLocaleLowerCase","toOperationStatus","parseRetryAfter","retryAfterInSeconds","retryAfterDate","timeNow","retryAfterTime","calculatePollingIntervalFromDate","getErrorFromResponse","accessBodyProperty","getStatusFromInitialResponse","helper","_ref4","_ref5","getStatus","getProvisioningState","_ref6","loc","buildCreatePoller","getStatusFromPollResponse","resolveOnUnsuccessful","withOperationLocationCallback","restoreFrom","setRunning","getResult","isCanceled","isFailed","isRunning","isSucceeded","called","resultPromise","handlers","cancelErrMsg","currentPollIntervalInMs","poller","getOperationState","isStopped","stopPolling","pollUntilDone","pollOptions","inputAbortSignal","once","pollIntervalInMs","h","handleProgressEvents","createHttpPoller","lro","sendInitialRequest","sendPollRequest","_ref2","createLroSpec","spec","sendOperationFn","restSpec","DeploymentsImpl","listAtScope","listAtScopePagingAll","listAtScopePagingPage","_listAtScope","_listAtScopeNext","listAtTenantScope","listAtTenantScopePagingAll","listAtTenantScopePagingPage","_listAtTenantScope","_listAtTenantScopeNext","listAtManagementGroupScope","listAtManagementGroupScopePagingAll","listAtManagementGroupScopePagingPage","_listAtManagementGroupScope","_listAtManagementGroupScopeNext","listAtSubscriptionScope","listAtSubscriptionScopePagingAll","listAtSubscriptionScopePagingPage","_listAtSubscriptionScope","_listAtSubscriptionScopeNext","listByResourceGroup","listByResourceGroupPagingAll","listByResourceGroupPagingPage","_listByResourceGroup","_listByResourceGroupNext","beginDeleteAtScope","directSendOperation","currentRawResponse","providedCallback","updatedArgs","deleteAtScopeOperationSpec","resumeFrom","updateIntervalInMs","beginDeleteAtScopeAndWait","checkExistenceAtScope","checkExistenceAtScopeOperationSpec","beginCreateOrUpdateAtScope","createOrUpdateAtScopeOperationSpec","beginCreateOrUpdateAtScopeAndWait","getAtScope","getAtScopeOperationSpec","cancelAtScope","cancelAtScopeOperationSpec","beginValidateAtScope","validateAtScopeOperationSpec","beginValidateAtScopeAndWait","exportTemplateAtScope","exportTemplateAtScopeOperationSpec","listAtScopeOperationSpec","beginDeleteAtTenantScope","deleteAtTenantScopeOperationSpec","beginDeleteAtTenantScopeAndWait","checkExistenceAtTenantScope","checkExistenceAtTenantScopeOperationSpec","beginCreateOrUpdateAtTenantScope","createOrUpdateAtTenantScopeOperationSpec","beginCreateOrUpdateAtTenantScopeAndWait","getAtTenantScope","getAtTenantScopeOperationSpec","cancelAtTenantScope","cancelAtTenantScopeOperationSpec","beginValidateAtTenantScope","validateAtTenantScopeOperationSpec","beginValidateAtTenantScopeAndWait","beginWhatIfAtTenantScope","whatIfAtTenantScopeOperationSpec","beginWhatIfAtTenantScopeAndWait","exportTemplateAtTenantScope","exportTemplateAtTenantScopeOperationSpec","listAtTenantScopeOperationSpec","beginDeleteAtManagementGroupScope","deleteAtManagementGroupScopeOperationSpec","beginDeleteAtManagementGroupScopeAndWait","checkExistenceAtManagementGroupScope","checkExistenceAtManagementGroupScopeOperationSpec","beginCreateOrUpdateAtManagementGroupScope","createOrUpdateAtManagementGroupScopeOperationSpec","beginCreateOrUpdateAtManagementGroupScopeAndWait","getAtManagementGroupScope","getAtManagementGroupScopeOperationSpec","cancelAtManagementGroupScope","cancelAtManagementGroupScopeOperationSpec","beginValidateAtManagementGroupScope","validateAtManagementGroupScopeOperationSpec","beginValidateAtManagementGroupScopeAndWait","beginWhatIfAtManagementGroupScope","whatIfAtManagementGroupScopeOperationSpec","beginWhatIfAtManagementGroupScopeAndWait","exportTemplateAtManagementGroupScope","exportTemplateAtManagementGroupScopeOperationSpec","listAtManagementGroupScopeOperationSpec","beginDeleteAtSubscriptionScope","deleteAtSubscriptionScopeOperationSpec","beginDeleteAtSubscriptionScopeAndWait","checkExistenceAtSubscriptionScope","checkExistenceAtSubscriptionScopeOperationSpec","beginCreateOrUpdateAtSubscriptionScope","createOrUpdateAtSubscriptionScopeOperationSpec","beginCreateOrUpdateAtSubscriptionScopeAndWait","getAtSubscriptionScope","getAtSubscriptionScopeOperationSpec","cancelAtSubscriptionScope","cancelAtSubscriptionScopeOperationSpec","beginValidateAtSubscriptionScope","validateAtSubscriptionScopeOperationSpec","beginValidateAtSubscriptionScopeAndWait","beginWhatIfAtSubscriptionScope","whatIfAtSubscriptionScopeOperationSpec","beginWhatIfAtSubscriptionScopeAndWait","exportTemplateAtSubscriptionScope","exportTemplateAtSubscriptionScopeOperationSpec","listAtSubscriptionScopeOperationSpec","beginDelete","deleteOperationSpec","beginDeleteAndWait","checkExistence","checkExistenceOperationSpec","beginCreateOrUpdate","createOrUpdateOperationSpec","beginCreateOrUpdateAndWait","getOperationSpec","cancelOperationSpec","beginValidate","validateOperationSpec","beginValidateAndWait","beginWhatIf","whatIfOperationSpec","beginWhatIfAndWait","exportTemplate","exportTemplateOperationSpec","listByResourceGroupOperationSpec","calculateTemplateHash","calculateTemplateHashOperationSpec","listAtScopeNextOperationSpec","listAtTenantScopeNextOperationSpec","listAtManagementGroupScopeNextOperationSpec","listAtSubscriptionScopeNextOperationSpec","listByResourceGroupNextOperationSpec","ProvidersImpl","unregister","unregisterOperationSpec","registerAtManagementGroupScope","registerAtManagementGroupScopeOperationSpec","providerPermissions","providerPermissionsOperationSpec","register","registerOperationSpec","ProviderResourceTypesImpl","ResourcesImpl","beginMoveResources","moveResourcesOperationSpec","beginMoveResourcesAndWait","beginValidateMoveResources","validateMoveResourcesOperationSpec","beginValidateMoveResourcesAndWait","beginUpdate","updateOperationSpec","beginUpdateAndWait","checkExistenceById","checkExistenceByIdOperationSpec","beginDeleteById","deleteByIdOperationSpec","beginDeleteByIdAndWait","beginCreateOrUpdateById","createOrUpdateByIdOperationSpec","beginCreateOrUpdateByIdAndWait","beginUpdateById","updateByIdOperationSpec","beginUpdateByIdAndWait","getById","getByIdOperationSpec","ResourceGroupsImpl","createOrUpdate","beginExportTemplate","beginExportTemplateAndWait","TagsOperationsImpl","deleteValueOperationSpec","createOrUpdateValue","createOrUpdateValueOperationSpec","beginUpdateAtScope","updateAtScopeOperationSpec","beginUpdateAtScopeAndWait","DeploymentOperationsImpl","ResourceManagementClient","subscriptionIdOrOptions","defaults","packageDetails","optionsWithDefaults","bearerTokenAuthenticationPolicyFound","pipelinePolicy","coreRestPipeline","operations","deployments","providerResourceTypes","resourceGroups","tagsOperations","deploymentOperations","addCustomApiVersionPolicy","apiVersionPolicy","newParams","AzureDeploymentService","REACT_APP_AZURE_SUBSCRIPTION_ID","REACT_APP_AZURE_RESOURCE_GROUP","extractParameters","deployTemplate","_deployment$propertie","actualParameters","deploymentParameters","deployment","getDeploymentStatus","_deployment$propertie2","MsalTokenCredential","_response$expiresOn","scopeArray","msalInstance","AppContent","setTemplateFile","setParametersFile","deploymentState","setDeploymentState","deploymentMessage","setDeploymentMessage","setDeploymentName","useAzureCredential","parseFile","canDeploy","_Fragment","newDeploymentName","generateDeploymentName","deploymentService","alert","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","App","reportWebVitals"],"sourceRoot":""}