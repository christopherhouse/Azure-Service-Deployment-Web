{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport { OperationsImpl, DeploymentsImpl, ProvidersImpl, ProviderResourceTypesImpl, ResourcesImpl, ResourceGroupsImpl, TagsOperationsImpl, DeploymentOperationsImpl } from \"./operations/index.js\";\nexport class ResourceManagementClient extends coreClient.ServiceClient {\n  constructor(credentials, subscriptionIdOrOptions, options) {\n    var _a, _b, _c;\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    let subscriptionId;\n    if (typeof subscriptionIdOrOptions === \"string\") {\n      subscriptionId = subscriptionIdOrOptions;\n    } else if (typeof subscriptionIdOrOptions === \"object\") {\n      options = subscriptionIdOrOptions;\n    }\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n    const packageDetails = \"azsdk-js-arm-resources/6.1.0\";\n    const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix ? \"\".concat(options.userAgentOptions.userAgentPrefix, \" \").concat(packageDetails) : \"\".concat(packageDetails);\n    const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), {\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri) !== null && _b !== void 0 ? _b : \"https://management.azure.com\"\n    });\n    super(optionsWithDefaults);\n    let bearerTokenAuthenticationPolicyFound = false;\n    if ((options === null || options === void 0 ? void 0 : options.pipeline) && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(pipelinePolicy => pipelinePolicy.name === coreRestPipeline.bearerTokenAuthenticationPolicyName);\n    }\n    if (!options || !options.pipeline || options.pipeline.getOrderedPolicies().length == 0 || !bearerTokenAuthenticationPolicyFound) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(coreRestPipeline.bearerTokenAuthenticationPolicy({\n        credential: credentials,\n        scopes: (_c = optionsWithDefaults.credentialScopes) !== null && _c !== void 0 ? _c : \"\".concat(optionsWithDefaults.endpoint, \"/.default\"),\n        challengeCallbacks: {\n          authorizeRequestOnChallenge: coreClient.authorizeRequestOnClaimChallenge\n        }\n      }));\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2025-03-01\";\n    this.operations = new OperationsImpl(this);\n    this.deployments = new DeploymentsImpl(this);\n    this.providers = new ProvidersImpl(this);\n    this.providerResourceTypes = new ProviderResourceTypesImpl(this);\n    this.resources = new ResourcesImpl(this);\n    this.resourceGroups = new ResourceGroupsImpl(this);\n    this.tagsOperations = new TagsOperationsImpl(this);\n    this.deploymentOperations = new DeploymentOperationsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  addCustomApiVersionPolicy(apiVersion) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(request, next) {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map(item => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n}","map":{"version":3,"names":["coreClient","coreRestPipeline","OperationsImpl","DeploymentsImpl","ProvidersImpl","ProviderResourceTypesImpl","ResourcesImpl","ResourceGroupsImpl","TagsOperationsImpl","DeploymentOperationsImpl","ResourceManagementClient","ServiceClient","constructor","credentials","subscriptionIdOrOptions","options","undefined","Error","subscriptionId","defaults","requestContentType","credential","packageDetails","userAgentPrefix","userAgentOptions","concat","optionsWithDefaults","Object","assign","endpoint","_b","_a","baseUri","bearerTokenAuthenticationPolicyFound","pipeline","getOrderedPolicies","length","pipelinePolicies","some","pipelinePolicy","name","bearerTokenAuthenticationPolicyName","removePolicy","addPolicy","bearerTokenAuthenticationPolicy","scopes","_c","credentialScopes","challengeCallbacks","authorizeRequestOnChallenge","authorizeRequestOnClaimChallenge","$host","apiVersion","operations","deployments","providers","providerResourceTypes","resources","resourceGroups","tagsOperations","deploymentOperations","addCustomApiVersionPolicy","apiVersionPolicy","sendRequest","request","next","param","url","split","newParams","map","item","indexOf","join"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/node_modules/@azure/arm-resources/src/resourceManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  DeploymentsImpl,\n  ProvidersImpl,\n  ProviderResourceTypesImpl,\n  ResourcesImpl,\n  ResourceGroupsImpl,\n  TagsOperationsImpl,\n  DeploymentOperationsImpl,\n} from \"./operations/index.js\";\nimport {\n  Operations,\n  Deployments,\n  Providers,\n  ProviderResourceTypes,\n  Resources,\n  ResourceGroups,\n  TagsOperations,\n  DeploymentOperations,\n} from \"./operationsInterfaces/index.js\";\nimport { ResourceManagementClientOptionalParams } from \"./models/index.js\";\n\nexport class ResourceManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId?: string;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The Microsoft Azure subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: ResourceManagementClientOptionalParams,\n  );\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: ResourceManagementClientOptionalParams,\n  );\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionIdOrOptions?: ResourceManagementClientOptionalParams | string,\n    options?: ResourceManagementClientOptionalParams,\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    let subscriptionId: string | undefined;\n\n    if (typeof subscriptionIdOrOptions === \"string\") {\n      subscriptionId = subscriptionIdOrOptions;\n    } else if (typeof subscriptionIdOrOptions === \"object\") {\n      options = subscriptionIdOrOptions;\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: ResourceManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials,\n    };\n\n    const packageDetails = `azsdk-js-arm-resources/6.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\",\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] =\n        options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge,\n          },\n        }),\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2025-03-01\";\n    this.operations = new OperationsImpl(this);\n    this.deployments = new DeploymentsImpl(this);\n    this.providers = new ProvidersImpl(this);\n    this.providerResourceTypes = new ProviderResourceTypesImpl(this);\n    this.resources = new ResourcesImpl(this);\n    this.resourceGroups = new ResourceGroupsImpl(this);\n    this.tagsOperations = new TagsOperationsImpl(this);\n    this.deploymentOperations = new DeploymentOperationsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest,\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      },\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  deployments: Deployments;\n  providers: Providers;\n  providerResourceTypes: ProviderResourceTypes;\n  resources: Resources;\n  resourceGroups: ResourceGroups;\n  tagsOperations: TagsOperations;\n  deploymentOperations: DeploymentOperations;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}