{"ast":null,"code":"import React,{useState}from'react';import{MsalProvider}from'@azure/msal-react';import{PublicClientApplication}from'@azure/msal-browser';import{msalConfig}from'./authConfig';import{FileUpload}from'./components/FileUpload';import{DeploymentStatus}from'./components/DeploymentStatus';import{LoginButton}from'./components/LoginButton';import{AzureDeploymentService}from'./services/azureDeploymentService';import{useAzureCredential}from'./hooks/useAzureCredential';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const msalInstance=new PublicClientApplication(msalConfig);const AppContent=()=>{const[templateFile,setTemplateFile]=useState(null);const[parametersFile,setParametersFile]=useState(null);const[deploymentState,setDeploymentState]=useState('idle');const[deploymentMessage,setDeploymentMessage]=useState('');const[deploymentName,setDeploymentName]=useState('');const credential=useAzureCredential();const generateDeploymentName=()=>{const timestamp=new Date().toISOString().replace(/[:.]/g,'-').slice(0,-5);return\"arm-deployment-\".concat(timestamp);};const parseFile=async file=>{const content=await file.text();try{return JSON.parse(content);}catch(error){throw new Error(\"Invalid JSON in file \".concat(file.name,\": \").concat(error));}};const handleDeploy=async()=>{if(!templateFile||!parametersFile){alert('Please select both template and parameters files');return;}if(!credential){alert('Please sign in to Azure first');return;}try{setDeploymentState('running');const newDeploymentName=generateDeploymentName();setDeploymentName(newDeploymentName);setDeploymentMessage('');// Parse the files\nconst template=await parseFile(templateFile);const parameters=await parseFile(parametersFile);// Create deployment service and deploy\nconst deploymentService=new AzureDeploymentService(credential);const result=await deploymentService.deployTemplate({template,parameters,deploymentName:newDeploymentName});if(result.success){setDeploymentState('success');setDeploymentMessage('Resources deployed successfully!');}else{setDeploymentState('error');setDeploymentMessage(result.error||'Unknown error occurred');}}catch(error){setDeploymentState('error');setDeploymentMessage(error instanceof Error?error.message:'Unknown error occurred');}};const canDeploy=templateFile&&parametersFile&&credential&&deploymentState!=='running';return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDE80 Azure ARM Template Deployment Tool\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Deploy Azure resources using ARM templates\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[/*#__PURE__*/_jsx(LoginButton,{}),credential&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FileUpload,{onTemplateFileChange:setTemplateFile,onParametersFileChange:setParametersFile,templateFile:templateFile,parametersFile:parametersFile}),/*#__PURE__*/_jsxs(\"div\",{className:\"deploy-section\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleDeploy,disabled:!canDeploy,className:\"deploy-button \".concat(!canDeploy?'disabled':''),children:deploymentState==='running'?'‚è≥ Deploying...':'üöÄ Deploy to Azure'}),/*#__PURE__*/_jsxs(\"div\",{className:\"deployment-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Target Subscription:\"}),\" \",process.env.REACT_APP_AZURE_SUBSCRIPTION_ID||'Not configured']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Target Resource Group:\"}),\" \",process.env.REACT_APP_AZURE_RESOURCE_GROUP||'Not configured']})]})]}),/*#__PURE__*/_jsx(DeploymentStatus,{state:deploymentState,message:deploymentMessage,deploymentName:deploymentName,resourceGroup:process.env.REACT_APP_AZURE_RESOURCE_GROUP})]}),!credential&&/*#__PURE__*/_jsxs(\"div\",{className:\"not-authenticated\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD10 Authentication Required\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please sign in with your Microsoft account to deploy Azure resources.\"})]})]})]});};function App(){return/*#__PURE__*/_jsx(MsalProvider,{instance:msalInstance,children:/*#__PURE__*/_jsx(AppContent,{})});}export default App;","map":{"version":3,"names":["React","useState","MsalProvider","PublicClientApplication","msalConfig","FileUpload","DeploymentStatus","LoginButton","AzureDeploymentService","useAzureCredential","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","msalInstance","AppContent","templateFile","setTemplateFile","parametersFile","setParametersFile","deploymentState","setDeploymentState","deploymentMessage","setDeploymentMessage","deploymentName","setDeploymentName","credential","generateDeploymentName","timestamp","Date","toISOString","replace","slice","concat","parseFile","file","content","text","JSON","parse","error","Error","name","handleDeploy","alert","newDeploymentName","template","parameters","deploymentService","result","deployTemplate","success","message","canDeploy","className","children","onTemplateFileChange","onParametersFileChange","onClick","disabled","process","env","REACT_APP_AZURE_SUBSCRIPTION_ID","REACT_APP_AZURE_RESOURCE_GROUP","state","resourceGroup","App","instance"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/src/react/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MsalProvider } from '@azure/msal-react';\nimport { PublicClientApplication } from '@azure/msal-browser';\nimport { msalConfig } from './authConfig';\nimport { FileUpload } from './components/FileUpload';\nimport { DeploymentStatus, DeploymentState } from './components/DeploymentStatus';\nimport { LoginButton } from './components/LoginButton';\nimport { AzureDeploymentService } from './services/azureDeploymentService';\nimport { useAzureCredential } from './hooks/useAzureCredential';\nimport './App.css';\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nconst AppContent: React.FC = () => {\n  const [templateFile, setTemplateFile] = useState<File | null>(null);\n  const [parametersFile, setParametersFile] = useState<File | null>(null);\n  const [deploymentState, setDeploymentState] = useState<DeploymentState>('idle');\n  const [deploymentMessage, setDeploymentMessage] = useState<string>('');\n  const [deploymentName, setDeploymentName] = useState<string>('');\n  \n  const credential = useAzureCredential();\n\n  const generateDeploymentName = () => {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, -5);\n    return `arm-deployment-${timestamp}`;\n  };\n\n  const parseFile = async (file: File): Promise<any> => {\n    const content = await file.text();\n    try {\n      return JSON.parse(content);\n    } catch (error) {\n      throw new Error(`Invalid JSON in file ${file.name}: ${error}`);\n    }\n  };\n\n  const handleDeploy = async () => {\n    if (!templateFile || !parametersFile) {\n      alert('Please select both template and parameters files');\n      return;\n    }\n\n    if (!credential) {\n      alert('Please sign in to Azure first');\n      return;\n    }\n\n    try {\n      setDeploymentState('running');\n      const newDeploymentName = generateDeploymentName();\n      setDeploymentName(newDeploymentName);\n      setDeploymentMessage('');\n\n      // Parse the files\n      const template = await parseFile(templateFile);\n      const parameters = await parseFile(parametersFile);\n\n      // Create deployment service and deploy\n      const deploymentService = new AzureDeploymentService(credential);\n      const result = await deploymentService.deployTemplate({\n        template,\n        parameters,\n        deploymentName: newDeploymentName,\n      });\n\n      if (result.success) {\n        setDeploymentState('success');\n        setDeploymentMessage('Resources deployed successfully!');\n      } else {\n        setDeploymentState('error');\n        setDeploymentMessage(result.error || 'Unknown error occurred');\n      }\n    } catch (error) {\n      setDeploymentState('error');\n      setDeploymentMessage(error instanceof Error ? error.message : 'Unknown error occurred');\n    }\n  };\n\n  const canDeploy = templateFile && parametersFile && credential && deploymentState !== 'running';\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>üöÄ Azure ARM Template Deployment Tool</h1>\n        <p>Deploy Azure resources using ARM templates</p>\n      </header>\n      \n      <main className=\"App-main\">\n        <LoginButton />\n        \n        {credential && (\n          <>\n            <FileUpload\n              onTemplateFileChange={setTemplateFile}\n              onParametersFileChange={setParametersFile}\n              templateFile={templateFile}\n              parametersFile={parametersFile}\n            />\n            \n            <div className=\"deploy-section\">\n              <button\n                onClick={handleDeploy}\n                disabled={!canDeploy}\n                className={`deploy-button ${!canDeploy ? 'disabled' : ''}`}\n              >\n                {deploymentState === 'running' ? '‚è≥ Deploying...' : 'üöÄ Deploy to Azure'}\n              </button>\n              \n              <div className=\"deployment-info\">\n                <p><strong>Target Subscription:</strong> {process.env.REACT_APP_AZURE_SUBSCRIPTION_ID || 'Not configured'}</p>\n                <p><strong>Target Resource Group:</strong> {process.env.REACT_APP_AZURE_RESOURCE_GROUP || 'Not configured'}</p>\n              </div>\n            </div>\n            \n            <DeploymentStatus\n              state={deploymentState}\n              message={deploymentMessage}\n              deploymentName={deploymentName}\n              resourceGroup={process.env.REACT_APP_AZURE_RESOURCE_GROUP}\n            />\n          </>\n        )}\n        \n        {!credential && (\n          <div className=\"not-authenticated\">\n            <h3>üîê Authentication Required</h3>\n            <p>Please sign in with your Microsoft account to deploy Azure resources.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <MsalProvider instance={msalInstance}>\n      <AppContent />\n    </MsalProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}