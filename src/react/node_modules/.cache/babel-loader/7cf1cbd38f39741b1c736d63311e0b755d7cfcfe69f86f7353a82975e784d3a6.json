{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport const OperationListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const Operation = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\nexport const OperationDisplay = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const CloudError = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\nexport const ErrorResponse = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ErrorAdditionalInfo = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const Deployment = {\n  type: {\n    name: \"Composite\",\n    className: \"Deployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const DeploymentProperties = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentProperties\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentParameter\"\n            }\n          }\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      extensionConfigs: {\n        serializedName: \"extensionConfigs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Dictionary\",\n              value: {\n                type: {\n                  name: \"Composite\",\n                  className: \"DeploymentExtensionConfigItem\"\n                }\n              }\n            }\n          }\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeployment\"\n        }\n      },\n      expressionEvaluationOptions: {\n        serializedName: \"expressionEvaluationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpressionEvaluationOptions\"\n        }\n      },\n      validationLevel: {\n        serializedName: \"validationLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TemplateLink = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryString: {\n        serializedName: \"queryString\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentParameter = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentParameter\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\"\n        }\n      },\n      reference: {\n        serializedName: \"reference\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultParameterReference\"\n        }\n      }\n    }\n  }\n};\nexport const KeyVaultParameterReference = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultParameterReference\",\n    modelProperties: {\n      keyVault: {\n        serializedName: \"keyVault\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultReference\"\n        }\n      },\n      secretName: {\n        serializedName: \"secretName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const KeyVaultReference = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ParametersLink = {\n  type: {\n    name: \"Composite\",\n    className: \"ParametersLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentExtensionConfigItem = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtensionConfigItem\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\"\n        }\n      },\n      keyVaultReference: {\n        serializedName: \"keyVaultReference\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultParameterReference\"\n        }\n      }\n    }\n  }\n};\nexport const DebugSetting = {\n  type: {\n    name: \"Composite\",\n    className: \"DebugSetting\",\n    modelProperties: {\n      detailLevel: {\n        serializedName: \"detailLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const OnErrorDeployment = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeployment\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ExpressionEvaluationOptions = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpressionEvaluationOptions\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentExtended = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtended\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const DeploymentPropertiesExtended = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentPropertiesExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      providers: {\n        serializedName: \"providers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      dependencies: {\n        serializedName: \"dependencies\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dependency\"\n            }\n          }\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtensionDefinition\"\n            }\n          }\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeploymentExtended\"\n        }\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outputResources: {\n        serializedName: \"outputResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      validatedResources: {\n        serializedName: \"validatedResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      diagnostics: {\n        serializedName: \"diagnostics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentDiagnosticsDefinition\"\n            }\n          }\n        }\n      },\n      validationLevel: {\n        serializedName: \"validationLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const Provider = {\n  type: {\n    name: \"Composite\",\n    className: \"Provider\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationState: {\n        serializedName: \"registrationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationPolicy: {\n        serializedName: \"registrationPolicy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ProviderResourceType = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceType\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationMappings: {\n        serializedName: \"locationMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderExtendedLocation\"\n            }\n          }\n        }\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alias\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      defaultApiVersion: {\n        serializedName: \"defaultApiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneMappings: {\n        serializedName: \"zoneMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ZoneMapping\"\n            }\n          }\n        }\n      },\n      apiProfiles: {\n        serializedName: \"apiProfiles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiProfile\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ProviderExtendedLocation = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderExtendedLocation\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocations: {\n        serializedName: \"extendedLocations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const Alias = {\n  type: {\n    name: \"Composite\",\n    className: \"Alias\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasPath\"\n            }\n          }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"PlainText\", \"Mask\"]\n        }\n      },\n      defaultPath: {\n        serializedName: \"defaultPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultPattern: {\n        serializedName: \"defaultPattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\"\n        }\n      },\n      defaultMetadata: {\n        serializedName: \"defaultMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\"\n        }\n      }\n    }\n  }\n};\nexport const AliasPath = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPath\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      pattern: {\n        serializedName: \"pattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\"\n        }\n      }\n    }\n  }\n};\nexport const AliasPattern = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPattern\",\n    modelProperties: {\n      phrase: {\n        serializedName: \"phrase\",\n        type: {\n          name: \"String\"\n        }\n      },\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"Extract\"]\n        }\n      }\n    }\n  }\n};\nexport const AliasPathMetadata = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPathMetadata\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      attributes: {\n        serializedName: \"attributes\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ZoneMapping = {\n  type: {\n    name: \"Composite\",\n    className: \"ZoneMapping\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ApiProfile = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiProfile\",\n    modelProperties: {\n      profileVersion: {\n        serializedName: \"profileVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const Dependency = {\n  type: {\n    name: \"Composite\",\n    className: \"Dependency\",\n    modelProperties: {\n      dependsOn: {\n        serializedName: \"dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BasicDependency\"\n            }\n          }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const BasicDependency = {\n  type: {\n    name: \"Composite\",\n    className: \"BasicDependency\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentExtensionDefinition = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtensionDefinition\",\n    modelProperties: {\n      alias: {\n        serializedName: \"alias\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      configId: {\n        serializedName: \"configId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      config: {\n        serializedName: \"config\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtensionConfigItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const OnErrorDeploymentExtended = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeploymentExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceReference = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentExtensionDefinition\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentDiagnosticsDefinition = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentDiagnosticsDefinition\",\n    modelProperties: {\n      level: {\n        serializedName: \"level\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const DeploymentValidateResult = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentValidateResult\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentExportResult = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const DeploymentListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtended\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ScopedDeployment = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ScopedDeploymentWhatIf = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentWhatIfSettings = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfSettings\",\n    modelProperties: {\n      resultFormat: {\n        serializedName: \"resultFormat\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ResourceIdOnly\", \"FullResourcePayloads\"]\n        }\n      }\n    }\n  }\n};\nexport const WhatIfOperationResult = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfOperationResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      changes: {\n        serializedName: \"properties.changes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\"\n            }\n          }\n        }\n      },\n      potentialChanges: {\n        serializedName: \"properties.potentialChanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\"\n            }\n          }\n        }\n      },\n      diagnostics: {\n        serializedName: \"properties.diagnostics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentDiagnosticsDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const WhatIfChange = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfChange\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentId: {\n        serializedName: \"deploymentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      symbolicName: {\n        serializedName: \"symbolicName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      changeType: {\n        serializedName: \"changeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Create\", \"Delete\", \"Ignore\", \"Deploy\", \"NoChange\", \"Modify\", \"Unsupported\"]\n        }\n      },\n      unsupportedReason: {\n        serializedName: \"unsupportedReason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      delta: {\n        serializedName: \"delta\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const WhatIfPropertyChange = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfPropertyChange\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyChangeType: {\n        serializedName: \"propertyChangeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Create\", \"Delete\", \"Modify\", \"Array\", \"NoEffect\"]\n        }\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      children: {\n        serializedName: \"children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const DeploymentWhatIf = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\"\n        }\n      }\n    }\n  }\n};\nexport const ProviderPermissionListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermissionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderPermission\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ProviderPermission = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermission\",\n    modelProperties: {\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinition: {\n        serializedName: \"roleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\"\n        }\n      },\n      managedByRoleDefinition: {\n        serializedName: \"managedByRoleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\"\n        }\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const RoleDefinition = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isServiceRole: {\n        serializedName: \"isServiceRole\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Permission\"\n            }\n          }\n        }\n      },\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const Permission = {\n  type: {\n    name: \"Composite\",\n    className: \"Permission\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notActions: {\n        serializedName: \"notActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dataActions: {\n        serializedName: \"dataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notDataActions: {\n        serializedName: \"notDataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ProviderRegistrationRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderRegistrationRequest\",\n    modelProperties: {\n      thirdPartyProviderConsent: {\n        serializedName: \"thirdPartyProviderConsent\",\n        type: {\n          name: \"Composite\",\n          className: \"ProviderConsentDefinition\"\n        }\n      }\n    }\n  }\n};\nexport const ProviderConsentDefinition = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderConsentDefinition\",\n    modelProperties: {\n      consentToAuthorization: {\n        serializedName: \"consentToAuthorization\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\nexport const ProviderListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ProviderResourceTypeListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceTypeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GenericResourceExpanded\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const Plan = {\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const Sku = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\nexport const Identity = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"SystemAssigned\", \"UserAssigned\", \"SystemAssigned, UserAssigned\", \"None\"]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"IdentityUserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const IdentityUserAssignedIdentitiesValue = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const Resource = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ExtendedLocation = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroup = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroup\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroupProperties = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroupPatchable = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupPatchable\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const ExportTemplateRequest = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportTemplateRequest\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputFormat: {\n        serializedName: \"outputFormat\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroupExportResult = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      output: {\n        serializedName: \"output\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroupListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourcesMoveInfo = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesMoveInfo\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TagValue = {\n  type: {\n    name: \"Composite\",\n    className: \"TagValue\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      }\n    }\n  }\n};\nexport const TagCount = {\n  type: {\n    name: \"Composite\",\n    className: \"TagCount\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\nexport const TagDetails = {\n  type: {\n    name: \"Composite\",\n    className: \"TagDetails\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const TagsListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagDetails\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentOperation = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        serializedName: \"operationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentOperationProperties\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentOperationProperties = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationProperties\",\n    modelProperties: {\n      provisioningOperation: {\n        serializedName: \"provisioningOperation\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"Create\", \"Delete\", \"Waiting\", \"AzureAsyncOperationWaiting\", \"ResourceCacheWaiting\", \"Action\", \"Read\", \"EvaluateDeploymentOutput\", \"DeploymentCleanup\"]\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceRequestId: {\n        serializedName: \"serviceRequestId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMessage\"\n        }\n      },\n      targetResource: {\n        serializedName: \"targetResource\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetResource\"\n        }\n      },\n      request: {\n        serializedName: \"request\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      }\n    }\n  }\n};\nexport const StatusMessage = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMessage\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\nexport const TargetResource = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentExtensionDefinition\"\n        }\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      symbolicName: {\n        serializedName: \"symbolicName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const HttpMessage = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpMessage\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const DeploymentOperationsListResult = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TemplateHashResult = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateHashResult\",\n    modelProperties: {\n      minifiedTemplate: {\n        serializedName: \"minifiedTemplate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TagsResource = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\"\n        }\n      }\n    }\n  }\n};\nexport const Tags = {\n  type: {\n    name: \"Composite\",\n    className: \"Tags\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const TagsPatchResource = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsPatchResource\",\n    modelProperties: {\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentExtendedFilter = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtendedFilter\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const GenericResourceFilter = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceFilter\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagname: {\n        serializedName: \"tagname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagvalue: {\n        serializedName: \"tagvalue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroupFilter = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupFilter\",\n    modelProperties: {\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceProviderOperationDisplayProperties = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceProviderOperationDisplayProperties\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const SubResource = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentWhatIfProperties = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfProperties\",\n    modelProperties: Object.assign(Object.assign({}, DeploymentProperties.type.modelProperties), {\n      whatIfSettings: {\n        serializedName: \"whatIfSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfSettings\"\n        }\n      }\n    })\n  }\n};\nexport const GenericResource = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResource\",\n    modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), {\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"any\"\n            }\n          }\n        }\n      },\n      kind: {\n        constraints: {\n          Pattern: new RegExp(\"^[-\\\\w\\\\._,\\\\(\\\\)]+$\")\n        },\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      }\n    })\n  }\n};\nexport const GenericResourceExpanded = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceExpanded\",\n    modelProperties: Object.assign(Object.assign({}, GenericResource.type.modelProperties), {\n      createdTime: {\n        serializedName: \"createdTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      changedTime: {\n        serializedName: \"changedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    })\n  }\n};\nexport const DeploymentsWhatIfAtTenantScopeHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtTenantScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentsWhatIfAtManagementGroupScopeHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtManagementGroupScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentsWhatIfAtSubscriptionScopeHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtSubscriptionScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const DeploymentsWhatIfHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const ResourceGroupsDeleteHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupsDeleteHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TagsCreateOrUpdateAtScopeHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsCreateOrUpdateAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TagsUpdateAtScopeHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsUpdateAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nexport const TagsDeleteAtScopeHeaders = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsDeleteAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["OperationListResult","type","name","className","modelProperties","value","serializedName","element","nextLink","Operation","display","OperationDisplay","provider","resource","operation","description","CloudError","error","ErrorResponse","code","readOnly","message","target","details","additionalInfo","ErrorAdditionalInfo","info","Deployment","location","properties","tags","DeploymentProperties","template","templateLink","parameters","parametersLink","extensionConfigs","mode","required","allowedValues","debugSetting","onErrorDeployment","expressionEvaluationOptions","validationLevel","TemplateLink","uri","id","relativePath","contentVersion","queryString","DeploymentParameter","reference","KeyVaultParameterReference","keyVault","secretName","secretVersion","KeyVaultReference","ParametersLink","DeploymentExtensionConfigItem","keyVaultReference","DebugSetting","detailLevel","OnErrorDeployment","deploymentName","ExpressionEvaluationOptions","scope","DeploymentExtended","DeploymentPropertiesExtended","provisioningState","correlationId","timestamp","duration","outputs","providers","dependencies","extensions","templateHash","outputResources","validatedResources","diagnostics","Provider","namespace","registrationState","registrationPolicy","resourceTypes","providerAuthorizationConsentState","ProviderResourceType","resourceType","locations","locationMappings","aliases","apiVersions","defaultApiVersion","zoneMappings","apiProfiles","capabilities","ProviderExtendedLocation","extendedLocations","Alias","paths","defaultPath","defaultPattern","defaultMetadata","AliasPath","path","pattern","metadata","AliasPattern","phrase","variable","AliasPathMetadata","attributes","ZoneMapping","zones","ApiProfile","profileVersion","apiVersion","Dependency","dependsOn","resourceName","BasicDependency","DeploymentExtensionDefinition","alias","version","configId","config","OnErrorDeploymentExtended","ResourceReference","extension","identifiers","DeploymentDiagnosticsDefinition","level","DeploymentValidateResult","DeploymentExportResult","DeploymentListResult","ScopedDeployment","ScopedDeploymentWhatIf","DeploymentWhatIfSettings","resultFormat","WhatIfOperationResult","status","changes","potentialChanges","WhatIfChange","resourceId","deploymentId","symbolicName","changeType","unsupportedReason","before","after","delta","WhatIfPropertyChange","propertyChangeType","children","DeploymentWhatIf","ProviderPermissionListResult","ProviderPermission","applicationId","roleDefinition","managedByRoleDefinition","RoleDefinition","isServiceRole","permissions","scopes","Permission","actions","notActions","dataActions","notDataActions","ProviderRegistrationRequest","thirdPartyProviderConsent","ProviderConsentDefinition","consentToAuthorization","ProviderListResult","ProviderResourceTypeListResult","ResourceListResult","Plan","publisher","product","promotionCode","Sku","tier","size","family","model","capacity","Identity","principalId","tenantId","userAssignedIdentities","IdentityUserAssignedIdentitiesValue","clientId","Resource","extendedLocation","ExtendedLocation","ResourceGroup","managedBy","ResourceGroupProperties","ResourceGroupPatchable","ExportTemplateRequest","resources","options","outputFormat","ResourceGroupExportResult","output","ResourceGroupListResult","ResourcesMoveInfo","targetResourceGroup","TagValue","tagValue","count","TagCount","TagDetails","tagName","values","TagsListResult","DeploymentOperation","operationId","DeploymentOperationProperties","provisioningOperation","serviceRequestId","statusCode","statusMessage","targetResource","request","response","StatusMessage","TargetResource","HttpMessage","content","DeploymentOperationsListResult","TemplateHashResult","minifiedTemplate","TagsResource","Tags","TagsPatchResource","DeploymentExtendedFilter","GenericResourceFilter","tagname","tagvalue","ResourceGroupFilter","ResourceProviderOperationDisplayProperties","SubResource","DeploymentWhatIfProperties","Object","assign","whatIfSettings","GenericResource","plan","kind","constraints","Pattern","RegExp","sku","identity","GenericResourceExpanded","createdTime","changedTime","DeploymentsWhatIfAtTenantScopeHeaders","retryAfter","DeploymentsWhatIfAtManagementGroupScopeHeaders","DeploymentsWhatIfAtSubscriptionScopeHeaders","DeploymentsWhatIfHeaders","ResourceGroupsDeleteHeaders","TagsCreateOrUpdateAtScopeHeaders","TagsUpdateAtScopeHeaders","TagsDeleteAtScopeHeaders"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/node_modules/@azure/arm-resources/src/models/mappers.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\",\n        },\n      },\n    },\n  },\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\",\n        },\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\",\n            },\n          },\n        },\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const Deployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Deployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentProperties\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\",\n        },\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"DeploymentParameter\" },\n          },\n        },\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\",\n        },\n      },\n      extensionConfigs: {\n        serializedName: \"extensionConfigs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Dictionary\",\n              value: {\n                type: {\n                  name: \"Composite\",\n                  className: \"DeploymentExtensionConfigItem\",\n                },\n              },\n            },\n          },\n        },\n      },\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"],\n        },\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\",\n        },\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeployment\",\n        },\n      },\n      expressionEvaluationOptions: {\n        serializedName: \"expressionEvaluationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpressionEvaluationOptions\",\n        },\n      },\n      validationLevel: {\n        serializedName: \"validationLevel\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TemplateLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryString: {\n        serializedName: \"queryString\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentParameter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentParameter\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\",\n        },\n      },\n      reference: {\n        serializedName: \"reference\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultParameterReference\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyVaultParameterReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultParameterReference\",\n    modelProperties: {\n      keyVault: {\n        serializedName: \"keyVault\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultReference\",\n        },\n      },\n      secretName: {\n        serializedName: \"secretName\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      secretVersion: {\n        serializedName: \"secretVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyVaultReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ParametersLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParametersLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtensionConfigItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtensionConfigItem\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"any\",\n        },\n      },\n      keyVaultReference: {\n        serializedName: \"keyVaultReference\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultParameterReference\",\n        },\n      },\n    },\n  },\n};\n\nexport const DebugSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DebugSetting\",\n    modelProperties: {\n      detailLevel: {\n        serializedName: \"detailLevel\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OnErrorDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeployment\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"],\n        },\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ExpressionEvaluationOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpressionEvaluationOptions\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtended\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentPropertiesExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentPropertiesExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      providers: {\n        serializedName: \"providers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\",\n            },\n          },\n        },\n      },\n      dependencies: {\n        serializedName: \"dependencies\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dependency\",\n            },\n          },\n        },\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\",\n        },\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\",\n        },\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtensionDefinition\",\n            },\n          },\n        },\n      },\n      mode: {\n        serializedName: \"mode\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"],\n        },\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\",\n        },\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeploymentExtended\",\n        },\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      outputResources: {\n        serializedName: \"outputResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\",\n            },\n          },\n        },\n      },\n      validatedResources: {\n        serializedName: \"validatedResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\",\n            },\n          },\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n      diagnostics: {\n        serializedName: \"diagnostics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentDiagnosticsDefinition\",\n            },\n          },\n        },\n      },\n      validationLevel: {\n        serializedName: \"validationLevel\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Provider: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Provider\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\",\n        },\n      },\n      registrationState: {\n        serializedName: \"registrationState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      registrationPolicy: {\n        serializedName: \"registrationPolicy\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\",\n            },\n          },\n        },\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderResourceType: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceType\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      locationMappings: {\n        serializedName: \"locationMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderExtendedLocation\",\n            },\n          },\n        },\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alias\",\n            },\n          },\n        },\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      defaultApiVersion: {\n        serializedName: \"defaultApiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      zoneMappings: {\n        serializedName: \"zoneMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ZoneMapping\",\n            },\n          },\n        },\n      },\n      apiProfiles: {\n        serializedName: \"apiProfiles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiProfile\",\n            },\n          },\n        },\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderExtendedLocation\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      extendedLocations: {\n        serializedName: \"extendedLocations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Alias: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Alias\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasPath\",\n            },\n          },\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"PlainText\", \"Mask\"],\n        },\n      },\n      defaultPath: {\n        serializedName: \"defaultPath\",\n        type: {\n          name: \"String\",\n        },\n      },\n      defaultPattern: {\n        serializedName: \"defaultPattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\",\n        },\n      },\n      defaultMetadata: {\n        serializedName: \"defaultMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\",\n        },\n      },\n    },\n  },\n};\n\nexport const AliasPath: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPath\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\",\n        },\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      pattern: {\n        serializedName: \"pattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\",\n        },\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\",\n        },\n      },\n    },\n  },\n};\n\nexport const AliasPattern: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPattern\",\n    modelProperties: {\n      phrase: {\n        serializedName: \"phrase\",\n        type: {\n          name: \"String\",\n        },\n      },\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"Extract\"],\n        },\n      },\n    },\n  },\n};\n\nexport const AliasPathMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPathMetadata\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      attributes: {\n        serializedName: \"attributes\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ZoneMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ZoneMapping\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ApiProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiProfile\",\n    modelProperties: {\n      profileVersion: {\n        serializedName: \"profileVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Dependency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Dependency\",\n    modelProperties: {\n      dependsOn: {\n        serializedName: \"dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BasicDependency\",\n            },\n          },\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BasicDependency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BasicDependency\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtensionDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtensionDefinition\",\n    modelProperties: {\n      alias: {\n        serializedName: \"alias\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      configId: {\n        serializedName: \"configId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      config: {\n        serializedName: \"config\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtensionConfigItem\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OnErrorDeploymentExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeploymentExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"],\n        },\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentExtensionDefinition\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentDiagnosticsDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentDiagnosticsDefinition\",\n    modelProperties: {\n      level: {\n        serializedName: \"level\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentValidateResult\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExportResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtended\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ScopedDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ScopedDeploymentWhatIf: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentWhatIfSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfSettings\",\n    modelProperties: {\n      resultFormat: {\n        serializedName: \"resultFormat\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ResourceIdOnly\", \"FullResourcePayloads\"],\n        },\n      },\n    },\n  },\n};\n\nexport const WhatIfOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfOperationResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n      changes: {\n        serializedName: \"properties.changes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\",\n            },\n          },\n        },\n      },\n      potentialChanges: {\n        serializedName: \"properties.potentialChanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\",\n            },\n          },\n        },\n      },\n      diagnostics: {\n        serializedName: \"properties.diagnostics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentDiagnosticsDefinition\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const WhatIfChange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfChange\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deploymentId: {\n        serializedName: \"deploymentId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      symbolicName: {\n        serializedName: \"symbolicName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      changeType: {\n        serializedName: \"changeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Create\",\n            \"Delete\",\n            \"Ignore\",\n            \"Deploy\",\n            \"NoChange\",\n            \"Modify\",\n            \"Unsupported\",\n          ],\n        },\n      },\n      unsupportedReason: {\n        serializedName: \"unsupportedReason\",\n        type: {\n          name: \"String\",\n        },\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      delta: {\n        serializedName: \"delta\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const WhatIfPropertyChange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfPropertyChange\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      propertyChangeType: {\n        serializedName: \"propertyChangeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Create\", \"Delete\", \"Modify\", \"Array\", \"NoEffect\"],\n        },\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      children: {\n        serializedName: \"children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentWhatIf: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderPermissionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermissionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderPermission\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderPermission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermission\",\n    modelProperties: {\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      roleDefinition: {\n        serializedName: \"roleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\",\n        },\n      },\n      managedByRoleDefinition: {\n        serializedName: \"managedByRoleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\",\n        },\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RoleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isServiceRole: {\n        serializedName: \"isServiceRole\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Permission\",\n            },\n          },\n        },\n      },\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Permission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Permission\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      notActions: {\n        serializedName: \"notActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      dataActions: {\n        serializedName: \"dataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      notDataActions: {\n        serializedName: \"notDataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderRegistrationRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderRegistrationRequest\",\n    modelProperties: {\n      thirdPartyProviderConsent: {\n        serializedName: \"thirdPartyProviderConsent\",\n        type: {\n          name: \"Composite\",\n          className: \"ProviderConsentDefinition\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderConsentDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderConsentDefinition\",\n    modelProperties: {\n      consentToAuthorization: {\n        serializedName: \"consentToAuthorization\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ProviderResourceTypeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceTypeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GenericResourceExpanded\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Plan: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\",\n        },\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\",\n        },\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\",\n        },\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\",\n        },\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\",\n        },\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"String\",\n        },\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\",\n          ],\n        },\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"IdentityUserAssignedIdentitiesValue\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const IdentityUserAssignedIdentitiesValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroup\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\",\n        },\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupPatchable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupPatchable\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\",\n        },\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ExportTemplateRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportTemplateRequest\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\",\n        },\n      },\n      outputFormat: {\n        serializedName: \"outputFormat\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupExportResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      output: {\n        serializedName: \"output\",\n        type: {\n          name: \"String\",\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceGroup\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourcesMoveInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesMoveInfo\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagValue\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\",\n        },\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagCount\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagDetails\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\",\n        },\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagValue\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const TagsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagDetails\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      operationId: {\n        serializedName: \"operationId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentOperationProperties\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentOperationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationProperties\",\n    modelProperties: {\n      provisioningOperation: {\n        serializedName: \"provisioningOperation\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotSpecified\",\n            \"Create\",\n            \"Delete\",\n            \"Waiting\",\n            \"AzureAsyncOperationWaiting\",\n            \"ResourceCacheWaiting\",\n            \"Action\",\n            \"Read\",\n            \"EvaluateDeploymentOutput\",\n            \"DeploymentCleanup\",\n          ],\n        },\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      serviceRequestId: {\n        serializedName: \"serviceRequestId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMessage\",\n        },\n      },\n      targetResource: {\n        serializedName: \"targetResource\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetResource\",\n        },\n      },\n      request: {\n        serializedName: \"request\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\",\n        },\n      },\n    },\n  },\n};\n\nexport const StatusMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMessage\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\",\n        },\n      },\n    },\n  },\n};\n\nexport const TargetResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentExtensionDefinition\",\n        },\n      },\n      identifiers: {\n        serializedName: \"identifiers\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      symbolicName: {\n        serializedName: \"symbolicName\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HttpMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpMessage\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentOperationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentOperation\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TemplateHashResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateHashResult\",\n    modelProperties: {\n      minifiedTemplate: {\n        serializedName: \"minifiedTemplate\",\n        type: {\n          name: \"String\",\n        },\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\",\n        },\n      },\n    },\n  },\n};\n\nexport const Tags: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tags\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const TagsPatchResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsPatchResource\",\n    modelProperties: {\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentExtendedFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtendedFilter\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GenericResourceFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceFilter\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tagname: {\n        serializedName: \"tagname\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tagvalue: {\n        serializedName: \"tagvalue\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupFilter\",\n    modelProperties: {\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceProviderOperationDisplayProperties: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"ResourceProviderOperationDisplayProperties\",\n      modelProperties: {\n        publisher: {\n          serializedName: \"publisher\",\n          type: {\n            name: \"String\",\n          },\n        },\n        provider: {\n          serializedName: \"provider\",\n          type: {\n            name: \"String\",\n          },\n        },\n        resource: {\n          serializedName: \"resource\",\n          type: {\n            name: \"String\",\n          },\n        },\n        operation: {\n          serializedName: \"operation\",\n          type: {\n            name: \"String\",\n          },\n        },\n        description: {\n          serializedName: \"description\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentWhatIfProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfProperties\",\n    modelProperties: {\n      ...DeploymentProperties.type.modelProperties,\n      whatIfSettings: {\n        serializedName: \"whatIfSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfSettings\",\n        },\n      },\n    },\n  },\n};\n\nexport const GenericResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\",\n        },\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      kind: {\n        constraints: {\n          Pattern: new RegExp(\"^[-\\\\w\\\\._,\\\\(\\\\)]+$\"),\n        },\n        serializedName: \"kind\",\n        type: {\n          name: \"String\",\n        },\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\",\n        },\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\",\n        },\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\",\n        },\n      },\n    },\n  },\n};\n\nexport const GenericResourceExpanded: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceExpanded\",\n    modelProperties: {\n      ...GenericResource.type.modelProperties,\n      createdTime: {\n        serializedName: \"createdTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      changedTime: {\n        serializedName: \"changedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DeploymentsWhatIfAtTenantScopeHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"DeploymentsWhatIfAtTenantScopeHeaders\",\n      modelProperties: {\n        location: {\n          serializedName: \"location\",\n          type: {\n            name: \"String\",\n          },\n        },\n        retryAfter: {\n          serializedName: \"retry-after\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const DeploymentsWhatIfAtManagementGroupScopeHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"DeploymentsWhatIfAtManagementGroupScopeHeaders\",\n      modelProperties: {\n        location: {\n          serializedName: \"location\",\n          type: {\n            name: \"String\",\n          },\n        },\n        retryAfter: {\n          serializedName: \"retry-after\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const DeploymentsWhatIfAtSubscriptionScopeHeaders: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"DeploymentsWhatIfAtSubscriptionScopeHeaders\",\n      modelProperties: {\n        location: {\n          serializedName: \"location\",\n          type: {\n            name: \"String\",\n          },\n        },\n        retryAfter: {\n          serializedName: \"retry-after\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const DeploymentsWhatIfHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResourceGroupsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupsDeleteHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsCreateOrUpdateAtScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsCreateOrUpdateAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsUpdateAtScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsUpdateAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TagsDeleteAtScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsDeleteAtScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}