{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeploymentOperations operations. */\nexport class DeploymentOperationsImpl {\n  /**\n   * Initialize a new instance of the class DeploymentOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtScope(scope, deploymentName, options) {\n    const iter = this.listAtScopePagingAll(scope, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: settings => {\n        if (settings === null || settings === void 0 ? void 0 : settings.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(scope, deploymentName, options, settings);\n      }\n    };\n  }\n  listAtScopePagingPage(scope, deploymentName, options, settings) {\n    return __asyncGenerator(this, arguments, function* listAtScopePagingPage_1() {\n      let result;\n      let continuationToken = settings === null || settings === void 0 ? void 0 : settings.continuationToken;\n      if (!continuationToken) {\n        result = yield __await(this._listAtScope(scope, deploymentName, options));\n        let page = result.value || [];\n        continuationToken = result.nextLink;\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n      while (continuationToken) {\n        result = yield __await(this._listAtScopeNext(scope, deploymentName, continuationToken, options));\n        continuationToken = result.nextLink;\n        let page = result.value || [];\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n    });\n  }\n  listAtScopePagingAll(scope, deploymentName, options) {\n    return __asyncGenerator(this, arguments, function* listAtScopePagingAll_1() {\n      var _a, e_1, _b, _c;\n      try {\n        for (var _d = true, _e = __asyncValues(this.listAtScopePagingPage(scope, deploymentName, options)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const page = _c;\n          yield __await(yield* __asyncDelegator(__asyncValues(page)));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtTenantScope(deploymentName, options) {\n    const iter = this.listAtTenantScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: settings => {\n        if (settings === null || settings === void 0 ? void 0 : settings.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(deploymentName, options, settings);\n      }\n    };\n  }\n  listAtTenantScopePagingPage(deploymentName, options, settings) {\n    return __asyncGenerator(this, arguments, function* listAtTenantScopePagingPage_1() {\n      let result;\n      let continuationToken = settings === null || settings === void 0 ? void 0 : settings.continuationToken;\n      if (!continuationToken) {\n        result = yield __await(this._listAtTenantScope(deploymentName, options));\n        let page = result.value || [];\n        continuationToken = result.nextLink;\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n      while (continuationToken) {\n        result = yield __await(this._listAtTenantScopeNext(deploymentName, continuationToken, options));\n        continuationToken = result.nextLink;\n        let page = result.value || [];\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n    });\n  }\n  listAtTenantScopePagingAll(deploymentName, options) {\n    return __asyncGenerator(this, arguments, function* listAtTenantScopePagingAll_1() {\n      var _a, e_2, _b, _c;\n      try {\n        for (var _d = true, _e = __asyncValues(this.listAtTenantScopePagingPage(deploymentName, options)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const page = _c;\n          yield __await(yield* __asyncDelegator(__asyncValues(page)));\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    });\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtManagementGroupScope(groupId, deploymentName, options) {\n    const iter = this.listAtManagementGroupScopePagingAll(groupId, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: settings => {\n        if (settings === null || settings === void 0 ? void 0 : settings.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(groupId, deploymentName, options, settings);\n      }\n    };\n  }\n  listAtManagementGroupScopePagingPage(groupId, deploymentName, options, settings) {\n    return __asyncGenerator(this, arguments, function* listAtManagementGroupScopePagingPage_1() {\n      let result;\n      let continuationToken = settings === null || settings === void 0 ? void 0 : settings.continuationToken;\n      if (!continuationToken) {\n        result = yield __await(this._listAtManagementGroupScope(groupId, deploymentName, options));\n        let page = result.value || [];\n        continuationToken = result.nextLink;\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n      while (continuationToken) {\n        result = yield __await(this._listAtManagementGroupScopeNext(groupId, deploymentName, continuationToken, options));\n        continuationToken = result.nextLink;\n        let page = result.value || [];\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n    });\n  }\n  listAtManagementGroupScopePagingAll(groupId, deploymentName, options) {\n    return __asyncGenerator(this, arguments, function* listAtManagementGroupScopePagingAll_1() {\n      var _a, e_3, _b, _c;\n      try {\n        for (var _d = true, _e = __asyncValues(this.listAtManagementGroupScopePagingPage(groupId, deploymentName, options)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const page = _c;\n          yield __await(yield* __asyncDelegator(__asyncValues(page)));\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    });\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtSubscriptionScope(deploymentName, options) {\n    const iter = this.listAtSubscriptionScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: settings => {\n        if (settings === null || settings === void 0 ? void 0 : settings.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(deploymentName, options, settings);\n      }\n    };\n  }\n  listAtSubscriptionScopePagingPage(deploymentName, options, settings) {\n    return __asyncGenerator(this, arguments, function* listAtSubscriptionScopePagingPage_1() {\n      let result;\n      let continuationToken = settings === null || settings === void 0 ? void 0 : settings.continuationToken;\n      if (!continuationToken) {\n        result = yield __await(this._listAtSubscriptionScope(deploymentName, options));\n        let page = result.value || [];\n        continuationToken = result.nextLink;\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n      while (continuationToken) {\n        result = yield __await(this._listAtSubscriptionScopeNext(deploymentName, continuationToken, options));\n        continuationToken = result.nextLink;\n        let page = result.value || [];\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n    });\n  }\n  listAtSubscriptionScopePagingAll(deploymentName, options) {\n    return __asyncGenerator(this, arguments, function* listAtSubscriptionScopePagingAll_1() {\n      var _a, e_4, _b, _c;\n      try {\n        for (var _d = true, _e = __asyncValues(this.listAtSubscriptionScopePagingPage(deploymentName, options)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const page = _c;\n          yield __await(yield* __asyncDelegator(__asyncValues(page)));\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    });\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  list(resourceGroupName, deploymentName, options) {\n    const iter = this.listPagingAll(resourceGroupName, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: settings => {\n        if (settings === null || settings === void 0 ? void 0 : settings.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceGroupName, deploymentName, options, settings);\n      }\n    };\n  }\n  listPagingPage(resourceGroupName, deploymentName, options, settings) {\n    return __asyncGenerator(this, arguments, function* listPagingPage_1() {\n      let result;\n      let continuationToken = settings === null || settings === void 0 ? void 0 : settings.continuationToken;\n      if (!continuationToken) {\n        result = yield __await(this._list(resourceGroupName, deploymentName, options));\n        let page = result.value || [];\n        continuationToken = result.nextLink;\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n      while (continuationToken) {\n        result = yield __await(this._listNext(resourceGroupName, deploymentName, continuationToken, options));\n        continuationToken = result.nextLink;\n        let page = result.value || [];\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n    });\n  }\n  listPagingAll(resourceGroupName, deploymentName, options) {\n    return __asyncGenerator(this, arguments, function* listPagingAll_1() {\n      var _a, e_5, _b, _c;\n      try {\n        for (var _d = true, _e = __asyncValues(this.listPagingPage(resourceGroupName, deploymentName, options)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const page = _c;\n          yield __await(yield* __asyncDelegator(__asyncValues(page)));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n    });\n  }\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtScope(scope, deploymentName, operationId, options) {\n    return this.client.sendOperationRequest({\n      scope,\n      deploymentName,\n      operationId,\n      options\n    }, getAtScopeOperationSpec);\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  _listAtScope(scope, deploymentName, options) {\n    return this.client.sendOperationRequest({\n      scope,\n      deploymentName,\n      options\n    }, listAtScopeOperationSpec);\n  }\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(deploymentName, operationId, options) {\n    return this.client.sendOperationRequest({\n      deploymentName,\n      operationId,\n      options\n    }, getAtTenantScopeOperationSpec);\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  _listAtTenantScope(deploymentName, options) {\n    return this.client.sendOperationRequest({\n      deploymentName,\n      options\n    }, listAtTenantScopeOperationSpec);\n  }\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(groupId, deploymentName, operationId, options) {\n    return this.client.sendOperationRequest({\n      groupId,\n      deploymentName,\n      operationId,\n      options\n    }, getAtManagementGroupScopeOperationSpec);\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  _listAtManagementGroupScope(groupId, deploymentName, options) {\n    return this.client.sendOperationRequest({\n      groupId,\n      deploymentName,\n      options\n    }, listAtManagementGroupScopeOperationSpec);\n  }\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(deploymentName, operationId, options) {\n    return this.client.sendOperationRequest({\n      deploymentName,\n      operationId,\n      options\n    }, getAtSubscriptionScopeOperationSpec);\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  _listAtSubscriptionScope(deploymentName, options) {\n    return this.client.sendOperationRequest({\n      deploymentName,\n      options\n    }, listAtSubscriptionScopeOperationSpec);\n  }\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  get(resourceGroupName, deploymentName, operationId, options) {\n    return this.client.sendOperationRequest({\n      resourceGroupName,\n      deploymentName,\n      operationId,\n      options\n    }, getOperationSpec);\n  }\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  _list(resourceGroupName, deploymentName, options) {\n    return this.client.sendOperationRequest({\n      resourceGroupName,\n      deploymentName,\n      options\n    }, listOperationSpec);\n  }\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  _listAtScopeNext(scope, deploymentName, nextLink, options) {\n    return this.client.sendOperationRequest({\n      scope,\n      deploymentName,\n      nextLink,\n      options\n    }, listAtScopeNextOperationSpec);\n  }\n  /**\n   * ListAtTenantScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  _listAtTenantScopeNext(deploymentName, nextLink, options) {\n    return this.client.sendOperationRequest({\n      deploymentName,\n      nextLink,\n      options\n    }, listAtTenantScopeNextOperationSpec);\n  }\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  _listAtManagementGroupScopeNext(groupId, deploymentName, nextLink, options) {\n    return this.client.sendOperationRequest({\n      groupId,\n      deploymentName,\n      nextLink,\n      options\n    }, listAtManagementGroupScopeNextOperationSpec);\n  }\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  _listAtSubscriptionScopeNext(deploymentName, nextLink, options) {\n    return this.client.sendOperationRequest({\n      deploymentName,\n      nextLink,\n      options\n    }, listAtSubscriptionScopeNextOperationSpec);\n  }\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  _listNext(resourceGroupName, deploymentName, nextLink, options) {\n    return this.client.sendOperationRequest({\n      resourceGroupName,\n      deploymentName,\n      nextLink,\n      options\n    }, listNextOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */false);\nconst getAtScopeOperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.deploymentName, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtScopeOperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtTenantScopeOperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeOperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtManagementGroupScopeOperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.groupId, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtManagementGroupScopeOperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.groupId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtSubscriptionScopeOperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.subscriptionId, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopeOperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.subscriptionId, Parameters.resourceGroupName, Parameters.operationId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName, Parameters.subscriptionId, Parameters.resourceGroupName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtScopeNextOperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeNextOperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtManagementGroupScopeNextOperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.deploymentName, Parameters.groupId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopeNextOperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.deploymentName, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.deploymentName, Parameters.subscriptionId, Parameters.resourceGroupName],\n  headerParameters: [Parameters.accept],\n  serializer\n};","map":{"version":3,"names":["setContinuationToken","coreClient","Mappers","Parameters","DeploymentOperationsImpl","constructor","client","listAtScope","scope","deploymentName","options","iter","listAtScopePagingAll","next","Symbol","asyncIterator","byPage","settings","maxPageSize","Error","listAtScopePagingPage","result","continuationToken","__await","_listAtScope","page","value","nextLink","_listAtScopeNext","_d","_e","__asyncValues","_f","_a","done","_c","__asyncDelegator","listAtTenantScope","listAtTenantScopePagingAll","listAtTenantScopePagingPage","_listAtTenantScope","_listAtTenantScopeNext","listAtManagementGroupScope","groupId","listAtManagementGroupScopePagingAll","listAtManagementGroupScopePagingPage","_listAtManagementGroupScope","_listAtManagementGroupScopeNext","listAtSubscriptionScope","listAtSubscriptionScopePagingAll","listAtSubscriptionScopePagingPage","_listAtSubscriptionScope","_listAtSubscriptionScopeNext","list","resourceGroupName","listPagingAll","listPagingPage","_list","_listNext","getAtScope","operationId","sendOperationRequest","getAtScopeOperationSpec","listAtScopeOperationSpec","getAtTenantScope","getAtTenantScopeOperationSpec","listAtTenantScopeOperationSpec","getAtManagementGroupScope","getAtManagementGroupScopeOperationSpec","listAtManagementGroupScopeOperationSpec","getAtSubscriptionScope","getAtSubscriptionScopeOperationSpec","listAtSubscriptionScopeOperationSpec","get","getOperationSpec","listOperationSpec","listAtScopeNextOperationSpec","listAtTenantScopeNextOperationSpec","listAtManagementGroupScopeNextOperationSpec","listAtSubscriptionScopeNextOperationSpec","listNextOperationSpec","serializer","createSerializer","path","httpMethod","responses","bodyMapper","DeploymentOperation","default","CloudError","queryParameters","apiVersion","urlParameters","$host","headerParameters","accept","DeploymentOperationsListResult","top","subscriptionId"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/node_modules/@azure/arm-resources/src/operations/deploymentOperations.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { DeploymentOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  DeploymentOperation,\n  DeploymentOperationsListAtScopeNextOptionalParams,\n  DeploymentOperationsListAtScopeOptionalParams,\n  DeploymentOperationsListAtScopeResponse,\n  DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  DeploymentOperationsListAtTenantScopeOptionalParams,\n  DeploymentOperationsListAtTenantScopeResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeResponse,\n  DeploymentOperationsListNextOptionalParams,\n  DeploymentOperationsListOptionalParams,\n  DeploymentOperationsListResponse,\n  DeploymentOperationsGetAtScopeOptionalParams,\n  DeploymentOperationsGetAtScopeResponse,\n  DeploymentOperationsGetAtTenantScopeOptionalParams,\n  DeploymentOperationsGetAtTenantScopeResponse,\n  DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsGetAtManagementGroupScopeResponse,\n  DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsGetAtSubscriptionScopeResponse,\n  DeploymentOperationsGetOptionalParams,\n  DeploymentOperationsGetResponse,\n  DeploymentOperationsListAtScopeNextResponse,\n  DeploymentOperationsListAtTenantScopeNextResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextResponse,\n  DeploymentOperationsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeploymentOperations operations. */\nexport class DeploymentOperationsImpl implements DeploymentOperations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeploymentOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtScopePagingAll(scope, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(\n          scope,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtScopePagingPage(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtScope(scope, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtScopeNext(\n        scope,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtScopePagingAll(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtScopePagingPage(\n      scope,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtTenantScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtTenantScopePagingPage(\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtManagementGroupScopePagingAll(\n      groupId,\n      deploymentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(\n          groupId,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtManagementGroupScopePagingPage(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtManagementGroupScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtManagementGroupScope(\n        groupId,\n        deploymentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtManagementGroupScopeNext(\n        groupId,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtManagementGroupScopePagingAll(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtManagementGroupScopePagingPage(\n      groupId,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtSubscriptionScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtSubscriptionScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtSubscriptionScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtSubscriptionScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtSubscriptionScopeNext(\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtSubscriptionScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtSubscriptionScopePagingPage(\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listPagingAll(resourceGroupName, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, operationId, options },\n      getAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      listAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, operationId, options },\n      getAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      listAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetOptionalParams,\n  ): Promise<DeploymentOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, operationId, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): Promise<DeploymentOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  private _listAtScopeNext(\n    scope: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, nextLink, options },\n      listAtScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtTenantScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScopeNext(\n    groupId: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, nextLink, options },\n      listAtManagementGroupScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtSubscriptionScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListNextOptionalParams,\n  ): Promise<DeploymentOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}