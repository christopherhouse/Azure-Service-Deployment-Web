{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { __rest } from \"tslib\";\nexport function createLroSpec(inputs) {\n  const {\n    args,\n    spec,\n    sendOperationFn\n  } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (path, options) => {\n      const {\n          requestBody\n        } = spec,\n        restSpec = __rest(spec, [\"requestBody\"]);\n      return sendOperationFn(args, Object.assign(Object.assign({}, restSpec), {\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal\n      }));\n    }\n  };\n}","map":{"version":3,"names":["createLroSpec","inputs","args","spec","sendOperationFn","requestMethod","httpMethod","requestPath","path","sendInitialRequest","sendPollRequest","options","requestBody","restSpec","__rest","Object","assign","abortSignal"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/node_modules/@azure/arm-resources/src/lroImpl.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike },\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal,\n      });\n    },\n  };\n}\n"],"mappings":"AAAA;;;;;;;;AAWA,OAAM,SAAUA,aAAaA,CAAIC,MAQhC;EACC,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAe,CAAE,GAAGH,MAAM;EAC9C,OAAO;IACLI,aAAa,EAAEF,IAAI,CAACG,UAAU;IAC9BC,WAAW,EAAEJ,IAAI,CAACK,IAAK;IACvBC,kBAAkB,EAAEA,CAAA,KAAML,eAAe,CAACF,IAAI,EAAEC,IAAI,CAAC;IACrDO,eAAe,EAAEA,CACfF,IAAY,EACZG,OAA2C,KACzC;MACF,MAAM;UAAEC;QAAW,IAAkBT,IAAI;QAAjBU,QAAQ,GAAAC,MAAA,CAAKX,IAAI,EAAnC,eAA4B,CAAO;MACzC,OAAOC,eAAe,CAACF,IAAI,EAAAa,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACtBH,QAAQ;QACXP,UAAU,EAAE,KAAK;QACjBE,IAAI;QACJS,WAAW,EAAEN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM;MAAW,GACjC;IACJ;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}