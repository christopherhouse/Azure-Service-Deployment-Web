{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\n/** Class containing ProviderResourceTypes operations. */\nexport class ProviderResourceTypesImpl {\n  /**\n   * Initialize a new instance of the class ProviderResourceTypes class.\n   * @param client Reference to the service client\n   */\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List the resource types for a specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  list(resourceProviderNamespace, options) {\n    return this.client.sendOperationRequest({\n      resourceProviderNamespace,\n      options\n    }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */false);\nconst listOperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderResourceTypeListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId, Parameters.resourceProviderNamespace],\n  headerParameters: [Parameters.accept],\n  serializer\n};","map":{"version":3,"names":["coreClient","Mappers","Parameters","ProviderResourceTypesImpl","constructor","client","list","resourceProviderNamespace","options","sendOperationRequest","listOperationSpec","serializer","createSerializer","path","httpMethod","responses","bodyMapper","ProviderResourceTypeListResult","default","CloudError","queryParameters","apiVersion","expand","urlParameters","$host","subscriptionId","headerParameters","accept"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/node_modules/@azure/arm-resources/src/operations/providerResourceTypes.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ProviderResourceTypes } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  ProviderResourceTypesListOptionalParams,\n  ProviderResourceTypesListResponse,\n} from \"../models/index.js\";\n\n/** Class containing ProviderResourceTypes operations. */\nexport class ProviderResourceTypesImpl implements ProviderResourceTypes {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class ProviderResourceTypes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the resource types for a specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  list(\n    resourceProviderNamespace: string,\n    options?: ProviderResourceTypesListOptionalParams,\n  ): Promise<ProviderResourceTypesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      listOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderResourceTypeListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"],"mappings":"AAAA;;;;;;;AASA,OAAO,KAAKA,UAAU,MAAM,oBAAoB;AAChD,OAAO,KAAKC,OAAO,MAAM,sBAAsB;AAC/C,OAAO,KAAKC,UAAU,MAAM,yBAAyB;AAOrD;AACA,OAAM,MAAOC,yBAAyB;EAGpC;;;;EAIAC,YAAYC,MAAgC;IAC1C,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEA;;;;;EAKAC,IAAIA,CACFC,yBAAiC,EACjCC,OAAiD;IAEjD,OAAO,IAAI,CAACH,MAAM,CAACI,oBAAoB,CACrC;MAAEF,yBAAyB;MAAEC;IAAO,CAAE,EACtCE,iBAAiB,CAClB;EACH;;AAEF;AACA,MAAMC,UAAU,GAAGX,UAAU,CAACY,gBAAgB,CAACX,OAAO,EAAE,WAAY,KAAK,CAAC;AAE1E,MAAMS,iBAAiB,GAA6B;EAClDG,IAAI,EAAE,qFAAqF;EAC3FC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEf,OAAO,CAACgB;KACrB;IACDC,OAAO,EAAE;MACPF,UAAU,EAAEf,OAAO,CAACkB;;GAEvB;EACDC,eAAe,EAAE,CAAClB,UAAU,CAACmB,UAAU,EAAEnB,UAAU,CAACoB,MAAM,CAAC;EAC3DC,aAAa,EAAE,CACbrB,UAAU,CAACsB,KAAK,EAChBtB,UAAU,CAACuB,cAAc,EACzBvB,UAAU,CAACK,yBAAyB,CACrC;EACDmB,gBAAgB,EAAE,CAACxB,UAAU,CAACyB,MAAM,CAAC;EACrChB;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}