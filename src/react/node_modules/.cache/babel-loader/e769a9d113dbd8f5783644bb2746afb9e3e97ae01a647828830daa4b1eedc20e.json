{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl {\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  list(options) {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: settings => {\n        if (settings === null || settings === void 0 ? void 0 : settings.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n  listPagingPage(options, settings) {\n    return __asyncGenerator(this, arguments, function* listPagingPage_1() {\n      let result;\n      let continuationToken = settings === null || settings === void 0 ? void 0 : settings.continuationToken;\n      if (!continuationToken) {\n        result = yield __await(this._list(options));\n        let page = result.value || [];\n        continuationToken = result.nextLink;\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n      while (continuationToken) {\n        result = yield __await(this._listNext(continuationToken, options));\n        continuationToken = result.nextLink;\n        let page = result.value || [];\n        setContinuationToken(page, continuationToken);\n        yield yield __await(page);\n      }\n    });\n  }\n  listPagingAll(options) {\n    return __asyncGenerator(this, arguments, function* listPagingAll_1() {\n      var _a, e_1, _b, _c;\n      try {\n        for (var _d = true, _e = __asyncValues(this.listPagingPage(options)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const page = _c;\n          yield __await(yield* __asyncDelegator(__asyncValues(page)));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n  }\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  _list(options) {\n    return this.client.sendOperationRequest({\n      options\n    }, listOperationSpec);\n  }\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  _listNext(nextLink, options) {\n    return this.client.sendOperationRequest({\n      nextLink,\n      options\n    }, listNextOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */false);\nconst listOperationSpec = {\n  path: \"/providers/Microsoft.Resources/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};","map":{"version":3,"names":["setContinuationToken","coreClient","Mappers","Parameters","OperationsImpl","constructor","client","list","options","iter","listPagingAll","next","Symbol","asyncIterator","byPage","settings","maxPageSize","Error","listPagingPage","result","continuationToken","__await","_list","page","value","nextLink","_listNext","_d","_e","__asyncValues","_f","_a","done","_c","__asyncDelegator","sendOperationRequest","listOperationSpec","listNextOperationSpec","serializer","createSerializer","path","httpMethod","responses","bodyMapper","OperationListResult","default","CloudError","queryParameters","apiVersion","urlParameters","$host","headerParameters","accept"],"sources":["/home/runner/work/Azure-Service-Deployment-Web/Azure-Service-Deployment-Web/node_modules/@azure/arm-resources/src/operations/operations.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Operations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams,\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams,\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams,\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams,\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}